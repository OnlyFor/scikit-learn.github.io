
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-8fa8ab1d-5453-455c-89e7-a882c835a13c {color: black;background-color: white;}#sk-8fa8ab1d-5453-455c-89e7-a882c835a13c pre{padding: 0;}#sk-8fa8ab1d-5453-455c-89e7-a882c835a13c div.sk-toggleable {background-color: white;}#sk-8fa8ab1d-5453-455c-89e7-a882c835a13c label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-8fa8ab1d-5453-455c-89e7-a882c835a13c label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-8fa8ab1d-5453-455c-89e7-a882c835a13c label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-8fa8ab1d-5453-455c-89e7-a882c835a13c div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-8fa8ab1d-5453-455c-89e7-a882c835a13c div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-8fa8ab1d-5453-455c-89e7-a882c835a13c div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-8fa8ab1d-5453-455c-89e7-a882c835a13c input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-8fa8ab1d-5453-455c-89e7-a882c835a13c input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-8fa8ab1d-5453-455c-89e7-a882c835a13c div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-8fa8ab1d-5453-455c-89e7-a882c835a13c div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-8fa8ab1d-5453-455c-89e7-a882c835a13c input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-8fa8ab1d-5453-455c-89e7-a882c835a13c div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-8fa8ab1d-5453-455c-89e7-a882c835a13c div.sk-estimator:hover {background-color: #d4ebff;}#sk-8fa8ab1d-5453-455c-89e7-a882c835a13c div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-8fa8ab1d-5453-455c-89e7-a882c835a13c div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-8fa8ab1d-5453-455c-89e7-a882c835a13c div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-8fa8ab1d-5453-455c-89e7-a882c835a13c div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-8fa8ab1d-5453-455c-89e7-a882c835a13c div.sk-item {z-index: 1;}#sk-8fa8ab1d-5453-455c-89e7-a882c835a13c div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-8fa8ab1d-5453-455c-89e7-a882c835a13c div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-8fa8ab1d-5453-455c-89e7-a882c835a13c div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-8fa8ab1d-5453-455c-89e7-a882c835a13c div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-8fa8ab1d-5453-455c-89e7-a882c835a13c div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-8fa8ab1d-5453-455c-89e7-a882c835a13c div.sk-parallel-item:only-child::after {width: 0;}#sk-8fa8ab1d-5453-455c-89e7-a882c835a13c div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-8fa8ab1d-5453-455c-89e7-a882c835a13c div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-8fa8ab1d-5453-455c-89e7-a882c835a13c div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-8fa8ab1d-5453-455c-89e7-a882c835a13c div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-8fa8ab1d-5453-455c-89e7-a882c835a13c div.sk-text-repr-fallback {display: none;}</style><div id="sk-8fa8ab1d-5453-455c-89e7-a882c835a13c" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9ee6d0aa-2571-4d86-b9b2-0b0630324b2b" type="checkbox" ><label for="9ee6d0aa-2571-4d86-b9b2-0b0630324b2b" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6912c996-0b31-4598-b6c7-517c760ed338" type="checkbox" ><label for="6912c996-0b31-4598-b6c7-517c760ed338" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="aa6c1778-774b-4d76-85ce-ead10620c899" type="checkbox" ><label for="aa6c1778-774b-4d76-85ce-ead10620c899" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-3985ab64-cb1f-4e30-a46f-ca8620e3a92f {color: black;background-color: white;}#sk-3985ab64-cb1f-4e30-a46f-ca8620e3a92f pre{padding: 0;}#sk-3985ab64-cb1f-4e30-a46f-ca8620e3a92f div.sk-toggleable {background-color: white;}#sk-3985ab64-cb1f-4e30-a46f-ca8620e3a92f label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-3985ab64-cb1f-4e30-a46f-ca8620e3a92f label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-3985ab64-cb1f-4e30-a46f-ca8620e3a92f label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-3985ab64-cb1f-4e30-a46f-ca8620e3a92f div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-3985ab64-cb1f-4e30-a46f-ca8620e3a92f div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-3985ab64-cb1f-4e30-a46f-ca8620e3a92f div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-3985ab64-cb1f-4e30-a46f-ca8620e3a92f input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-3985ab64-cb1f-4e30-a46f-ca8620e3a92f input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-3985ab64-cb1f-4e30-a46f-ca8620e3a92f div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-3985ab64-cb1f-4e30-a46f-ca8620e3a92f div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-3985ab64-cb1f-4e30-a46f-ca8620e3a92f input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-3985ab64-cb1f-4e30-a46f-ca8620e3a92f div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-3985ab64-cb1f-4e30-a46f-ca8620e3a92f div.sk-estimator:hover {background-color: #d4ebff;}#sk-3985ab64-cb1f-4e30-a46f-ca8620e3a92f div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-3985ab64-cb1f-4e30-a46f-ca8620e3a92f div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-3985ab64-cb1f-4e30-a46f-ca8620e3a92f div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-3985ab64-cb1f-4e30-a46f-ca8620e3a92f div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-3985ab64-cb1f-4e30-a46f-ca8620e3a92f div.sk-item {z-index: 1;}#sk-3985ab64-cb1f-4e30-a46f-ca8620e3a92f div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-3985ab64-cb1f-4e30-a46f-ca8620e3a92f div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-3985ab64-cb1f-4e30-a46f-ca8620e3a92f div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-3985ab64-cb1f-4e30-a46f-ca8620e3a92f div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-3985ab64-cb1f-4e30-a46f-ca8620e3a92f div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-3985ab64-cb1f-4e30-a46f-ca8620e3a92f div.sk-parallel-item:only-child::after {width: 0;}#sk-3985ab64-cb1f-4e30-a46f-ca8620e3a92f div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-3985ab64-cb1f-4e30-a46f-ca8620e3a92f div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-3985ab64-cb1f-4e30-a46f-ca8620e3a92f div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-3985ab64-cb1f-4e30-a46f-ca8620e3a92f div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-3985ab64-cb1f-4e30-a46f-ca8620e3a92f div.sk-text-repr-fallback {display: none;}</style><div id="sk-3985ab64-cb1f-4e30-a46f-ca8620e3a92f" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0cf67265-b974-4b70-aaed-1c9282a5953f" type="checkbox" ><label for="0cf67265-b974-4b70-aaed-1c9282a5953f" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="050b195d-e30c-4550-8f0f-c66b35cb57f4" type="checkbox" ><label for="050b195d-e30c-4550-8f0f-c66b35cb57f4" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fddfbb17-4ca0-4f39-bf7c-6ee8f1cd140b" type="checkbox" ><label for="fddfbb17-4ca0-4f39-bf7c-6ee8f1cd140b" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="63ff4b85-c38e-4c9a-9dc2-5471e873f47e" type="checkbox" ><label for="63ff4b85-c38e-4c9a-9dc2-5471e873f47e" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-d4738057-be1a-4382-9caf-8f3219c522aa {color: black;background-color: white;}#sk-d4738057-be1a-4382-9caf-8f3219c522aa pre{padding: 0;}#sk-d4738057-be1a-4382-9caf-8f3219c522aa div.sk-toggleable {background-color: white;}#sk-d4738057-be1a-4382-9caf-8f3219c522aa label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-d4738057-be1a-4382-9caf-8f3219c522aa label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-d4738057-be1a-4382-9caf-8f3219c522aa label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-d4738057-be1a-4382-9caf-8f3219c522aa div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-d4738057-be1a-4382-9caf-8f3219c522aa div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-d4738057-be1a-4382-9caf-8f3219c522aa div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-d4738057-be1a-4382-9caf-8f3219c522aa input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-d4738057-be1a-4382-9caf-8f3219c522aa input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-d4738057-be1a-4382-9caf-8f3219c522aa div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-d4738057-be1a-4382-9caf-8f3219c522aa div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-d4738057-be1a-4382-9caf-8f3219c522aa input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-d4738057-be1a-4382-9caf-8f3219c522aa div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-d4738057-be1a-4382-9caf-8f3219c522aa div.sk-estimator:hover {background-color: #d4ebff;}#sk-d4738057-be1a-4382-9caf-8f3219c522aa div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-d4738057-be1a-4382-9caf-8f3219c522aa div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-d4738057-be1a-4382-9caf-8f3219c522aa div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-d4738057-be1a-4382-9caf-8f3219c522aa div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-d4738057-be1a-4382-9caf-8f3219c522aa div.sk-item {z-index: 1;}#sk-d4738057-be1a-4382-9caf-8f3219c522aa div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-d4738057-be1a-4382-9caf-8f3219c522aa div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-d4738057-be1a-4382-9caf-8f3219c522aa div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-d4738057-be1a-4382-9caf-8f3219c522aa div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-d4738057-be1a-4382-9caf-8f3219c522aa div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-d4738057-be1a-4382-9caf-8f3219c522aa div.sk-parallel-item:only-child::after {width: 0;}#sk-d4738057-be1a-4382-9caf-8f3219c522aa div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-d4738057-be1a-4382-9caf-8f3219c522aa div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-d4738057-be1a-4382-9caf-8f3219c522aa div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-d4738057-be1a-4382-9caf-8f3219c522aa div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-d4738057-be1a-4382-9caf-8f3219c522aa div.sk-text-repr-fallback {display: none;}</style><div id="sk-d4738057-be1a-4382-9caf-8f3219c522aa" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="156c8f0f-b6bc-4ddd-a2e6-eb3ce8e2afb0" type="checkbox" ><label for="156c8f0f-b6bc-4ddd-a2e6-eb3ce8e2afb0" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="083f178a-3b7c-4dd7-b968-4c016f98271d" type="checkbox" ><label for="083f178a-3b7c-4dd7-b968-4c016f98271d" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ded0d9bc-dc4b-4978-b561-b7bfb56287e4" type="checkbox" ><label for="ded0d9bc-dc4b-4978-b561-b7bfb56287e4" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-eac1f6b6-84dd-46b4-93aa-21761220a827 {color: black;background-color: white;}#sk-eac1f6b6-84dd-46b4-93aa-21761220a827 pre{padding: 0;}#sk-eac1f6b6-84dd-46b4-93aa-21761220a827 div.sk-toggleable {background-color: white;}#sk-eac1f6b6-84dd-46b4-93aa-21761220a827 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-eac1f6b6-84dd-46b4-93aa-21761220a827 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-eac1f6b6-84dd-46b4-93aa-21761220a827 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-eac1f6b6-84dd-46b4-93aa-21761220a827 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-eac1f6b6-84dd-46b4-93aa-21761220a827 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-eac1f6b6-84dd-46b4-93aa-21761220a827 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-eac1f6b6-84dd-46b4-93aa-21761220a827 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-eac1f6b6-84dd-46b4-93aa-21761220a827 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-eac1f6b6-84dd-46b4-93aa-21761220a827 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-eac1f6b6-84dd-46b4-93aa-21761220a827 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-eac1f6b6-84dd-46b4-93aa-21761220a827 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-eac1f6b6-84dd-46b4-93aa-21761220a827 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-eac1f6b6-84dd-46b4-93aa-21761220a827 div.sk-estimator:hover {background-color: #d4ebff;}#sk-eac1f6b6-84dd-46b4-93aa-21761220a827 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-eac1f6b6-84dd-46b4-93aa-21761220a827 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-eac1f6b6-84dd-46b4-93aa-21761220a827 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-eac1f6b6-84dd-46b4-93aa-21761220a827 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-eac1f6b6-84dd-46b4-93aa-21761220a827 div.sk-item {z-index: 1;}#sk-eac1f6b6-84dd-46b4-93aa-21761220a827 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-eac1f6b6-84dd-46b4-93aa-21761220a827 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-eac1f6b6-84dd-46b4-93aa-21761220a827 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-eac1f6b6-84dd-46b4-93aa-21761220a827 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-eac1f6b6-84dd-46b4-93aa-21761220a827 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-eac1f6b6-84dd-46b4-93aa-21761220a827 div.sk-parallel-item:only-child::after {width: 0;}#sk-eac1f6b6-84dd-46b4-93aa-21761220a827 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-eac1f6b6-84dd-46b4-93aa-21761220a827 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-eac1f6b6-84dd-46b4-93aa-21761220a827 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-eac1f6b6-84dd-46b4-93aa-21761220a827 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-eac1f6b6-84dd-46b4-93aa-21761220a827 div.sk-text-repr-fallback {display: none;}</style><div id="sk-eac1f6b6-84dd-46b4-93aa-21761220a827" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="65ecfcc0-3892-494e-8d34-272463864ea7" type="checkbox" ><label for="65ecfcc0-3892-494e-8d34-272463864ea7" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d92306ab-8567-43f6-8c26-6518d2a86cc2" type="checkbox" ><label for="d92306ab-8567-43f6-8c26-6518d2a86cc2" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c36181e0-5ab1-46ee-b1da-d2ca2f9dde11" type="checkbox" ><label for="c36181e0-5ab1-46ee-b1da-d2ca2f9dde11" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5bb8c853-d88c-44ab-9b3f-fc064764ead7" type="checkbox" ><label for="5bb8c853-d88c-44ab-9b3f-fc064764ead7" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="434710f2-6174-4b32-9640-c4479d6a1d08" type="checkbox" ><label for="434710f2-6174-4b32-9640-c4479d6a1d08" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b3728af1-68bf-44cc-8705-4fae854032d5" type="checkbox" ><label for="b3728af1-68bf-44cc-8705-4fae854032d5" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="946b2b42-ae03-442e-ad05-c37ed87c00dc" type="checkbox" ><label for="946b2b42-ae03-442e-ad05-c37ed87c00dc" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0bfdba52-0c58-4e0a-a58c-34a76345e445" type="checkbox" ><label for="0bfdba52-0c58-4e0a-a58c-34a76345e445" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6dd8c027-ccb8-4c9a-ba4f-07b3d2e9e834" type="checkbox" ><label for="6dd8c027-ccb8-4c9a-ba4f-07b3d2e9e834" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-0216e4c6-0af6-47d9-8d1e-82e79f43a391 {color: black;background-color: white;}#sk-0216e4c6-0af6-47d9-8d1e-82e79f43a391 pre{padding: 0;}#sk-0216e4c6-0af6-47d9-8d1e-82e79f43a391 div.sk-toggleable {background-color: white;}#sk-0216e4c6-0af6-47d9-8d1e-82e79f43a391 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-0216e4c6-0af6-47d9-8d1e-82e79f43a391 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-0216e4c6-0af6-47d9-8d1e-82e79f43a391 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-0216e4c6-0af6-47d9-8d1e-82e79f43a391 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-0216e4c6-0af6-47d9-8d1e-82e79f43a391 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-0216e4c6-0af6-47d9-8d1e-82e79f43a391 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-0216e4c6-0af6-47d9-8d1e-82e79f43a391 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-0216e4c6-0af6-47d9-8d1e-82e79f43a391 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-0216e4c6-0af6-47d9-8d1e-82e79f43a391 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-0216e4c6-0af6-47d9-8d1e-82e79f43a391 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-0216e4c6-0af6-47d9-8d1e-82e79f43a391 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-0216e4c6-0af6-47d9-8d1e-82e79f43a391 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-0216e4c6-0af6-47d9-8d1e-82e79f43a391 div.sk-estimator:hover {background-color: #d4ebff;}#sk-0216e4c6-0af6-47d9-8d1e-82e79f43a391 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-0216e4c6-0af6-47d9-8d1e-82e79f43a391 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-0216e4c6-0af6-47d9-8d1e-82e79f43a391 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-0216e4c6-0af6-47d9-8d1e-82e79f43a391 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-0216e4c6-0af6-47d9-8d1e-82e79f43a391 div.sk-item {z-index: 1;}#sk-0216e4c6-0af6-47d9-8d1e-82e79f43a391 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-0216e4c6-0af6-47d9-8d1e-82e79f43a391 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-0216e4c6-0af6-47d9-8d1e-82e79f43a391 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-0216e4c6-0af6-47d9-8d1e-82e79f43a391 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-0216e4c6-0af6-47d9-8d1e-82e79f43a391 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-0216e4c6-0af6-47d9-8d1e-82e79f43a391 div.sk-parallel-item:only-child::after {width: 0;}#sk-0216e4c6-0af6-47d9-8d1e-82e79f43a391 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-0216e4c6-0af6-47d9-8d1e-82e79f43a391 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-0216e4c6-0af6-47d9-8d1e-82e79f43a391 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-0216e4c6-0af6-47d9-8d1e-82e79f43a391 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-0216e4c6-0af6-47d9-8d1e-82e79f43a391 div.sk-text-repr-fallback {display: none;}</style><div id="sk-0216e4c6-0af6-47d9-8d1e-82e79f43a391" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e01d598b-a9ff-4b89-ba5e-1093e559ce3e" type="checkbox" ><label for="e01d598b-a9ff-4b89-ba5e-1093e559ce3e" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="757ddb08-c146-4358-ba78-bab1ab282ee4" type="checkbox" ><label for="757ddb08-c146-4358-ba78-bab1ab282ee4" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3ba8bfe0-8510-4ef9-8baa-5e6aed3bf495" type="checkbox" ><label for="3ba8bfe0-8510-4ef9-8baa-5e6aed3bf495" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c6c7cee5-57e2-4e58-87b0-d4332a6aed66" type="checkbox" ><label for="c6c7cee5-57e2-4e58-87b0-d4332a6aed66" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="032ab829-0281-4ec7-9ee5-739997bc32e1" type="checkbox" ><label for="032ab829-0281-4ec7-9ee5-739997bc32e1" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="70fc8722-eacc-40cd-aa8c-58a062c4ad57" type="checkbox" ><label for="70fc8722-eacc-40cd-aa8c-58a062c4ad57" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8015cc93-4cca-4f37-9b47-248da45d3a4f" type="checkbox" ><label for="8015cc93-4cca-4f37-9b47-248da45d3a4f" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ebb94d20-4818-4850-907b-c49f291ece02" type="checkbox" ><label for="ebb94d20-4818-4850-907b-c49f291ece02" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4f9eee0f-5eb1-4ab4-831a-aa948c468338" type="checkbox" ><label for="4f9eee0f-5eb1-4ab4-831a-aa948c468338" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.072 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
