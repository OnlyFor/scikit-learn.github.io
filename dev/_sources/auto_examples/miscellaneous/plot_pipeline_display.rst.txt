
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-74669f41-1dcf-4a73-b32e-7d061c057ec7 {color: black;background-color: white;}#sk-74669f41-1dcf-4a73-b32e-7d061c057ec7 pre{padding: 0;}#sk-74669f41-1dcf-4a73-b32e-7d061c057ec7 div.sk-toggleable {background-color: white;}#sk-74669f41-1dcf-4a73-b32e-7d061c057ec7 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-74669f41-1dcf-4a73-b32e-7d061c057ec7 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-74669f41-1dcf-4a73-b32e-7d061c057ec7 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-74669f41-1dcf-4a73-b32e-7d061c057ec7 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-74669f41-1dcf-4a73-b32e-7d061c057ec7 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-74669f41-1dcf-4a73-b32e-7d061c057ec7 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-74669f41-1dcf-4a73-b32e-7d061c057ec7 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-74669f41-1dcf-4a73-b32e-7d061c057ec7 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-74669f41-1dcf-4a73-b32e-7d061c057ec7 div.sk-estimator:hover {background-color: #d4ebff;}#sk-74669f41-1dcf-4a73-b32e-7d061c057ec7 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-74669f41-1dcf-4a73-b32e-7d061c057ec7 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-74669f41-1dcf-4a73-b32e-7d061c057ec7 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-74669f41-1dcf-4a73-b32e-7d061c057ec7 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-74669f41-1dcf-4a73-b32e-7d061c057ec7 div.sk-item {z-index: 1;}#sk-74669f41-1dcf-4a73-b32e-7d061c057ec7 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-74669f41-1dcf-4a73-b32e-7d061c057ec7 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-74669f41-1dcf-4a73-b32e-7d061c057ec7 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-74669f41-1dcf-4a73-b32e-7d061c057ec7 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-74669f41-1dcf-4a73-b32e-7d061c057ec7 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-74669f41-1dcf-4a73-b32e-7d061c057ec7 div.sk-parallel-item:only-child::after {width: 0;}#sk-74669f41-1dcf-4a73-b32e-7d061c057ec7 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-74669f41-1dcf-4a73-b32e-7d061c057ec7 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-74669f41-1dcf-4a73-b32e-7d061c057ec7 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-74669f41-1dcf-4a73-b32e-7d061c057ec7 div.sk-container {display: inline-block;position: relative;}#sk-74669f41-1dcf-4a73-b32e-7d061c057ec7 div.sk-text-repr-fallback {display: none;}</style><div id="sk-74669f41-1dcf-4a73-b32e-7d061c057ec7" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a3423085-e8ae-4246-915f-db25596fcf4f" type="checkbox" ><label class="sk-toggleable__label" for="a3423085-e8ae-4246-915f-db25596fcf4f">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="db13802f-7bdf-4ee8-9bc9-b9d554ab18d1" type="checkbox" ><label class="sk-toggleable__label" for="db13802f-7bdf-4ee8-9bc9-b9d554ab18d1">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bf94b975-d353-454a-83f4-0e5224616500" type="checkbox" ><label class="sk-toggleable__label" for="bf94b975-d353-454a-83f4-0e5224616500">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-90c94a93-ffce-4b80-a9a4-20fe2421fa5c {color: black;background-color: white;}#sk-90c94a93-ffce-4b80-a9a4-20fe2421fa5c pre{padding: 0;}#sk-90c94a93-ffce-4b80-a9a4-20fe2421fa5c div.sk-toggleable {background-color: white;}#sk-90c94a93-ffce-4b80-a9a4-20fe2421fa5c label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-90c94a93-ffce-4b80-a9a4-20fe2421fa5c div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-90c94a93-ffce-4b80-a9a4-20fe2421fa5c div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-90c94a93-ffce-4b80-a9a4-20fe2421fa5c input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-90c94a93-ffce-4b80-a9a4-20fe2421fa5c div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-90c94a93-ffce-4b80-a9a4-20fe2421fa5c div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-90c94a93-ffce-4b80-a9a4-20fe2421fa5c input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-90c94a93-ffce-4b80-a9a4-20fe2421fa5c div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-90c94a93-ffce-4b80-a9a4-20fe2421fa5c div.sk-estimator:hover {background-color: #d4ebff;}#sk-90c94a93-ffce-4b80-a9a4-20fe2421fa5c div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-90c94a93-ffce-4b80-a9a4-20fe2421fa5c div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-90c94a93-ffce-4b80-a9a4-20fe2421fa5c div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-90c94a93-ffce-4b80-a9a4-20fe2421fa5c div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-90c94a93-ffce-4b80-a9a4-20fe2421fa5c div.sk-item {z-index: 1;}#sk-90c94a93-ffce-4b80-a9a4-20fe2421fa5c div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-90c94a93-ffce-4b80-a9a4-20fe2421fa5c div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-90c94a93-ffce-4b80-a9a4-20fe2421fa5c div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-90c94a93-ffce-4b80-a9a4-20fe2421fa5c div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-90c94a93-ffce-4b80-a9a4-20fe2421fa5c div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-90c94a93-ffce-4b80-a9a4-20fe2421fa5c div.sk-parallel-item:only-child::after {width: 0;}#sk-90c94a93-ffce-4b80-a9a4-20fe2421fa5c div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-90c94a93-ffce-4b80-a9a4-20fe2421fa5c div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-90c94a93-ffce-4b80-a9a4-20fe2421fa5c div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-90c94a93-ffce-4b80-a9a4-20fe2421fa5c div.sk-container {display: inline-block;position: relative;}#sk-90c94a93-ffce-4b80-a9a4-20fe2421fa5c div.sk-text-repr-fallback {display: none;}</style><div id="sk-90c94a93-ffce-4b80-a9a4-20fe2421fa5c" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6f817cd1-8080-4bd2-955a-16dff0decc00" type="checkbox" ><label class="sk-toggleable__label" for="6f817cd1-8080-4bd2-955a-16dff0decc00">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('standard_scaler', StandardScaler()),
                    ('polynomial', PolynomialFeatures(degree=3)),
                    ('classifier', LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ae684b47-b0a9-443b-957f-faba38d45d56" type="checkbox" ><label class="sk-toggleable__label" for="ae684b47-b0a9-443b-957f-faba38d45d56">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="50c82811-da77-40f5-a8ad-713e091404d9" type="checkbox" ><label class="sk-toggleable__label" for="50c82811-da77-40f5-a8ad-713e091404d9">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="181aac93-e116-44fa-8485-965cf6fdace5" type="checkbox" ><label class="sk-toggleable__label" for="181aac93-e116-44fa-8485-965cf6fdace5">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-9c3465f5-47ff-4124-8bc1-ef1b254dca3b {color: black;background-color: white;}#sk-9c3465f5-47ff-4124-8bc1-ef1b254dca3b pre{padding: 0;}#sk-9c3465f5-47ff-4124-8bc1-ef1b254dca3b div.sk-toggleable {background-color: white;}#sk-9c3465f5-47ff-4124-8bc1-ef1b254dca3b label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-9c3465f5-47ff-4124-8bc1-ef1b254dca3b div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-9c3465f5-47ff-4124-8bc1-ef1b254dca3b div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-9c3465f5-47ff-4124-8bc1-ef1b254dca3b input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-9c3465f5-47ff-4124-8bc1-ef1b254dca3b div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-9c3465f5-47ff-4124-8bc1-ef1b254dca3b div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-9c3465f5-47ff-4124-8bc1-ef1b254dca3b input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-9c3465f5-47ff-4124-8bc1-ef1b254dca3b div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-9c3465f5-47ff-4124-8bc1-ef1b254dca3b div.sk-estimator:hover {background-color: #d4ebff;}#sk-9c3465f5-47ff-4124-8bc1-ef1b254dca3b div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-9c3465f5-47ff-4124-8bc1-ef1b254dca3b div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-9c3465f5-47ff-4124-8bc1-ef1b254dca3b div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-9c3465f5-47ff-4124-8bc1-ef1b254dca3b div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-9c3465f5-47ff-4124-8bc1-ef1b254dca3b div.sk-item {z-index: 1;}#sk-9c3465f5-47ff-4124-8bc1-ef1b254dca3b div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-9c3465f5-47ff-4124-8bc1-ef1b254dca3b div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-9c3465f5-47ff-4124-8bc1-ef1b254dca3b div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-9c3465f5-47ff-4124-8bc1-ef1b254dca3b div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-9c3465f5-47ff-4124-8bc1-ef1b254dca3b div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-9c3465f5-47ff-4124-8bc1-ef1b254dca3b div.sk-parallel-item:only-child::after {width: 0;}#sk-9c3465f5-47ff-4124-8bc1-ef1b254dca3b div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-9c3465f5-47ff-4124-8bc1-ef1b254dca3b div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-9c3465f5-47ff-4124-8bc1-ef1b254dca3b div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-9c3465f5-47ff-4124-8bc1-ef1b254dca3b div.sk-container {display: inline-block;position: relative;}#sk-9c3465f5-47ff-4124-8bc1-ef1b254dca3b div.sk-text-repr-fallback {display: none;}</style><div id="sk-9c3465f5-47ff-4124-8bc1-ef1b254dca3b" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2828beea-3507-4923-a837-3efd6498fe9f" type="checkbox" ><label class="sk-toggleable__label" for="2828beea-3507-4923-a837-3efd6498fe9f">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('reduce_dim', PCA(n_components=4)),
                    ('classifier', SVC(kernel='linear'))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="605ad9f8-d87f-4abb-a6ba-488a95457d2c" type="checkbox" ><label class="sk-toggleable__label" for="605ad9f8-d87f-4abb-a6ba-488a95457d2c">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5c671150-5de9-42d7-a9f2-c432051a6191" type="checkbox" ><label class="sk-toggleable__label" for="5c671150-5de9-42d7-a9f2-c432051a6191">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel='linear')</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-c8ffa3f6-f366-435e-802d-2d44c5bb4ce3 {color: black;background-color: white;}#sk-c8ffa3f6-f366-435e-802d-2d44c5bb4ce3 pre{padding: 0;}#sk-c8ffa3f6-f366-435e-802d-2d44c5bb4ce3 div.sk-toggleable {background-color: white;}#sk-c8ffa3f6-f366-435e-802d-2d44c5bb4ce3 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-c8ffa3f6-f366-435e-802d-2d44c5bb4ce3 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-c8ffa3f6-f366-435e-802d-2d44c5bb4ce3 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-c8ffa3f6-f366-435e-802d-2d44c5bb4ce3 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-c8ffa3f6-f366-435e-802d-2d44c5bb4ce3 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-c8ffa3f6-f366-435e-802d-2d44c5bb4ce3 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-c8ffa3f6-f366-435e-802d-2d44c5bb4ce3 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-c8ffa3f6-f366-435e-802d-2d44c5bb4ce3 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-c8ffa3f6-f366-435e-802d-2d44c5bb4ce3 div.sk-estimator:hover {background-color: #d4ebff;}#sk-c8ffa3f6-f366-435e-802d-2d44c5bb4ce3 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-c8ffa3f6-f366-435e-802d-2d44c5bb4ce3 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-c8ffa3f6-f366-435e-802d-2d44c5bb4ce3 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-c8ffa3f6-f366-435e-802d-2d44c5bb4ce3 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-c8ffa3f6-f366-435e-802d-2d44c5bb4ce3 div.sk-item {z-index: 1;}#sk-c8ffa3f6-f366-435e-802d-2d44c5bb4ce3 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-c8ffa3f6-f366-435e-802d-2d44c5bb4ce3 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-c8ffa3f6-f366-435e-802d-2d44c5bb4ce3 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-c8ffa3f6-f366-435e-802d-2d44c5bb4ce3 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-c8ffa3f6-f366-435e-802d-2d44c5bb4ce3 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-c8ffa3f6-f366-435e-802d-2d44c5bb4ce3 div.sk-parallel-item:only-child::after {width: 0;}#sk-c8ffa3f6-f366-435e-802d-2d44c5bb4ce3 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-c8ffa3f6-f366-435e-802d-2d44c5bb4ce3 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-c8ffa3f6-f366-435e-802d-2d44c5bb4ce3 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-c8ffa3f6-f366-435e-802d-2d44c5bb4ce3 div.sk-container {display: inline-block;position: relative;}#sk-c8ffa3f6-f366-435e-802d-2d44c5bb4ce3 div.sk-text-repr-fallback {display: none;}</style><div id="sk-c8ffa3f6-f366-435e-802d-2d44c5bb4ce3" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="35a7ed3b-947f-4870-896e-a23426974f87" type="checkbox" ><label class="sk-toggleable__label" for="35a7ed3b-947f-4870-896e-a23426974f87">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('columntransformer',
                     ColumnTransformer(transformers=[('categorical',
                                                      Pipeline(steps=[('imputation_constant',
                                                                       SimpleImputer(fill_value='missing',
                                                                                     strategy='constant')),
                                                                      ('onehot',
                                                                       OneHotEncoder(handle_unknown='ignore'))]),
                                                      ['state', 'gender']),
                                                     ('numerical',
                                                      Pipeline(steps=[('imputation_mean',
                                                                       SimpleImputer()),
                                                                      ('scaler',
                                                                       StandardScaler())]),
                                                      ['age', 'weight'])])),
                    ('logisticregression', LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="641f979c-3c50-4976-945f-6a6c8ec036fe" type="checkbox" ><label class="sk-toggleable__label" for="641f979c-3c50-4976-945f-6a6c8ec036fe">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('categorical',
                                     Pipeline(steps=[('imputation_constant',
                                                      SimpleImputer(fill_value='missing',
                                                                    strategy='constant')),
                                                     ('onehot',
                                                      OneHotEncoder(handle_unknown='ignore'))]),
                                     ['state', 'gender']),
                                    ('numerical',
                                     Pipeline(steps=[('imputation_mean',
                                                      SimpleImputer()),
                                                     ('scaler', StandardScaler())]),
                                     ['age', 'weight'])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0738fef3-d5a7-4053-9819-4277287d2a14" type="checkbox" ><label class="sk-toggleable__label" for="0738fef3-d5a7-4053-9819-4277287d2a14">categorical</label><div class="sk-toggleable__content"><pre>['state', 'gender']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d0ef109b-796a-4b91-a2bc-46bb4eaf55b3" type="checkbox" ><label class="sk-toggleable__label" for="d0ef109b-796a-4b91-a2bc-46bb4eaf55b3">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value='missing', strategy='constant')</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a9be1f0c-db93-4451-aa42-f85cc01ae890" type="checkbox" ><label class="sk-toggleable__label" for="a9be1f0c-db93-4451-aa42-f85cc01ae890">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown='ignore')</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="086067ca-0481-49ea-b36f-b7b748cfd309" type="checkbox" ><label class="sk-toggleable__label" for="086067ca-0481-49ea-b36f-b7b748cfd309">numerical</label><div class="sk-toggleable__content"><pre>['age', 'weight']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bd98c4c1-721e-4860-863f-ef6b19697258" type="checkbox" ><label class="sk-toggleable__label" for="bd98c4c1-721e-4860-863f-ef6b19697258">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e56e4b8b-4f4c-4ac1-8333-cf45bc65ffc0" type="checkbox" ><label class="sk-toggleable__label" for="e56e4b8b-4f4c-4ac1-8333-cf45bc65ffc0">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7783dd8a-40a1-4cfb-a311-5f07ced63641" type="checkbox" ><label class="sk-toggleable__label" for="7783dd8a-40a1-4cfb-a311-5f07ced63641">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-459577f2-9825-4309-90a4-ba3943d38cea {color: black;background-color: white;}#sk-459577f2-9825-4309-90a4-ba3943d38cea pre{padding: 0;}#sk-459577f2-9825-4309-90a4-ba3943d38cea div.sk-toggleable {background-color: white;}#sk-459577f2-9825-4309-90a4-ba3943d38cea label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-459577f2-9825-4309-90a4-ba3943d38cea div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-459577f2-9825-4309-90a4-ba3943d38cea div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-459577f2-9825-4309-90a4-ba3943d38cea input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-459577f2-9825-4309-90a4-ba3943d38cea div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-459577f2-9825-4309-90a4-ba3943d38cea div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-459577f2-9825-4309-90a4-ba3943d38cea input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-459577f2-9825-4309-90a4-ba3943d38cea div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-459577f2-9825-4309-90a4-ba3943d38cea div.sk-estimator:hover {background-color: #d4ebff;}#sk-459577f2-9825-4309-90a4-ba3943d38cea div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-459577f2-9825-4309-90a4-ba3943d38cea div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-459577f2-9825-4309-90a4-ba3943d38cea div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-459577f2-9825-4309-90a4-ba3943d38cea div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-459577f2-9825-4309-90a4-ba3943d38cea div.sk-item {z-index: 1;}#sk-459577f2-9825-4309-90a4-ba3943d38cea div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-459577f2-9825-4309-90a4-ba3943d38cea div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-459577f2-9825-4309-90a4-ba3943d38cea div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-459577f2-9825-4309-90a4-ba3943d38cea div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-459577f2-9825-4309-90a4-ba3943d38cea div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-459577f2-9825-4309-90a4-ba3943d38cea div.sk-parallel-item:only-child::after {width: 0;}#sk-459577f2-9825-4309-90a4-ba3943d38cea div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-459577f2-9825-4309-90a4-ba3943d38cea div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-459577f2-9825-4309-90a4-ba3943d38cea div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-459577f2-9825-4309-90a4-ba3943d38cea div.sk-container {display: inline-block;position: relative;}#sk-459577f2-9825-4309-90a4-ba3943d38cea div.sk-text-repr-fallback {display: none;}</style><div id="sk-459577f2-9825-4309-90a4-ba3943d38cea" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c0cbdd8a-5bc8-48b1-9fb2-4aff57121ca3" type="checkbox" ><label class="sk-toggleable__label" for="c0cbdd8a-5bc8-48b1-9fb2-4aff57121ca3">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[('preprocessor',
                                            ColumnTransformer(transformers=[('categorical',
                                                                             Pipeline(steps=[('imputation_constant',
                                                                                              SimpleImputer(fill_value='missing',
                                                                                                            strategy='constant')),
                                                                                             ('onehot',
                                                                                              OneHotEncoder(handle_unknown='ignore'))]),
                                                                             ['state',
                                                                              'gender']),
                                                                            ('numerical',
                                                                             Pipeline(steps=[('imputation_mean',
                                                                                              SimpleImputer()),
                                                                                             ('scaler',
                                                                                              StandardScaler())]),
                                                                             ['age',
                                                                              'weight'])])),
                                           ('classifier',
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={'classifier__criterion': ['gini', 'entropy'],
                             'classifier__max_depth': [4, 5, 6, 7, 8],
                             'classifier__max_features': ['auto', 'sqrt', 'log2'],
                             'classifier__n_estimators': [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8afbfcc0-a39d-4f2d-b38f-bbeadcb468e4" type="checkbox" ><label class="sk-toggleable__label" for="8afbfcc0-a39d-4f2d-b38f-bbeadcb468e4">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('categorical',
                                     Pipeline(steps=[('imputation_constant',
                                                      SimpleImputer(fill_value='missing',
                                                                    strategy='constant')),
                                                     ('onehot',
                                                      OneHotEncoder(handle_unknown='ignore'))]),
                                     ['state', 'gender']),
                                    ('numerical',
                                     Pipeline(steps=[('imputation_mean',
                                                      SimpleImputer()),
                                                     ('scaler', StandardScaler())]),
                                     ['age', 'weight'])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="42b1baa3-f1fc-456b-968c-95a885f2b02b" type="checkbox" ><label class="sk-toggleable__label" for="42b1baa3-f1fc-456b-968c-95a885f2b02b">categorical</label><div class="sk-toggleable__content"><pre>['state', 'gender']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6ef5712b-f290-44d2-aa46-2f7c7a9207b1" type="checkbox" ><label class="sk-toggleable__label" for="6ef5712b-f290-44d2-aa46-2f7c7a9207b1">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value='missing', strategy='constant')</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="66ee7bb3-2a01-4d60-a941-32f7ef35dfe6" type="checkbox" ><label class="sk-toggleable__label" for="66ee7bb3-2a01-4d60-a941-32f7ef35dfe6">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown='ignore')</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9bcc8357-3c37-45bf-8de5-cd9f308a962e" type="checkbox" ><label class="sk-toggleable__label" for="9bcc8357-3c37-45bf-8de5-cd9f308a962e">numerical</label><div class="sk-toggleable__content"><pre>['age', 'weight']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="894b6bb5-2743-4863-9fb4-272da591515a" type="checkbox" ><label class="sk-toggleable__label" for="894b6bb5-2743-4863-9fb4-272da591515a">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="331530a0-1b61-4479-93cb-81f36754e0ad" type="checkbox" ><label class="sk-toggleable__label" for="331530a0-1b61-4479-93cb-81f36754e0ad">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a4277de5-c827-4533-9b2e-ad7b2815bb04" type="checkbox" ><label class="sk-toggleable__label" for="a4277de5-c827-4533-9b2e-ad7b2815bb04">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.143 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
