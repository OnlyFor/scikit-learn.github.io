
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-602e9367-9222-4c2f-a38a-c822bfe25715 {color: black;background-color: white;}#sk-602e9367-9222-4c2f-a38a-c822bfe25715 pre{padding: 0;}#sk-602e9367-9222-4c2f-a38a-c822bfe25715 div.sk-toggleable {background-color: white;}#sk-602e9367-9222-4c2f-a38a-c822bfe25715 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-602e9367-9222-4c2f-a38a-c822bfe25715 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-602e9367-9222-4c2f-a38a-c822bfe25715 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-602e9367-9222-4c2f-a38a-c822bfe25715 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-602e9367-9222-4c2f-a38a-c822bfe25715 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-602e9367-9222-4c2f-a38a-c822bfe25715 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-602e9367-9222-4c2f-a38a-c822bfe25715 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-602e9367-9222-4c2f-a38a-c822bfe25715 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-602e9367-9222-4c2f-a38a-c822bfe25715 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-602e9367-9222-4c2f-a38a-c822bfe25715 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-602e9367-9222-4c2f-a38a-c822bfe25715 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-602e9367-9222-4c2f-a38a-c822bfe25715 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-602e9367-9222-4c2f-a38a-c822bfe25715 div.sk-estimator:hover {background-color: #d4ebff;}#sk-602e9367-9222-4c2f-a38a-c822bfe25715 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-602e9367-9222-4c2f-a38a-c822bfe25715 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-602e9367-9222-4c2f-a38a-c822bfe25715 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-602e9367-9222-4c2f-a38a-c822bfe25715 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-602e9367-9222-4c2f-a38a-c822bfe25715 div.sk-item {z-index: 1;}#sk-602e9367-9222-4c2f-a38a-c822bfe25715 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-602e9367-9222-4c2f-a38a-c822bfe25715 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-602e9367-9222-4c2f-a38a-c822bfe25715 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-602e9367-9222-4c2f-a38a-c822bfe25715 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-602e9367-9222-4c2f-a38a-c822bfe25715 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-602e9367-9222-4c2f-a38a-c822bfe25715 div.sk-parallel-item:only-child::after {width: 0;}#sk-602e9367-9222-4c2f-a38a-c822bfe25715 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-602e9367-9222-4c2f-a38a-c822bfe25715 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-602e9367-9222-4c2f-a38a-c822bfe25715 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-602e9367-9222-4c2f-a38a-c822bfe25715 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-602e9367-9222-4c2f-a38a-c822bfe25715 div.sk-text-repr-fallback {display: none;}</style><div id="sk-602e9367-9222-4c2f-a38a-c822bfe25715" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="87700b56-0884-4547-96e8-1bb0626c4b34" type="checkbox" ><label for="87700b56-0884-4547-96e8-1bb0626c4b34" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cb288d18-ec24-4bc7-88b9-194e2f285a14" type="checkbox" ><label for="cb288d18-ec24-4bc7-88b9-194e2f285a14" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e5dfd0e9-3ce3-48fb-9e0b-0af96eb95cae" type="checkbox" ><label for="e5dfd0e9-3ce3-48fb-9e0b-0af96eb95cae" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-ea36c0c5-5809-4fd3-a464-2da36d551c82 {color: black;background-color: white;}#sk-ea36c0c5-5809-4fd3-a464-2da36d551c82 pre{padding: 0;}#sk-ea36c0c5-5809-4fd3-a464-2da36d551c82 div.sk-toggleable {background-color: white;}#sk-ea36c0c5-5809-4fd3-a464-2da36d551c82 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-ea36c0c5-5809-4fd3-a464-2da36d551c82 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-ea36c0c5-5809-4fd3-a464-2da36d551c82 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-ea36c0c5-5809-4fd3-a464-2da36d551c82 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-ea36c0c5-5809-4fd3-a464-2da36d551c82 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-ea36c0c5-5809-4fd3-a464-2da36d551c82 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-ea36c0c5-5809-4fd3-a464-2da36d551c82 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-ea36c0c5-5809-4fd3-a464-2da36d551c82 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-ea36c0c5-5809-4fd3-a464-2da36d551c82 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ea36c0c5-5809-4fd3-a464-2da36d551c82 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ea36c0c5-5809-4fd3-a464-2da36d551c82 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-ea36c0c5-5809-4fd3-a464-2da36d551c82 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-ea36c0c5-5809-4fd3-a464-2da36d551c82 div.sk-estimator:hover {background-color: #d4ebff;}#sk-ea36c0c5-5809-4fd3-a464-2da36d551c82 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-ea36c0c5-5809-4fd3-a464-2da36d551c82 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-ea36c0c5-5809-4fd3-a464-2da36d551c82 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ea36c0c5-5809-4fd3-a464-2da36d551c82 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-ea36c0c5-5809-4fd3-a464-2da36d551c82 div.sk-item {z-index: 1;}#sk-ea36c0c5-5809-4fd3-a464-2da36d551c82 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-ea36c0c5-5809-4fd3-a464-2da36d551c82 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ea36c0c5-5809-4fd3-a464-2da36d551c82 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-ea36c0c5-5809-4fd3-a464-2da36d551c82 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-ea36c0c5-5809-4fd3-a464-2da36d551c82 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-ea36c0c5-5809-4fd3-a464-2da36d551c82 div.sk-parallel-item:only-child::after {width: 0;}#sk-ea36c0c5-5809-4fd3-a464-2da36d551c82 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-ea36c0c5-5809-4fd3-a464-2da36d551c82 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-ea36c0c5-5809-4fd3-a464-2da36d551c82 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-ea36c0c5-5809-4fd3-a464-2da36d551c82 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-ea36c0c5-5809-4fd3-a464-2da36d551c82 div.sk-text-repr-fallback {display: none;}</style><div id="sk-ea36c0c5-5809-4fd3-a464-2da36d551c82" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f4b014b2-527a-487e-8a8b-0a6eabae1ce5" type="checkbox" ><label for="f4b014b2-527a-487e-8a8b-0a6eabae1ce5" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d17c0f26-c3ef-40e3-bb08-20a370949479" type="checkbox" ><label for="d17c0f26-c3ef-40e3-bb08-20a370949479" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c5ae68c5-c762-4c2d-80b2-04f6b8e7e34c" type="checkbox" ><label for="c5ae68c5-c762-4c2d-80b2-04f6b8e7e34c" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cf365a0a-eb39-4494-983a-ae6a19da7295" type="checkbox" ><label for="cf365a0a-eb39-4494-983a-ae6a19da7295" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-49ef5114-c7fc-4c3d-a542-5fae4006790b {color: black;background-color: white;}#sk-49ef5114-c7fc-4c3d-a542-5fae4006790b pre{padding: 0;}#sk-49ef5114-c7fc-4c3d-a542-5fae4006790b div.sk-toggleable {background-color: white;}#sk-49ef5114-c7fc-4c3d-a542-5fae4006790b label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-49ef5114-c7fc-4c3d-a542-5fae4006790b label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-49ef5114-c7fc-4c3d-a542-5fae4006790b label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-49ef5114-c7fc-4c3d-a542-5fae4006790b div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-49ef5114-c7fc-4c3d-a542-5fae4006790b div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-49ef5114-c7fc-4c3d-a542-5fae4006790b div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-49ef5114-c7fc-4c3d-a542-5fae4006790b input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-49ef5114-c7fc-4c3d-a542-5fae4006790b input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-49ef5114-c7fc-4c3d-a542-5fae4006790b div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-49ef5114-c7fc-4c3d-a542-5fae4006790b div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-49ef5114-c7fc-4c3d-a542-5fae4006790b input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-49ef5114-c7fc-4c3d-a542-5fae4006790b div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-49ef5114-c7fc-4c3d-a542-5fae4006790b div.sk-estimator:hover {background-color: #d4ebff;}#sk-49ef5114-c7fc-4c3d-a542-5fae4006790b div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-49ef5114-c7fc-4c3d-a542-5fae4006790b div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-49ef5114-c7fc-4c3d-a542-5fae4006790b div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-49ef5114-c7fc-4c3d-a542-5fae4006790b div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-49ef5114-c7fc-4c3d-a542-5fae4006790b div.sk-item {z-index: 1;}#sk-49ef5114-c7fc-4c3d-a542-5fae4006790b div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-49ef5114-c7fc-4c3d-a542-5fae4006790b div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-49ef5114-c7fc-4c3d-a542-5fae4006790b div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-49ef5114-c7fc-4c3d-a542-5fae4006790b div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-49ef5114-c7fc-4c3d-a542-5fae4006790b div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-49ef5114-c7fc-4c3d-a542-5fae4006790b div.sk-parallel-item:only-child::after {width: 0;}#sk-49ef5114-c7fc-4c3d-a542-5fae4006790b div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-49ef5114-c7fc-4c3d-a542-5fae4006790b div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-49ef5114-c7fc-4c3d-a542-5fae4006790b div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-49ef5114-c7fc-4c3d-a542-5fae4006790b div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-49ef5114-c7fc-4c3d-a542-5fae4006790b div.sk-text-repr-fallback {display: none;}</style><div id="sk-49ef5114-c7fc-4c3d-a542-5fae4006790b" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="de5a9d27-ed4b-479e-b2fb-c18de3d76325" type="checkbox" ><label for="de5a9d27-ed4b-479e-b2fb-c18de3d76325" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="32ed4455-8928-4fb2-9ba3-cf6a57dbdc9a" type="checkbox" ><label for="32ed4455-8928-4fb2-9ba3-cf6a57dbdc9a" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ea19d84e-50c2-4aed-b583-53753aabf480" type="checkbox" ><label for="ea19d84e-50c2-4aed-b583-53753aabf480" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-6279e5c6-53e7-4d7a-a522-86ff61346e49 {color: black;background-color: white;}#sk-6279e5c6-53e7-4d7a-a522-86ff61346e49 pre{padding: 0;}#sk-6279e5c6-53e7-4d7a-a522-86ff61346e49 div.sk-toggleable {background-color: white;}#sk-6279e5c6-53e7-4d7a-a522-86ff61346e49 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-6279e5c6-53e7-4d7a-a522-86ff61346e49 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-6279e5c6-53e7-4d7a-a522-86ff61346e49 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-6279e5c6-53e7-4d7a-a522-86ff61346e49 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-6279e5c6-53e7-4d7a-a522-86ff61346e49 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-6279e5c6-53e7-4d7a-a522-86ff61346e49 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-6279e5c6-53e7-4d7a-a522-86ff61346e49 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-6279e5c6-53e7-4d7a-a522-86ff61346e49 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-6279e5c6-53e7-4d7a-a522-86ff61346e49 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-6279e5c6-53e7-4d7a-a522-86ff61346e49 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-6279e5c6-53e7-4d7a-a522-86ff61346e49 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-6279e5c6-53e7-4d7a-a522-86ff61346e49 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-6279e5c6-53e7-4d7a-a522-86ff61346e49 div.sk-estimator:hover {background-color: #d4ebff;}#sk-6279e5c6-53e7-4d7a-a522-86ff61346e49 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-6279e5c6-53e7-4d7a-a522-86ff61346e49 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-6279e5c6-53e7-4d7a-a522-86ff61346e49 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-6279e5c6-53e7-4d7a-a522-86ff61346e49 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-6279e5c6-53e7-4d7a-a522-86ff61346e49 div.sk-item {z-index: 1;}#sk-6279e5c6-53e7-4d7a-a522-86ff61346e49 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-6279e5c6-53e7-4d7a-a522-86ff61346e49 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-6279e5c6-53e7-4d7a-a522-86ff61346e49 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-6279e5c6-53e7-4d7a-a522-86ff61346e49 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-6279e5c6-53e7-4d7a-a522-86ff61346e49 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-6279e5c6-53e7-4d7a-a522-86ff61346e49 div.sk-parallel-item:only-child::after {width: 0;}#sk-6279e5c6-53e7-4d7a-a522-86ff61346e49 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-6279e5c6-53e7-4d7a-a522-86ff61346e49 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-6279e5c6-53e7-4d7a-a522-86ff61346e49 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-6279e5c6-53e7-4d7a-a522-86ff61346e49 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-6279e5c6-53e7-4d7a-a522-86ff61346e49 div.sk-text-repr-fallback {display: none;}</style><div id="sk-6279e5c6-53e7-4d7a-a522-86ff61346e49" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="128a1310-8dd7-4bd5-b21f-22f089da1a7f" type="checkbox" ><label for="128a1310-8dd7-4bd5-b21f-22f089da1a7f" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b24d899c-e843-45d5-917e-90ccb74b706d" type="checkbox" ><label for="b24d899c-e843-45d5-917e-90ccb74b706d" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c3489a5e-3acc-40eb-b956-dddb266ab216" type="checkbox" ><label for="c3489a5e-3acc-40eb-b956-dddb266ab216" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="68034460-3918-4438-94f6-65f46168ca3d" type="checkbox" ><label for="68034460-3918-4438-94f6-65f46168ca3d" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5f15e4bb-1921-4d01-8ea8-bd76501f2c31" type="checkbox" ><label for="5f15e4bb-1921-4d01-8ea8-bd76501f2c31" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="28e69986-156d-4cf4-bd02-f991c13b18bb" type="checkbox" ><label for="28e69986-156d-4cf4-bd02-f991c13b18bb" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="77a2afc4-441d-4d70-908b-0e16870b80cd" type="checkbox" ><label for="77a2afc4-441d-4d70-908b-0e16870b80cd" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="85f08c3c-3536-4483-9e24-e5d2c5a6a5cd" type="checkbox" ><label for="85f08c3c-3536-4483-9e24-e5d2c5a6a5cd" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="70f3ba78-2365-4cf8-8a31-3a218169a470" type="checkbox" ><label for="70f3ba78-2365-4cf8-8a31-3a218169a470" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-38297709-d6fc-4f93-b324-6f07f499c5ff {color: black;background-color: white;}#sk-38297709-d6fc-4f93-b324-6f07f499c5ff pre{padding: 0;}#sk-38297709-d6fc-4f93-b324-6f07f499c5ff div.sk-toggleable {background-color: white;}#sk-38297709-d6fc-4f93-b324-6f07f499c5ff label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-38297709-d6fc-4f93-b324-6f07f499c5ff label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-38297709-d6fc-4f93-b324-6f07f499c5ff label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-38297709-d6fc-4f93-b324-6f07f499c5ff div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-38297709-d6fc-4f93-b324-6f07f499c5ff div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-38297709-d6fc-4f93-b324-6f07f499c5ff div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-38297709-d6fc-4f93-b324-6f07f499c5ff input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-38297709-d6fc-4f93-b324-6f07f499c5ff input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-38297709-d6fc-4f93-b324-6f07f499c5ff div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-38297709-d6fc-4f93-b324-6f07f499c5ff div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-38297709-d6fc-4f93-b324-6f07f499c5ff input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-38297709-d6fc-4f93-b324-6f07f499c5ff div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-38297709-d6fc-4f93-b324-6f07f499c5ff div.sk-estimator:hover {background-color: #d4ebff;}#sk-38297709-d6fc-4f93-b324-6f07f499c5ff div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-38297709-d6fc-4f93-b324-6f07f499c5ff div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-38297709-d6fc-4f93-b324-6f07f499c5ff div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-38297709-d6fc-4f93-b324-6f07f499c5ff div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-38297709-d6fc-4f93-b324-6f07f499c5ff div.sk-item {z-index: 1;}#sk-38297709-d6fc-4f93-b324-6f07f499c5ff div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-38297709-d6fc-4f93-b324-6f07f499c5ff div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-38297709-d6fc-4f93-b324-6f07f499c5ff div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-38297709-d6fc-4f93-b324-6f07f499c5ff div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-38297709-d6fc-4f93-b324-6f07f499c5ff div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-38297709-d6fc-4f93-b324-6f07f499c5ff div.sk-parallel-item:only-child::after {width: 0;}#sk-38297709-d6fc-4f93-b324-6f07f499c5ff div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-38297709-d6fc-4f93-b324-6f07f499c5ff div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-38297709-d6fc-4f93-b324-6f07f499c5ff div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-38297709-d6fc-4f93-b324-6f07f499c5ff div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-38297709-d6fc-4f93-b324-6f07f499c5ff div.sk-text-repr-fallback {display: none;}</style><div id="sk-38297709-d6fc-4f93-b324-6f07f499c5ff" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ff95d776-ea9f-4714-a020-30d76d12385f" type="checkbox" ><label for="ff95d776-ea9f-4714-a020-30d76d12385f" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f8e620d2-8239-48e6-bd82-76a24b63b2f3" type="checkbox" ><label for="f8e620d2-8239-48e6-bd82-76a24b63b2f3" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="021a214b-5b5f-4ca4-b655-63d3fa088fca" type="checkbox" ><label for="021a214b-5b5f-4ca4-b655-63d3fa088fca" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="30d0dd10-bd2f-4139-bafe-0dbf1911b8ee" type="checkbox" ><label for="30d0dd10-bd2f-4139-bafe-0dbf1911b8ee" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e591efc4-39b5-4ada-a30b-bbb477ca4a86" type="checkbox" ><label for="e591efc4-39b5-4ada-a30b-bbb477ca4a86" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="488730a8-c077-46b7-bc8b-7309d379a23a" type="checkbox" ><label for="488730a8-c077-46b7-bc8b-7309d379a23a" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3f57323a-d82e-4e8f-8a21-7f04af05d27c" type="checkbox" ><label for="3f57323a-d82e-4e8f-8a21-7f04af05d27c" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3806bf05-e79f-44e3-8d3a-aca6b736e0b6" type="checkbox" ><label for="3806bf05-e79f-44e3-8d3a-aca6b736e0b6" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5db0b081-0da8-466f-a22d-0828588bd8df" type="checkbox" ><label for="5db0b081-0da8-466f-a22d-0828588bd8df" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.069 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
