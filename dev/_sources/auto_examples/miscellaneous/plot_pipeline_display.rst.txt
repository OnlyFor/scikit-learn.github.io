
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-0317bc78-b73e-49ce-963f-6d40bcd4050f {color: black;background-color: white;}#sk-0317bc78-b73e-49ce-963f-6d40bcd4050f pre{padding: 0;}#sk-0317bc78-b73e-49ce-963f-6d40bcd4050f div.sk-toggleable {background-color: white;}#sk-0317bc78-b73e-49ce-963f-6d40bcd4050f label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-0317bc78-b73e-49ce-963f-6d40bcd4050f label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-0317bc78-b73e-49ce-963f-6d40bcd4050f label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-0317bc78-b73e-49ce-963f-6d40bcd4050f div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-0317bc78-b73e-49ce-963f-6d40bcd4050f div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-0317bc78-b73e-49ce-963f-6d40bcd4050f div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-0317bc78-b73e-49ce-963f-6d40bcd4050f input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-0317bc78-b73e-49ce-963f-6d40bcd4050f input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-0317bc78-b73e-49ce-963f-6d40bcd4050f div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-0317bc78-b73e-49ce-963f-6d40bcd4050f div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-0317bc78-b73e-49ce-963f-6d40bcd4050f input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-0317bc78-b73e-49ce-963f-6d40bcd4050f div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-0317bc78-b73e-49ce-963f-6d40bcd4050f div.sk-estimator:hover {background-color: #d4ebff;}#sk-0317bc78-b73e-49ce-963f-6d40bcd4050f div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-0317bc78-b73e-49ce-963f-6d40bcd4050f div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-0317bc78-b73e-49ce-963f-6d40bcd4050f div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-0317bc78-b73e-49ce-963f-6d40bcd4050f div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-0317bc78-b73e-49ce-963f-6d40bcd4050f div.sk-item {z-index: 1;}#sk-0317bc78-b73e-49ce-963f-6d40bcd4050f div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-0317bc78-b73e-49ce-963f-6d40bcd4050f div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-0317bc78-b73e-49ce-963f-6d40bcd4050f div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-0317bc78-b73e-49ce-963f-6d40bcd4050f div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-0317bc78-b73e-49ce-963f-6d40bcd4050f div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-0317bc78-b73e-49ce-963f-6d40bcd4050f div.sk-parallel-item:only-child::after {width: 0;}#sk-0317bc78-b73e-49ce-963f-6d40bcd4050f div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-0317bc78-b73e-49ce-963f-6d40bcd4050f div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-0317bc78-b73e-49ce-963f-6d40bcd4050f div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-0317bc78-b73e-49ce-963f-6d40bcd4050f div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-0317bc78-b73e-49ce-963f-6d40bcd4050f div.sk-text-repr-fallback {display: none;}</style><div id="sk-0317bc78-b73e-49ce-963f-6d40bcd4050f" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ba9f585d-7b59-44aa-8bf1-8629ca297a15" type="checkbox" ><label for="ba9f585d-7b59-44aa-8bf1-8629ca297a15" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5968743f-9232-4b30-9dd9-596c1d00c541" type="checkbox" ><label for="5968743f-9232-4b30-9dd9-596c1d00c541" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e45be84c-37a0-481b-9752-9b9c4ff154db" type="checkbox" ><label for="e45be84c-37a0-481b-9752-9b9c4ff154db" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-60aa539b-858c-4dfe-a7cc-8f43c0c821e4 {color: black;background-color: white;}#sk-60aa539b-858c-4dfe-a7cc-8f43c0c821e4 pre{padding: 0;}#sk-60aa539b-858c-4dfe-a7cc-8f43c0c821e4 div.sk-toggleable {background-color: white;}#sk-60aa539b-858c-4dfe-a7cc-8f43c0c821e4 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-60aa539b-858c-4dfe-a7cc-8f43c0c821e4 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-60aa539b-858c-4dfe-a7cc-8f43c0c821e4 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-60aa539b-858c-4dfe-a7cc-8f43c0c821e4 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-60aa539b-858c-4dfe-a7cc-8f43c0c821e4 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-60aa539b-858c-4dfe-a7cc-8f43c0c821e4 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-60aa539b-858c-4dfe-a7cc-8f43c0c821e4 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-60aa539b-858c-4dfe-a7cc-8f43c0c821e4 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-60aa539b-858c-4dfe-a7cc-8f43c0c821e4 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-60aa539b-858c-4dfe-a7cc-8f43c0c821e4 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-60aa539b-858c-4dfe-a7cc-8f43c0c821e4 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-60aa539b-858c-4dfe-a7cc-8f43c0c821e4 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-60aa539b-858c-4dfe-a7cc-8f43c0c821e4 div.sk-estimator:hover {background-color: #d4ebff;}#sk-60aa539b-858c-4dfe-a7cc-8f43c0c821e4 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-60aa539b-858c-4dfe-a7cc-8f43c0c821e4 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-60aa539b-858c-4dfe-a7cc-8f43c0c821e4 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-60aa539b-858c-4dfe-a7cc-8f43c0c821e4 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-60aa539b-858c-4dfe-a7cc-8f43c0c821e4 div.sk-item {z-index: 1;}#sk-60aa539b-858c-4dfe-a7cc-8f43c0c821e4 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-60aa539b-858c-4dfe-a7cc-8f43c0c821e4 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-60aa539b-858c-4dfe-a7cc-8f43c0c821e4 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-60aa539b-858c-4dfe-a7cc-8f43c0c821e4 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-60aa539b-858c-4dfe-a7cc-8f43c0c821e4 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-60aa539b-858c-4dfe-a7cc-8f43c0c821e4 div.sk-parallel-item:only-child::after {width: 0;}#sk-60aa539b-858c-4dfe-a7cc-8f43c0c821e4 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-60aa539b-858c-4dfe-a7cc-8f43c0c821e4 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-60aa539b-858c-4dfe-a7cc-8f43c0c821e4 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-60aa539b-858c-4dfe-a7cc-8f43c0c821e4 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-60aa539b-858c-4dfe-a7cc-8f43c0c821e4 div.sk-text-repr-fallback {display: none;}</style><div id="sk-60aa539b-858c-4dfe-a7cc-8f43c0c821e4" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fffbd397-7f8b-49fc-8479-8548e12c9745" type="checkbox" ><label for="fffbd397-7f8b-49fc-8479-8548e12c9745" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a153736c-6ed4-4b27-a93f-d378eff6933b" type="checkbox" ><label for="a153736c-6ed4-4b27-a93f-d378eff6933b" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="83030475-5663-4b8f-b0e3-f1061853be35" type="checkbox" ><label for="83030475-5663-4b8f-b0e3-f1061853be35" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b778e4d5-b554-45a8-8444-1378501ef8d0" type="checkbox" ><label for="b778e4d5-b554-45a8-8444-1378501ef8d0" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-44dced5c-5d11-49c5-b2a9-dac408a8a710 {color: black;background-color: white;}#sk-44dced5c-5d11-49c5-b2a9-dac408a8a710 pre{padding: 0;}#sk-44dced5c-5d11-49c5-b2a9-dac408a8a710 div.sk-toggleable {background-color: white;}#sk-44dced5c-5d11-49c5-b2a9-dac408a8a710 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-44dced5c-5d11-49c5-b2a9-dac408a8a710 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-44dced5c-5d11-49c5-b2a9-dac408a8a710 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-44dced5c-5d11-49c5-b2a9-dac408a8a710 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-44dced5c-5d11-49c5-b2a9-dac408a8a710 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-44dced5c-5d11-49c5-b2a9-dac408a8a710 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-44dced5c-5d11-49c5-b2a9-dac408a8a710 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-44dced5c-5d11-49c5-b2a9-dac408a8a710 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-44dced5c-5d11-49c5-b2a9-dac408a8a710 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-44dced5c-5d11-49c5-b2a9-dac408a8a710 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-44dced5c-5d11-49c5-b2a9-dac408a8a710 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-44dced5c-5d11-49c5-b2a9-dac408a8a710 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-44dced5c-5d11-49c5-b2a9-dac408a8a710 div.sk-estimator:hover {background-color: #d4ebff;}#sk-44dced5c-5d11-49c5-b2a9-dac408a8a710 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-44dced5c-5d11-49c5-b2a9-dac408a8a710 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-44dced5c-5d11-49c5-b2a9-dac408a8a710 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-44dced5c-5d11-49c5-b2a9-dac408a8a710 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-44dced5c-5d11-49c5-b2a9-dac408a8a710 div.sk-item {z-index: 1;}#sk-44dced5c-5d11-49c5-b2a9-dac408a8a710 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-44dced5c-5d11-49c5-b2a9-dac408a8a710 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-44dced5c-5d11-49c5-b2a9-dac408a8a710 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-44dced5c-5d11-49c5-b2a9-dac408a8a710 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-44dced5c-5d11-49c5-b2a9-dac408a8a710 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-44dced5c-5d11-49c5-b2a9-dac408a8a710 div.sk-parallel-item:only-child::after {width: 0;}#sk-44dced5c-5d11-49c5-b2a9-dac408a8a710 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-44dced5c-5d11-49c5-b2a9-dac408a8a710 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-44dced5c-5d11-49c5-b2a9-dac408a8a710 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-44dced5c-5d11-49c5-b2a9-dac408a8a710 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-44dced5c-5d11-49c5-b2a9-dac408a8a710 div.sk-text-repr-fallback {display: none;}</style><div id="sk-44dced5c-5d11-49c5-b2a9-dac408a8a710" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="223005ed-40d1-425d-9706-d53a241da16c" type="checkbox" ><label for="223005ed-40d1-425d-9706-d53a241da16c" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="613f2cbf-73b9-4ff0-8b26-5dafba7a7a42" type="checkbox" ><label for="613f2cbf-73b9-4ff0-8b26-5dafba7a7a42" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bb7839aa-bc05-4024-a643-668196eb94c3" type="checkbox" ><label for="bb7839aa-bc05-4024-a643-668196eb94c3" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-925a6ca8-df69-4bbe-8c0e-e7cadc7acdbd {color: black;background-color: white;}#sk-925a6ca8-df69-4bbe-8c0e-e7cadc7acdbd pre{padding: 0;}#sk-925a6ca8-df69-4bbe-8c0e-e7cadc7acdbd div.sk-toggleable {background-color: white;}#sk-925a6ca8-df69-4bbe-8c0e-e7cadc7acdbd label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-925a6ca8-df69-4bbe-8c0e-e7cadc7acdbd label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-925a6ca8-df69-4bbe-8c0e-e7cadc7acdbd label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-925a6ca8-df69-4bbe-8c0e-e7cadc7acdbd div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-925a6ca8-df69-4bbe-8c0e-e7cadc7acdbd div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-925a6ca8-df69-4bbe-8c0e-e7cadc7acdbd div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-925a6ca8-df69-4bbe-8c0e-e7cadc7acdbd input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-925a6ca8-df69-4bbe-8c0e-e7cadc7acdbd input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-925a6ca8-df69-4bbe-8c0e-e7cadc7acdbd div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-925a6ca8-df69-4bbe-8c0e-e7cadc7acdbd div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-925a6ca8-df69-4bbe-8c0e-e7cadc7acdbd input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-925a6ca8-df69-4bbe-8c0e-e7cadc7acdbd div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-925a6ca8-df69-4bbe-8c0e-e7cadc7acdbd div.sk-estimator:hover {background-color: #d4ebff;}#sk-925a6ca8-df69-4bbe-8c0e-e7cadc7acdbd div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-925a6ca8-df69-4bbe-8c0e-e7cadc7acdbd div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-925a6ca8-df69-4bbe-8c0e-e7cadc7acdbd div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-925a6ca8-df69-4bbe-8c0e-e7cadc7acdbd div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-925a6ca8-df69-4bbe-8c0e-e7cadc7acdbd div.sk-item {z-index: 1;}#sk-925a6ca8-df69-4bbe-8c0e-e7cadc7acdbd div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-925a6ca8-df69-4bbe-8c0e-e7cadc7acdbd div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-925a6ca8-df69-4bbe-8c0e-e7cadc7acdbd div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-925a6ca8-df69-4bbe-8c0e-e7cadc7acdbd div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-925a6ca8-df69-4bbe-8c0e-e7cadc7acdbd div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-925a6ca8-df69-4bbe-8c0e-e7cadc7acdbd div.sk-parallel-item:only-child::after {width: 0;}#sk-925a6ca8-df69-4bbe-8c0e-e7cadc7acdbd div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-925a6ca8-df69-4bbe-8c0e-e7cadc7acdbd div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-925a6ca8-df69-4bbe-8c0e-e7cadc7acdbd div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-925a6ca8-df69-4bbe-8c0e-e7cadc7acdbd div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-925a6ca8-df69-4bbe-8c0e-e7cadc7acdbd div.sk-text-repr-fallback {display: none;}</style><div id="sk-925a6ca8-df69-4bbe-8c0e-e7cadc7acdbd" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b527fd29-7582-45af-b77d-143c95478bff" type="checkbox" ><label for="b527fd29-7582-45af-b77d-143c95478bff" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b2045539-3af9-4fd0-bcd9-a4526d0c2ae6" type="checkbox" ><label for="b2045539-3af9-4fd0-bcd9-a4526d0c2ae6" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="45b6d00c-823d-48c1-bc03-c6b693a40356" type="checkbox" ><label for="45b6d00c-823d-48c1-bc03-c6b693a40356" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f26dc0f3-bd9d-4231-b2dc-a82b45876ea6" type="checkbox" ><label for="f26dc0f3-bd9d-4231-b2dc-a82b45876ea6" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e7c95de3-3f90-475e-96d6-942e53dd0855" type="checkbox" ><label for="e7c95de3-3f90-475e-96d6-942e53dd0855" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="64d95e36-b4d7-4d90-b4b4-2d3a77bcabc0" type="checkbox" ><label for="64d95e36-b4d7-4d90-b4b4-2d3a77bcabc0" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="eecbb450-bc88-46ee-8e7f-b4ab896a94c4" type="checkbox" ><label for="eecbb450-bc88-46ee-8e7f-b4ab896a94c4" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a80c743e-9e0f-4e86-a968-264dd8105359" type="checkbox" ><label for="a80c743e-9e0f-4e86-a968-264dd8105359" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fb53ef8d-3da7-404a-be7a-7b1a4ca85fd8" type="checkbox" ><label for="fb53ef8d-3da7-404a-be7a-7b1a4ca85fd8" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-6ddda1a8-5de0-4faf-831f-d9a9beb7d09c {color: black;background-color: white;}#sk-6ddda1a8-5de0-4faf-831f-d9a9beb7d09c pre{padding: 0;}#sk-6ddda1a8-5de0-4faf-831f-d9a9beb7d09c div.sk-toggleable {background-color: white;}#sk-6ddda1a8-5de0-4faf-831f-d9a9beb7d09c label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-6ddda1a8-5de0-4faf-831f-d9a9beb7d09c label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-6ddda1a8-5de0-4faf-831f-d9a9beb7d09c label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-6ddda1a8-5de0-4faf-831f-d9a9beb7d09c div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-6ddda1a8-5de0-4faf-831f-d9a9beb7d09c div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-6ddda1a8-5de0-4faf-831f-d9a9beb7d09c div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-6ddda1a8-5de0-4faf-831f-d9a9beb7d09c input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-6ddda1a8-5de0-4faf-831f-d9a9beb7d09c input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-6ddda1a8-5de0-4faf-831f-d9a9beb7d09c div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-6ddda1a8-5de0-4faf-831f-d9a9beb7d09c div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-6ddda1a8-5de0-4faf-831f-d9a9beb7d09c input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-6ddda1a8-5de0-4faf-831f-d9a9beb7d09c div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-6ddda1a8-5de0-4faf-831f-d9a9beb7d09c div.sk-estimator:hover {background-color: #d4ebff;}#sk-6ddda1a8-5de0-4faf-831f-d9a9beb7d09c div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-6ddda1a8-5de0-4faf-831f-d9a9beb7d09c div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-6ddda1a8-5de0-4faf-831f-d9a9beb7d09c div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-6ddda1a8-5de0-4faf-831f-d9a9beb7d09c div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-6ddda1a8-5de0-4faf-831f-d9a9beb7d09c div.sk-item {z-index: 1;}#sk-6ddda1a8-5de0-4faf-831f-d9a9beb7d09c div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-6ddda1a8-5de0-4faf-831f-d9a9beb7d09c div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-6ddda1a8-5de0-4faf-831f-d9a9beb7d09c div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-6ddda1a8-5de0-4faf-831f-d9a9beb7d09c div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-6ddda1a8-5de0-4faf-831f-d9a9beb7d09c div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-6ddda1a8-5de0-4faf-831f-d9a9beb7d09c div.sk-parallel-item:only-child::after {width: 0;}#sk-6ddda1a8-5de0-4faf-831f-d9a9beb7d09c div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-6ddda1a8-5de0-4faf-831f-d9a9beb7d09c div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-6ddda1a8-5de0-4faf-831f-d9a9beb7d09c div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-6ddda1a8-5de0-4faf-831f-d9a9beb7d09c div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-6ddda1a8-5de0-4faf-831f-d9a9beb7d09c div.sk-text-repr-fallback {display: none;}</style><div id="sk-6ddda1a8-5de0-4faf-831f-d9a9beb7d09c" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d4f8a883-54b4-48c3-9b83-5473142e7905" type="checkbox" ><label for="d4f8a883-54b4-48c3-9b83-5473142e7905" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fdec1302-90e8-42ce-90fc-56ca761c77e9" type="checkbox" ><label for="fdec1302-90e8-42ce-90fc-56ca761c77e9" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2fa9f658-fcda-4d49-b7e7-89bddc0a42fa" type="checkbox" ><label for="2fa9f658-fcda-4d49-b7e7-89bddc0a42fa" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="754e2093-a737-4fe1-8890-5c6da6d7b6e5" type="checkbox" ><label for="754e2093-a737-4fe1-8890-5c6da6d7b6e5" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="669e01c7-7429-4346-add0-a2c3fc47a6e2" type="checkbox" ><label for="669e01c7-7429-4346-add0-a2c3fc47a6e2" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="762afe65-a8a0-4576-bf89-a13a6b3ba5de" type="checkbox" ><label for="762afe65-a8a0-4576-bf89-a13a6b3ba5de" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f9f8a8bf-bfa0-4eb4-b920-b8231203407e" type="checkbox" ><label for="f9f8a8bf-bfa0-4eb4-b920-b8231203407e" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c414285c-c53e-4a9b-a891-701667f6c8fc" type="checkbox" ><label for="c414285c-c53e-4a9b-a891-701667f6c8fc" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a7f4008b-58d3-4289-91b5-c7a23be8c7da" type="checkbox" ><label for="a7f4008b-58d3-4289-91b5-c7a23be8c7da" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.073 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
