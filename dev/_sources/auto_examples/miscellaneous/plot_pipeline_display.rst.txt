
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-78b1e804-fec0-4643-b045-905b5a2b066a {color: black;background-color: white;}#sk-78b1e804-fec0-4643-b045-905b5a2b066a pre{padding: 0;}#sk-78b1e804-fec0-4643-b045-905b5a2b066a div.sk-toggleable {background-color: white;}#sk-78b1e804-fec0-4643-b045-905b5a2b066a label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-78b1e804-fec0-4643-b045-905b5a2b066a label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-78b1e804-fec0-4643-b045-905b5a2b066a label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-78b1e804-fec0-4643-b045-905b5a2b066a div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-78b1e804-fec0-4643-b045-905b5a2b066a div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-78b1e804-fec0-4643-b045-905b5a2b066a div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-78b1e804-fec0-4643-b045-905b5a2b066a input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-78b1e804-fec0-4643-b045-905b5a2b066a input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-78b1e804-fec0-4643-b045-905b5a2b066a div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-78b1e804-fec0-4643-b045-905b5a2b066a div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-78b1e804-fec0-4643-b045-905b5a2b066a input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-78b1e804-fec0-4643-b045-905b5a2b066a div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-78b1e804-fec0-4643-b045-905b5a2b066a div.sk-estimator:hover {background-color: #d4ebff;}#sk-78b1e804-fec0-4643-b045-905b5a2b066a div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-78b1e804-fec0-4643-b045-905b5a2b066a div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-78b1e804-fec0-4643-b045-905b5a2b066a div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-78b1e804-fec0-4643-b045-905b5a2b066a div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-78b1e804-fec0-4643-b045-905b5a2b066a div.sk-item {z-index: 1;}#sk-78b1e804-fec0-4643-b045-905b5a2b066a div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-78b1e804-fec0-4643-b045-905b5a2b066a div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-78b1e804-fec0-4643-b045-905b5a2b066a div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-78b1e804-fec0-4643-b045-905b5a2b066a div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-78b1e804-fec0-4643-b045-905b5a2b066a div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-78b1e804-fec0-4643-b045-905b5a2b066a div.sk-parallel-item:only-child::after {width: 0;}#sk-78b1e804-fec0-4643-b045-905b5a2b066a div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-78b1e804-fec0-4643-b045-905b5a2b066a div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-78b1e804-fec0-4643-b045-905b5a2b066a div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-78b1e804-fec0-4643-b045-905b5a2b066a div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-78b1e804-fec0-4643-b045-905b5a2b066a div.sk-text-repr-fallback {display: none;}</style><div id="sk-78b1e804-fec0-4643-b045-905b5a2b066a" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="83ba14f1-ab44-4333-846e-b26e166e3d94" type="checkbox" ><label for="83ba14f1-ab44-4333-846e-b26e166e3d94" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="de32260c-8826-466d-b1cd-47f4b08667cd" type="checkbox" ><label for="de32260c-8826-466d-b1cd-47f4b08667cd" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8c5c4410-91f3-45b5-9a4c-33eb597ee076" type="checkbox" ><label for="8c5c4410-91f3-45b5-9a4c-33eb597ee076" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-b87e6e1d-622a-4f85-b389-235a7029b739 {color: black;background-color: white;}#sk-b87e6e1d-622a-4f85-b389-235a7029b739 pre{padding: 0;}#sk-b87e6e1d-622a-4f85-b389-235a7029b739 div.sk-toggleable {background-color: white;}#sk-b87e6e1d-622a-4f85-b389-235a7029b739 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-b87e6e1d-622a-4f85-b389-235a7029b739 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-b87e6e1d-622a-4f85-b389-235a7029b739 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-b87e6e1d-622a-4f85-b389-235a7029b739 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-b87e6e1d-622a-4f85-b389-235a7029b739 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-b87e6e1d-622a-4f85-b389-235a7029b739 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-b87e6e1d-622a-4f85-b389-235a7029b739 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-b87e6e1d-622a-4f85-b389-235a7029b739 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-b87e6e1d-622a-4f85-b389-235a7029b739 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b87e6e1d-622a-4f85-b389-235a7029b739 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b87e6e1d-622a-4f85-b389-235a7029b739 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-b87e6e1d-622a-4f85-b389-235a7029b739 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-b87e6e1d-622a-4f85-b389-235a7029b739 div.sk-estimator:hover {background-color: #d4ebff;}#sk-b87e6e1d-622a-4f85-b389-235a7029b739 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-b87e6e1d-622a-4f85-b389-235a7029b739 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-b87e6e1d-622a-4f85-b389-235a7029b739 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b87e6e1d-622a-4f85-b389-235a7029b739 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-b87e6e1d-622a-4f85-b389-235a7029b739 div.sk-item {z-index: 1;}#sk-b87e6e1d-622a-4f85-b389-235a7029b739 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-b87e6e1d-622a-4f85-b389-235a7029b739 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b87e6e1d-622a-4f85-b389-235a7029b739 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-b87e6e1d-622a-4f85-b389-235a7029b739 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-b87e6e1d-622a-4f85-b389-235a7029b739 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-b87e6e1d-622a-4f85-b389-235a7029b739 div.sk-parallel-item:only-child::after {width: 0;}#sk-b87e6e1d-622a-4f85-b389-235a7029b739 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-b87e6e1d-622a-4f85-b389-235a7029b739 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-b87e6e1d-622a-4f85-b389-235a7029b739 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-b87e6e1d-622a-4f85-b389-235a7029b739 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-b87e6e1d-622a-4f85-b389-235a7029b739 div.sk-text-repr-fallback {display: none;}</style><div id="sk-b87e6e1d-622a-4f85-b389-235a7029b739" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="18baa0cf-2bad-423c-bb88-37d0bbb4be0d" type="checkbox" ><label for="18baa0cf-2bad-423c-bb88-37d0bbb4be0d" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e6dc9d8f-ecf6-4837-a4b1-406bb236761e" type="checkbox" ><label for="e6dc9d8f-ecf6-4837-a4b1-406bb236761e" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d9c151b1-d118-4bf2-8ad1-49c9b4470408" type="checkbox" ><label for="d9c151b1-d118-4bf2-8ad1-49c9b4470408" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a5ac1de9-d235-42ba-86aa-e5beb419a55c" type="checkbox" ><label for="a5ac1de9-d235-42ba-86aa-e5beb419a55c" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-d14d2bd0-512d-45e8-b0c4-f8c8d44ec0f2 {color: black;background-color: white;}#sk-d14d2bd0-512d-45e8-b0c4-f8c8d44ec0f2 pre{padding: 0;}#sk-d14d2bd0-512d-45e8-b0c4-f8c8d44ec0f2 div.sk-toggleable {background-color: white;}#sk-d14d2bd0-512d-45e8-b0c4-f8c8d44ec0f2 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-d14d2bd0-512d-45e8-b0c4-f8c8d44ec0f2 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-d14d2bd0-512d-45e8-b0c4-f8c8d44ec0f2 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-d14d2bd0-512d-45e8-b0c4-f8c8d44ec0f2 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-d14d2bd0-512d-45e8-b0c4-f8c8d44ec0f2 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-d14d2bd0-512d-45e8-b0c4-f8c8d44ec0f2 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-d14d2bd0-512d-45e8-b0c4-f8c8d44ec0f2 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-d14d2bd0-512d-45e8-b0c4-f8c8d44ec0f2 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-d14d2bd0-512d-45e8-b0c4-f8c8d44ec0f2 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-d14d2bd0-512d-45e8-b0c4-f8c8d44ec0f2 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-d14d2bd0-512d-45e8-b0c4-f8c8d44ec0f2 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-d14d2bd0-512d-45e8-b0c4-f8c8d44ec0f2 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-d14d2bd0-512d-45e8-b0c4-f8c8d44ec0f2 div.sk-estimator:hover {background-color: #d4ebff;}#sk-d14d2bd0-512d-45e8-b0c4-f8c8d44ec0f2 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-d14d2bd0-512d-45e8-b0c4-f8c8d44ec0f2 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-d14d2bd0-512d-45e8-b0c4-f8c8d44ec0f2 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-d14d2bd0-512d-45e8-b0c4-f8c8d44ec0f2 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-d14d2bd0-512d-45e8-b0c4-f8c8d44ec0f2 div.sk-item {z-index: 1;}#sk-d14d2bd0-512d-45e8-b0c4-f8c8d44ec0f2 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-d14d2bd0-512d-45e8-b0c4-f8c8d44ec0f2 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-d14d2bd0-512d-45e8-b0c4-f8c8d44ec0f2 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-d14d2bd0-512d-45e8-b0c4-f8c8d44ec0f2 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-d14d2bd0-512d-45e8-b0c4-f8c8d44ec0f2 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-d14d2bd0-512d-45e8-b0c4-f8c8d44ec0f2 div.sk-parallel-item:only-child::after {width: 0;}#sk-d14d2bd0-512d-45e8-b0c4-f8c8d44ec0f2 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-d14d2bd0-512d-45e8-b0c4-f8c8d44ec0f2 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-d14d2bd0-512d-45e8-b0c4-f8c8d44ec0f2 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-d14d2bd0-512d-45e8-b0c4-f8c8d44ec0f2 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-d14d2bd0-512d-45e8-b0c4-f8c8d44ec0f2 div.sk-text-repr-fallback {display: none;}</style><div id="sk-d14d2bd0-512d-45e8-b0c4-f8c8d44ec0f2" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8118c1ef-addf-4c0a-9f11-c33ec4aae872" type="checkbox" ><label for="8118c1ef-addf-4c0a-9f11-c33ec4aae872" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="61c29987-6384-4429-bbf3-039fea265364" type="checkbox" ><label for="61c29987-6384-4429-bbf3-039fea265364" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f0ec825b-bc88-4309-b369-04962454fd40" type="checkbox" ><label for="f0ec825b-bc88-4309-b369-04962454fd40" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-57968849-d1d9-4dfc-94e1-eb1a352375d1 {color: black;background-color: white;}#sk-57968849-d1d9-4dfc-94e1-eb1a352375d1 pre{padding: 0;}#sk-57968849-d1d9-4dfc-94e1-eb1a352375d1 div.sk-toggleable {background-color: white;}#sk-57968849-d1d9-4dfc-94e1-eb1a352375d1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-57968849-d1d9-4dfc-94e1-eb1a352375d1 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-57968849-d1d9-4dfc-94e1-eb1a352375d1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-57968849-d1d9-4dfc-94e1-eb1a352375d1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-57968849-d1d9-4dfc-94e1-eb1a352375d1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-57968849-d1d9-4dfc-94e1-eb1a352375d1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-57968849-d1d9-4dfc-94e1-eb1a352375d1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-57968849-d1d9-4dfc-94e1-eb1a352375d1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-57968849-d1d9-4dfc-94e1-eb1a352375d1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-57968849-d1d9-4dfc-94e1-eb1a352375d1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-57968849-d1d9-4dfc-94e1-eb1a352375d1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-57968849-d1d9-4dfc-94e1-eb1a352375d1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-57968849-d1d9-4dfc-94e1-eb1a352375d1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-57968849-d1d9-4dfc-94e1-eb1a352375d1 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-57968849-d1d9-4dfc-94e1-eb1a352375d1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-57968849-d1d9-4dfc-94e1-eb1a352375d1 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-57968849-d1d9-4dfc-94e1-eb1a352375d1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-57968849-d1d9-4dfc-94e1-eb1a352375d1 div.sk-item {z-index: 1;}#sk-57968849-d1d9-4dfc-94e1-eb1a352375d1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-57968849-d1d9-4dfc-94e1-eb1a352375d1 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-57968849-d1d9-4dfc-94e1-eb1a352375d1 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-57968849-d1d9-4dfc-94e1-eb1a352375d1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-57968849-d1d9-4dfc-94e1-eb1a352375d1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-57968849-d1d9-4dfc-94e1-eb1a352375d1 div.sk-parallel-item:only-child::after {width: 0;}#sk-57968849-d1d9-4dfc-94e1-eb1a352375d1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-57968849-d1d9-4dfc-94e1-eb1a352375d1 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-57968849-d1d9-4dfc-94e1-eb1a352375d1 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-57968849-d1d9-4dfc-94e1-eb1a352375d1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-57968849-d1d9-4dfc-94e1-eb1a352375d1 div.sk-text-repr-fallback {display: none;}</style><div id="sk-57968849-d1d9-4dfc-94e1-eb1a352375d1" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f3168218-28ec-402d-bd76-f16fd7d61397" type="checkbox" ><label for="f3168218-28ec-402d-bd76-f16fd7d61397" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="47d709d4-7aea-4270-95cc-de26ddaa22c3" type="checkbox" ><label for="47d709d4-7aea-4270-95cc-de26ddaa22c3" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="48312e4e-7e4b-488b-89c8-9d58a8aab21c" type="checkbox" ><label for="48312e4e-7e4b-488b-89c8-9d58a8aab21c" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9e62a735-28d3-41cd-8cb5-33ac4de77e48" type="checkbox" ><label for="9e62a735-28d3-41cd-8cb5-33ac4de77e48" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6ebcf50b-3414-4180-8c54-6e7cb6c214d6" type="checkbox" ><label for="6ebcf50b-3414-4180-8c54-6e7cb6c214d6" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="de81531b-7fa4-41fd-90c4-13bdc41a050a" type="checkbox" ><label for="de81531b-7fa4-41fd-90c4-13bdc41a050a" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f3b2c621-b6c2-466e-a787-653fc2a81132" type="checkbox" ><label for="f3b2c621-b6c2-466e-a787-653fc2a81132" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4e625b83-92d3-4c56-9634-02b9b05e05b0" type="checkbox" ><label for="4e625b83-92d3-4c56-9634-02b9b05e05b0" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2e7078e9-65f8-4d3f-9273-c50dc6ec102d" type="checkbox" ><label for="2e7078e9-65f8-4d3f-9273-c50dc6ec102d" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-ebc925d5-c673-4768-a231-fc4201426d5b {color: black;background-color: white;}#sk-ebc925d5-c673-4768-a231-fc4201426d5b pre{padding: 0;}#sk-ebc925d5-c673-4768-a231-fc4201426d5b div.sk-toggleable {background-color: white;}#sk-ebc925d5-c673-4768-a231-fc4201426d5b label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-ebc925d5-c673-4768-a231-fc4201426d5b label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-ebc925d5-c673-4768-a231-fc4201426d5b label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-ebc925d5-c673-4768-a231-fc4201426d5b div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-ebc925d5-c673-4768-a231-fc4201426d5b div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-ebc925d5-c673-4768-a231-fc4201426d5b div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-ebc925d5-c673-4768-a231-fc4201426d5b input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-ebc925d5-c673-4768-a231-fc4201426d5b input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-ebc925d5-c673-4768-a231-fc4201426d5b div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ebc925d5-c673-4768-a231-fc4201426d5b div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ebc925d5-c673-4768-a231-fc4201426d5b input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-ebc925d5-c673-4768-a231-fc4201426d5b div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-ebc925d5-c673-4768-a231-fc4201426d5b div.sk-estimator:hover {background-color: #d4ebff;}#sk-ebc925d5-c673-4768-a231-fc4201426d5b div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-ebc925d5-c673-4768-a231-fc4201426d5b div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-ebc925d5-c673-4768-a231-fc4201426d5b div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ebc925d5-c673-4768-a231-fc4201426d5b div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-ebc925d5-c673-4768-a231-fc4201426d5b div.sk-item {z-index: 1;}#sk-ebc925d5-c673-4768-a231-fc4201426d5b div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-ebc925d5-c673-4768-a231-fc4201426d5b div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ebc925d5-c673-4768-a231-fc4201426d5b div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-ebc925d5-c673-4768-a231-fc4201426d5b div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-ebc925d5-c673-4768-a231-fc4201426d5b div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-ebc925d5-c673-4768-a231-fc4201426d5b div.sk-parallel-item:only-child::after {width: 0;}#sk-ebc925d5-c673-4768-a231-fc4201426d5b div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-ebc925d5-c673-4768-a231-fc4201426d5b div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-ebc925d5-c673-4768-a231-fc4201426d5b div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-ebc925d5-c673-4768-a231-fc4201426d5b div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-ebc925d5-c673-4768-a231-fc4201426d5b div.sk-text-repr-fallback {display: none;}</style><div id="sk-ebc925d5-c673-4768-a231-fc4201426d5b" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7d632404-3b3f-4ee1-8a72-59ffe248247e" type="checkbox" ><label for="7d632404-3b3f-4ee1-8a72-59ffe248247e" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="03bd393b-6e22-4da8-917f-f220e96c8cb2" type="checkbox" ><label for="03bd393b-6e22-4da8-917f-f220e96c8cb2" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="14bd427c-a26a-4079-bf1e-0c6a19f0f6a2" type="checkbox" ><label for="14bd427c-a26a-4079-bf1e-0c6a19f0f6a2" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8de6c086-2e41-4d50-8ac1-144b3e6f5faf" type="checkbox" ><label for="8de6c086-2e41-4d50-8ac1-144b3e6f5faf" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9644d78b-ce87-471e-80a0-e6ed1d24ce11" type="checkbox" ><label for="9644d78b-ce87-471e-80a0-e6ed1d24ce11" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="66e7b41e-21cc-44ae-a2c0-da9874e7ef19" type="checkbox" ><label for="66e7b41e-21cc-44ae-a2c0-da9874e7ef19" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="69fdcefa-cd3e-407b-b441-937171d43d46" type="checkbox" ><label for="69fdcefa-cd3e-407b-b441-937171d43d46" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1a2b2bd8-995a-446a-bbc0-986879ff0aba" type="checkbox" ><label for="1a2b2bd8-995a-446a-bbc0-986879ff0aba" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4f899834-a3ea-4a3e-a223-fa480a570ac8" type="checkbox" ><label for="4f899834-a3ea-4a3e-a223-fa480a570ac8" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.102 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
