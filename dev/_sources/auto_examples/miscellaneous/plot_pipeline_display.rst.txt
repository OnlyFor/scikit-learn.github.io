
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-9cd39966-d69f-4e34-a931-0bbe45822688 {color: black;background-color: white;}#sk-9cd39966-d69f-4e34-a931-0bbe45822688 pre{padding: 0;}#sk-9cd39966-d69f-4e34-a931-0bbe45822688 div.sk-toggleable {background-color: white;}#sk-9cd39966-d69f-4e34-a931-0bbe45822688 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-9cd39966-d69f-4e34-a931-0bbe45822688 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-9cd39966-d69f-4e34-a931-0bbe45822688 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-9cd39966-d69f-4e34-a931-0bbe45822688 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-9cd39966-d69f-4e34-a931-0bbe45822688 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-9cd39966-d69f-4e34-a931-0bbe45822688 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-9cd39966-d69f-4e34-a931-0bbe45822688 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-9cd39966-d69f-4e34-a931-0bbe45822688 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-9cd39966-d69f-4e34-a931-0bbe45822688 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-9cd39966-d69f-4e34-a931-0bbe45822688 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-9cd39966-d69f-4e34-a931-0bbe45822688 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-9cd39966-d69f-4e34-a931-0bbe45822688 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-9cd39966-d69f-4e34-a931-0bbe45822688 div.sk-estimator:hover {background-color: #d4ebff;}#sk-9cd39966-d69f-4e34-a931-0bbe45822688 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-9cd39966-d69f-4e34-a931-0bbe45822688 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-9cd39966-d69f-4e34-a931-0bbe45822688 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-9cd39966-d69f-4e34-a931-0bbe45822688 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-9cd39966-d69f-4e34-a931-0bbe45822688 div.sk-item {z-index: 1;}#sk-9cd39966-d69f-4e34-a931-0bbe45822688 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-9cd39966-d69f-4e34-a931-0bbe45822688 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-9cd39966-d69f-4e34-a931-0bbe45822688 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-9cd39966-d69f-4e34-a931-0bbe45822688 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-9cd39966-d69f-4e34-a931-0bbe45822688 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-9cd39966-d69f-4e34-a931-0bbe45822688 div.sk-parallel-item:only-child::after {width: 0;}#sk-9cd39966-d69f-4e34-a931-0bbe45822688 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-9cd39966-d69f-4e34-a931-0bbe45822688 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-9cd39966-d69f-4e34-a931-0bbe45822688 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-9cd39966-d69f-4e34-a931-0bbe45822688 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-9cd39966-d69f-4e34-a931-0bbe45822688 div.sk-text-repr-fallback {display: none;}</style><div id="sk-9cd39966-d69f-4e34-a931-0bbe45822688" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="285eff70-262c-48c7-8ccd-c66d9b04001d" type="checkbox" ><label for="285eff70-262c-48c7-8ccd-c66d9b04001d" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="95b8a401-9e28-486d-a797-af6411419e93" type="checkbox" ><label for="95b8a401-9e28-486d-a797-af6411419e93" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6c6d2f92-94f6-4195-b606-597bbfe6d08b" type="checkbox" ><label for="6c6d2f92-94f6-4195-b606-597bbfe6d08b" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-3fa4f101-c63f-4b3a-a7f1-66b0d8cea326 {color: black;background-color: white;}#sk-3fa4f101-c63f-4b3a-a7f1-66b0d8cea326 pre{padding: 0;}#sk-3fa4f101-c63f-4b3a-a7f1-66b0d8cea326 div.sk-toggleable {background-color: white;}#sk-3fa4f101-c63f-4b3a-a7f1-66b0d8cea326 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-3fa4f101-c63f-4b3a-a7f1-66b0d8cea326 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-3fa4f101-c63f-4b3a-a7f1-66b0d8cea326 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-3fa4f101-c63f-4b3a-a7f1-66b0d8cea326 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-3fa4f101-c63f-4b3a-a7f1-66b0d8cea326 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-3fa4f101-c63f-4b3a-a7f1-66b0d8cea326 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-3fa4f101-c63f-4b3a-a7f1-66b0d8cea326 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-3fa4f101-c63f-4b3a-a7f1-66b0d8cea326 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-3fa4f101-c63f-4b3a-a7f1-66b0d8cea326 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-3fa4f101-c63f-4b3a-a7f1-66b0d8cea326 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-3fa4f101-c63f-4b3a-a7f1-66b0d8cea326 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-3fa4f101-c63f-4b3a-a7f1-66b0d8cea326 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-3fa4f101-c63f-4b3a-a7f1-66b0d8cea326 div.sk-estimator:hover {background-color: #d4ebff;}#sk-3fa4f101-c63f-4b3a-a7f1-66b0d8cea326 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-3fa4f101-c63f-4b3a-a7f1-66b0d8cea326 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-3fa4f101-c63f-4b3a-a7f1-66b0d8cea326 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-3fa4f101-c63f-4b3a-a7f1-66b0d8cea326 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-3fa4f101-c63f-4b3a-a7f1-66b0d8cea326 div.sk-item {z-index: 1;}#sk-3fa4f101-c63f-4b3a-a7f1-66b0d8cea326 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-3fa4f101-c63f-4b3a-a7f1-66b0d8cea326 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-3fa4f101-c63f-4b3a-a7f1-66b0d8cea326 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-3fa4f101-c63f-4b3a-a7f1-66b0d8cea326 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-3fa4f101-c63f-4b3a-a7f1-66b0d8cea326 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-3fa4f101-c63f-4b3a-a7f1-66b0d8cea326 div.sk-parallel-item:only-child::after {width: 0;}#sk-3fa4f101-c63f-4b3a-a7f1-66b0d8cea326 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-3fa4f101-c63f-4b3a-a7f1-66b0d8cea326 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-3fa4f101-c63f-4b3a-a7f1-66b0d8cea326 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-3fa4f101-c63f-4b3a-a7f1-66b0d8cea326 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-3fa4f101-c63f-4b3a-a7f1-66b0d8cea326 div.sk-text-repr-fallback {display: none;}</style><div id="sk-3fa4f101-c63f-4b3a-a7f1-66b0d8cea326" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7e70ded7-06b1-4626-9d79-073d9cd66eaa" type="checkbox" ><label for="7e70ded7-06b1-4626-9d79-073d9cd66eaa" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4a95d6f2-d6a8-4ae8-af53-ed1bfdfef207" type="checkbox" ><label for="4a95d6f2-d6a8-4ae8-af53-ed1bfdfef207" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="22121cfa-01ff-48bc-80ae-0bf78a529187" type="checkbox" ><label for="22121cfa-01ff-48bc-80ae-0bf78a529187" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fc052087-800a-4dc9-a489-d4058ba91f8c" type="checkbox" ><label for="fc052087-800a-4dc9-a489-d4058ba91f8c" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-a2efaf18-0716-43e4-a7b2-3342bd9cf920 {color: black;background-color: white;}#sk-a2efaf18-0716-43e4-a7b2-3342bd9cf920 pre{padding: 0;}#sk-a2efaf18-0716-43e4-a7b2-3342bd9cf920 div.sk-toggleable {background-color: white;}#sk-a2efaf18-0716-43e4-a7b2-3342bd9cf920 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-a2efaf18-0716-43e4-a7b2-3342bd9cf920 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-a2efaf18-0716-43e4-a7b2-3342bd9cf920 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-a2efaf18-0716-43e4-a7b2-3342bd9cf920 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-a2efaf18-0716-43e4-a7b2-3342bd9cf920 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-a2efaf18-0716-43e4-a7b2-3342bd9cf920 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-a2efaf18-0716-43e4-a7b2-3342bd9cf920 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-a2efaf18-0716-43e4-a7b2-3342bd9cf920 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-a2efaf18-0716-43e4-a7b2-3342bd9cf920 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-a2efaf18-0716-43e4-a7b2-3342bd9cf920 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-a2efaf18-0716-43e4-a7b2-3342bd9cf920 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-a2efaf18-0716-43e4-a7b2-3342bd9cf920 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-a2efaf18-0716-43e4-a7b2-3342bd9cf920 div.sk-estimator:hover {background-color: #d4ebff;}#sk-a2efaf18-0716-43e4-a7b2-3342bd9cf920 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-a2efaf18-0716-43e4-a7b2-3342bd9cf920 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-a2efaf18-0716-43e4-a7b2-3342bd9cf920 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-a2efaf18-0716-43e4-a7b2-3342bd9cf920 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-a2efaf18-0716-43e4-a7b2-3342bd9cf920 div.sk-item {z-index: 1;}#sk-a2efaf18-0716-43e4-a7b2-3342bd9cf920 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-a2efaf18-0716-43e4-a7b2-3342bd9cf920 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-a2efaf18-0716-43e4-a7b2-3342bd9cf920 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-a2efaf18-0716-43e4-a7b2-3342bd9cf920 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-a2efaf18-0716-43e4-a7b2-3342bd9cf920 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-a2efaf18-0716-43e4-a7b2-3342bd9cf920 div.sk-parallel-item:only-child::after {width: 0;}#sk-a2efaf18-0716-43e4-a7b2-3342bd9cf920 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-a2efaf18-0716-43e4-a7b2-3342bd9cf920 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-a2efaf18-0716-43e4-a7b2-3342bd9cf920 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-a2efaf18-0716-43e4-a7b2-3342bd9cf920 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-a2efaf18-0716-43e4-a7b2-3342bd9cf920 div.sk-text-repr-fallback {display: none;}</style><div id="sk-a2efaf18-0716-43e4-a7b2-3342bd9cf920" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="53edf9fa-f30f-4ad7-b145-f9ec8962cea8" type="checkbox" ><label for="53edf9fa-f30f-4ad7-b145-f9ec8962cea8" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0626e2c0-3905-4563-a131-ad6b0df763d6" type="checkbox" ><label for="0626e2c0-3905-4563-a131-ad6b0df763d6" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="00936be9-f627-4f95-a0d5-0f6fe04b86ee" type="checkbox" ><label for="00936be9-f627-4f95-a0d5-0f6fe04b86ee" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-5f78d6d3-d300-43f0-9028-7f243986a198 {color: black;background-color: white;}#sk-5f78d6d3-d300-43f0-9028-7f243986a198 pre{padding: 0;}#sk-5f78d6d3-d300-43f0-9028-7f243986a198 div.sk-toggleable {background-color: white;}#sk-5f78d6d3-d300-43f0-9028-7f243986a198 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-5f78d6d3-d300-43f0-9028-7f243986a198 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-5f78d6d3-d300-43f0-9028-7f243986a198 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-5f78d6d3-d300-43f0-9028-7f243986a198 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-5f78d6d3-d300-43f0-9028-7f243986a198 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-5f78d6d3-d300-43f0-9028-7f243986a198 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-5f78d6d3-d300-43f0-9028-7f243986a198 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-5f78d6d3-d300-43f0-9028-7f243986a198 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-5f78d6d3-d300-43f0-9028-7f243986a198 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-5f78d6d3-d300-43f0-9028-7f243986a198 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-5f78d6d3-d300-43f0-9028-7f243986a198 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-5f78d6d3-d300-43f0-9028-7f243986a198 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-5f78d6d3-d300-43f0-9028-7f243986a198 div.sk-estimator:hover {background-color: #d4ebff;}#sk-5f78d6d3-d300-43f0-9028-7f243986a198 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-5f78d6d3-d300-43f0-9028-7f243986a198 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-5f78d6d3-d300-43f0-9028-7f243986a198 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-5f78d6d3-d300-43f0-9028-7f243986a198 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-5f78d6d3-d300-43f0-9028-7f243986a198 div.sk-item {z-index: 1;}#sk-5f78d6d3-d300-43f0-9028-7f243986a198 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-5f78d6d3-d300-43f0-9028-7f243986a198 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-5f78d6d3-d300-43f0-9028-7f243986a198 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-5f78d6d3-d300-43f0-9028-7f243986a198 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-5f78d6d3-d300-43f0-9028-7f243986a198 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-5f78d6d3-d300-43f0-9028-7f243986a198 div.sk-parallel-item:only-child::after {width: 0;}#sk-5f78d6d3-d300-43f0-9028-7f243986a198 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-5f78d6d3-d300-43f0-9028-7f243986a198 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-5f78d6d3-d300-43f0-9028-7f243986a198 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-5f78d6d3-d300-43f0-9028-7f243986a198 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-5f78d6d3-d300-43f0-9028-7f243986a198 div.sk-text-repr-fallback {display: none;}</style><div id="sk-5f78d6d3-d300-43f0-9028-7f243986a198" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8b68b791-3a87-40f6-b171-e402bfd38c36" type="checkbox" ><label for="8b68b791-3a87-40f6-b171-e402bfd38c36" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fc8b6756-efce-4721-a8b0-1114f7c68320" type="checkbox" ><label for="fc8b6756-efce-4721-a8b0-1114f7c68320" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1502af09-d617-4c0e-813e-f014bc525e2a" type="checkbox" ><label for="1502af09-d617-4c0e-813e-f014bc525e2a" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3091c5ef-65bd-4110-b297-abc1a0c8565a" type="checkbox" ><label for="3091c5ef-65bd-4110-b297-abc1a0c8565a" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bc4a232b-26d8-4670-a5a2-1b69265b3805" type="checkbox" ><label for="bc4a232b-26d8-4670-a5a2-1b69265b3805" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="467ef8d6-5854-4a7d-8b69-eea85446b6e2" type="checkbox" ><label for="467ef8d6-5854-4a7d-8b69-eea85446b6e2" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="32c9aa92-c533-4df9-b551-f92aa7bae6ef" type="checkbox" ><label for="32c9aa92-c533-4df9-b551-f92aa7bae6ef" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8d234222-0e4f-48c3-85a7-7e22acc5883d" type="checkbox" ><label for="8d234222-0e4f-48c3-85a7-7e22acc5883d" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1fa66171-3cfc-4d85-92c0-74375df49825" type="checkbox" ><label for="1fa66171-3cfc-4d85-92c0-74375df49825" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-2ba72fc0-45fa-4240-90c4-2982e95e86d4 {color: black;background-color: white;}#sk-2ba72fc0-45fa-4240-90c4-2982e95e86d4 pre{padding: 0;}#sk-2ba72fc0-45fa-4240-90c4-2982e95e86d4 div.sk-toggleable {background-color: white;}#sk-2ba72fc0-45fa-4240-90c4-2982e95e86d4 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-2ba72fc0-45fa-4240-90c4-2982e95e86d4 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-2ba72fc0-45fa-4240-90c4-2982e95e86d4 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-2ba72fc0-45fa-4240-90c4-2982e95e86d4 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-2ba72fc0-45fa-4240-90c4-2982e95e86d4 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-2ba72fc0-45fa-4240-90c4-2982e95e86d4 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-2ba72fc0-45fa-4240-90c4-2982e95e86d4 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-2ba72fc0-45fa-4240-90c4-2982e95e86d4 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-2ba72fc0-45fa-4240-90c4-2982e95e86d4 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-2ba72fc0-45fa-4240-90c4-2982e95e86d4 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-2ba72fc0-45fa-4240-90c4-2982e95e86d4 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-2ba72fc0-45fa-4240-90c4-2982e95e86d4 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-2ba72fc0-45fa-4240-90c4-2982e95e86d4 div.sk-estimator:hover {background-color: #d4ebff;}#sk-2ba72fc0-45fa-4240-90c4-2982e95e86d4 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-2ba72fc0-45fa-4240-90c4-2982e95e86d4 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-2ba72fc0-45fa-4240-90c4-2982e95e86d4 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-2ba72fc0-45fa-4240-90c4-2982e95e86d4 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-2ba72fc0-45fa-4240-90c4-2982e95e86d4 div.sk-item {z-index: 1;}#sk-2ba72fc0-45fa-4240-90c4-2982e95e86d4 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-2ba72fc0-45fa-4240-90c4-2982e95e86d4 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-2ba72fc0-45fa-4240-90c4-2982e95e86d4 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-2ba72fc0-45fa-4240-90c4-2982e95e86d4 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-2ba72fc0-45fa-4240-90c4-2982e95e86d4 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-2ba72fc0-45fa-4240-90c4-2982e95e86d4 div.sk-parallel-item:only-child::after {width: 0;}#sk-2ba72fc0-45fa-4240-90c4-2982e95e86d4 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-2ba72fc0-45fa-4240-90c4-2982e95e86d4 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-2ba72fc0-45fa-4240-90c4-2982e95e86d4 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-2ba72fc0-45fa-4240-90c4-2982e95e86d4 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-2ba72fc0-45fa-4240-90c4-2982e95e86d4 div.sk-text-repr-fallback {display: none;}</style><div id="sk-2ba72fc0-45fa-4240-90c4-2982e95e86d4" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9dc14690-9613-4be0-8357-f75b4c8cccd3" type="checkbox" ><label for="9dc14690-9613-4be0-8357-f75b4c8cccd3" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c17100fc-2524-4930-86d8-807c37188b77" type="checkbox" ><label for="c17100fc-2524-4930-86d8-807c37188b77" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="954c1700-ede2-4243-b027-bff98ad34d81" type="checkbox" ><label for="954c1700-ede2-4243-b027-bff98ad34d81" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0219bb56-8470-45a2-b18d-d1898e8845c0" type="checkbox" ><label for="0219bb56-8470-45a2-b18d-d1898e8845c0" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c8ac8c44-e883-4eea-89ab-2cdd7a5682a3" type="checkbox" ><label for="c8ac8c44-e883-4eea-89ab-2cdd7a5682a3" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d9ac0a4e-6261-45ce-b7fe-1057d5450975" type="checkbox" ><label for="d9ac0a4e-6261-45ce-b7fe-1057d5450975" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9375e4c9-ffaf-4a36-aea7-be85cdc52225" type="checkbox" ><label for="9375e4c9-ffaf-4a36-aea7-be85cdc52225" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="20534317-1bdb-4a89-a842-d817a24b9450" type="checkbox" ><label for="20534317-1bdb-4a89-a842-d817a24b9450" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0b90cf89-0ced-4534-8364-ac15878eb024" type="checkbox" ><label for="0b90cf89-0ced-4534-8364-ac15878eb024" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.111 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
