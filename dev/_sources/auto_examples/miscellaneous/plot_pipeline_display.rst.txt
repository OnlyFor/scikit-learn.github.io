
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-be6fa593-58c6-48ec-9c77-483a913bd363 {color: black;background-color: white;}#sk-be6fa593-58c6-48ec-9c77-483a913bd363 pre{padding: 0;}#sk-be6fa593-58c6-48ec-9c77-483a913bd363 div.sk-toggleable {background-color: white;}#sk-be6fa593-58c6-48ec-9c77-483a913bd363 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-be6fa593-58c6-48ec-9c77-483a913bd363 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-be6fa593-58c6-48ec-9c77-483a913bd363 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-be6fa593-58c6-48ec-9c77-483a913bd363 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-be6fa593-58c6-48ec-9c77-483a913bd363 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-be6fa593-58c6-48ec-9c77-483a913bd363 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-be6fa593-58c6-48ec-9c77-483a913bd363 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-be6fa593-58c6-48ec-9c77-483a913bd363 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-be6fa593-58c6-48ec-9c77-483a913bd363 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-be6fa593-58c6-48ec-9c77-483a913bd363 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-be6fa593-58c6-48ec-9c77-483a913bd363 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-be6fa593-58c6-48ec-9c77-483a913bd363 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-be6fa593-58c6-48ec-9c77-483a913bd363 div.sk-estimator:hover {background-color: #d4ebff;}#sk-be6fa593-58c6-48ec-9c77-483a913bd363 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-be6fa593-58c6-48ec-9c77-483a913bd363 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-be6fa593-58c6-48ec-9c77-483a913bd363 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-be6fa593-58c6-48ec-9c77-483a913bd363 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-be6fa593-58c6-48ec-9c77-483a913bd363 div.sk-item {z-index: 1;}#sk-be6fa593-58c6-48ec-9c77-483a913bd363 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-be6fa593-58c6-48ec-9c77-483a913bd363 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-be6fa593-58c6-48ec-9c77-483a913bd363 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-be6fa593-58c6-48ec-9c77-483a913bd363 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-be6fa593-58c6-48ec-9c77-483a913bd363 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-be6fa593-58c6-48ec-9c77-483a913bd363 div.sk-parallel-item:only-child::after {width: 0;}#sk-be6fa593-58c6-48ec-9c77-483a913bd363 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-be6fa593-58c6-48ec-9c77-483a913bd363 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-be6fa593-58c6-48ec-9c77-483a913bd363 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-be6fa593-58c6-48ec-9c77-483a913bd363 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-be6fa593-58c6-48ec-9c77-483a913bd363 div.sk-text-repr-fallback {display: none;}</style><div id="sk-be6fa593-58c6-48ec-9c77-483a913bd363" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6f7cb831-5587-454e-b668-f5d9d864b1a3" type="checkbox" ><label for="6f7cb831-5587-454e-b668-f5d9d864b1a3" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5c8cb6d1-d292-40a7-920e-6b3fcd534983" type="checkbox" ><label for="5c8cb6d1-d292-40a7-920e-6b3fcd534983" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="27c1c039-cf34-474f-85fc-f4b725c5d5dc" type="checkbox" ><label for="27c1c039-cf34-474f-85fc-f4b725c5d5dc" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-8eceb2ce-e8aa-4d5f-9bf2-3624275b19b3 {color: black;background-color: white;}#sk-8eceb2ce-e8aa-4d5f-9bf2-3624275b19b3 pre{padding: 0;}#sk-8eceb2ce-e8aa-4d5f-9bf2-3624275b19b3 div.sk-toggleable {background-color: white;}#sk-8eceb2ce-e8aa-4d5f-9bf2-3624275b19b3 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-8eceb2ce-e8aa-4d5f-9bf2-3624275b19b3 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-8eceb2ce-e8aa-4d5f-9bf2-3624275b19b3 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-8eceb2ce-e8aa-4d5f-9bf2-3624275b19b3 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-8eceb2ce-e8aa-4d5f-9bf2-3624275b19b3 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-8eceb2ce-e8aa-4d5f-9bf2-3624275b19b3 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-8eceb2ce-e8aa-4d5f-9bf2-3624275b19b3 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-8eceb2ce-e8aa-4d5f-9bf2-3624275b19b3 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-8eceb2ce-e8aa-4d5f-9bf2-3624275b19b3 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-8eceb2ce-e8aa-4d5f-9bf2-3624275b19b3 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-8eceb2ce-e8aa-4d5f-9bf2-3624275b19b3 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-8eceb2ce-e8aa-4d5f-9bf2-3624275b19b3 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-8eceb2ce-e8aa-4d5f-9bf2-3624275b19b3 div.sk-estimator:hover {background-color: #d4ebff;}#sk-8eceb2ce-e8aa-4d5f-9bf2-3624275b19b3 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-8eceb2ce-e8aa-4d5f-9bf2-3624275b19b3 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-8eceb2ce-e8aa-4d5f-9bf2-3624275b19b3 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-8eceb2ce-e8aa-4d5f-9bf2-3624275b19b3 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-8eceb2ce-e8aa-4d5f-9bf2-3624275b19b3 div.sk-item {z-index: 1;}#sk-8eceb2ce-e8aa-4d5f-9bf2-3624275b19b3 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-8eceb2ce-e8aa-4d5f-9bf2-3624275b19b3 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-8eceb2ce-e8aa-4d5f-9bf2-3624275b19b3 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-8eceb2ce-e8aa-4d5f-9bf2-3624275b19b3 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-8eceb2ce-e8aa-4d5f-9bf2-3624275b19b3 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-8eceb2ce-e8aa-4d5f-9bf2-3624275b19b3 div.sk-parallel-item:only-child::after {width: 0;}#sk-8eceb2ce-e8aa-4d5f-9bf2-3624275b19b3 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-8eceb2ce-e8aa-4d5f-9bf2-3624275b19b3 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-8eceb2ce-e8aa-4d5f-9bf2-3624275b19b3 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-8eceb2ce-e8aa-4d5f-9bf2-3624275b19b3 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-8eceb2ce-e8aa-4d5f-9bf2-3624275b19b3 div.sk-text-repr-fallback {display: none;}</style><div id="sk-8eceb2ce-e8aa-4d5f-9bf2-3624275b19b3" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="78ff7aff-53af-4786-bf72-fe029917fa2e" type="checkbox" ><label for="78ff7aff-53af-4786-bf72-fe029917fa2e" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="51faeda3-6799-47d6-bff3-8c68b6b044ad" type="checkbox" ><label for="51faeda3-6799-47d6-bff3-8c68b6b044ad" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="db73fa1a-051a-4a2e-b61b-d51718d1e12c" type="checkbox" ><label for="db73fa1a-051a-4a2e-b61b-d51718d1e12c" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ef4575b4-b56d-4a8e-a186-91bcaa0db67b" type="checkbox" ><label for="ef4575b4-b56d-4a8e-a186-91bcaa0db67b" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-14afb85f-140f-4ff1-b905-60061cc32e33 {color: black;background-color: white;}#sk-14afb85f-140f-4ff1-b905-60061cc32e33 pre{padding: 0;}#sk-14afb85f-140f-4ff1-b905-60061cc32e33 div.sk-toggleable {background-color: white;}#sk-14afb85f-140f-4ff1-b905-60061cc32e33 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-14afb85f-140f-4ff1-b905-60061cc32e33 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-14afb85f-140f-4ff1-b905-60061cc32e33 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-14afb85f-140f-4ff1-b905-60061cc32e33 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-14afb85f-140f-4ff1-b905-60061cc32e33 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-14afb85f-140f-4ff1-b905-60061cc32e33 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-14afb85f-140f-4ff1-b905-60061cc32e33 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-14afb85f-140f-4ff1-b905-60061cc32e33 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-14afb85f-140f-4ff1-b905-60061cc32e33 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-14afb85f-140f-4ff1-b905-60061cc32e33 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-14afb85f-140f-4ff1-b905-60061cc32e33 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-14afb85f-140f-4ff1-b905-60061cc32e33 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-14afb85f-140f-4ff1-b905-60061cc32e33 div.sk-estimator:hover {background-color: #d4ebff;}#sk-14afb85f-140f-4ff1-b905-60061cc32e33 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-14afb85f-140f-4ff1-b905-60061cc32e33 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-14afb85f-140f-4ff1-b905-60061cc32e33 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-14afb85f-140f-4ff1-b905-60061cc32e33 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-14afb85f-140f-4ff1-b905-60061cc32e33 div.sk-item {z-index: 1;}#sk-14afb85f-140f-4ff1-b905-60061cc32e33 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-14afb85f-140f-4ff1-b905-60061cc32e33 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-14afb85f-140f-4ff1-b905-60061cc32e33 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-14afb85f-140f-4ff1-b905-60061cc32e33 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-14afb85f-140f-4ff1-b905-60061cc32e33 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-14afb85f-140f-4ff1-b905-60061cc32e33 div.sk-parallel-item:only-child::after {width: 0;}#sk-14afb85f-140f-4ff1-b905-60061cc32e33 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-14afb85f-140f-4ff1-b905-60061cc32e33 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-14afb85f-140f-4ff1-b905-60061cc32e33 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-14afb85f-140f-4ff1-b905-60061cc32e33 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-14afb85f-140f-4ff1-b905-60061cc32e33 div.sk-text-repr-fallback {display: none;}</style><div id="sk-14afb85f-140f-4ff1-b905-60061cc32e33" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1e211c52-6c8d-41cb-854a-bee0889931bd" type="checkbox" ><label for="1e211c52-6c8d-41cb-854a-bee0889931bd" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2f67d1fa-65cf-46c3-9244-4ef11f541c4d" type="checkbox" ><label for="2f67d1fa-65cf-46c3-9244-4ef11f541c4d" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="db1251bd-f603-46ca-83d9-1f230fb04351" type="checkbox" ><label for="db1251bd-f603-46ca-83d9-1f230fb04351" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-4e126e51-28d6-4234-a64e-7c762e7d8f9f {color: black;background-color: white;}#sk-4e126e51-28d6-4234-a64e-7c762e7d8f9f pre{padding: 0;}#sk-4e126e51-28d6-4234-a64e-7c762e7d8f9f div.sk-toggleable {background-color: white;}#sk-4e126e51-28d6-4234-a64e-7c762e7d8f9f label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-4e126e51-28d6-4234-a64e-7c762e7d8f9f label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-4e126e51-28d6-4234-a64e-7c762e7d8f9f label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-4e126e51-28d6-4234-a64e-7c762e7d8f9f div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-4e126e51-28d6-4234-a64e-7c762e7d8f9f div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-4e126e51-28d6-4234-a64e-7c762e7d8f9f div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-4e126e51-28d6-4234-a64e-7c762e7d8f9f input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-4e126e51-28d6-4234-a64e-7c762e7d8f9f input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-4e126e51-28d6-4234-a64e-7c762e7d8f9f div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-4e126e51-28d6-4234-a64e-7c762e7d8f9f div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-4e126e51-28d6-4234-a64e-7c762e7d8f9f input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-4e126e51-28d6-4234-a64e-7c762e7d8f9f div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-4e126e51-28d6-4234-a64e-7c762e7d8f9f div.sk-estimator:hover {background-color: #d4ebff;}#sk-4e126e51-28d6-4234-a64e-7c762e7d8f9f div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-4e126e51-28d6-4234-a64e-7c762e7d8f9f div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-4e126e51-28d6-4234-a64e-7c762e7d8f9f div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-4e126e51-28d6-4234-a64e-7c762e7d8f9f div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-4e126e51-28d6-4234-a64e-7c762e7d8f9f div.sk-item {z-index: 1;}#sk-4e126e51-28d6-4234-a64e-7c762e7d8f9f div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-4e126e51-28d6-4234-a64e-7c762e7d8f9f div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-4e126e51-28d6-4234-a64e-7c762e7d8f9f div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-4e126e51-28d6-4234-a64e-7c762e7d8f9f div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-4e126e51-28d6-4234-a64e-7c762e7d8f9f div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-4e126e51-28d6-4234-a64e-7c762e7d8f9f div.sk-parallel-item:only-child::after {width: 0;}#sk-4e126e51-28d6-4234-a64e-7c762e7d8f9f div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-4e126e51-28d6-4234-a64e-7c762e7d8f9f div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-4e126e51-28d6-4234-a64e-7c762e7d8f9f div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-4e126e51-28d6-4234-a64e-7c762e7d8f9f div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-4e126e51-28d6-4234-a64e-7c762e7d8f9f div.sk-text-repr-fallback {display: none;}</style><div id="sk-4e126e51-28d6-4234-a64e-7c762e7d8f9f" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9344e2ec-dc32-48b4-bc4e-961950b08756" type="checkbox" ><label for="9344e2ec-dc32-48b4-bc4e-961950b08756" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2e40906a-9f99-4447-b7ce-b844c09417ce" type="checkbox" ><label for="2e40906a-9f99-4447-b7ce-b844c09417ce" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="88a15470-2b12-4e96-b6e5-f3a104499b93" type="checkbox" ><label for="88a15470-2b12-4e96-b6e5-f3a104499b93" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="aafab507-9c39-4024-a408-4cd4b9f98481" type="checkbox" ><label for="aafab507-9c39-4024-a408-4cd4b9f98481" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cf58ecf8-c83c-49d1-9ae5-034e8cc2aec9" type="checkbox" ><label for="cf58ecf8-c83c-49d1-9ae5-034e8cc2aec9" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="af9e9418-cc8b-462a-bc96-6631bcbb57e8" type="checkbox" ><label for="af9e9418-cc8b-462a-bc96-6631bcbb57e8" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3ffc2802-d453-49dd-9303-c285a6fdfeb4" type="checkbox" ><label for="3ffc2802-d453-49dd-9303-c285a6fdfeb4" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="398e2877-3057-4ae7-8daa-eebd9c7052cd" type="checkbox" ><label for="398e2877-3057-4ae7-8daa-eebd9c7052cd" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c22cf0c9-97b0-4795-8047-9b49e658defe" type="checkbox" ><label for="c22cf0c9-97b0-4795-8047-9b49e658defe" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-c4c07bdc-7348-44ba-9886-db2657f2f766 {color: black;background-color: white;}#sk-c4c07bdc-7348-44ba-9886-db2657f2f766 pre{padding: 0;}#sk-c4c07bdc-7348-44ba-9886-db2657f2f766 div.sk-toggleable {background-color: white;}#sk-c4c07bdc-7348-44ba-9886-db2657f2f766 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-c4c07bdc-7348-44ba-9886-db2657f2f766 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-c4c07bdc-7348-44ba-9886-db2657f2f766 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-c4c07bdc-7348-44ba-9886-db2657f2f766 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-c4c07bdc-7348-44ba-9886-db2657f2f766 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-c4c07bdc-7348-44ba-9886-db2657f2f766 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-c4c07bdc-7348-44ba-9886-db2657f2f766 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-c4c07bdc-7348-44ba-9886-db2657f2f766 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-c4c07bdc-7348-44ba-9886-db2657f2f766 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-c4c07bdc-7348-44ba-9886-db2657f2f766 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-c4c07bdc-7348-44ba-9886-db2657f2f766 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-c4c07bdc-7348-44ba-9886-db2657f2f766 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-c4c07bdc-7348-44ba-9886-db2657f2f766 div.sk-estimator:hover {background-color: #d4ebff;}#sk-c4c07bdc-7348-44ba-9886-db2657f2f766 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-c4c07bdc-7348-44ba-9886-db2657f2f766 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-c4c07bdc-7348-44ba-9886-db2657f2f766 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-c4c07bdc-7348-44ba-9886-db2657f2f766 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-c4c07bdc-7348-44ba-9886-db2657f2f766 div.sk-item {z-index: 1;}#sk-c4c07bdc-7348-44ba-9886-db2657f2f766 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-c4c07bdc-7348-44ba-9886-db2657f2f766 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-c4c07bdc-7348-44ba-9886-db2657f2f766 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-c4c07bdc-7348-44ba-9886-db2657f2f766 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-c4c07bdc-7348-44ba-9886-db2657f2f766 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-c4c07bdc-7348-44ba-9886-db2657f2f766 div.sk-parallel-item:only-child::after {width: 0;}#sk-c4c07bdc-7348-44ba-9886-db2657f2f766 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-c4c07bdc-7348-44ba-9886-db2657f2f766 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-c4c07bdc-7348-44ba-9886-db2657f2f766 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-c4c07bdc-7348-44ba-9886-db2657f2f766 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-c4c07bdc-7348-44ba-9886-db2657f2f766 div.sk-text-repr-fallback {display: none;}</style><div id="sk-c4c07bdc-7348-44ba-9886-db2657f2f766" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="47504a39-4256-40da-99f2-b3cf2e52e8ca" type="checkbox" ><label for="47504a39-4256-40da-99f2-b3cf2e52e8ca" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9ebfd4ec-628f-4676-ba69-6d6c1a2b311d" type="checkbox" ><label for="9ebfd4ec-628f-4676-ba69-6d6c1a2b311d" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b582d6a7-50dc-4a7d-8cb2-77be8309a727" type="checkbox" ><label for="b582d6a7-50dc-4a7d-8cb2-77be8309a727" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8177b9d6-a0d7-4b51-966c-5acbb463e87f" type="checkbox" ><label for="8177b9d6-a0d7-4b51-966c-5acbb463e87f" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ea7172c2-c91f-49d1-a41a-afdeb036bc58" type="checkbox" ><label for="ea7172c2-c91f-49d1-a41a-afdeb036bc58" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b937e2ac-d1a0-4e6f-b520-e008f9eb257f" type="checkbox" ><label for="b937e2ac-d1a0-4e6f-b520-e008f9eb257f" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="eabc7d8d-e10f-4b3d-8745-5468e25e7bd8" type="checkbox" ><label for="eabc7d8d-e10f-4b3d-8745-5468e25e7bd8" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5aa7a449-bfb3-44c5-afb6-74651fd2fac4" type="checkbox" ><label for="5aa7a449-bfb3-44c5-afb6-74651fd2fac4" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="dfc4a8bd-380d-44f4-a0d2-f67b1e23b786" type="checkbox" ><label for="dfc4a8bd-380d-44f4-a0d2-f67b1e23b786" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.133 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
