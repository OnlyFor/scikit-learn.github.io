
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-cfb9fbdc-65db-4966-8a08-833f79a970cd {color: black;background-color: white;}#sk-cfb9fbdc-65db-4966-8a08-833f79a970cd pre{padding: 0;}#sk-cfb9fbdc-65db-4966-8a08-833f79a970cd div.sk-toggleable {background-color: white;}#sk-cfb9fbdc-65db-4966-8a08-833f79a970cd label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-cfb9fbdc-65db-4966-8a08-833f79a970cd label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-cfb9fbdc-65db-4966-8a08-833f79a970cd label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-cfb9fbdc-65db-4966-8a08-833f79a970cd div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-cfb9fbdc-65db-4966-8a08-833f79a970cd div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-cfb9fbdc-65db-4966-8a08-833f79a970cd div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-cfb9fbdc-65db-4966-8a08-833f79a970cd input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-cfb9fbdc-65db-4966-8a08-833f79a970cd input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-cfb9fbdc-65db-4966-8a08-833f79a970cd div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-cfb9fbdc-65db-4966-8a08-833f79a970cd div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-cfb9fbdc-65db-4966-8a08-833f79a970cd input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-cfb9fbdc-65db-4966-8a08-833f79a970cd div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-cfb9fbdc-65db-4966-8a08-833f79a970cd div.sk-estimator:hover {background-color: #d4ebff;}#sk-cfb9fbdc-65db-4966-8a08-833f79a970cd div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-cfb9fbdc-65db-4966-8a08-833f79a970cd div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-cfb9fbdc-65db-4966-8a08-833f79a970cd div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-cfb9fbdc-65db-4966-8a08-833f79a970cd div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-cfb9fbdc-65db-4966-8a08-833f79a970cd div.sk-item {z-index: 1;}#sk-cfb9fbdc-65db-4966-8a08-833f79a970cd div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-cfb9fbdc-65db-4966-8a08-833f79a970cd div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-cfb9fbdc-65db-4966-8a08-833f79a970cd div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-cfb9fbdc-65db-4966-8a08-833f79a970cd div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-cfb9fbdc-65db-4966-8a08-833f79a970cd div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-cfb9fbdc-65db-4966-8a08-833f79a970cd div.sk-parallel-item:only-child::after {width: 0;}#sk-cfb9fbdc-65db-4966-8a08-833f79a970cd div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-cfb9fbdc-65db-4966-8a08-833f79a970cd div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-cfb9fbdc-65db-4966-8a08-833f79a970cd div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-cfb9fbdc-65db-4966-8a08-833f79a970cd div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-cfb9fbdc-65db-4966-8a08-833f79a970cd div.sk-text-repr-fallback {display: none;}</style><div id="sk-cfb9fbdc-65db-4966-8a08-833f79a970cd" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4ef62c5a-bab2-45dc-8bd2-c1096ea68418" type="checkbox" ><label for="4ef62c5a-bab2-45dc-8bd2-c1096ea68418" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="75b0ba7b-6852-4e42-a812-56be359fcad5" type="checkbox" ><label for="75b0ba7b-6852-4e42-a812-56be359fcad5" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="00152664-b461-4aac-b816-811890aa877e" type="checkbox" ><label for="00152664-b461-4aac-b816-811890aa877e" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-a0f89e66-1313-4e7e-b5e1-55dea07aa910 {color: black;background-color: white;}#sk-a0f89e66-1313-4e7e-b5e1-55dea07aa910 pre{padding: 0;}#sk-a0f89e66-1313-4e7e-b5e1-55dea07aa910 div.sk-toggleable {background-color: white;}#sk-a0f89e66-1313-4e7e-b5e1-55dea07aa910 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-a0f89e66-1313-4e7e-b5e1-55dea07aa910 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-a0f89e66-1313-4e7e-b5e1-55dea07aa910 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-a0f89e66-1313-4e7e-b5e1-55dea07aa910 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-a0f89e66-1313-4e7e-b5e1-55dea07aa910 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-a0f89e66-1313-4e7e-b5e1-55dea07aa910 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-a0f89e66-1313-4e7e-b5e1-55dea07aa910 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-a0f89e66-1313-4e7e-b5e1-55dea07aa910 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-a0f89e66-1313-4e7e-b5e1-55dea07aa910 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-a0f89e66-1313-4e7e-b5e1-55dea07aa910 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-a0f89e66-1313-4e7e-b5e1-55dea07aa910 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-a0f89e66-1313-4e7e-b5e1-55dea07aa910 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-a0f89e66-1313-4e7e-b5e1-55dea07aa910 div.sk-estimator:hover {background-color: #d4ebff;}#sk-a0f89e66-1313-4e7e-b5e1-55dea07aa910 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-a0f89e66-1313-4e7e-b5e1-55dea07aa910 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-a0f89e66-1313-4e7e-b5e1-55dea07aa910 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-a0f89e66-1313-4e7e-b5e1-55dea07aa910 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-a0f89e66-1313-4e7e-b5e1-55dea07aa910 div.sk-item {z-index: 1;}#sk-a0f89e66-1313-4e7e-b5e1-55dea07aa910 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-a0f89e66-1313-4e7e-b5e1-55dea07aa910 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-a0f89e66-1313-4e7e-b5e1-55dea07aa910 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-a0f89e66-1313-4e7e-b5e1-55dea07aa910 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-a0f89e66-1313-4e7e-b5e1-55dea07aa910 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-a0f89e66-1313-4e7e-b5e1-55dea07aa910 div.sk-parallel-item:only-child::after {width: 0;}#sk-a0f89e66-1313-4e7e-b5e1-55dea07aa910 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-a0f89e66-1313-4e7e-b5e1-55dea07aa910 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-a0f89e66-1313-4e7e-b5e1-55dea07aa910 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-a0f89e66-1313-4e7e-b5e1-55dea07aa910 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-a0f89e66-1313-4e7e-b5e1-55dea07aa910 div.sk-text-repr-fallback {display: none;}</style><div id="sk-a0f89e66-1313-4e7e-b5e1-55dea07aa910" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3f574a00-7096-4866-b801-fb3f97b8212f" type="checkbox" ><label for="3f574a00-7096-4866-b801-fb3f97b8212f" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2cd0cfeb-2403-4404-abff-0ae6813bfdff" type="checkbox" ><label for="2cd0cfeb-2403-4404-abff-0ae6813bfdff" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e3567cb1-4b29-4c87-8662-af2aff094898" type="checkbox" ><label for="e3567cb1-4b29-4c87-8662-af2aff094898" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d54bdc4b-d11a-4277-9cae-839a4a077b0c" type="checkbox" ><label for="d54bdc4b-d11a-4277-9cae-839a4a077b0c" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-979159be-2ff4-44cc-89bb-b382f2122479 {color: black;background-color: white;}#sk-979159be-2ff4-44cc-89bb-b382f2122479 pre{padding: 0;}#sk-979159be-2ff4-44cc-89bb-b382f2122479 div.sk-toggleable {background-color: white;}#sk-979159be-2ff4-44cc-89bb-b382f2122479 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-979159be-2ff4-44cc-89bb-b382f2122479 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-979159be-2ff4-44cc-89bb-b382f2122479 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-979159be-2ff4-44cc-89bb-b382f2122479 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-979159be-2ff4-44cc-89bb-b382f2122479 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-979159be-2ff4-44cc-89bb-b382f2122479 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-979159be-2ff4-44cc-89bb-b382f2122479 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-979159be-2ff4-44cc-89bb-b382f2122479 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-979159be-2ff4-44cc-89bb-b382f2122479 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-979159be-2ff4-44cc-89bb-b382f2122479 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-979159be-2ff4-44cc-89bb-b382f2122479 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-979159be-2ff4-44cc-89bb-b382f2122479 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-979159be-2ff4-44cc-89bb-b382f2122479 div.sk-estimator:hover {background-color: #d4ebff;}#sk-979159be-2ff4-44cc-89bb-b382f2122479 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-979159be-2ff4-44cc-89bb-b382f2122479 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-979159be-2ff4-44cc-89bb-b382f2122479 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-979159be-2ff4-44cc-89bb-b382f2122479 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-979159be-2ff4-44cc-89bb-b382f2122479 div.sk-item {z-index: 1;}#sk-979159be-2ff4-44cc-89bb-b382f2122479 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-979159be-2ff4-44cc-89bb-b382f2122479 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-979159be-2ff4-44cc-89bb-b382f2122479 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-979159be-2ff4-44cc-89bb-b382f2122479 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-979159be-2ff4-44cc-89bb-b382f2122479 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-979159be-2ff4-44cc-89bb-b382f2122479 div.sk-parallel-item:only-child::after {width: 0;}#sk-979159be-2ff4-44cc-89bb-b382f2122479 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-979159be-2ff4-44cc-89bb-b382f2122479 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-979159be-2ff4-44cc-89bb-b382f2122479 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-979159be-2ff4-44cc-89bb-b382f2122479 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-979159be-2ff4-44cc-89bb-b382f2122479 div.sk-text-repr-fallback {display: none;}</style><div id="sk-979159be-2ff4-44cc-89bb-b382f2122479" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="83a7ef98-bf3a-4e03-81ab-f017ebd9dab0" type="checkbox" ><label for="83a7ef98-bf3a-4e03-81ab-f017ebd9dab0" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8e1174f3-ce77-4f89-861f-7d5f7aa00f22" type="checkbox" ><label for="8e1174f3-ce77-4f89-861f-7d5f7aa00f22" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="645e4128-d59b-4875-a8c4-c0a5426c6b79" type="checkbox" ><label for="645e4128-d59b-4875-a8c4-c0a5426c6b79" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-29b36e49-ad52-4dff-853c-39db354afe99 {color: black;background-color: white;}#sk-29b36e49-ad52-4dff-853c-39db354afe99 pre{padding: 0;}#sk-29b36e49-ad52-4dff-853c-39db354afe99 div.sk-toggleable {background-color: white;}#sk-29b36e49-ad52-4dff-853c-39db354afe99 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-29b36e49-ad52-4dff-853c-39db354afe99 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-29b36e49-ad52-4dff-853c-39db354afe99 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-29b36e49-ad52-4dff-853c-39db354afe99 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-29b36e49-ad52-4dff-853c-39db354afe99 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-29b36e49-ad52-4dff-853c-39db354afe99 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-29b36e49-ad52-4dff-853c-39db354afe99 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-29b36e49-ad52-4dff-853c-39db354afe99 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-29b36e49-ad52-4dff-853c-39db354afe99 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-29b36e49-ad52-4dff-853c-39db354afe99 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-29b36e49-ad52-4dff-853c-39db354afe99 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-29b36e49-ad52-4dff-853c-39db354afe99 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-29b36e49-ad52-4dff-853c-39db354afe99 div.sk-estimator:hover {background-color: #d4ebff;}#sk-29b36e49-ad52-4dff-853c-39db354afe99 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-29b36e49-ad52-4dff-853c-39db354afe99 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-29b36e49-ad52-4dff-853c-39db354afe99 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-29b36e49-ad52-4dff-853c-39db354afe99 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-29b36e49-ad52-4dff-853c-39db354afe99 div.sk-item {z-index: 1;}#sk-29b36e49-ad52-4dff-853c-39db354afe99 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-29b36e49-ad52-4dff-853c-39db354afe99 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-29b36e49-ad52-4dff-853c-39db354afe99 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-29b36e49-ad52-4dff-853c-39db354afe99 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-29b36e49-ad52-4dff-853c-39db354afe99 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-29b36e49-ad52-4dff-853c-39db354afe99 div.sk-parallel-item:only-child::after {width: 0;}#sk-29b36e49-ad52-4dff-853c-39db354afe99 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-29b36e49-ad52-4dff-853c-39db354afe99 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-29b36e49-ad52-4dff-853c-39db354afe99 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-29b36e49-ad52-4dff-853c-39db354afe99 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-29b36e49-ad52-4dff-853c-39db354afe99 div.sk-text-repr-fallback {display: none;}</style><div id="sk-29b36e49-ad52-4dff-853c-39db354afe99" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7ec1b0b8-b150-43e3-bcb0-9638efa38342" type="checkbox" ><label for="7ec1b0b8-b150-43e3-bcb0-9638efa38342" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6d30f834-8e3c-4497-93ff-0a2dc559439d" type="checkbox" ><label for="6d30f834-8e3c-4497-93ff-0a2dc559439d" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8edb7bee-fee0-4d23-82d7-f62f75cfad71" type="checkbox" ><label for="8edb7bee-fee0-4d23-82d7-f62f75cfad71" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e2af3997-6872-4bea-92d3-e0f94a1cdfd1" type="checkbox" ><label for="e2af3997-6872-4bea-92d3-e0f94a1cdfd1" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4e803d37-5058-4dd5-97e4-071094218d76" type="checkbox" ><label for="4e803d37-5058-4dd5-97e4-071094218d76" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d934a137-ce9a-4afa-b11c-1093a76e813f" type="checkbox" ><label for="d934a137-ce9a-4afa-b11c-1093a76e813f" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8dd70a23-9043-403d-a65f-ac6c3a1f5b2c" type="checkbox" ><label for="8dd70a23-9043-403d-a65f-ac6c3a1f5b2c" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="59f45ce0-f833-48bd-bbb2-b5c0748f6b2d" type="checkbox" ><label for="59f45ce0-f833-48bd-bbb2-b5c0748f6b2d" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7cde1b30-4993-4fc3-9dab-82763996afd2" type="checkbox" ><label for="7cde1b30-4993-4fc3-9dab-82763996afd2" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-c7b4cbf4-3f3f-44bb-9af0-cc2d993231a8 {color: black;background-color: white;}#sk-c7b4cbf4-3f3f-44bb-9af0-cc2d993231a8 pre{padding: 0;}#sk-c7b4cbf4-3f3f-44bb-9af0-cc2d993231a8 div.sk-toggleable {background-color: white;}#sk-c7b4cbf4-3f3f-44bb-9af0-cc2d993231a8 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-c7b4cbf4-3f3f-44bb-9af0-cc2d993231a8 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-c7b4cbf4-3f3f-44bb-9af0-cc2d993231a8 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-c7b4cbf4-3f3f-44bb-9af0-cc2d993231a8 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-c7b4cbf4-3f3f-44bb-9af0-cc2d993231a8 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-c7b4cbf4-3f3f-44bb-9af0-cc2d993231a8 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-c7b4cbf4-3f3f-44bb-9af0-cc2d993231a8 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-c7b4cbf4-3f3f-44bb-9af0-cc2d993231a8 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-c7b4cbf4-3f3f-44bb-9af0-cc2d993231a8 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-c7b4cbf4-3f3f-44bb-9af0-cc2d993231a8 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-c7b4cbf4-3f3f-44bb-9af0-cc2d993231a8 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-c7b4cbf4-3f3f-44bb-9af0-cc2d993231a8 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-c7b4cbf4-3f3f-44bb-9af0-cc2d993231a8 div.sk-estimator:hover {background-color: #d4ebff;}#sk-c7b4cbf4-3f3f-44bb-9af0-cc2d993231a8 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-c7b4cbf4-3f3f-44bb-9af0-cc2d993231a8 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-c7b4cbf4-3f3f-44bb-9af0-cc2d993231a8 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-c7b4cbf4-3f3f-44bb-9af0-cc2d993231a8 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-c7b4cbf4-3f3f-44bb-9af0-cc2d993231a8 div.sk-item {z-index: 1;}#sk-c7b4cbf4-3f3f-44bb-9af0-cc2d993231a8 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-c7b4cbf4-3f3f-44bb-9af0-cc2d993231a8 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-c7b4cbf4-3f3f-44bb-9af0-cc2d993231a8 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-c7b4cbf4-3f3f-44bb-9af0-cc2d993231a8 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-c7b4cbf4-3f3f-44bb-9af0-cc2d993231a8 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-c7b4cbf4-3f3f-44bb-9af0-cc2d993231a8 div.sk-parallel-item:only-child::after {width: 0;}#sk-c7b4cbf4-3f3f-44bb-9af0-cc2d993231a8 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-c7b4cbf4-3f3f-44bb-9af0-cc2d993231a8 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-c7b4cbf4-3f3f-44bb-9af0-cc2d993231a8 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-c7b4cbf4-3f3f-44bb-9af0-cc2d993231a8 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-c7b4cbf4-3f3f-44bb-9af0-cc2d993231a8 div.sk-text-repr-fallback {display: none;}</style><div id="sk-c7b4cbf4-3f3f-44bb-9af0-cc2d993231a8" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5f3fa0d2-7a22-4a1e-9b6b-2a6867bc275a" type="checkbox" ><label for="5f3fa0d2-7a22-4a1e-9b6b-2a6867bc275a" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7b86cdd3-3e79-4f0f-aae6-553fc5ed0162" type="checkbox" ><label for="7b86cdd3-3e79-4f0f-aae6-553fc5ed0162" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="085a122d-86b6-4fc6-aba5-e7bbd27c2fd9" type="checkbox" ><label for="085a122d-86b6-4fc6-aba5-e7bbd27c2fd9" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="27dfcedc-4ed9-48f0-aa07-81dac6f1f7fd" type="checkbox" ><label for="27dfcedc-4ed9-48f0-aa07-81dac6f1f7fd" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="706a9ce6-4a71-476d-9d19-9a9e44e4e193" type="checkbox" ><label for="706a9ce6-4a71-476d-9d19-9a9e44e4e193" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="520b8083-4092-4010-bccb-060ad09c2a6e" type="checkbox" ><label for="520b8083-4092-4010-bccb-060ad09c2a6e" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="adb16718-a0f1-4578-9b41-11bf5ef6a09a" type="checkbox" ><label for="adb16718-a0f1-4578-9b41-11bf5ef6a09a" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4cc8d2d6-7184-4f75-a5ff-aed877ed2681" type="checkbox" ><label for="4cc8d2d6-7184-4f75-a5ff-aed877ed2681" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cfbfbcfd-0fb3-4d34-8f8d-46abe9d5ff09" type="checkbox" ><label for="cfbfbcfd-0fb3-4d34-8f8d-46abe9d5ff09" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.079 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
