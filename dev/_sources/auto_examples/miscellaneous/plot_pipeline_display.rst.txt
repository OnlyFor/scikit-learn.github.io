
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-1621ec93-8e63-466c-8f69-7f7f9fe5547c {color: black;background-color: white;}#sk-1621ec93-8e63-466c-8f69-7f7f9fe5547c pre{padding: 0;}#sk-1621ec93-8e63-466c-8f69-7f7f9fe5547c div.sk-toggleable {background-color: white;}#sk-1621ec93-8e63-466c-8f69-7f7f9fe5547c label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-1621ec93-8e63-466c-8f69-7f7f9fe5547c label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-1621ec93-8e63-466c-8f69-7f7f9fe5547c label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-1621ec93-8e63-466c-8f69-7f7f9fe5547c div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-1621ec93-8e63-466c-8f69-7f7f9fe5547c div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-1621ec93-8e63-466c-8f69-7f7f9fe5547c div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-1621ec93-8e63-466c-8f69-7f7f9fe5547c input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-1621ec93-8e63-466c-8f69-7f7f9fe5547c input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-1621ec93-8e63-466c-8f69-7f7f9fe5547c div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-1621ec93-8e63-466c-8f69-7f7f9fe5547c div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-1621ec93-8e63-466c-8f69-7f7f9fe5547c input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-1621ec93-8e63-466c-8f69-7f7f9fe5547c div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-1621ec93-8e63-466c-8f69-7f7f9fe5547c div.sk-estimator:hover {background-color: #d4ebff;}#sk-1621ec93-8e63-466c-8f69-7f7f9fe5547c div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-1621ec93-8e63-466c-8f69-7f7f9fe5547c div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-1621ec93-8e63-466c-8f69-7f7f9fe5547c div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-1621ec93-8e63-466c-8f69-7f7f9fe5547c div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-1621ec93-8e63-466c-8f69-7f7f9fe5547c div.sk-item {z-index: 1;}#sk-1621ec93-8e63-466c-8f69-7f7f9fe5547c div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-1621ec93-8e63-466c-8f69-7f7f9fe5547c div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-1621ec93-8e63-466c-8f69-7f7f9fe5547c div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-1621ec93-8e63-466c-8f69-7f7f9fe5547c div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-1621ec93-8e63-466c-8f69-7f7f9fe5547c div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-1621ec93-8e63-466c-8f69-7f7f9fe5547c div.sk-parallel-item:only-child::after {width: 0;}#sk-1621ec93-8e63-466c-8f69-7f7f9fe5547c div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-1621ec93-8e63-466c-8f69-7f7f9fe5547c div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-1621ec93-8e63-466c-8f69-7f7f9fe5547c div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-1621ec93-8e63-466c-8f69-7f7f9fe5547c div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-1621ec93-8e63-466c-8f69-7f7f9fe5547c div.sk-text-repr-fallback {display: none;}</style><div id="sk-1621ec93-8e63-466c-8f69-7f7f9fe5547c" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="379faee4-32de-42a3-98a7-c16861f341f5" type="checkbox" ><label for="379faee4-32de-42a3-98a7-c16861f341f5" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bf00e54b-67cf-4481-a89b-208a4ca28e74" type="checkbox" ><label for="bf00e54b-67cf-4481-a89b-208a4ca28e74" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9a3882d2-87e9-4621-b3cf-36ec6f9df375" type="checkbox" ><label for="9a3882d2-87e9-4621-b3cf-36ec6f9df375" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-d56b9fe0-5a46-4b1f-aca4-d8db83322ed5 {color: black;background-color: white;}#sk-d56b9fe0-5a46-4b1f-aca4-d8db83322ed5 pre{padding: 0;}#sk-d56b9fe0-5a46-4b1f-aca4-d8db83322ed5 div.sk-toggleable {background-color: white;}#sk-d56b9fe0-5a46-4b1f-aca4-d8db83322ed5 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-d56b9fe0-5a46-4b1f-aca4-d8db83322ed5 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-d56b9fe0-5a46-4b1f-aca4-d8db83322ed5 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-d56b9fe0-5a46-4b1f-aca4-d8db83322ed5 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-d56b9fe0-5a46-4b1f-aca4-d8db83322ed5 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-d56b9fe0-5a46-4b1f-aca4-d8db83322ed5 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-d56b9fe0-5a46-4b1f-aca4-d8db83322ed5 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-d56b9fe0-5a46-4b1f-aca4-d8db83322ed5 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-d56b9fe0-5a46-4b1f-aca4-d8db83322ed5 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-d56b9fe0-5a46-4b1f-aca4-d8db83322ed5 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-d56b9fe0-5a46-4b1f-aca4-d8db83322ed5 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-d56b9fe0-5a46-4b1f-aca4-d8db83322ed5 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-d56b9fe0-5a46-4b1f-aca4-d8db83322ed5 div.sk-estimator:hover {background-color: #d4ebff;}#sk-d56b9fe0-5a46-4b1f-aca4-d8db83322ed5 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-d56b9fe0-5a46-4b1f-aca4-d8db83322ed5 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-d56b9fe0-5a46-4b1f-aca4-d8db83322ed5 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-d56b9fe0-5a46-4b1f-aca4-d8db83322ed5 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-d56b9fe0-5a46-4b1f-aca4-d8db83322ed5 div.sk-item {z-index: 1;}#sk-d56b9fe0-5a46-4b1f-aca4-d8db83322ed5 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-d56b9fe0-5a46-4b1f-aca4-d8db83322ed5 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-d56b9fe0-5a46-4b1f-aca4-d8db83322ed5 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-d56b9fe0-5a46-4b1f-aca4-d8db83322ed5 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-d56b9fe0-5a46-4b1f-aca4-d8db83322ed5 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-d56b9fe0-5a46-4b1f-aca4-d8db83322ed5 div.sk-parallel-item:only-child::after {width: 0;}#sk-d56b9fe0-5a46-4b1f-aca4-d8db83322ed5 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-d56b9fe0-5a46-4b1f-aca4-d8db83322ed5 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-d56b9fe0-5a46-4b1f-aca4-d8db83322ed5 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-d56b9fe0-5a46-4b1f-aca4-d8db83322ed5 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-d56b9fe0-5a46-4b1f-aca4-d8db83322ed5 div.sk-text-repr-fallback {display: none;}</style><div id="sk-d56b9fe0-5a46-4b1f-aca4-d8db83322ed5" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e581967a-a4b4-4fe3-93d3-e28fcf5ed2c2" type="checkbox" ><label for="e581967a-a4b4-4fe3-93d3-e28fcf5ed2c2" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c958ec66-8fd8-44a8-97bf-8c057113fc8a" type="checkbox" ><label for="c958ec66-8fd8-44a8-97bf-8c057113fc8a" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="57e59779-6ec4-4eb7-a5f2-e41f92b99b05" type="checkbox" ><label for="57e59779-6ec4-4eb7-a5f2-e41f92b99b05" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fe1758e7-7a48-4758-98b8-a3422a3a7efc" type="checkbox" ><label for="fe1758e7-7a48-4758-98b8-a3422a3a7efc" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-1ac2ca5c-48a3-466b-a277-88cf12c1781c {color: black;background-color: white;}#sk-1ac2ca5c-48a3-466b-a277-88cf12c1781c pre{padding: 0;}#sk-1ac2ca5c-48a3-466b-a277-88cf12c1781c div.sk-toggleable {background-color: white;}#sk-1ac2ca5c-48a3-466b-a277-88cf12c1781c label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-1ac2ca5c-48a3-466b-a277-88cf12c1781c label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-1ac2ca5c-48a3-466b-a277-88cf12c1781c label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-1ac2ca5c-48a3-466b-a277-88cf12c1781c div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-1ac2ca5c-48a3-466b-a277-88cf12c1781c div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-1ac2ca5c-48a3-466b-a277-88cf12c1781c div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-1ac2ca5c-48a3-466b-a277-88cf12c1781c input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-1ac2ca5c-48a3-466b-a277-88cf12c1781c input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-1ac2ca5c-48a3-466b-a277-88cf12c1781c div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-1ac2ca5c-48a3-466b-a277-88cf12c1781c div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-1ac2ca5c-48a3-466b-a277-88cf12c1781c input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-1ac2ca5c-48a3-466b-a277-88cf12c1781c div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-1ac2ca5c-48a3-466b-a277-88cf12c1781c div.sk-estimator:hover {background-color: #d4ebff;}#sk-1ac2ca5c-48a3-466b-a277-88cf12c1781c div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-1ac2ca5c-48a3-466b-a277-88cf12c1781c div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-1ac2ca5c-48a3-466b-a277-88cf12c1781c div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-1ac2ca5c-48a3-466b-a277-88cf12c1781c div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-1ac2ca5c-48a3-466b-a277-88cf12c1781c div.sk-item {z-index: 1;}#sk-1ac2ca5c-48a3-466b-a277-88cf12c1781c div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-1ac2ca5c-48a3-466b-a277-88cf12c1781c div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-1ac2ca5c-48a3-466b-a277-88cf12c1781c div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-1ac2ca5c-48a3-466b-a277-88cf12c1781c div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-1ac2ca5c-48a3-466b-a277-88cf12c1781c div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-1ac2ca5c-48a3-466b-a277-88cf12c1781c div.sk-parallel-item:only-child::after {width: 0;}#sk-1ac2ca5c-48a3-466b-a277-88cf12c1781c div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-1ac2ca5c-48a3-466b-a277-88cf12c1781c div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-1ac2ca5c-48a3-466b-a277-88cf12c1781c div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-1ac2ca5c-48a3-466b-a277-88cf12c1781c div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-1ac2ca5c-48a3-466b-a277-88cf12c1781c div.sk-text-repr-fallback {display: none;}</style><div id="sk-1ac2ca5c-48a3-466b-a277-88cf12c1781c" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f5978bb8-da32-46af-bc33-ebe614004002" type="checkbox" ><label for="f5978bb8-da32-46af-bc33-ebe614004002" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="269814f9-b6b0-4693-a551-9eb258856c91" type="checkbox" ><label for="269814f9-b6b0-4693-a551-9eb258856c91" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a5ed3f09-59ab-47f0-97aa-2f7fbba4a4fb" type="checkbox" ><label for="a5ed3f09-59ab-47f0-97aa-2f7fbba4a4fb" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-6ed752a9-3e12-4fb9-b992-acdeebc218e7 {color: black;background-color: white;}#sk-6ed752a9-3e12-4fb9-b992-acdeebc218e7 pre{padding: 0;}#sk-6ed752a9-3e12-4fb9-b992-acdeebc218e7 div.sk-toggleable {background-color: white;}#sk-6ed752a9-3e12-4fb9-b992-acdeebc218e7 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-6ed752a9-3e12-4fb9-b992-acdeebc218e7 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-6ed752a9-3e12-4fb9-b992-acdeebc218e7 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-6ed752a9-3e12-4fb9-b992-acdeebc218e7 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-6ed752a9-3e12-4fb9-b992-acdeebc218e7 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-6ed752a9-3e12-4fb9-b992-acdeebc218e7 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-6ed752a9-3e12-4fb9-b992-acdeebc218e7 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-6ed752a9-3e12-4fb9-b992-acdeebc218e7 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-6ed752a9-3e12-4fb9-b992-acdeebc218e7 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-6ed752a9-3e12-4fb9-b992-acdeebc218e7 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-6ed752a9-3e12-4fb9-b992-acdeebc218e7 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-6ed752a9-3e12-4fb9-b992-acdeebc218e7 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-6ed752a9-3e12-4fb9-b992-acdeebc218e7 div.sk-estimator:hover {background-color: #d4ebff;}#sk-6ed752a9-3e12-4fb9-b992-acdeebc218e7 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-6ed752a9-3e12-4fb9-b992-acdeebc218e7 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-6ed752a9-3e12-4fb9-b992-acdeebc218e7 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-6ed752a9-3e12-4fb9-b992-acdeebc218e7 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-6ed752a9-3e12-4fb9-b992-acdeebc218e7 div.sk-item {z-index: 1;}#sk-6ed752a9-3e12-4fb9-b992-acdeebc218e7 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-6ed752a9-3e12-4fb9-b992-acdeebc218e7 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-6ed752a9-3e12-4fb9-b992-acdeebc218e7 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-6ed752a9-3e12-4fb9-b992-acdeebc218e7 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-6ed752a9-3e12-4fb9-b992-acdeebc218e7 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-6ed752a9-3e12-4fb9-b992-acdeebc218e7 div.sk-parallel-item:only-child::after {width: 0;}#sk-6ed752a9-3e12-4fb9-b992-acdeebc218e7 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-6ed752a9-3e12-4fb9-b992-acdeebc218e7 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-6ed752a9-3e12-4fb9-b992-acdeebc218e7 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-6ed752a9-3e12-4fb9-b992-acdeebc218e7 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-6ed752a9-3e12-4fb9-b992-acdeebc218e7 div.sk-text-repr-fallback {display: none;}</style><div id="sk-6ed752a9-3e12-4fb9-b992-acdeebc218e7" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6075cf71-df30-42fa-83d4-09506c09c081" type="checkbox" ><label for="6075cf71-df30-42fa-83d4-09506c09c081" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="930edbf7-88e6-4ef0-b96a-5a7e12d9cb36" type="checkbox" ><label for="930edbf7-88e6-4ef0-b96a-5a7e12d9cb36" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c280a9a3-9d0a-4539-b8a7-87c717f6b20b" type="checkbox" ><label for="c280a9a3-9d0a-4539-b8a7-87c717f6b20b" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5cd29130-69bc-4456-b206-a2fd7b729204" type="checkbox" ><label for="5cd29130-69bc-4456-b206-a2fd7b729204" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="abd62723-917d-41db-8150-f7f62373b588" type="checkbox" ><label for="abd62723-917d-41db-8150-f7f62373b588" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="df378d27-9189-4f42-8770-604334c0562f" type="checkbox" ><label for="df378d27-9189-4f42-8770-604334c0562f" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="249f22c5-f571-4a39-9fe8-e11f5fcd7513" type="checkbox" ><label for="249f22c5-f571-4a39-9fe8-e11f5fcd7513" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="861ff9a7-1d0f-4f48-adaa-bc5afb53bb93" type="checkbox" ><label for="861ff9a7-1d0f-4f48-adaa-bc5afb53bb93" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7064ee25-c832-4687-8a47-ebf8d1208e14" type="checkbox" ><label for="7064ee25-c832-4687-8a47-ebf8d1208e14" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-0b7b9434-35da-4393-a94d-766668209a2e {color: black;background-color: white;}#sk-0b7b9434-35da-4393-a94d-766668209a2e pre{padding: 0;}#sk-0b7b9434-35da-4393-a94d-766668209a2e div.sk-toggleable {background-color: white;}#sk-0b7b9434-35da-4393-a94d-766668209a2e label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-0b7b9434-35da-4393-a94d-766668209a2e label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-0b7b9434-35da-4393-a94d-766668209a2e label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-0b7b9434-35da-4393-a94d-766668209a2e div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-0b7b9434-35da-4393-a94d-766668209a2e div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-0b7b9434-35da-4393-a94d-766668209a2e div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-0b7b9434-35da-4393-a94d-766668209a2e input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-0b7b9434-35da-4393-a94d-766668209a2e input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-0b7b9434-35da-4393-a94d-766668209a2e div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-0b7b9434-35da-4393-a94d-766668209a2e div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-0b7b9434-35da-4393-a94d-766668209a2e input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-0b7b9434-35da-4393-a94d-766668209a2e div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-0b7b9434-35da-4393-a94d-766668209a2e div.sk-estimator:hover {background-color: #d4ebff;}#sk-0b7b9434-35da-4393-a94d-766668209a2e div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-0b7b9434-35da-4393-a94d-766668209a2e div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-0b7b9434-35da-4393-a94d-766668209a2e div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-0b7b9434-35da-4393-a94d-766668209a2e div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-0b7b9434-35da-4393-a94d-766668209a2e div.sk-item {z-index: 1;}#sk-0b7b9434-35da-4393-a94d-766668209a2e div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-0b7b9434-35da-4393-a94d-766668209a2e div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-0b7b9434-35da-4393-a94d-766668209a2e div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-0b7b9434-35da-4393-a94d-766668209a2e div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-0b7b9434-35da-4393-a94d-766668209a2e div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-0b7b9434-35da-4393-a94d-766668209a2e div.sk-parallel-item:only-child::after {width: 0;}#sk-0b7b9434-35da-4393-a94d-766668209a2e div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-0b7b9434-35da-4393-a94d-766668209a2e div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-0b7b9434-35da-4393-a94d-766668209a2e div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-0b7b9434-35da-4393-a94d-766668209a2e div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-0b7b9434-35da-4393-a94d-766668209a2e div.sk-text-repr-fallback {display: none;}</style><div id="sk-0b7b9434-35da-4393-a94d-766668209a2e" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cf1c8f61-d131-4bb5-b238-6b7613417503" type="checkbox" ><label for="cf1c8f61-d131-4bb5-b238-6b7613417503" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5d8b98ae-0dba-4d08-8bb3-f0dfadbb3b1b" type="checkbox" ><label for="5d8b98ae-0dba-4d08-8bb3-f0dfadbb3b1b" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="876e341d-b8a8-45fe-9826-8b6f95f98905" type="checkbox" ><label for="876e341d-b8a8-45fe-9826-8b6f95f98905" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5a162792-d23b-4cce-9f51-fb83b45b19a6" type="checkbox" ><label for="5a162792-d23b-4cce-9f51-fb83b45b19a6" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8b59adab-1404-41ab-8009-de353b72323f" type="checkbox" ><label for="8b59adab-1404-41ab-8009-de353b72323f" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ec85b1c1-0213-43bb-86fa-701951e3b422" type="checkbox" ><label for="ec85b1c1-0213-43bb-86fa-701951e3b422" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="20c18bf8-7f68-4384-bbd0-91864c44c006" type="checkbox" ><label for="20c18bf8-7f68-4384-bbd0-91864c44c006" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="527da617-9aad-4ae7-9665-3e58cc447c37" type="checkbox" ><label for="527da617-9aad-4ae7-9665-3e58cc447c37" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f34f4713-ac62-48bd-afa4-e51c7b6c6312" type="checkbox" ><label for="f34f4713-ac62-48bd-afa4-e51c7b6c6312" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.074 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
