
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-b9baae94-1d3b-436e-8fb8-d182764093e7 {color: black;background-color: white;}#sk-b9baae94-1d3b-436e-8fb8-d182764093e7 pre{padding: 0;}#sk-b9baae94-1d3b-436e-8fb8-d182764093e7 div.sk-toggleable {background-color: white;}#sk-b9baae94-1d3b-436e-8fb8-d182764093e7 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-b9baae94-1d3b-436e-8fb8-d182764093e7 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-b9baae94-1d3b-436e-8fb8-d182764093e7 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-b9baae94-1d3b-436e-8fb8-d182764093e7 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-b9baae94-1d3b-436e-8fb8-d182764093e7 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-b9baae94-1d3b-436e-8fb8-d182764093e7 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-b9baae94-1d3b-436e-8fb8-d182764093e7 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-b9baae94-1d3b-436e-8fb8-d182764093e7 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-b9baae94-1d3b-436e-8fb8-d182764093e7 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b9baae94-1d3b-436e-8fb8-d182764093e7 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b9baae94-1d3b-436e-8fb8-d182764093e7 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-b9baae94-1d3b-436e-8fb8-d182764093e7 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-b9baae94-1d3b-436e-8fb8-d182764093e7 div.sk-estimator:hover {background-color: #d4ebff;}#sk-b9baae94-1d3b-436e-8fb8-d182764093e7 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-b9baae94-1d3b-436e-8fb8-d182764093e7 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-b9baae94-1d3b-436e-8fb8-d182764093e7 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b9baae94-1d3b-436e-8fb8-d182764093e7 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-b9baae94-1d3b-436e-8fb8-d182764093e7 div.sk-item {z-index: 1;}#sk-b9baae94-1d3b-436e-8fb8-d182764093e7 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-b9baae94-1d3b-436e-8fb8-d182764093e7 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b9baae94-1d3b-436e-8fb8-d182764093e7 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-b9baae94-1d3b-436e-8fb8-d182764093e7 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-b9baae94-1d3b-436e-8fb8-d182764093e7 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-b9baae94-1d3b-436e-8fb8-d182764093e7 div.sk-parallel-item:only-child::after {width: 0;}#sk-b9baae94-1d3b-436e-8fb8-d182764093e7 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-b9baae94-1d3b-436e-8fb8-d182764093e7 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-b9baae94-1d3b-436e-8fb8-d182764093e7 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-b9baae94-1d3b-436e-8fb8-d182764093e7 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-b9baae94-1d3b-436e-8fb8-d182764093e7 div.sk-text-repr-fallback {display: none;}</style><div id="sk-b9baae94-1d3b-436e-8fb8-d182764093e7" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9ae28e31-e2e7-4041-9284-ab2d22830a6c" type="checkbox" ><label for="9ae28e31-e2e7-4041-9284-ab2d22830a6c" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="51a02466-35ce-4c6b-8889-fa7a6d970fce" type="checkbox" ><label for="51a02466-35ce-4c6b-8889-fa7a6d970fce" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5631057d-42a0-493c-862c-ed681517b26a" type="checkbox" ><label for="5631057d-42a0-493c-862c-ed681517b26a" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-58610928-f1fd-4518-acbc-ac972c850ff6 {color: black;background-color: white;}#sk-58610928-f1fd-4518-acbc-ac972c850ff6 pre{padding: 0;}#sk-58610928-f1fd-4518-acbc-ac972c850ff6 div.sk-toggleable {background-color: white;}#sk-58610928-f1fd-4518-acbc-ac972c850ff6 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-58610928-f1fd-4518-acbc-ac972c850ff6 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-58610928-f1fd-4518-acbc-ac972c850ff6 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-58610928-f1fd-4518-acbc-ac972c850ff6 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-58610928-f1fd-4518-acbc-ac972c850ff6 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-58610928-f1fd-4518-acbc-ac972c850ff6 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-58610928-f1fd-4518-acbc-ac972c850ff6 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-58610928-f1fd-4518-acbc-ac972c850ff6 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-58610928-f1fd-4518-acbc-ac972c850ff6 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-58610928-f1fd-4518-acbc-ac972c850ff6 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-58610928-f1fd-4518-acbc-ac972c850ff6 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-58610928-f1fd-4518-acbc-ac972c850ff6 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-58610928-f1fd-4518-acbc-ac972c850ff6 div.sk-estimator:hover {background-color: #d4ebff;}#sk-58610928-f1fd-4518-acbc-ac972c850ff6 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-58610928-f1fd-4518-acbc-ac972c850ff6 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-58610928-f1fd-4518-acbc-ac972c850ff6 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-58610928-f1fd-4518-acbc-ac972c850ff6 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-58610928-f1fd-4518-acbc-ac972c850ff6 div.sk-item {z-index: 1;}#sk-58610928-f1fd-4518-acbc-ac972c850ff6 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-58610928-f1fd-4518-acbc-ac972c850ff6 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-58610928-f1fd-4518-acbc-ac972c850ff6 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-58610928-f1fd-4518-acbc-ac972c850ff6 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-58610928-f1fd-4518-acbc-ac972c850ff6 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-58610928-f1fd-4518-acbc-ac972c850ff6 div.sk-parallel-item:only-child::after {width: 0;}#sk-58610928-f1fd-4518-acbc-ac972c850ff6 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-58610928-f1fd-4518-acbc-ac972c850ff6 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-58610928-f1fd-4518-acbc-ac972c850ff6 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-58610928-f1fd-4518-acbc-ac972c850ff6 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-58610928-f1fd-4518-acbc-ac972c850ff6 div.sk-text-repr-fallback {display: none;}</style><div id="sk-58610928-f1fd-4518-acbc-ac972c850ff6" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="06f1c6d7-19c8-482a-b1ab-6b1cedf99627" type="checkbox" ><label for="06f1c6d7-19c8-482a-b1ab-6b1cedf99627" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="247dd6a7-bbbf-43d3-bbb2-563820322376" type="checkbox" ><label for="247dd6a7-bbbf-43d3-bbb2-563820322376" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="430709ae-8772-4922-ab52-73c960091ed6" type="checkbox" ><label for="430709ae-8772-4922-ab52-73c960091ed6" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="195e7954-572b-4f74-80d9-fd8e451da039" type="checkbox" ><label for="195e7954-572b-4f74-80d9-fd8e451da039" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-639e7c73-3263-4209-93b9-e808c9795a63 {color: black;background-color: white;}#sk-639e7c73-3263-4209-93b9-e808c9795a63 pre{padding: 0;}#sk-639e7c73-3263-4209-93b9-e808c9795a63 div.sk-toggleable {background-color: white;}#sk-639e7c73-3263-4209-93b9-e808c9795a63 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-639e7c73-3263-4209-93b9-e808c9795a63 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-639e7c73-3263-4209-93b9-e808c9795a63 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-639e7c73-3263-4209-93b9-e808c9795a63 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-639e7c73-3263-4209-93b9-e808c9795a63 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-639e7c73-3263-4209-93b9-e808c9795a63 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-639e7c73-3263-4209-93b9-e808c9795a63 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-639e7c73-3263-4209-93b9-e808c9795a63 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-639e7c73-3263-4209-93b9-e808c9795a63 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-639e7c73-3263-4209-93b9-e808c9795a63 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-639e7c73-3263-4209-93b9-e808c9795a63 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-639e7c73-3263-4209-93b9-e808c9795a63 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-639e7c73-3263-4209-93b9-e808c9795a63 div.sk-estimator:hover {background-color: #d4ebff;}#sk-639e7c73-3263-4209-93b9-e808c9795a63 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-639e7c73-3263-4209-93b9-e808c9795a63 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-639e7c73-3263-4209-93b9-e808c9795a63 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-639e7c73-3263-4209-93b9-e808c9795a63 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-639e7c73-3263-4209-93b9-e808c9795a63 div.sk-item {z-index: 1;}#sk-639e7c73-3263-4209-93b9-e808c9795a63 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-639e7c73-3263-4209-93b9-e808c9795a63 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-639e7c73-3263-4209-93b9-e808c9795a63 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-639e7c73-3263-4209-93b9-e808c9795a63 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-639e7c73-3263-4209-93b9-e808c9795a63 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-639e7c73-3263-4209-93b9-e808c9795a63 div.sk-parallel-item:only-child::after {width: 0;}#sk-639e7c73-3263-4209-93b9-e808c9795a63 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-639e7c73-3263-4209-93b9-e808c9795a63 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-639e7c73-3263-4209-93b9-e808c9795a63 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-639e7c73-3263-4209-93b9-e808c9795a63 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-639e7c73-3263-4209-93b9-e808c9795a63 div.sk-text-repr-fallback {display: none;}</style><div id="sk-639e7c73-3263-4209-93b9-e808c9795a63" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c9c453a9-06e1-4de0-b705-c3b23190803f" type="checkbox" ><label for="c9c453a9-06e1-4de0-b705-c3b23190803f" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ef31bf30-bf2a-4c27-98e5-f98eb88263dc" type="checkbox" ><label for="ef31bf30-bf2a-4c27-98e5-f98eb88263dc" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="076dfa60-1722-4907-8e02-6cd9ebaa1406" type="checkbox" ><label for="076dfa60-1722-4907-8e02-6cd9ebaa1406" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-650b4b3b-a3ec-45cc-8fbd-d80b3cd9fa7c {color: black;background-color: white;}#sk-650b4b3b-a3ec-45cc-8fbd-d80b3cd9fa7c pre{padding: 0;}#sk-650b4b3b-a3ec-45cc-8fbd-d80b3cd9fa7c div.sk-toggleable {background-color: white;}#sk-650b4b3b-a3ec-45cc-8fbd-d80b3cd9fa7c label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-650b4b3b-a3ec-45cc-8fbd-d80b3cd9fa7c label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-650b4b3b-a3ec-45cc-8fbd-d80b3cd9fa7c label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-650b4b3b-a3ec-45cc-8fbd-d80b3cd9fa7c div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-650b4b3b-a3ec-45cc-8fbd-d80b3cd9fa7c div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-650b4b3b-a3ec-45cc-8fbd-d80b3cd9fa7c div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-650b4b3b-a3ec-45cc-8fbd-d80b3cd9fa7c input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-650b4b3b-a3ec-45cc-8fbd-d80b3cd9fa7c input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-650b4b3b-a3ec-45cc-8fbd-d80b3cd9fa7c div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-650b4b3b-a3ec-45cc-8fbd-d80b3cd9fa7c div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-650b4b3b-a3ec-45cc-8fbd-d80b3cd9fa7c input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-650b4b3b-a3ec-45cc-8fbd-d80b3cd9fa7c div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-650b4b3b-a3ec-45cc-8fbd-d80b3cd9fa7c div.sk-estimator:hover {background-color: #d4ebff;}#sk-650b4b3b-a3ec-45cc-8fbd-d80b3cd9fa7c div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-650b4b3b-a3ec-45cc-8fbd-d80b3cd9fa7c div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-650b4b3b-a3ec-45cc-8fbd-d80b3cd9fa7c div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-650b4b3b-a3ec-45cc-8fbd-d80b3cd9fa7c div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-650b4b3b-a3ec-45cc-8fbd-d80b3cd9fa7c div.sk-item {z-index: 1;}#sk-650b4b3b-a3ec-45cc-8fbd-d80b3cd9fa7c div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-650b4b3b-a3ec-45cc-8fbd-d80b3cd9fa7c div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-650b4b3b-a3ec-45cc-8fbd-d80b3cd9fa7c div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-650b4b3b-a3ec-45cc-8fbd-d80b3cd9fa7c div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-650b4b3b-a3ec-45cc-8fbd-d80b3cd9fa7c div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-650b4b3b-a3ec-45cc-8fbd-d80b3cd9fa7c div.sk-parallel-item:only-child::after {width: 0;}#sk-650b4b3b-a3ec-45cc-8fbd-d80b3cd9fa7c div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-650b4b3b-a3ec-45cc-8fbd-d80b3cd9fa7c div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-650b4b3b-a3ec-45cc-8fbd-d80b3cd9fa7c div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-650b4b3b-a3ec-45cc-8fbd-d80b3cd9fa7c div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-650b4b3b-a3ec-45cc-8fbd-d80b3cd9fa7c div.sk-text-repr-fallback {display: none;}</style><div id="sk-650b4b3b-a3ec-45cc-8fbd-d80b3cd9fa7c" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6b5e01e6-0390-4b5d-9b55-5ba0b6a0a614" type="checkbox" ><label for="6b5e01e6-0390-4b5d-9b55-5ba0b6a0a614" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="de29ab3f-44cf-4b2c-b681-4e9e0069a219" type="checkbox" ><label for="de29ab3f-44cf-4b2c-b681-4e9e0069a219" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="62b632f5-9a8b-4c56-b90c-308fb93d72b7" type="checkbox" ><label for="62b632f5-9a8b-4c56-b90c-308fb93d72b7" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b603b9b7-49ad-4153-b746-dbc6210d6f5d" type="checkbox" ><label for="b603b9b7-49ad-4153-b746-dbc6210d6f5d" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2ad00586-2977-4667-8c4c-2a188b048f1b" type="checkbox" ><label for="2ad00586-2977-4667-8c4c-2a188b048f1b" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="22d6c1a2-1859-4d70-a7f9-4fe1405bb961" type="checkbox" ><label for="22d6c1a2-1859-4d70-a7f9-4fe1405bb961" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f4ba99a2-9a1d-49ce-a395-87236f7ef630" type="checkbox" ><label for="f4ba99a2-9a1d-49ce-a395-87236f7ef630" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f1de2f82-d1b7-4ad7-b4db-6d0768d89b64" type="checkbox" ><label for="f1de2f82-d1b7-4ad7-b4db-6d0768d89b64" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="97ba0fa7-d616-46c4-ae5a-6a925cca7b7f" type="checkbox" ><label for="97ba0fa7-d616-46c4-ae5a-6a925cca7b7f" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-956d96b6-8139-4c2d-af13-dee701f39b93 {color: black;background-color: white;}#sk-956d96b6-8139-4c2d-af13-dee701f39b93 pre{padding: 0;}#sk-956d96b6-8139-4c2d-af13-dee701f39b93 div.sk-toggleable {background-color: white;}#sk-956d96b6-8139-4c2d-af13-dee701f39b93 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-956d96b6-8139-4c2d-af13-dee701f39b93 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-956d96b6-8139-4c2d-af13-dee701f39b93 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-956d96b6-8139-4c2d-af13-dee701f39b93 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-956d96b6-8139-4c2d-af13-dee701f39b93 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-956d96b6-8139-4c2d-af13-dee701f39b93 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-956d96b6-8139-4c2d-af13-dee701f39b93 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-956d96b6-8139-4c2d-af13-dee701f39b93 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-956d96b6-8139-4c2d-af13-dee701f39b93 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-956d96b6-8139-4c2d-af13-dee701f39b93 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-956d96b6-8139-4c2d-af13-dee701f39b93 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-956d96b6-8139-4c2d-af13-dee701f39b93 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-956d96b6-8139-4c2d-af13-dee701f39b93 div.sk-estimator:hover {background-color: #d4ebff;}#sk-956d96b6-8139-4c2d-af13-dee701f39b93 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-956d96b6-8139-4c2d-af13-dee701f39b93 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-956d96b6-8139-4c2d-af13-dee701f39b93 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-956d96b6-8139-4c2d-af13-dee701f39b93 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-956d96b6-8139-4c2d-af13-dee701f39b93 div.sk-item {z-index: 1;}#sk-956d96b6-8139-4c2d-af13-dee701f39b93 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-956d96b6-8139-4c2d-af13-dee701f39b93 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-956d96b6-8139-4c2d-af13-dee701f39b93 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-956d96b6-8139-4c2d-af13-dee701f39b93 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-956d96b6-8139-4c2d-af13-dee701f39b93 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-956d96b6-8139-4c2d-af13-dee701f39b93 div.sk-parallel-item:only-child::after {width: 0;}#sk-956d96b6-8139-4c2d-af13-dee701f39b93 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-956d96b6-8139-4c2d-af13-dee701f39b93 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-956d96b6-8139-4c2d-af13-dee701f39b93 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-956d96b6-8139-4c2d-af13-dee701f39b93 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-956d96b6-8139-4c2d-af13-dee701f39b93 div.sk-text-repr-fallback {display: none;}</style><div id="sk-956d96b6-8139-4c2d-af13-dee701f39b93" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c74699b0-2f4a-482a-b235-4302ade05331" type="checkbox" ><label for="c74699b0-2f4a-482a-b235-4302ade05331" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="45b7b563-576b-418b-a38b-12b4e0d54667" type="checkbox" ><label for="45b7b563-576b-418b-a38b-12b4e0d54667" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c5658e8b-7912-4d58-9ed9-b4f539686e1f" type="checkbox" ><label for="c5658e8b-7912-4d58-9ed9-b4f539686e1f" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2b1068b4-970d-40ae-ae8a-b315af7fdb33" type="checkbox" ><label for="2b1068b4-970d-40ae-ae8a-b315af7fdb33" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2b72f0c6-8a8b-4599-828d-cfb5cc1247db" type="checkbox" ><label for="2b72f0c6-8a8b-4599-828d-cfb5cc1247db" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8e22cf15-c589-4954-8ef1-d85020f42c10" type="checkbox" ><label for="8e22cf15-c589-4954-8ef1-d85020f42c10" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7d05c18d-c7ef-4f72-80e7-214c88cf6835" type="checkbox" ><label for="7d05c18d-c7ef-4f72-80e7-214c88cf6835" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d5196dd6-33e9-4fee-8e11-b0b6655186d5" type="checkbox" ><label for="d5196dd6-33e9-4fee-8e11-b0b6655186d5" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="930dfa11-ed3d-4442-b9cc-6933287dacb8" type="checkbox" ><label for="930dfa11-ed3d-4442-b9cc-6933287dacb8" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.071 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
