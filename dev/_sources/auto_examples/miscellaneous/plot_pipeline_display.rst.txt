
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-34ad1743-60fe-4580-944b-9dd80e447275 {color: black;background-color: white;}#sk-34ad1743-60fe-4580-944b-9dd80e447275 pre{padding: 0;}#sk-34ad1743-60fe-4580-944b-9dd80e447275 div.sk-toggleable {background-color: white;}#sk-34ad1743-60fe-4580-944b-9dd80e447275 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-34ad1743-60fe-4580-944b-9dd80e447275 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-34ad1743-60fe-4580-944b-9dd80e447275 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-34ad1743-60fe-4580-944b-9dd80e447275 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-34ad1743-60fe-4580-944b-9dd80e447275 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-34ad1743-60fe-4580-944b-9dd80e447275 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-34ad1743-60fe-4580-944b-9dd80e447275 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-34ad1743-60fe-4580-944b-9dd80e447275 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-34ad1743-60fe-4580-944b-9dd80e447275 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-34ad1743-60fe-4580-944b-9dd80e447275 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-34ad1743-60fe-4580-944b-9dd80e447275 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-34ad1743-60fe-4580-944b-9dd80e447275 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-34ad1743-60fe-4580-944b-9dd80e447275 div.sk-estimator:hover {background-color: #d4ebff;}#sk-34ad1743-60fe-4580-944b-9dd80e447275 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-34ad1743-60fe-4580-944b-9dd80e447275 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-34ad1743-60fe-4580-944b-9dd80e447275 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-34ad1743-60fe-4580-944b-9dd80e447275 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-34ad1743-60fe-4580-944b-9dd80e447275 div.sk-item {z-index: 1;}#sk-34ad1743-60fe-4580-944b-9dd80e447275 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-34ad1743-60fe-4580-944b-9dd80e447275 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-34ad1743-60fe-4580-944b-9dd80e447275 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-34ad1743-60fe-4580-944b-9dd80e447275 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-34ad1743-60fe-4580-944b-9dd80e447275 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-34ad1743-60fe-4580-944b-9dd80e447275 div.sk-parallel-item:only-child::after {width: 0;}#sk-34ad1743-60fe-4580-944b-9dd80e447275 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-34ad1743-60fe-4580-944b-9dd80e447275 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-34ad1743-60fe-4580-944b-9dd80e447275 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-34ad1743-60fe-4580-944b-9dd80e447275 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-34ad1743-60fe-4580-944b-9dd80e447275 div.sk-text-repr-fallback {display: none;}</style><div id="sk-34ad1743-60fe-4580-944b-9dd80e447275" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="72842e5a-7785-49ae-b2a6-3dc6aed919d6" type="checkbox" ><label for="72842e5a-7785-49ae-b2a6-3dc6aed919d6" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b1fb4bd4-1754-4654-b304-8f05922685bd" type="checkbox" ><label for="b1fb4bd4-1754-4654-b304-8f05922685bd" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0a1cd286-19a9-4370-9ac5-228d6e1c5d50" type="checkbox" ><label for="0a1cd286-19a9-4370-9ac5-228d6e1c5d50" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-97594ab7-2f00-4260-9fff-a81ca6b48052 {color: black;background-color: white;}#sk-97594ab7-2f00-4260-9fff-a81ca6b48052 pre{padding: 0;}#sk-97594ab7-2f00-4260-9fff-a81ca6b48052 div.sk-toggleable {background-color: white;}#sk-97594ab7-2f00-4260-9fff-a81ca6b48052 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-97594ab7-2f00-4260-9fff-a81ca6b48052 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-97594ab7-2f00-4260-9fff-a81ca6b48052 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-97594ab7-2f00-4260-9fff-a81ca6b48052 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-97594ab7-2f00-4260-9fff-a81ca6b48052 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-97594ab7-2f00-4260-9fff-a81ca6b48052 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-97594ab7-2f00-4260-9fff-a81ca6b48052 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-97594ab7-2f00-4260-9fff-a81ca6b48052 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-97594ab7-2f00-4260-9fff-a81ca6b48052 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-97594ab7-2f00-4260-9fff-a81ca6b48052 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-97594ab7-2f00-4260-9fff-a81ca6b48052 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-97594ab7-2f00-4260-9fff-a81ca6b48052 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-97594ab7-2f00-4260-9fff-a81ca6b48052 div.sk-estimator:hover {background-color: #d4ebff;}#sk-97594ab7-2f00-4260-9fff-a81ca6b48052 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-97594ab7-2f00-4260-9fff-a81ca6b48052 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-97594ab7-2f00-4260-9fff-a81ca6b48052 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-97594ab7-2f00-4260-9fff-a81ca6b48052 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-97594ab7-2f00-4260-9fff-a81ca6b48052 div.sk-item {z-index: 1;}#sk-97594ab7-2f00-4260-9fff-a81ca6b48052 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-97594ab7-2f00-4260-9fff-a81ca6b48052 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-97594ab7-2f00-4260-9fff-a81ca6b48052 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-97594ab7-2f00-4260-9fff-a81ca6b48052 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-97594ab7-2f00-4260-9fff-a81ca6b48052 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-97594ab7-2f00-4260-9fff-a81ca6b48052 div.sk-parallel-item:only-child::after {width: 0;}#sk-97594ab7-2f00-4260-9fff-a81ca6b48052 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-97594ab7-2f00-4260-9fff-a81ca6b48052 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-97594ab7-2f00-4260-9fff-a81ca6b48052 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-97594ab7-2f00-4260-9fff-a81ca6b48052 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-97594ab7-2f00-4260-9fff-a81ca6b48052 div.sk-text-repr-fallback {display: none;}</style><div id="sk-97594ab7-2f00-4260-9fff-a81ca6b48052" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="780b2e14-2269-4143-9e37-c0bb81376fb4" type="checkbox" ><label for="780b2e14-2269-4143-9e37-c0bb81376fb4" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="37c85f1b-926a-4e0e-aa7d-23ca790212ef" type="checkbox" ><label for="37c85f1b-926a-4e0e-aa7d-23ca790212ef" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0e76c93f-792d-451f-bbbd-6b4a59af4e8b" type="checkbox" ><label for="0e76c93f-792d-451f-bbbd-6b4a59af4e8b" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1ded2ff8-d802-4941-b83d-1f550412358a" type="checkbox" ><label for="1ded2ff8-d802-4941-b83d-1f550412358a" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-88b06806-2b26-4da8-9d68-e55153e0b831 {color: black;background-color: white;}#sk-88b06806-2b26-4da8-9d68-e55153e0b831 pre{padding: 0;}#sk-88b06806-2b26-4da8-9d68-e55153e0b831 div.sk-toggleable {background-color: white;}#sk-88b06806-2b26-4da8-9d68-e55153e0b831 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-88b06806-2b26-4da8-9d68-e55153e0b831 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-88b06806-2b26-4da8-9d68-e55153e0b831 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-88b06806-2b26-4da8-9d68-e55153e0b831 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-88b06806-2b26-4da8-9d68-e55153e0b831 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-88b06806-2b26-4da8-9d68-e55153e0b831 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-88b06806-2b26-4da8-9d68-e55153e0b831 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-88b06806-2b26-4da8-9d68-e55153e0b831 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-88b06806-2b26-4da8-9d68-e55153e0b831 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-88b06806-2b26-4da8-9d68-e55153e0b831 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-88b06806-2b26-4da8-9d68-e55153e0b831 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-88b06806-2b26-4da8-9d68-e55153e0b831 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-88b06806-2b26-4da8-9d68-e55153e0b831 div.sk-estimator:hover {background-color: #d4ebff;}#sk-88b06806-2b26-4da8-9d68-e55153e0b831 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-88b06806-2b26-4da8-9d68-e55153e0b831 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-88b06806-2b26-4da8-9d68-e55153e0b831 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-88b06806-2b26-4da8-9d68-e55153e0b831 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-88b06806-2b26-4da8-9d68-e55153e0b831 div.sk-item {z-index: 1;}#sk-88b06806-2b26-4da8-9d68-e55153e0b831 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-88b06806-2b26-4da8-9d68-e55153e0b831 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-88b06806-2b26-4da8-9d68-e55153e0b831 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-88b06806-2b26-4da8-9d68-e55153e0b831 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-88b06806-2b26-4da8-9d68-e55153e0b831 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-88b06806-2b26-4da8-9d68-e55153e0b831 div.sk-parallel-item:only-child::after {width: 0;}#sk-88b06806-2b26-4da8-9d68-e55153e0b831 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-88b06806-2b26-4da8-9d68-e55153e0b831 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-88b06806-2b26-4da8-9d68-e55153e0b831 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-88b06806-2b26-4da8-9d68-e55153e0b831 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-88b06806-2b26-4da8-9d68-e55153e0b831 div.sk-text-repr-fallback {display: none;}</style><div id="sk-88b06806-2b26-4da8-9d68-e55153e0b831" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d3c4fe37-0ee4-4f2a-ab77-1151cecd79b5" type="checkbox" ><label for="d3c4fe37-0ee4-4f2a-ab77-1151cecd79b5" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6f5862b6-2830-4eab-b46a-351e9ec47d25" type="checkbox" ><label for="6f5862b6-2830-4eab-b46a-351e9ec47d25" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="94a7d09b-1de5-4a04-b37f-7d12c19f68c5" type="checkbox" ><label for="94a7d09b-1de5-4a04-b37f-7d12c19f68c5" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-702652a0-5cc6-4ecf-a17c-69f0d68ca2ab {color: black;background-color: white;}#sk-702652a0-5cc6-4ecf-a17c-69f0d68ca2ab pre{padding: 0;}#sk-702652a0-5cc6-4ecf-a17c-69f0d68ca2ab div.sk-toggleable {background-color: white;}#sk-702652a0-5cc6-4ecf-a17c-69f0d68ca2ab label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-702652a0-5cc6-4ecf-a17c-69f0d68ca2ab label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-702652a0-5cc6-4ecf-a17c-69f0d68ca2ab label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-702652a0-5cc6-4ecf-a17c-69f0d68ca2ab div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-702652a0-5cc6-4ecf-a17c-69f0d68ca2ab div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-702652a0-5cc6-4ecf-a17c-69f0d68ca2ab div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-702652a0-5cc6-4ecf-a17c-69f0d68ca2ab input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-702652a0-5cc6-4ecf-a17c-69f0d68ca2ab input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-702652a0-5cc6-4ecf-a17c-69f0d68ca2ab div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-702652a0-5cc6-4ecf-a17c-69f0d68ca2ab div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-702652a0-5cc6-4ecf-a17c-69f0d68ca2ab input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-702652a0-5cc6-4ecf-a17c-69f0d68ca2ab div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-702652a0-5cc6-4ecf-a17c-69f0d68ca2ab div.sk-estimator:hover {background-color: #d4ebff;}#sk-702652a0-5cc6-4ecf-a17c-69f0d68ca2ab div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-702652a0-5cc6-4ecf-a17c-69f0d68ca2ab div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-702652a0-5cc6-4ecf-a17c-69f0d68ca2ab div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-702652a0-5cc6-4ecf-a17c-69f0d68ca2ab div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-702652a0-5cc6-4ecf-a17c-69f0d68ca2ab div.sk-item {z-index: 1;}#sk-702652a0-5cc6-4ecf-a17c-69f0d68ca2ab div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-702652a0-5cc6-4ecf-a17c-69f0d68ca2ab div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-702652a0-5cc6-4ecf-a17c-69f0d68ca2ab div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-702652a0-5cc6-4ecf-a17c-69f0d68ca2ab div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-702652a0-5cc6-4ecf-a17c-69f0d68ca2ab div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-702652a0-5cc6-4ecf-a17c-69f0d68ca2ab div.sk-parallel-item:only-child::after {width: 0;}#sk-702652a0-5cc6-4ecf-a17c-69f0d68ca2ab div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-702652a0-5cc6-4ecf-a17c-69f0d68ca2ab div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-702652a0-5cc6-4ecf-a17c-69f0d68ca2ab div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-702652a0-5cc6-4ecf-a17c-69f0d68ca2ab div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-702652a0-5cc6-4ecf-a17c-69f0d68ca2ab div.sk-text-repr-fallback {display: none;}</style><div id="sk-702652a0-5cc6-4ecf-a17c-69f0d68ca2ab" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="97c49093-2ce1-4d3f-a5e0-8f94a074b525" type="checkbox" ><label for="97c49093-2ce1-4d3f-a5e0-8f94a074b525" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="27236da5-831c-47e2-b3a6-7bf07cd38074" type="checkbox" ><label for="27236da5-831c-47e2-b3a6-7bf07cd38074" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="233210c8-edd7-4246-baec-3fc94188e553" type="checkbox" ><label for="233210c8-edd7-4246-baec-3fc94188e553" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a3aa6db1-2f20-4048-a96d-516ce9eecc70" type="checkbox" ><label for="a3aa6db1-2f20-4048-a96d-516ce9eecc70" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="539f5867-a872-45b2-905b-e33d77b015e1" type="checkbox" ><label for="539f5867-a872-45b2-905b-e33d77b015e1" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="08ac7e17-548a-45ca-9a0f-88a0e47323f0" type="checkbox" ><label for="08ac7e17-548a-45ca-9a0f-88a0e47323f0" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="55078391-9f68-413b-8260-3d42065d03a2" type="checkbox" ><label for="55078391-9f68-413b-8260-3d42065d03a2" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6899f2c0-cb4f-4e14-b43f-bb3f4e7a0b54" type="checkbox" ><label for="6899f2c0-cb4f-4e14-b43f-bb3f4e7a0b54" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fe279195-3663-485e-9e35-b865446401b6" type="checkbox" ><label for="fe279195-3663-485e-9e35-b865446401b6" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-bbce5296-54dc-4c52-884f-a733dc9be0c3 {color: black;background-color: white;}#sk-bbce5296-54dc-4c52-884f-a733dc9be0c3 pre{padding: 0;}#sk-bbce5296-54dc-4c52-884f-a733dc9be0c3 div.sk-toggleable {background-color: white;}#sk-bbce5296-54dc-4c52-884f-a733dc9be0c3 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-bbce5296-54dc-4c52-884f-a733dc9be0c3 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-bbce5296-54dc-4c52-884f-a733dc9be0c3 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-bbce5296-54dc-4c52-884f-a733dc9be0c3 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-bbce5296-54dc-4c52-884f-a733dc9be0c3 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-bbce5296-54dc-4c52-884f-a733dc9be0c3 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-bbce5296-54dc-4c52-884f-a733dc9be0c3 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-bbce5296-54dc-4c52-884f-a733dc9be0c3 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-bbce5296-54dc-4c52-884f-a733dc9be0c3 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-bbce5296-54dc-4c52-884f-a733dc9be0c3 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-bbce5296-54dc-4c52-884f-a733dc9be0c3 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-bbce5296-54dc-4c52-884f-a733dc9be0c3 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-bbce5296-54dc-4c52-884f-a733dc9be0c3 div.sk-estimator:hover {background-color: #d4ebff;}#sk-bbce5296-54dc-4c52-884f-a733dc9be0c3 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-bbce5296-54dc-4c52-884f-a733dc9be0c3 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-bbce5296-54dc-4c52-884f-a733dc9be0c3 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-bbce5296-54dc-4c52-884f-a733dc9be0c3 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-bbce5296-54dc-4c52-884f-a733dc9be0c3 div.sk-item {z-index: 1;}#sk-bbce5296-54dc-4c52-884f-a733dc9be0c3 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-bbce5296-54dc-4c52-884f-a733dc9be0c3 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-bbce5296-54dc-4c52-884f-a733dc9be0c3 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-bbce5296-54dc-4c52-884f-a733dc9be0c3 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-bbce5296-54dc-4c52-884f-a733dc9be0c3 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-bbce5296-54dc-4c52-884f-a733dc9be0c3 div.sk-parallel-item:only-child::after {width: 0;}#sk-bbce5296-54dc-4c52-884f-a733dc9be0c3 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-bbce5296-54dc-4c52-884f-a733dc9be0c3 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-bbce5296-54dc-4c52-884f-a733dc9be0c3 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-bbce5296-54dc-4c52-884f-a733dc9be0c3 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-bbce5296-54dc-4c52-884f-a733dc9be0c3 div.sk-text-repr-fallback {display: none;}</style><div id="sk-bbce5296-54dc-4c52-884f-a733dc9be0c3" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5e370e61-2d2b-487a-ad32-d529c0146d67" type="checkbox" ><label for="5e370e61-2d2b-487a-ad32-d529c0146d67" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="565beda6-7952-4e51-abe0-591dde31fd4b" type="checkbox" ><label for="565beda6-7952-4e51-abe0-591dde31fd4b" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fe724a55-41d3-4548-9b75-420e07f9fb27" type="checkbox" ><label for="fe724a55-41d3-4548-9b75-420e07f9fb27" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f5e1c089-efb9-44c3-938a-b0cf834b5d62" type="checkbox" ><label for="f5e1c089-efb9-44c3-938a-b0cf834b5d62" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="436d1295-98f9-4b95-bfc9-a6ff3b7e6009" type="checkbox" ><label for="436d1295-98f9-4b95-bfc9-a6ff3b7e6009" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c0c5f7c4-c4c8-4190-a89f-e156edebb20b" type="checkbox" ><label for="c0c5f7c4-c4c8-4190-a89f-e156edebb20b" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="347c84bf-577e-4b26-9718-a0563559da1d" type="checkbox" ><label for="347c84bf-577e-4b26-9718-a0563559da1d" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="92fcfa7f-18dc-4b85-b509-7f96af73b561" type="checkbox" ><label for="92fcfa7f-18dc-4b85-b509-7f96af73b561" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3d64af79-7613-4b9e-b3cf-fcaa642791a6" type="checkbox" ><label for="3d64af79-7613-4b9e-b3cf-fcaa642791a6" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.071 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
