
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-60d23d5c-f3d5-435a-bad8-e6553d808945 {color: black;background-color: white;}#sk-60d23d5c-f3d5-435a-bad8-e6553d808945 pre{padding: 0;}#sk-60d23d5c-f3d5-435a-bad8-e6553d808945 div.sk-toggleable {background-color: white;}#sk-60d23d5c-f3d5-435a-bad8-e6553d808945 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-60d23d5c-f3d5-435a-bad8-e6553d808945 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-60d23d5c-f3d5-435a-bad8-e6553d808945 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-60d23d5c-f3d5-435a-bad8-e6553d808945 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-60d23d5c-f3d5-435a-bad8-e6553d808945 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-60d23d5c-f3d5-435a-bad8-e6553d808945 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-60d23d5c-f3d5-435a-bad8-e6553d808945 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-60d23d5c-f3d5-435a-bad8-e6553d808945 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-60d23d5c-f3d5-435a-bad8-e6553d808945 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-60d23d5c-f3d5-435a-bad8-e6553d808945 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-60d23d5c-f3d5-435a-bad8-e6553d808945 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-60d23d5c-f3d5-435a-bad8-e6553d808945 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-60d23d5c-f3d5-435a-bad8-e6553d808945 div.sk-estimator:hover {background-color: #d4ebff;}#sk-60d23d5c-f3d5-435a-bad8-e6553d808945 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-60d23d5c-f3d5-435a-bad8-e6553d808945 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-60d23d5c-f3d5-435a-bad8-e6553d808945 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-60d23d5c-f3d5-435a-bad8-e6553d808945 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-60d23d5c-f3d5-435a-bad8-e6553d808945 div.sk-item {z-index: 1;}#sk-60d23d5c-f3d5-435a-bad8-e6553d808945 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-60d23d5c-f3d5-435a-bad8-e6553d808945 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-60d23d5c-f3d5-435a-bad8-e6553d808945 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-60d23d5c-f3d5-435a-bad8-e6553d808945 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-60d23d5c-f3d5-435a-bad8-e6553d808945 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-60d23d5c-f3d5-435a-bad8-e6553d808945 div.sk-parallel-item:only-child::after {width: 0;}#sk-60d23d5c-f3d5-435a-bad8-e6553d808945 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-60d23d5c-f3d5-435a-bad8-e6553d808945 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-60d23d5c-f3d5-435a-bad8-e6553d808945 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-60d23d5c-f3d5-435a-bad8-e6553d808945 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-60d23d5c-f3d5-435a-bad8-e6553d808945 div.sk-text-repr-fallback {display: none;}</style><div id="sk-60d23d5c-f3d5-435a-bad8-e6553d808945" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3086ef91-f7d8-4455-becb-8a7839eca87b" type="checkbox" ><label for="3086ef91-f7d8-4455-becb-8a7839eca87b" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9e30e62b-2b35-43ad-8af4-98bde9febe63" type="checkbox" ><label for="9e30e62b-2b35-43ad-8af4-98bde9febe63" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="650650e1-8b6b-4ce8-a041-50e30159fff2" type="checkbox" ><label for="650650e1-8b6b-4ce8-a041-50e30159fff2" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-1ff47760-cd80-45cf-a230-ff2c5fb4c28c {color: black;background-color: white;}#sk-1ff47760-cd80-45cf-a230-ff2c5fb4c28c pre{padding: 0;}#sk-1ff47760-cd80-45cf-a230-ff2c5fb4c28c div.sk-toggleable {background-color: white;}#sk-1ff47760-cd80-45cf-a230-ff2c5fb4c28c label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-1ff47760-cd80-45cf-a230-ff2c5fb4c28c label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-1ff47760-cd80-45cf-a230-ff2c5fb4c28c label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-1ff47760-cd80-45cf-a230-ff2c5fb4c28c div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-1ff47760-cd80-45cf-a230-ff2c5fb4c28c div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-1ff47760-cd80-45cf-a230-ff2c5fb4c28c div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-1ff47760-cd80-45cf-a230-ff2c5fb4c28c input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-1ff47760-cd80-45cf-a230-ff2c5fb4c28c input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-1ff47760-cd80-45cf-a230-ff2c5fb4c28c div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-1ff47760-cd80-45cf-a230-ff2c5fb4c28c div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-1ff47760-cd80-45cf-a230-ff2c5fb4c28c input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-1ff47760-cd80-45cf-a230-ff2c5fb4c28c div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-1ff47760-cd80-45cf-a230-ff2c5fb4c28c div.sk-estimator:hover {background-color: #d4ebff;}#sk-1ff47760-cd80-45cf-a230-ff2c5fb4c28c div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-1ff47760-cd80-45cf-a230-ff2c5fb4c28c div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-1ff47760-cd80-45cf-a230-ff2c5fb4c28c div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-1ff47760-cd80-45cf-a230-ff2c5fb4c28c div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-1ff47760-cd80-45cf-a230-ff2c5fb4c28c div.sk-item {z-index: 1;}#sk-1ff47760-cd80-45cf-a230-ff2c5fb4c28c div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-1ff47760-cd80-45cf-a230-ff2c5fb4c28c div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-1ff47760-cd80-45cf-a230-ff2c5fb4c28c div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-1ff47760-cd80-45cf-a230-ff2c5fb4c28c div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-1ff47760-cd80-45cf-a230-ff2c5fb4c28c div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-1ff47760-cd80-45cf-a230-ff2c5fb4c28c div.sk-parallel-item:only-child::after {width: 0;}#sk-1ff47760-cd80-45cf-a230-ff2c5fb4c28c div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-1ff47760-cd80-45cf-a230-ff2c5fb4c28c div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-1ff47760-cd80-45cf-a230-ff2c5fb4c28c div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-1ff47760-cd80-45cf-a230-ff2c5fb4c28c div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-1ff47760-cd80-45cf-a230-ff2c5fb4c28c div.sk-text-repr-fallback {display: none;}</style><div id="sk-1ff47760-cd80-45cf-a230-ff2c5fb4c28c" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9065688a-9935-4c74-8547-7ce08718ecd3" type="checkbox" ><label for="9065688a-9935-4c74-8547-7ce08718ecd3" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fa7f0b42-8f77-486a-b339-34336bbb08ad" type="checkbox" ><label for="fa7f0b42-8f77-486a-b339-34336bbb08ad" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a268567f-8a00-4262-b6d6-0403aeb064b4" type="checkbox" ><label for="a268567f-8a00-4262-b6d6-0403aeb064b4" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5e2a1f3b-17b7-4df7-b309-b32e1500dd71" type="checkbox" ><label for="5e2a1f3b-17b7-4df7-b309-b32e1500dd71" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-eb4a3263-1a20-484d-9d29-c9f7bf998a36 {color: black;background-color: white;}#sk-eb4a3263-1a20-484d-9d29-c9f7bf998a36 pre{padding: 0;}#sk-eb4a3263-1a20-484d-9d29-c9f7bf998a36 div.sk-toggleable {background-color: white;}#sk-eb4a3263-1a20-484d-9d29-c9f7bf998a36 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-eb4a3263-1a20-484d-9d29-c9f7bf998a36 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-eb4a3263-1a20-484d-9d29-c9f7bf998a36 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-eb4a3263-1a20-484d-9d29-c9f7bf998a36 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-eb4a3263-1a20-484d-9d29-c9f7bf998a36 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-eb4a3263-1a20-484d-9d29-c9f7bf998a36 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-eb4a3263-1a20-484d-9d29-c9f7bf998a36 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-eb4a3263-1a20-484d-9d29-c9f7bf998a36 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-eb4a3263-1a20-484d-9d29-c9f7bf998a36 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-eb4a3263-1a20-484d-9d29-c9f7bf998a36 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-eb4a3263-1a20-484d-9d29-c9f7bf998a36 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-eb4a3263-1a20-484d-9d29-c9f7bf998a36 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-eb4a3263-1a20-484d-9d29-c9f7bf998a36 div.sk-estimator:hover {background-color: #d4ebff;}#sk-eb4a3263-1a20-484d-9d29-c9f7bf998a36 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-eb4a3263-1a20-484d-9d29-c9f7bf998a36 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-eb4a3263-1a20-484d-9d29-c9f7bf998a36 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-eb4a3263-1a20-484d-9d29-c9f7bf998a36 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-eb4a3263-1a20-484d-9d29-c9f7bf998a36 div.sk-item {z-index: 1;}#sk-eb4a3263-1a20-484d-9d29-c9f7bf998a36 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-eb4a3263-1a20-484d-9d29-c9f7bf998a36 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-eb4a3263-1a20-484d-9d29-c9f7bf998a36 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-eb4a3263-1a20-484d-9d29-c9f7bf998a36 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-eb4a3263-1a20-484d-9d29-c9f7bf998a36 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-eb4a3263-1a20-484d-9d29-c9f7bf998a36 div.sk-parallel-item:only-child::after {width: 0;}#sk-eb4a3263-1a20-484d-9d29-c9f7bf998a36 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-eb4a3263-1a20-484d-9d29-c9f7bf998a36 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-eb4a3263-1a20-484d-9d29-c9f7bf998a36 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-eb4a3263-1a20-484d-9d29-c9f7bf998a36 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-eb4a3263-1a20-484d-9d29-c9f7bf998a36 div.sk-text-repr-fallback {display: none;}</style><div id="sk-eb4a3263-1a20-484d-9d29-c9f7bf998a36" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ddc8a288-b9e2-44bf-a55e-63190070f0f9" type="checkbox" ><label for="ddc8a288-b9e2-44bf-a55e-63190070f0f9" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="907d1196-f6fb-406d-aa05-9d76108bd851" type="checkbox" ><label for="907d1196-f6fb-406d-aa05-9d76108bd851" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d42f4c99-69d6-4507-9c47-b7ac13ef7f38" type="checkbox" ><label for="d42f4c99-69d6-4507-9c47-b7ac13ef7f38" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-274f6c90-5e8d-4dbc-974a-83276d2aa016 {color: black;background-color: white;}#sk-274f6c90-5e8d-4dbc-974a-83276d2aa016 pre{padding: 0;}#sk-274f6c90-5e8d-4dbc-974a-83276d2aa016 div.sk-toggleable {background-color: white;}#sk-274f6c90-5e8d-4dbc-974a-83276d2aa016 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-274f6c90-5e8d-4dbc-974a-83276d2aa016 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-274f6c90-5e8d-4dbc-974a-83276d2aa016 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-274f6c90-5e8d-4dbc-974a-83276d2aa016 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-274f6c90-5e8d-4dbc-974a-83276d2aa016 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-274f6c90-5e8d-4dbc-974a-83276d2aa016 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-274f6c90-5e8d-4dbc-974a-83276d2aa016 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-274f6c90-5e8d-4dbc-974a-83276d2aa016 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-274f6c90-5e8d-4dbc-974a-83276d2aa016 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-274f6c90-5e8d-4dbc-974a-83276d2aa016 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-274f6c90-5e8d-4dbc-974a-83276d2aa016 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-274f6c90-5e8d-4dbc-974a-83276d2aa016 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-274f6c90-5e8d-4dbc-974a-83276d2aa016 div.sk-estimator:hover {background-color: #d4ebff;}#sk-274f6c90-5e8d-4dbc-974a-83276d2aa016 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-274f6c90-5e8d-4dbc-974a-83276d2aa016 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-274f6c90-5e8d-4dbc-974a-83276d2aa016 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-274f6c90-5e8d-4dbc-974a-83276d2aa016 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-274f6c90-5e8d-4dbc-974a-83276d2aa016 div.sk-item {z-index: 1;}#sk-274f6c90-5e8d-4dbc-974a-83276d2aa016 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-274f6c90-5e8d-4dbc-974a-83276d2aa016 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-274f6c90-5e8d-4dbc-974a-83276d2aa016 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-274f6c90-5e8d-4dbc-974a-83276d2aa016 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-274f6c90-5e8d-4dbc-974a-83276d2aa016 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-274f6c90-5e8d-4dbc-974a-83276d2aa016 div.sk-parallel-item:only-child::after {width: 0;}#sk-274f6c90-5e8d-4dbc-974a-83276d2aa016 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-274f6c90-5e8d-4dbc-974a-83276d2aa016 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-274f6c90-5e8d-4dbc-974a-83276d2aa016 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-274f6c90-5e8d-4dbc-974a-83276d2aa016 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-274f6c90-5e8d-4dbc-974a-83276d2aa016 div.sk-text-repr-fallback {display: none;}</style><div id="sk-274f6c90-5e8d-4dbc-974a-83276d2aa016" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bd726fc8-90fb-4d84-b76c-38f6bd836440" type="checkbox" ><label for="bd726fc8-90fb-4d84-b76c-38f6bd836440" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2f6fc49e-bbb7-440f-a83a-df718ad66869" type="checkbox" ><label for="2f6fc49e-bbb7-440f-a83a-df718ad66869" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="31a6f0e2-9b56-41ec-9baf-a0e86de67757" type="checkbox" ><label for="31a6f0e2-9b56-41ec-9baf-a0e86de67757" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="95754766-6209-448b-86ab-5ff560b4a8fa" type="checkbox" ><label for="95754766-6209-448b-86ab-5ff560b4a8fa" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="88d8d820-0973-4864-b3ed-9c8825dc7b59" type="checkbox" ><label for="88d8d820-0973-4864-b3ed-9c8825dc7b59" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d410351a-a94e-4b06-9309-3b245c07a108" type="checkbox" ><label for="d410351a-a94e-4b06-9309-3b245c07a108" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3bbff9ce-4bcb-40b4-8c61-a091500122b6" type="checkbox" ><label for="3bbff9ce-4bcb-40b4-8c61-a091500122b6" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="754576a3-8062-42bd-b154-2d3815cd50d7" type="checkbox" ><label for="754576a3-8062-42bd-b154-2d3815cd50d7" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="78acae10-9f03-45eb-86e1-9fe58b8cefeb" type="checkbox" ><label for="78acae10-9f03-45eb-86e1-9fe58b8cefeb" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-1110c7dd-f315-4695-a2f8-425d62917a9c {color: black;background-color: white;}#sk-1110c7dd-f315-4695-a2f8-425d62917a9c pre{padding: 0;}#sk-1110c7dd-f315-4695-a2f8-425d62917a9c div.sk-toggleable {background-color: white;}#sk-1110c7dd-f315-4695-a2f8-425d62917a9c label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-1110c7dd-f315-4695-a2f8-425d62917a9c label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-1110c7dd-f315-4695-a2f8-425d62917a9c label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-1110c7dd-f315-4695-a2f8-425d62917a9c div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-1110c7dd-f315-4695-a2f8-425d62917a9c div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-1110c7dd-f315-4695-a2f8-425d62917a9c div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-1110c7dd-f315-4695-a2f8-425d62917a9c input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-1110c7dd-f315-4695-a2f8-425d62917a9c input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-1110c7dd-f315-4695-a2f8-425d62917a9c div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-1110c7dd-f315-4695-a2f8-425d62917a9c div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-1110c7dd-f315-4695-a2f8-425d62917a9c input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-1110c7dd-f315-4695-a2f8-425d62917a9c div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-1110c7dd-f315-4695-a2f8-425d62917a9c div.sk-estimator:hover {background-color: #d4ebff;}#sk-1110c7dd-f315-4695-a2f8-425d62917a9c div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-1110c7dd-f315-4695-a2f8-425d62917a9c div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-1110c7dd-f315-4695-a2f8-425d62917a9c div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-1110c7dd-f315-4695-a2f8-425d62917a9c div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-1110c7dd-f315-4695-a2f8-425d62917a9c div.sk-item {z-index: 1;}#sk-1110c7dd-f315-4695-a2f8-425d62917a9c div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-1110c7dd-f315-4695-a2f8-425d62917a9c div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-1110c7dd-f315-4695-a2f8-425d62917a9c div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-1110c7dd-f315-4695-a2f8-425d62917a9c div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-1110c7dd-f315-4695-a2f8-425d62917a9c div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-1110c7dd-f315-4695-a2f8-425d62917a9c div.sk-parallel-item:only-child::after {width: 0;}#sk-1110c7dd-f315-4695-a2f8-425d62917a9c div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-1110c7dd-f315-4695-a2f8-425d62917a9c div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-1110c7dd-f315-4695-a2f8-425d62917a9c div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-1110c7dd-f315-4695-a2f8-425d62917a9c div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-1110c7dd-f315-4695-a2f8-425d62917a9c div.sk-text-repr-fallback {display: none;}</style><div id="sk-1110c7dd-f315-4695-a2f8-425d62917a9c" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f3127d37-5499-4031-9c92-0d7695353088" type="checkbox" ><label for="f3127d37-5499-4031-9c92-0d7695353088" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0ad94b13-ef08-4ca0-86bf-3f7dc997f014" type="checkbox" ><label for="0ad94b13-ef08-4ca0-86bf-3f7dc997f014" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="aed5cb6d-aec6-4614-9596-6490b000633f" type="checkbox" ><label for="aed5cb6d-aec6-4614-9596-6490b000633f" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="df656f71-e899-4593-8898-d4d6df36df62" type="checkbox" ><label for="df656f71-e899-4593-8898-d4d6df36df62" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b00f305b-9bb6-4a73-952b-b8842da4ac17" type="checkbox" ><label for="b00f305b-9bb6-4a73-952b-b8842da4ac17" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="62fea318-2982-492a-af7d-8153f9693a10" type="checkbox" ><label for="62fea318-2982-492a-af7d-8153f9693a10" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="327a7041-1ea4-451c-99fa-8f84694130b6" type="checkbox" ><label for="327a7041-1ea4-451c-99fa-8f84694130b6" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="37a7acbe-d0ef-41a8-a55a-a9dc2616e0fe" type="checkbox" ><label for="37a7acbe-d0ef-41a8-a55a-a9dc2616e0fe" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="43affecb-6c24-4079-be07-8e09848462b0" type="checkbox" ><label for="43affecb-6c24-4079-be07-8e09848462b0" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.071 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
