
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-df81986a-188d-46bc-ae21-204ac7d392c3 {color: black;background-color: white;}#sk-df81986a-188d-46bc-ae21-204ac7d392c3 pre{padding: 0;}#sk-df81986a-188d-46bc-ae21-204ac7d392c3 div.sk-toggleable {background-color: white;}#sk-df81986a-188d-46bc-ae21-204ac7d392c3 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-df81986a-188d-46bc-ae21-204ac7d392c3 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-df81986a-188d-46bc-ae21-204ac7d392c3 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-df81986a-188d-46bc-ae21-204ac7d392c3 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-df81986a-188d-46bc-ae21-204ac7d392c3 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-df81986a-188d-46bc-ae21-204ac7d392c3 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-df81986a-188d-46bc-ae21-204ac7d392c3 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-df81986a-188d-46bc-ae21-204ac7d392c3 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-df81986a-188d-46bc-ae21-204ac7d392c3 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-df81986a-188d-46bc-ae21-204ac7d392c3 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-df81986a-188d-46bc-ae21-204ac7d392c3 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-df81986a-188d-46bc-ae21-204ac7d392c3 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-df81986a-188d-46bc-ae21-204ac7d392c3 div.sk-estimator:hover {background-color: #d4ebff;}#sk-df81986a-188d-46bc-ae21-204ac7d392c3 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-df81986a-188d-46bc-ae21-204ac7d392c3 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-df81986a-188d-46bc-ae21-204ac7d392c3 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-df81986a-188d-46bc-ae21-204ac7d392c3 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-df81986a-188d-46bc-ae21-204ac7d392c3 div.sk-item {z-index: 1;}#sk-df81986a-188d-46bc-ae21-204ac7d392c3 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-df81986a-188d-46bc-ae21-204ac7d392c3 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-df81986a-188d-46bc-ae21-204ac7d392c3 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-df81986a-188d-46bc-ae21-204ac7d392c3 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-df81986a-188d-46bc-ae21-204ac7d392c3 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-df81986a-188d-46bc-ae21-204ac7d392c3 div.sk-parallel-item:only-child::after {width: 0;}#sk-df81986a-188d-46bc-ae21-204ac7d392c3 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-df81986a-188d-46bc-ae21-204ac7d392c3 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-df81986a-188d-46bc-ae21-204ac7d392c3 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-df81986a-188d-46bc-ae21-204ac7d392c3 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-df81986a-188d-46bc-ae21-204ac7d392c3 div.sk-text-repr-fallback {display: none;}</style><div id="sk-df81986a-188d-46bc-ae21-204ac7d392c3" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="713cfce1-017d-43d5-ad7e-f2c924a4eafe" type="checkbox" ><label for="713cfce1-017d-43d5-ad7e-f2c924a4eafe" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5bc03355-eed2-4de7-8662-d00b597ffdfe" type="checkbox" ><label for="5bc03355-eed2-4de7-8662-d00b597ffdfe" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="efec0ac2-b209-4eb2-8f24-f9e89c55fbfe" type="checkbox" ><label for="efec0ac2-b209-4eb2-8f24-f9e89c55fbfe" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-97781be9-e1e9-480d-9723-14c89d620e12 {color: black;background-color: white;}#sk-97781be9-e1e9-480d-9723-14c89d620e12 pre{padding: 0;}#sk-97781be9-e1e9-480d-9723-14c89d620e12 div.sk-toggleable {background-color: white;}#sk-97781be9-e1e9-480d-9723-14c89d620e12 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-97781be9-e1e9-480d-9723-14c89d620e12 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-97781be9-e1e9-480d-9723-14c89d620e12 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-97781be9-e1e9-480d-9723-14c89d620e12 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-97781be9-e1e9-480d-9723-14c89d620e12 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-97781be9-e1e9-480d-9723-14c89d620e12 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-97781be9-e1e9-480d-9723-14c89d620e12 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-97781be9-e1e9-480d-9723-14c89d620e12 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-97781be9-e1e9-480d-9723-14c89d620e12 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-97781be9-e1e9-480d-9723-14c89d620e12 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-97781be9-e1e9-480d-9723-14c89d620e12 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-97781be9-e1e9-480d-9723-14c89d620e12 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-97781be9-e1e9-480d-9723-14c89d620e12 div.sk-estimator:hover {background-color: #d4ebff;}#sk-97781be9-e1e9-480d-9723-14c89d620e12 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-97781be9-e1e9-480d-9723-14c89d620e12 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-97781be9-e1e9-480d-9723-14c89d620e12 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-97781be9-e1e9-480d-9723-14c89d620e12 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-97781be9-e1e9-480d-9723-14c89d620e12 div.sk-item {z-index: 1;}#sk-97781be9-e1e9-480d-9723-14c89d620e12 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-97781be9-e1e9-480d-9723-14c89d620e12 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-97781be9-e1e9-480d-9723-14c89d620e12 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-97781be9-e1e9-480d-9723-14c89d620e12 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-97781be9-e1e9-480d-9723-14c89d620e12 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-97781be9-e1e9-480d-9723-14c89d620e12 div.sk-parallel-item:only-child::after {width: 0;}#sk-97781be9-e1e9-480d-9723-14c89d620e12 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-97781be9-e1e9-480d-9723-14c89d620e12 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-97781be9-e1e9-480d-9723-14c89d620e12 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-97781be9-e1e9-480d-9723-14c89d620e12 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-97781be9-e1e9-480d-9723-14c89d620e12 div.sk-text-repr-fallback {display: none;}</style><div id="sk-97781be9-e1e9-480d-9723-14c89d620e12" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="83d1be42-c51c-4a64-af38-94fc5f1a315f" type="checkbox" ><label for="83d1be42-c51c-4a64-af38-94fc5f1a315f" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b7844441-2ae2-4c13-ac17-71ae04c4ce3f" type="checkbox" ><label for="b7844441-2ae2-4c13-ac17-71ae04c4ce3f" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="18983d0b-9d14-4c23-a12d-1089baa2cca3" type="checkbox" ><label for="18983d0b-9d14-4c23-a12d-1089baa2cca3" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="85a1bbf3-d28a-4039-8dc8-50b9f15611b4" type="checkbox" ><label for="85a1bbf3-d28a-4039-8dc8-50b9f15611b4" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-d63e877b-1b29-4b9c-a428-8bd910a26cec {color: black;background-color: white;}#sk-d63e877b-1b29-4b9c-a428-8bd910a26cec pre{padding: 0;}#sk-d63e877b-1b29-4b9c-a428-8bd910a26cec div.sk-toggleable {background-color: white;}#sk-d63e877b-1b29-4b9c-a428-8bd910a26cec label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-d63e877b-1b29-4b9c-a428-8bd910a26cec label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-d63e877b-1b29-4b9c-a428-8bd910a26cec label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-d63e877b-1b29-4b9c-a428-8bd910a26cec div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-d63e877b-1b29-4b9c-a428-8bd910a26cec div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-d63e877b-1b29-4b9c-a428-8bd910a26cec div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-d63e877b-1b29-4b9c-a428-8bd910a26cec input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-d63e877b-1b29-4b9c-a428-8bd910a26cec input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-d63e877b-1b29-4b9c-a428-8bd910a26cec div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-d63e877b-1b29-4b9c-a428-8bd910a26cec div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-d63e877b-1b29-4b9c-a428-8bd910a26cec input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-d63e877b-1b29-4b9c-a428-8bd910a26cec div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-d63e877b-1b29-4b9c-a428-8bd910a26cec div.sk-estimator:hover {background-color: #d4ebff;}#sk-d63e877b-1b29-4b9c-a428-8bd910a26cec div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-d63e877b-1b29-4b9c-a428-8bd910a26cec div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-d63e877b-1b29-4b9c-a428-8bd910a26cec div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-d63e877b-1b29-4b9c-a428-8bd910a26cec div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-d63e877b-1b29-4b9c-a428-8bd910a26cec div.sk-item {z-index: 1;}#sk-d63e877b-1b29-4b9c-a428-8bd910a26cec div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-d63e877b-1b29-4b9c-a428-8bd910a26cec div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-d63e877b-1b29-4b9c-a428-8bd910a26cec div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-d63e877b-1b29-4b9c-a428-8bd910a26cec div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-d63e877b-1b29-4b9c-a428-8bd910a26cec div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-d63e877b-1b29-4b9c-a428-8bd910a26cec div.sk-parallel-item:only-child::after {width: 0;}#sk-d63e877b-1b29-4b9c-a428-8bd910a26cec div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-d63e877b-1b29-4b9c-a428-8bd910a26cec div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-d63e877b-1b29-4b9c-a428-8bd910a26cec div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-d63e877b-1b29-4b9c-a428-8bd910a26cec div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-d63e877b-1b29-4b9c-a428-8bd910a26cec div.sk-text-repr-fallback {display: none;}</style><div id="sk-d63e877b-1b29-4b9c-a428-8bd910a26cec" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="512b8575-e10a-4dbd-85c2-ace4ab88d4ab" type="checkbox" ><label for="512b8575-e10a-4dbd-85c2-ace4ab88d4ab" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="48d58b33-32c2-447d-acdc-20391d2de1f0" type="checkbox" ><label for="48d58b33-32c2-447d-acdc-20391d2de1f0" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d0fe220f-cf50-47d3-a3aa-713183d4e173" type="checkbox" ><label for="d0fe220f-cf50-47d3-a3aa-713183d4e173" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-40feb45d-0bca-4414-9feb-9e6e237cb0d0 {color: black;background-color: white;}#sk-40feb45d-0bca-4414-9feb-9e6e237cb0d0 pre{padding: 0;}#sk-40feb45d-0bca-4414-9feb-9e6e237cb0d0 div.sk-toggleable {background-color: white;}#sk-40feb45d-0bca-4414-9feb-9e6e237cb0d0 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-40feb45d-0bca-4414-9feb-9e6e237cb0d0 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-40feb45d-0bca-4414-9feb-9e6e237cb0d0 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-40feb45d-0bca-4414-9feb-9e6e237cb0d0 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-40feb45d-0bca-4414-9feb-9e6e237cb0d0 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-40feb45d-0bca-4414-9feb-9e6e237cb0d0 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-40feb45d-0bca-4414-9feb-9e6e237cb0d0 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-40feb45d-0bca-4414-9feb-9e6e237cb0d0 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-40feb45d-0bca-4414-9feb-9e6e237cb0d0 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-40feb45d-0bca-4414-9feb-9e6e237cb0d0 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-40feb45d-0bca-4414-9feb-9e6e237cb0d0 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-40feb45d-0bca-4414-9feb-9e6e237cb0d0 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-40feb45d-0bca-4414-9feb-9e6e237cb0d0 div.sk-estimator:hover {background-color: #d4ebff;}#sk-40feb45d-0bca-4414-9feb-9e6e237cb0d0 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-40feb45d-0bca-4414-9feb-9e6e237cb0d0 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-40feb45d-0bca-4414-9feb-9e6e237cb0d0 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-40feb45d-0bca-4414-9feb-9e6e237cb0d0 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-40feb45d-0bca-4414-9feb-9e6e237cb0d0 div.sk-item {z-index: 1;}#sk-40feb45d-0bca-4414-9feb-9e6e237cb0d0 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-40feb45d-0bca-4414-9feb-9e6e237cb0d0 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-40feb45d-0bca-4414-9feb-9e6e237cb0d0 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-40feb45d-0bca-4414-9feb-9e6e237cb0d0 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-40feb45d-0bca-4414-9feb-9e6e237cb0d0 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-40feb45d-0bca-4414-9feb-9e6e237cb0d0 div.sk-parallel-item:only-child::after {width: 0;}#sk-40feb45d-0bca-4414-9feb-9e6e237cb0d0 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-40feb45d-0bca-4414-9feb-9e6e237cb0d0 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-40feb45d-0bca-4414-9feb-9e6e237cb0d0 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-40feb45d-0bca-4414-9feb-9e6e237cb0d0 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-40feb45d-0bca-4414-9feb-9e6e237cb0d0 div.sk-text-repr-fallback {display: none;}</style><div id="sk-40feb45d-0bca-4414-9feb-9e6e237cb0d0" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cf74b5ea-1237-4d67-9aa6-6417c36018f7" type="checkbox" ><label for="cf74b5ea-1237-4d67-9aa6-6417c36018f7" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f6981b09-ce0f-4a5e-a201-5950bad60e7d" type="checkbox" ><label for="f6981b09-ce0f-4a5e-a201-5950bad60e7d" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9d33cf69-d1a3-4a3a-8b15-c6a141a68ab8" type="checkbox" ><label for="9d33cf69-d1a3-4a3a-8b15-c6a141a68ab8" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a1904d4a-9f3d-44ac-b783-e75322c1e205" type="checkbox" ><label for="a1904d4a-9f3d-44ac-b783-e75322c1e205" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="18c0506a-841b-4dd3-99a9-cd0520acd87c" type="checkbox" ><label for="18c0506a-841b-4dd3-99a9-cd0520acd87c" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="973712bf-567c-4061-b1f9-8de6b503437f" type="checkbox" ><label for="973712bf-567c-4061-b1f9-8de6b503437f" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0854a6ab-d6e8-4bed-a14b-d9f081770ff0" type="checkbox" ><label for="0854a6ab-d6e8-4bed-a14b-d9f081770ff0" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e05d7838-75fc-4820-8a85-9b0099ce2b68" type="checkbox" ><label for="e05d7838-75fc-4820-8a85-9b0099ce2b68" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5bd0d031-2251-49c6-9fb0-c8c408da7de1" type="checkbox" ><label for="5bd0d031-2251-49c6-9fb0-c8c408da7de1" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-8296200d-4760-4913-a172-5c1596a7310b {color: black;background-color: white;}#sk-8296200d-4760-4913-a172-5c1596a7310b pre{padding: 0;}#sk-8296200d-4760-4913-a172-5c1596a7310b div.sk-toggleable {background-color: white;}#sk-8296200d-4760-4913-a172-5c1596a7310b label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-8296200d-4760-4913-a172-5c1596a7310b label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-8296200d-4760-4913-a172-5c1596a7310b label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-8296200d-4760-4913-a172-5c1596a7310b div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-8296200d-4760-4913-a172-5c1596a7310b div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-8296200d-4760-4913-a172-5c1596a7310b div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-8296200d-4760-4913-a172-5c1596a7310b input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-8296200d-4760-4913-a172-5c1596a7310b input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-8296200d-4760-4913-a172-5c1596a7310b div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-8296200d-4760-4913-a172-5c1596a7310b div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-8296200d-4760-4913-a172-5c1596a7310b input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-8296200d-4760-4913-a172-5c1596a7310b div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-8296200d-4760-4913-a172-5c1596a7310b div.sk-estimator:hover {background-color: #d4ebff;}#sk-8296200d-4760-4913-a172-5c1596a7310b div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-8296200d-4760-4913-a172-5c1596a7310b div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-8296200d-4760-4913-a172-5c1596a7310b div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-8296200d-4760-4913-a172-5c1596a7310b div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-8296200d-4760-4913-a172-5c1596a7310b div.sk-item {z-index: 1;}#sk-8296200d-4760-4913-a172-5c1596a7310b div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-8296200d-4760-4913-a172-5c1596a7310b div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-8296200d-4760-4913-a172-5c1596a7310b div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-8296200d-4760-4913-a172-5c1596a7310b div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-8296200d-4760-4913-a172-5c1596a7310b div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-8296200d-4760-4913-a172-5c1596a7310b div.sk-parallel-item:only-child::after {width: 0;}#sk-8296200d-4760-4913-a172-5c1596a7310b div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-8296200d-4760-4913-a172-5c1596a7310b div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-8296200d-4760-4913-a172-5c1596a7310b div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-8296200d-4760-4913-a172-5c1596a7310b div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-8296200d-4760-4913-a172-5c1596a7310b div.sk-text-repr-fallback {display: none;}</style><div id="sk-8296200d-4760-4913-a172-5c1596a7310b" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d2e7d38f-eba5-442a-9657-9322360541b8" type="checkbox" ><label for="d2e7d38f-eba5-442a-9657-9322360541b8" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="076a2c0b-87e3-4849-8b8d-f402992e60ab" type="checkbox" ><label for="076a2c0b-87e3-4849-8b8d-f402992e60ab" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a1267375-2d1c-48ac-b353-f3ea1e1b56b7" type="checkbox" ><label for="a1267375-2d1c-48ac-b353-f3ea1e1b56b7" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="58a1633b-c384-411f-b896-6501804d2ecb" type="checkbox" ><label for="58a1633b-c384-411f-b896-6501804d2ecb" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c8b833df-6148-4b3f-b102-c0e79d159906" type="checkbox" ><label for="c8b833df-6148-4b3f-b102-c0e79d159906" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="63fdce43-e9db-4b57-934e-b2e090a705ed" type="checkbox" ><label for="63fdce43-e9db-4b57-934e-b2e090a705ed" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3001621e-7cda-4c23-8655-4b5bbad2eaec" type="checkbox" ><label for="3001621e-7cda-4c23-8655-4b5bbad2eaec" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7f543cfd-c940-4e7e-a826-ae8821a95785" type="checkbox" ><label for="7f543cfd-c940-4e7e-a826-ae8821a95785" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9954132a-8f7b-4b9e-a87e-c83717945f32" type="checkbox" ><label for="9954132a-8f7b-4b9e-a87e-c83717945f32" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.072 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
