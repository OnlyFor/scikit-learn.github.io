
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-e163c817-33b6-48c3-9b02-8be2bba7bc0e {color: black;background-color: white;}#sk-e163c817-33b6-48c3-9b02-8be2bba7bc0e pre{padding: 0;}#sk-e163c817-33b6-48c3-9b02-8be2bba7bc0e div.sk-toggleable {background-color: white;}#sk-e163c817-33b6-48c3-9b02-8be2bba7bc0e label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-e163c817-33b6-48c3-9b02-8be2bba7bc0e label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-e163c817-33b6-48c3-9b02-8be2bba7bc0e label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-e163c817-33b6-48c3-9b02-8be2bba7bc0e div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-e163c817-33b6-48c3-9b02-8be2bba7bc0e div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-e163c817-33b6-48c3-9b02-8be2bba7bc0e div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-e163c817-33b6-48c3-9b02-8be2bba7bc0e input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-e163c817-33b6-48c3-9b02-8be2bba7bc0e input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-e163c817-33b6-48c3-9b02-8be2bba7bc0e div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-e163c817-33b6-48c3-9b02-8be2bba7bc0e div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-e163c817-33b6-48c3-9b02-8be2bba7bc0e input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-e163c817-33b6-48c3-9b02-8be2bba7bc0e div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-e163c817-33b6-48c3-9b02-8be2bba7bc0e div.sk-estimator:hover {background-color: #d4ebff;}#sk-e163c817-33b6-48c3-9b02-8be2bba7bc0e div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-e163c817-33b6-48c3-9b02-8be2bba7bc0e div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-e163c817-33b6-48c3-9b02-8be2bba7bc0e div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-e163c817-33b6-48c3-9b02-8be2bba7bc0e div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-e163c817-33b6-48c3-9b02-8be2bba7bc0e div.sk-item {z-index: 1;}#sk-e163c817-33b6-48c3-9b02-8be2bba7bc0e div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-e163c817-33b6-48c3-9b02-8be2bba7bc0e div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-e163c817-33b6-48c3-9b02-8be2bba7bc0e div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-e163c817-33b6-48c3-9b02-8be2bba7bc0e div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-e163c817-33b6-48c3-9b02-8be2bba7bc0e div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-e163c817-33b6-48c3-9b02-8be2bba7bc0e div.sk-parallel-item:only-child::after {width: 0;}#sk-e163c817-33b6-48c3-9b02-8be2bba7bc0e div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-e163c817-33b6-48c3-9b02-8be2bba7bc0e div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-e163c817-33b6-48c3-9b02-8be2bba7bc0e div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-e163c817-33b6-48c3-9b02-8be2bba7bc0e div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-e163c817-33b6-48c3-9b02-8be2bba7bc0e div.sk-text-repr-fallback {display: none;}</style><div id="sk-e163c817-33b6-48c3-9b02-8be2bba7bc0e" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="26833bdc-61e6-43cc-82f1-b13f837b6227" type="checkbox" ><label for="26833bdc-61e6-43cc-82f1-b13f837b6227" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b0262382-bc74-49d5-a80d-2a4c4c8ba4df" type="checkbox" ><label for="b0262382-bc74-49d5-a80d-2a4c4c8ba4df" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="54536b97-4e9f-42c1-b8eb-1f4c1c489070" type="checkbox" ><label for="54536b97-4e9f-42c1-b8eb-1f4c1c489070" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-614ca29b-f882-4c54-8bcb-2b6c597e281f {color: black;background-color: white;}#sk-614ca29b-f882-4c54-8bcb-2b6c597e281f pre{padding: 0;}#sk-614ca29b-f882-4c54-8bcb-2b6c597e281f div.sk-toggleable {background-color: white;}#sk-614ca29b-f882-4c54-8bcb-2b6c597e281f label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-614ca29b-f882-4c54-8bcb-2b6c597e281f label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-614ca29b-f882-4c54-8bcb-2b6c597e281f label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-614ca29b-f882-4c54-8bcb-2b6c597e281f div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-614ca29b-f882-4c54-8bcb-2b6c597e281f div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-614ca29b-f882-4c54-8bcb-2b6c597e281f div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-614ca29b-f882-4c54-8bcb-2b6c597e281f input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-614ca29b-f882-4c54-8bcb-2b6c597e281f input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-614ca29b-f882-4c54-8bcb-2b6c597e281f div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-614ca29b-f882-4c54-8bcb-2b6c597e281f div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-614ca29b-f882-4c54-8bcb-2b6c597e281f input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-614ca29b-f882-4c54-8bcb-2b6c597e281f div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-614ca29b-f882-4c54-8bcb-2b6c597e281f div.sk-estimator:hover {background-color: #d4ebff;}#sk-614ca29b-f882-4c54-8bcb-2b6c597e281f div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-614ca29b-f882-4c54-8bcb-2b6c597e281f div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-614ca29b-f882-4c54-8bcb-2b6c597e281f div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-614ca29b-f882-4c54-8bcb-2b6c597e281f div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-614ca29b-f882-4c54-8bcb-2b6c597e281f div.sk-item {z-index: 1;}#sk-614ca29b-f882-4c54-8bcb-2b6c597e281f div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-614ca29b-f882-4c54-8bcb-2b6c597e281f div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-614ca29b-f882-4c54-8bcb-2b6c597e281f div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-614ca29b-f882-4c54-8bcb-2b6c597e281f div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-614ca29b-f882-4c54-8bcb-2b6c597e281f div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-614ca29b-f882-4c54-8bcb-2b6c597e281f div.sk-parallel-item:only-child::after {width: 0;}#sk-614ca29b-f882-4c54-8bcb-2b6c597e281f div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-614ca29b-f882-4c54-8bcb-2b6c597e281f div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-614ca29b-f882-4c54-8bcb-2b6c597e281f div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-614ca29b-f882-4c54-8bcb-2b6c597e281f div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-614ca29b-f882-4c54-8bcb-2b6c597e281f div.sk-text-repr-fallback {display: none;}</style><div id="sk-614ca29b-f882-4c54-8bcb-2b6c597e281f" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="350e4b9b-dbb6-40fb-9781-cfb6f10510ce" type="checkbox" ><label for="350e4b9b-dbb6-40fb-9781-cfb6f10510ce" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="75c75638-c37e-488c-a1b0-86a993c9d7ba" type="checkbox" ><label for="75c75638-c37e-488c-a1b0-86a993c9d7ba" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="70fed7cc-c3f7-448e-9e06-d41836844c82" type="checkbox" ><label for="70fed7cc-c3f7-448e-9e06-d41836844c82" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="54732f36-336a-4373-ab50-b50653a8ec40" type="checkbox" ><label for="54732f36-336a-4373-ab50-b50653a8ec40" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-c0d60c36-74e1-45d9-bd5d-28a0fb897702 {color: black;background-color: white;}#sk-c0d60c36-74e1-45d9-bd5d-28a0fb897702 pre{padding: 0;}#sk-c0d60c36-74e1-45d9-bd5d-28a0fb897702 div.sk-toggleable {background-color: white;}#sk-c0d60c36-74e1-45d9-bd5d-28a0fb897702 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-c0d60c36-74e1-45d9-bd5d-28a0fb897702 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-c0d60c36-74e1-45d9-bd5d-28a0fb897702 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-c0d60c36-74e1-45d9-bd5d-28a0fb897702 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-c0d60c36-74e1-45d9-bd5d-28a0fb897702 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-c0d60c36-74e1-45d9-bd5d-28a0fb897702 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-c0d60c36-74e1-45d9-bd5d-28a0fb897702 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-c0d60c36-74e1-45d9-bd5d-28a0fb897702 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-c0d60c36-74e1-45d9-bd5d-28a0fb897702 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-c0d60c36-74e1-45d9-bd5d-28a0fb897702 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-c0d60c36-74e1-45d9-bd5d-28a0fb897702 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-c0d60c36-74e1-45d9-bd5d-28a0fb897702 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-c0d60c36-74e1-45d9-bd5d-28a0fb897702 div.sk-estimator:hover {background-color: #d4ebff;}#sk-c0d60c36-74e1-45d9-bd5d-28a0fb897702 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-c0d60c36-74e1-45d9-bd5d-28a0fb897702 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-c0d60c36-74e1-45d9-bd5d-28a0fb897702 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-c0d60c36-74e1-45d9-bd5d-28a0fb897702 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-c0d60c36-74e1-45d9-bd5d-28a0fb897702 div.sk-item {z-index: 1;}#sk-c0d60c36-74e1-45d9-bd5d-28a0fb897702 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-c0d60c36-74e1-45d9-bd5d-28a0fb897702 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-c0d60c36-74e1-45d9-bd5d-28a0fb897702 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-c0d60c36-74e1-45d9-bd5d-28a0fb897702 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-c0d60c36-74e1-45d9-bd5d-28a0fb897702 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-c0d60c36-74e1-45d9-bd5d-28a0fb897702 div.sk-parallel-item:only-child::after {width: 0;}#sk-c0d60c36-74e1-45d9-bd5d-28a0fb897702 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-c0d60c36-74e1-45d9-bd5d-28a0fb897702 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-c0d60c36-74e1-45d9-bd5d-28a0fb897702 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-c0d60c36-74e1-45d9-bd5d-28a0fb897702 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-c0d60c36-74e1-45d9-bd5d-28a0fb897702 div.sk-text-repr-fallback {display: none;}</style><div id="sk-c0d60c36-74e1-45d9-bd5d-28a0fb897702" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f4c7d20d-9f84-488c-8c8f-8ec7e3013e73" type="checkbox" ><label for="f4c7d20d-9f84-488c-8c8f-8ec7e3013e73" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a889d305-3c00-4085-b9ca-0aeeb3c4180b" type="checkbox" ><label for="a889d305-3c00-4085-b9ca-0aeeb3c4180b" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b38038b8-419a-441c-bfbe-6f9720ecd42c" type="checkbox" ><label for="b38038b8-419a-441c-bfbe-6f9720ecd42c" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-7512263f-b583-4c98-ab55-096caa7830d4 {color: black;background-color: white;}#sk-7512263f-b583-4c98-ab55-096caa7830d4 pre{padding: 0;}#sk-7512263f-b583-4c98-ab55-096caa7830d4 div.sk-toggleable {background-color: white;}#sk-7512263f-b583-4c98-ab55-096caa7830d4 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-7512263f-b583-4c98-ab55-096caa7830d4 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-7512263f-b583-4c98-ab55-096caa7830d4 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-7512263f-b583-4c98-ab55-096caa7830d4 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-7512263f-b583-4c98-ab55-096caa7830d4 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-7512263f-b583-4c98-ab55-096caa7830d4 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-7512263f-b583-4c98-ab55-096caa7830d4 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-7512263f-b583-4c98-ab55-096caa7830d4 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-7512263f-b583-4c98-ab55-096caa7830d4 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-7512263f-b583-4c98-ab55-096caa7830d4 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-7512263f-b583-4c98-ab55-096caa7830d4 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-7512263f-b583-4c98-ab55-096caa7830d4 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-7512263f-b583-4c98-ab55-096caa7830d4 div.sk-estimator:hover {background-color: #d4ebff;}#sk-7512263f-b583-4c98-ab55-096caa7830d4 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-7512263f-b583-4c98-ab55-096caa7830d4 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-7512263f-b583-4c98-ab55-096caa7830d4 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-7512263f-b583-4c98-ab55-096caa7830d4 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-7512263f-b583-4c98-ab55-096caa7830d4 div.sk-item {z-index: 1;}#sk-7512263f-b583-4c98-ab55-096caa7830d4 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-7512263f-b583-4c98-ab55-096caa7830d4 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-7512263f-b583-4c98-ab55-096caa7830d4 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-7512263f-b583-4c98-ab55-096caa7830d4 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-7512263f-b583-4c98-ab55-096caa7830d4 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-7512263f-b583-4c98-ab55-096caa7830d4 div.sk-parallel-item:only-child::after {width: 0;}#sk-7512263f-b583-4c98-ab55-096caa7830d4 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-7512263f-b583-4c98-ab55-096caa7830d4 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-7512263f-b583-4c98-ab55-096caa7830d4 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-7512263f-b583-4c98-ab55-096caa7830d4 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-7512263f-b583-4c98-ab55-096caa7830d4 div.sk-text-repr-fallback {display: none;}</style><div id="sk-7512263f-b583-4c98-ab55-096caa7830d4" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ff902cf4-47b7-4ccf-986b-c07e33bb2426" type="checkbox" ><label for="ff902cf4-47b7-4ccf-986b-c07e33bb2426" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0a3e6e12-77a4-495f-a372-7c39d96073fb" type="checkbox" ><label for="0a3e6e12-77a4-495f-a372-7c39d96073fb" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2c0c73fc-b0de-495e-916b-b3c22cfdf9e5" type="checkbox" ><label for="2c0c73fc-b0de-495e-916b-b3c22cfdf9e5" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6f867ade-e050-4d73-ad34-b78362782c7f" type="checkbox" ><label for="6f867ade-e050-4d73-ad34-b78362782c7f" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cd1022e3-c179-4ddf-831c-7ebdf760b4a2" type="checkbox" ><label for="cd1022e3-c179-4ddf-831c-7ebdf760b4a2" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b0a670a9-71aa-47ad-bca2-0777c6329c44" type="checkbox" ><label for="b0a670a9-71aa-47ad-bca2-0777c6329c44" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1f6b59a8-467e-4994-a606-4bbdba1b6998" type="checkbox" ><label for="1f6b59a8-467e-4994-a606-4bbdba1b6998" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8ecb3f68-15d8-4e40-b9c6-bf9935497814" type="checkbox" ><label for="8ecb3f68-15d8-4e40-b9c6-bf9935497814" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9552325f-5ed9-4776-ad06-69067cc44d18" type="checkbox" ><label for="9552325f-5ed9-4776-ad06-69067cc44d18" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-2844c205-c1f4-4817-aa79-00c090244ff9 {color: black;background-color: white;}#sk-2844c205-c1f4-4817-aa79-00c090244ff9 pre{padding: 0;}#sk-2844c205-c1f4-4817-aa79-00c090244ff9 div.sk-toggleable {background-color: white;}#sk-2844c205-c1f4-4817-aa79-00c090244ff9 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-2844c205-c1f4-4817-aa79-00c090244ff9 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-2844c205-c1f4-4817-aa79-00c090244ff9 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-2844c205-c1f4-4817-aa79-00c090244ff9 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-2844c205-c1f4-4817-aa79-00c090244ff9 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-2844c205-c1f4-4817-aa79-00c090244ff9 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-2844c205-c1f4-4817-aa79-00c090244ff9 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-2844c205-c1f4-4817-aa79-00c090244ff9 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-2844c205-c1f4-4817-aa79-00c090244ff9 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-2844c205-c1f4-4817-aa79-00c090244ff9 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-2844c205-c1f4-4817-aa79-00c090244ff9 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-2844c205-c1f4-4817-aa79-00c090244ff9 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-2844c205-c1f4-4817-aa79-00c090244ff9 div.sk-estimator:hover {background-color: #d4ebff;}#sk-2844c205-c1f4-4817-aa79-00c090244ff9 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-2844c205-c1f4-4817-aa79-00c090244ff9 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-2844c205-c1f4-4817-aa79-00c090244ff9 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-2844c205-c1f4-4817-aa79-00c090244ff9 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-2844c205-c1f4-4817-aa79-00c090244ff9 div.sk-item {z-index: 1;}#sk-2844c205-c1f4-4817-aa79-00c090244ff9 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-2844c205-c1f4-4817-aa79-00c090244ff9 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-2844c205-c1f4-4817-aa79-00c090244ff9 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-2844c205-c1f4-4817-aa79-00c090244ff9 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-2844c205-c1f4-4817-aa79-00c090244ff9 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-2844c205-c1f4-4817-aa79-00c090244ff9 div.sk-parallel-item:only-child::after {width: 0;}#sk-2844c205-c1f4-4817-aa79-00c090244ff9 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-2844c205-c1f4-4817-aa79-00c090244ff9 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-2844c205-c1f4-4817-aa79-00c090244ff9 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-2844c205-c1f4-4817-aa79-00c090244ff9 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-2844c205-c1f4-4817-aa79-00c090244ff9 div.sk-text-repr-fallback {display: none;}</style><div id="sk-2844c205-c1f4-4817-aa79-00c090244ff9" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ea2e9882-f949-45d3-a2dd-bad3e8941f03" type="checkbox" ><label for="ea2e9882-f949-45d3-a2dd-bad3e8941f03" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a010b63d-f887-4ce6-9f0f-c5a6c2ae81ce" type="checkbox" ><label for="a010b63d-f887-4ce6-9f0f-c5a6c2ae81ce" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="be002952-044c-4257-810e-fcc38d277a58" type="checkbox" ><label for="be002952-044c-4257-810e-fcc38d277a58" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ef0f28f6-bc20-4756-a338-31fac1274ad7" type="checkbox" ><label for="ef0f28f6-bc20-4756-a338-31fac1274ad7" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7c346ede-80b7-4602-89f2-17eb83551585" type="checkbox" ><label for="7c346ede-80b7-4602-89f2-17eb83551585" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cb1fa840-b76e-4c1a-85ad-226503e87ece" type="checkbox" ><label for="cb1fa840-b76e-4c1a-85ad-226503e87ece" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d2b2bfd1-81e5-47a2-88e8-56c84be56b0f" type="checkbox" ><label for="d2b2bfd1-81e5-47a2-88e8-56c84be56b0f" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ae96146b-89ae-492f-a5c5-cb593244982c" type="checkbox" ><label for="ae96146b-89ae-492f-a5c5-cb593244982c" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7d7d0eff-0d15-4aa3-85f8-23ed39b7c9fa" type="checkbox" ><label for="7d7d0eff-0d15-4aa3-85f8-23ed39b7c9fa" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.070 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
