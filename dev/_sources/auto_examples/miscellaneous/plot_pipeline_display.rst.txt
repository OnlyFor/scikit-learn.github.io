
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-d0399903-5e65-4f69-8ec5-b7cc125c5fc6 {color: black;background-color: white;}#sk-d0399903-5e65-4f69-8ec5-b7cc125c5fc6 pre{padding: 0;}#sk-d0399903-5e65-4f69-8ec5-b7cc125c5fc6 div.sk-toggleable {background-color: white;}#sk-d0399903-5e65-4f69-8ec5-b7cc125c5fc6 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-d0399903-5e65-4f69-8ec5-b7cc125c5fc6 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-d0399903-5e65-4f69-8ec5-b7cc125c5fc6 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-d0399903-5e65-4f69-8ec5-b7cc125c5fc6 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-d0399903-5e65-4f69-8ec5-b7cc125c5fc6 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-d0399903-5e65-4f69-8ec5-b7cc125c5fc6 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-d0399903-5e65-4f69-8ec5-b7cc125c5fc6 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-d0399903-5e65-4f69-8ec5-b7cc125c5fc6 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-d0399903-5e65-4f69-8ec5-b7cc125c5fc6 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-d0399903-5e65-4f69-8ec5-b7cc125c5fc6 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-d0399903-5e65-4f69-8ec5-b7cc125c5fc6 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-d0399903-5e65-4f69-8ec5-b7cc125c5fc6 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-d0399903-5e65-4f69-8ec5-b7cc125c5fc6 div.sk-estimator:hover {background-color: #d4ebff;}#sk-d0399903-5e65-4f69-8ec5-b7cc125c5fc6 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-d0399903-5e65-4f69-8ec5-b7cc125c5fc6 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-d0399903-5e65-4f69-8ec5-b7cc125c5fc6 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-d0399903-5e65-4f69-8ec5-b7cc125c5fc6 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-d0399903-5e65-4f69-8ec5-b7cc125c5fc6 div.sk-item {z-index: 1;}#sk-d0399903-5e65-4f69-8ec5-b7cc125c5fc6 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-d0399903-5e65-4f69-8ec5-b7cc125c5fc6 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-d0399903-5e65-4f69-8ec5-b7cc125c5fc6 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-d0399903-5e65-4f69-8ec5-b7cc125c5fc6 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-d0399903-5e65-4f69-8ec5-b7cc125c5fc6 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-d0399903-5e65-4f69-8ec5-b7cc125c5fc6 div.sk-parallel-item:only-child::after {width: 0;}#sk-d0399903-5e65-4f69-8ec5-b7cc125c5fc6 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-d0399903-5e65-4f69-8ec5-b7cc125c5fc6 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-d0399903-5e65-4f69-8ec5-b7cc125c5fc6 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-d0399903-5e65-4f69-8ec5-b7cc125c5fc6 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-d0399903-5e65-4f69-8ec5-b7cc125c5fc6 div.sk-text-repr-fallback {display: none;}</style><div id="sk-d0399903-5e65-4f69-8ec5-b7cc125c5fc6" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f5f50b9f-eac1-49db-ad84-30361957f042" type="checkbox" ><label for="f5f50b9f-eac1-49db-ad84-30361957f042" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="dde2f234-58ca-451a-b34c-60ce0708dcf3" type="checkbox" ><label for="dde2f234-58ca-451a-b34c-60ce0708dcf3" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6cbd391d-7ccc-4414-9c4e-937358b627cd" type="checkbox" ><label for="6cbd391d-7ccc-4414-9c4e-937358b627cd" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-11586be1-c019-4a47-9c70-385dd0259a1e {color: black;background-color: white;}#sk-11586be1-c019-4a47-9c70-385dd0259a1e pre{padding: 0;}#sk-11586be1-c019-4a47-9c70-385dd0259a1e div.sk-toggleable {background-color: white;}#sk-11586be1-c019-4a47-9c70-385dd0259a1e label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-11586be1-c019-4a47-9c70-385dd0259a1e label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-11586be1-c019-4a47-9c70-385dd0259a1e label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-11586be1-c019-4a47-9c70-385dd0259a1e div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-11586be1-c019-4a47-9c70-385dd0259a1e div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-11586be1-c019-4a47-9c70-385dd0259a1e div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-11586be1-c019-4a47-9c70-385dd0259a1e input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-11586be1-c019-4a47-9c70-385dd0259a1e input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-11586be1-c019-4a47-9c70-385dd0259a1e div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-11586be1-c019-4a47-9c70-385dd0259a1e div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-11586be1-c019-4a47-9c70-385dd0259a1e input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-11586be1-c019-4a47-9c70-385dd0259a1e div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-11586be1-c019-4a47-9c70-385dd0259a1e div.sk-estimator:hover {background-color: #d4ebff;}#sk-11586be1-c019-4a47-9c70-385dd0259a1e div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-11586be1-c019-4a47-9c70-385dd0259a1e div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-11586be1-c019-4a47-9c70-385dd0259a1e div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-11586be1-c019-4a47-9c70-385dd0259a1e div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-11586be1-c019-4a47-9c70-385dd0259a1e div.sk-item {z-index: 1;}#sk-11586be1-c019-4a47-9c70-385dd0259a1e div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-11586be1-c019-4a47-9c70-385dd0259a1e div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-11586be1-c019-4a47-9c70-385dd0259a1e div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-11586be1-c019-4a47-9c70-385dd0259a1e div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-11586be1-c019-4a47-9c70-385dd0259a1e div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-11586be1-c019-4a47-9c70-385dd0259a1e div.sk-parallel-item:only-child::after {width: 0;}#sk-11586be1-c019-4a47-9c70-385dd0259a1e div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-11586be1-c019-4a47-9c70-385dd0259a1e div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-11586be1-c019-4a47-9c70-385dd0259a1e div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-11586be1-c019-4a47-9c70-385dd0259a1e div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-11586be1-c019-4a47-9c70-385dd0259a1e div.sk-text-repr-fallback {display: none;}</style><div id="sk-11586be1-c019-4a47-9c70-385dd0259a1e" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="389cc715-4f03-4247-a647-2d32a564f6f5" type="checkbox" ><label for="389cc715-4f03-4247-a647-2d32a564f6f5" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4d8244b9-1a26-486b-ac74-e1553b646e94" type="checkbox" ><label for="4d8244b9-1a26-486b-ac74-e1553b646e94" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0c9114ba-edd9-429a-b463-7ac3b2e0d12d" type="checkbox" ><label for="0c9114ba-edd9-429a-b463-7ac3b2e0d12d" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8a53ea2d-1559-4e52-9cae-3812d66a7423" type="checkbox" ><label for="8a53ea2d-1559-4e52-9cae-3812d66a7423" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-9db9b478-5fcc-4eb6-9de9-9cff9498b457 {color: black;background-color: white;}#sk-9db9b478-5fcc-4eb6-9de9-9cff9498b457 pre{padding: 0;}#sk-9db9b478-5fcc-4eb6-9de9-9cff9498b457 div.sk-toggleable {background-color: white;}#sk-9db9b478-5fcc-4eb6-9de9-9cff9498b457 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-9db9b478-5fcc-4eb6-9de9-9cff9498b457 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-9db9b478-5fcc-4eb6-9de9-9cff9498b457 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-9db9b478-5fcc-4eb6-9de9-9cff9498b457 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-9db9b478-5fcc-4eb6-9de9-9cff9498b457 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-9db9b478-5fcc-4eb6-9de9-9cff9498b457 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-9db9b478-5fcc-4eb6-9de9-9cff9498b457 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-9db9b478-5fcc-4eb6-9de9-9cff9498b457 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-9db9b478-5fcc-4eb6-9de9-9cff9498b457 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-9db9b478-5fcc-4eb6-9de9-9cff9498b457 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-9db9b478-5fcc-4eb6-9de9-9cff9498b457 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-9db9b478-5fcc-4eb6-9de9-9cff9498b457 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-9db9b478-5fcc-4eb6-9de9-9cff9498b457 div.sk-estimator:hover {background-color: #d4ebff;}#sk-9db9b478-5fcc-4eb6-9de9-9cff9498b457 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-9db9b478-5fcc-4eb6-9de9-9cff9498b457 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-9db9b478-5fcc-4eb6-9de9-9cff9498b457 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-9db9b478-5fcc-4eb6-9de9-9cff9498b457 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-9db9b478-5fcc-4eb6-9de9-9cff9498b457 div.sk-item {z-index: 1;}#sk-9db9b478-5fcc-4eb6-9de9-9cff9498b457 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-9db9b478-5fcc-4eb6-9de9-9cff9498b457 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-9db9b478-5fcc-4eb6-9de9-9cff9498b457 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-9db9b478-5fcc-4eb6-9de9-9cff9498b457 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-9db9b478-5fcc-4eb6-9de9-9cff9498b457 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-9db9b478-5fcc-4eb6-9de9-9cff9498b457 div.sk-parallel-item:only-child::after {width: 0;}#sk-9db9b478-5fcc-4eb6-9de9-9cff9498b457 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-9db9b478-5fcc-4eb6-9de9-9cff9498b457 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-9db9b478-5fcc-4eb6-9de9-9cff9498b457 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-9db9b478-5fcc-4eb6-9de9-9cff9498b457 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-9db9b478-5fcc-4eb6-9de9-9cff9498b457 div.sk-text-repr-fallback {display: none;}</style><div id="sk-9db9b478-5fcc-4eb6-9de9-9cff9498b457" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0f8bc033-078b-4af2-9e80-0af82fd4870d" type="checkbox" ><label for="0f8bc033-078b-4af2-9e80-0af82fd4870d" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6ff1bffc-8b3d-4c2e-a6bf-9f504c3ac6a5" type="checkbox" ><label for="6ff1bffc-8b3d-4c2e-a6bf-9f504c3ac6a5" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cedd4852-9cbf-4fac-b615-7e23d1e6aa50" type="checkbox" ><label for="cedd4852-9cbf-4fac-b615-7e23d1e6aa50" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-0370df93-5134-4bc8-9e5b-c9ff338e77c6 {color: black;background-color: white;}#sk-0370df93-5134-4bc8-9e5b-c9ff338e77c6 pre{padding: 0;}#sk-0370df93-5134-4bc8-9e5b-c9ff338e77c6 div.sk-toggleable {background-color: white;}#sk-0370df93-5134-4bc8-9e5b-c9ff338e77c6 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-0370df93-5134-4bc8-9e5b-c9ff338e77c6 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-0370df93-5134-4bc8-9e5b-c9ff338e77c6 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-0370df93-5134-4bc8-9e5b-c9ff338e77c6 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-0370df93-5134-4bc8-9e5b-c9ff338e77c6 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-0370df93-5134-4bc8-9e5b-c9ff338e77c6 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-0370df93-5134-4bc8-9e5b-c9ff338e77c6 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-0370df93-5134-4bc8-9e5b-c9ff338e77c6 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-0370df93-5134-4bc8-9e5b-c9ff338e77c6 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-0370df93-5134-4bc8-9e5b-c9ff338e77c6 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-0370df93-5134-4bc8-9e5b-c9ff338e77c6 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-0370df93-5134-4bc8-9e5b-c9ff338e77c6 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-0370df93-5134-4bc8-9e5b-c9ff338e77c6 div.sk-estimator:hover {background-color: #d4ebff;}#sk-0370df93-5134-4bc8-9e5b-c9ff338e77c6 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-0370df93-5134-4bc8-9e5b-c9ff338e77c6 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-0370df93-5134-4bc8-9e5b-c9ff338e77c6 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-0370df93-5134-4bc8-9e5b-c9ff338e77c6 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-0370df93-5134-4bc8-9e5b-c9ff338e77c6 div.sk-item {z-index: 1;}#sk-0370df93-5134-4bc8-9e5b-c9ff338e77c6 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-0370df93-5134-4bc8-9e5b-c9ff338e77c6 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-0370df93-5134-4bc8-9e5b-c9ff338e77c6 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-0370df93-5134-4bc8-9e5b-c9ff338e77c6 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-0370df93-5134-4bc8-9e5b-c9ff338e77c6 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-0370df93-5134-4bc8-9e5b-c9ff338e77c6 div.sk-parallel-item:only-child::after {width: 0;}#sk-0370df93-5134-4bc8-9e5b-c9ff338e77c6 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-0370df93-5134-4bc8-9e5b-c9ff338e77c6 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-0370df93-5134-4bc8-9e5b-c9ff338e77c6 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-0370df93-5134-4bc8-9e5b-c9ff338e77c6 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-0370df93-5134-4bc8-9e5b-c9ff338e77c6 div.sk-text-repr-fallback {display: none;}</style><div id="sk-0370df93-5134-4bc8-9e5b-c9ff338e77c6" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7f5776e2-9e2d-4c57-90d0-5e564ba3afd7" type="checkbox" ><label for="7f5776e2-9e2d-4c57-90d0-5e564ba3afd7" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2d14a338-d264-406c-93b3-cd52c4d0ad37" type="checkbox" ><label for="2d14a338-d264-406c-93b3-cd52c4d0ad37" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="452df2d2-6187-49f5-be4e-70d13fd8275d" type="checkbox" ><label for="452df2d2-6187-49f5-be4e-70d13fd8275d" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f981f5fc-08db-4749-8973-c37633c30d3c" type="checkbox" ><label for="f981f5fc-08db-4749-8973-c37633c30d3c" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="996d1687-2ad5-4608-a407-6fd4e41acb29" type="checkbox" ><label for="996d1687-2ad5-4608-a407-6fd4e41acb29" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2b8adce8-38af-4292-90a6-b5b61c9d3364" type="checkbox" ><label for="2b8adce8-38af-4292-90a6-b5b61c9d3364" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="173a6305-9e31-4890-85b3-c94f6c062068" type="checkbox" ><label for="173a6305-9e31-4890-85b3-c94f6c062068" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="27b0f1f5-23d3-4193-a1d9-f03f402235e5" type="checkbox" ><label for="27b0f1f5-23d3-4193-a1d9-f03f402235e5" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="31f5f93e-4a98-49ce-86a0-0e089dc81e17" type="checkbox" ><label for="31f5f93e-4a98-49ce-86a0-0e089dc81e17" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-3e005eba-6ee5-4063-91a4-c8d6c63eb365 {color: black;background-color: white;}#sk-3e005eba-6ee5-4063-91a4-c8d6c63eb365 pre{padding: 0;}#sk-3e005eba-6ee5-4063-91a4-c8d6c63eb365 div.sk-toggleable {background-color: white;}#sk-3e005eba-6ee5-4063-91a4-c8d6c63eb365 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-3e005eba-6ee5-4063-91a4-c8d6c63eb365 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-3e005eba-6ee5-4063-91a4-c8d6c63eb365 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-3e005eba-6ee5-4063-91a4-c8d6c63eb365 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-3e005eba-6ee5-4063-91a4-c8d6c63eb365 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-3e005eba-6ee5-4063-91a4-c8d6c63eb365 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-3e005eba-6ee5-4063-91a4-c8d6c63eb365 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-3e005eba-6ee5-4063-91a4-c8d6c63eb365 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-3e005eba-6ee5-4063-91a4-c8d6c63eb365 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-3e005eba-6ee5-4063-91a4-c8d6c63eb365 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-3e005eba-6ee5-4063-91a4-c8d6c63eb365 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-3e005eba-6ee5-4063-91a4-c8d6c63eb365 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-3e005eba-6ee5-4063-91a4-c8d6c63eb365 div.sk-estimator:hover {background-color: #d4ebff;}#sk-3e005eba-6ee5-4063-91a4-c8d6c63eb365 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-3e005eba-6ee5-4063-91a4-c8d6c63eb365 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-3e005eba-6ee5-4063-91a4-c8d6c63eb365 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-3e005eba-6ee5-4063-91a4-c8d6c63eb365 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-3e005eba-6ee5-4063-91a4-c8d6c63eb365 div.sk-item {z-index: 1;}#sk-3e005eba-6ee5-4063-91a4-c8d6c63eb365 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-3e005eba-6ee5-4063-91a4-c8d6c63eb365 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-3e005eba-6ee5-4063-91a4-c8d6c63eb365 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-3e005eba-6ee5-4063-91a4-c8d6c63eb365 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-3e005eba-6ee5-4063-91a4-c8d6c63eb365 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-3e005eba-6ee5-4063-91a4-c8d6c63eb365 div.sk-parallel-item:only-child::after {width: 0;}#sk-3e005eba-6ee5-4063-91a4-c8d6c63eb365 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-3e005eba-6ee5-4063-91a4-c8d6c63eb365 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-3e005eba-6ee5-4063-91a4-c8d6c63eb365 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-3e005eba-6ee5-4063-91a4-c8d6c63eb365 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-3e005eba-6ee5-4063-91a4-c8d6c63eb365 div.sk-text-repr-fallback {display: none;}</style><div id="sk-3e005eba-6ee5-4063-91a4-c8d6c63eb365" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9b6f6945-1187-4f62-a0d5-ca31511d4abd" type="checkbox" ><label for="9b6f6945-1187-4f62-a0d5-ca31511d4abd" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5e941509-3916-4859-8a72-3b353b0e3aad" type="checkbox" ><label for="5e941509-3916-4859-8a72-3b353b0e3aad" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b5580cdc-ebf3-4352-b111-018b892c3736" type="checkbox" ><label for="b5580cdc-ebf3-4352-b111-018b892c3736" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f2f5e976-e550-4e80-b22b-ca9d82d1bbd5" type="checkbox" ><label for="f2f5e976-e550-4e80-b22b-ca9d82d1bbd5" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5f600b23-e3f1-4195-aecd-373ec1ba2868" type="checkbox" ><label for="5f600b23-e3f1-4195-aecd-373ec1ba2868" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0b4466fb-c448-4fe2-8dfc-e77d9ea34452" type="checkbox" ><label for="0b4466fb-c448-4fe2-8dfc-e77d9ea34452" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f2257568-aa77-4656-8d55-d064179c1ce5" type="checkbox" ><label for="f2257568-aa77-4656-8d55-d064179c1ce5" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e0c77fc5-361c-4c1e-bdba-4c4253b1cfbf" type="checkbox" ><label for="e0c77fc5-361c-4c1e-bdba-4c4253b1cfbf" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4238f75a-8413-4293-9b42-92eaf1d70a2a" type="checkbox" ><label for="4238f75a-8413-4293-9b42-92eaf1d70a2a" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.080 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
