
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-a89a7d40-ec95-4bd9-90a3-87dc2291d142 {color: black;background-color: white;}#sk-a89a7d40-ec95-4bd9-90a3-87dc2291d142 pre{padding: 0;}#sk-a89a7d40-ec95-4bd9-90a3-87dc2291d142 div.sk-toggleable {background-color: white;}#sk-a89a7d40-ec95-4bd9-90a3-87dc2291d142 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-a89a7d40-ec95-4bd9-90a3-87dc2291d142 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-a89a7d40-ec95-4bd9-90a3-87dc2291d142 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-a89a7d40-ec95-4bd9-90a3-87dc2291d142 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-a89a7d40-ec95-4bd9-90a3-87dc2291d142 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-a89a7d40-ec95-4bd9-90a3-87dc2291d142 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-a89a7d40-ec95-4bd9-90a3-87dc2291d142 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-a89a7d40-ec95-4bd9-90a3-87dc2291d142 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-a89a7d40-ec95-4bd9-90a3-87dc2291d142 div.sk-estimator:hover {background-color: #d4ebff;}#sk-a89a7d40-ec95-4bd9-90a3-87dc2291d142 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-a89a7d40-ec95-4bd9-90a3-87dc2291d142 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-a89a7d40-ec95-4bd9-90a3-87dc2291d142 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-a89a7d40-ec95-4bd9-90a3-87dc2291d142 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-a89a7d40-ec95-4bd9-90a3-87dc2291d142 div.sk-item {z-index: 1;}#sk-a89a7d40-ec95-4bd9-90a3-87dc2291d142 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-a89a7d40-ec95-4bd9-90a3-87dc2291d142 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-a89a7d40-ec95-4bd9-90a3-87dc2291d142 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-a89a7d40-ec95-4bd9-90a3-87dc2291d142 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-a89a7d40-ec95-4bd9-90a3-87dc2291d142 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-a89a7d40-ec95-4bd9-90a3-87dc2291d142 div.sk-parallel-item:only-child::after {width: 0;}#sk-a89a7d40-ec95-4bd9-90a3-87dc2291d142 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-a89a7d40-ec95-4bd9-90a3-87dc2291d142 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-a89a7d40-ec95-4bd9-90a3-87dc2291d142 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-a89a7d40-ec95-4bd9-90a3-87dc2291d142 div.sk-container {display: inline-block;position: relative;}#sk-a89a7d40-ec95-4bd9-90a3-87dc2291d142 div.sk-text-repr-fallback {display: none;}</style><div id="sk-a89a7d40-ec95-4bd9-90a3-87dc2291d142" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cb37293b-ccb0-4416-b4d9-3dda82af37ef" type="checkbox" ><label class="sk-toggleable__label" for="cb37293b-ccb0-4416-b4d9-3dda82af37ef">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a498ff90-60ec-40c5-ad19-87aed79db10d" type="checkbox" ><label class="sk-toggleable__label" for="a498ff90-60ec-40c5-ad19-87aed79db10d">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b9d9ef98-fa44-4ecc-b6d1-758930559a22" type="checkbox" ><label class="sk-toggleable__label" for="b9d9ef98-fa44-4ecc-b6d1-758930559a22">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-44add04f-213a-4fba-aa5c-6df7b7cd1707 {color: black;background-color: white;}#sk-44add04f-213a-4fba-aa5c-6df7b7cd1707 pre{padding: 0;}#sk-44add04f-213a-4fba-aa5c-6df7b7cd1707 div.sk-toggleable {background-color: white;}#sk-44add04f-213a-4fba-aa5c-6df7b7cd1707 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-44add04f-213a-4fba-aa5c-6df7b7cd1707 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-44add04f-213a-4fba-aa5c-6df7b7cd1707 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-44add04f-213a-4fba-aa5c-6df7b7cd1707 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-44add04f-213a-4fba-aa5c-6df7b7cd1707 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-44add04f-213a-4fba-aa5c-6df7b7cd1707 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-44add04f-213a-4fba-aa5c-6df7b7cd1707 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-44add04f-213a-4fba-aa5c-6df7b7cd1707 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-44add04f-213a-4fba-aa5c-6df7b7cd1707 div.sk-estimator:hover {background-color: #d4ebff;}#sk-44add04f-213a-4fba-aa5c-6df7b7cd1707 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-44add04f-213a-4fba-aa5c-6df7b7cd1707 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-44add04f-213a-4fba-aa5c-6df7b7cd1707 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-44add04f-213a-4fba-aa5c-6df7b7cd1707 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-44add04f-213a-4fba-aa5c-6df7b7cd1707 div.sk-item {z-index: 1;}#sk-44add04f-213a-4fba-aa5c-6df7b7cd1707 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-44add04f-213a-4fba-aa5c-6df7b7cd1707 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-44add04f-213a-4fba-aa5c-6df7b7cd1707 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-44add04f-213a-4fba-aa5c-6df7b7cd1707 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-44add04f-213a-4fba-aa5c-6df7b7cd1707 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-44add04f-213a-4fba-aa5c-6df7b7cd1707 div.sk-parallel-item:only-child::after {width: 0;}#sk-44add04f-213a-4fba-aa5c-6df7b7cd1707 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-44add04f-213a-4fba-aa5c-6df7b7cd1707 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-44add04f-213a-4fba-aa5c-6df7b7cd1707 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-44add04f-213a-4fba-aa5c-6df7b7cd1707 div.sk-container {display: inline-block;position: relative;}#sk-44add04f-213a-4fba-aa5c-6df7b7cd1707 div.sk-text-repr-fallback {display: none;}</style><div id="sk-44add04f-213a-4fba-aa5c-6df7b7cd1707" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6cd655c9-8375-49b2-957f-937615c265f7" type="checkbox" ><label class="sk-toggleable__label" for="6cd655c9-8375-49b2-957f-937615c265f7">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('standard_scaler', StandardScaler()),
                    ('polynomial', PolynomialFeatures(degree=3)),
                    ('classifier', LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="40170a79-f313-490f-b68a-158a1f446eaa" type="checkbox" ><label class="sk-toggleable__label" for="40170a79-f313-490f-b68a-158a1f446eaa">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3dcb22af-ce4e-4455-b954-9f21a28d77d5" type="checkbox" ><label class="sk-toggleable__label" for="3dcb22af-ce4e-4455-b954-9f21a28d77d5">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6bc64524-bae8-4cb4-a07b-86196e27b679" type="checkbox" ><label class="sk-toggleable__label" for="6bc64524-bae8-4cb4-a07b-86196e27b679">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-4fa9e5e7-b32a-4688-b291-30b951058080 {color: black;background-color: white;}#sk-4fa9e5e7-b32a-4688-b291-30b951058080 pre{padding: 0;}#sk-4fa9e5e7-b32a-4688-b291-30b951058080 div.sk-toggleable {background-color: white;}#sk-4fa9e5e7-b32a-4688-b291-30b951058080 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-4fa9e5e7-b32a-4688-b291-30b951058080 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-4fa9e5e7-b32a-4688-b291-30b951058080 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-4fa9e5e7-b32a-4688-b291-30b951058080 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-4fa9e5e7-b32a-4688-b291-30b951058080 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-4fa9e5e7-b32a-4688-b291-30b951058080 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-4fa9e5e7-b32a-4688-b291-30b951058080 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-4fa9e5e7-b32a-4688-b291-30b951058080 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-4fa9e5e7-b32a-4688-b291-30b951058080 div.sk-estimator:hover {background-color: #d4ebff;}#sk-4fa9e5e7-b32a-4688-b291-30b951058080 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-4fa9e5e7-b32a-4688-b291-30b951058080 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-4fa9e5e7-b32a-4688-b291-30b951058080 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-4fa9e5e7-b32a-4688-b291-30b951058080 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-4fa9e5e7-b32a-4688-b291-30b951058080 div.sk-item {z-index: 1;}#sk-4fa9e5e7-b32a-4688-b291-30b951058080 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-4fa9e5e7-b32a-4688-b291-30b951058080 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-4fa9e5e7-b32a-4688-b291-30b951058080 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-4fa9e5e7-b32a-4688-b291-30b951058080 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-4fa9e5e7-b32a-4688-b291-30b951058080 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-4fa9e5e7-b32a-4688-b291-30b951058080 div.sk-parallel-item:only-child::after {width: 0;}#sk-4fa9e5e7-b32a-4688-b291-30b951058080 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-4fa9e5e7-b32a-4688-b291-30b951058080 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-4fa9e5e7-b32a-4688-b291-30b951058080 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-4fa9e5e7-b32a-4688-b291-30b951058080 div.sk-container {display: inline-block;position: relative;}#sk-4fa9e5e7-b32a-4688-b291-30b951058080 div.sk-text-repr-fallback {display: none;}</style><div id="sk-4fa9e5e7-b32a-4688-b291-30b951058080" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f449cab2-b637-4ce0-babc-3e654f35f07b" type="checkbox" ><label class="sk-toggleable__label" for="f449cab2-b637-4ce0-babc-3e654f35f07b">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('reduce_dim', PCA(n_components=4)),
                    ('classifier', SVC(kernel='linear'))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8a72d8bc-49f0-4ef1-851d-3f27b2a10cee" type="checkbox" ><label class="sk-toggleable__label" for="8a72d8bc-49f0-4ef1-851d-3f27b2a10cee">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="744f465f-0290-4364-818b-20428a10ec00" type="checkbox" ><label class="sk-toggleable__label" for="744f465f-0290-4364-818b-20428a10ec00">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel='linear')</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-278ba5c7-58d2-40d3-ad01-ded3dfd6bac6 {color: black;background-color: white;}#sk-278ba5c7-58d2-40d3-ad01-ded3dfd6bac6 pre{padding: 0;}#sk-278ba5c7-58d2-40d3-ad01-ded3dfd6bac6 div.sk-toggleable {background-color: white;}#sk-278ba5c7-58d2-40d3-ad01-ded3dfd6bac6 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-278ba5c7-58d2-40d3-ad01-ded3dfd6bac6 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-278ba5c7-58d2-40d3-ad01-ded3dfd6bac6 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-278ba5c7-58d2-40d3-ad01-ded3dfd6bac6 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-278ba5c7-58d2-40d3-ad01-ded3dfd6bac6 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-278ba5c7-58d2-40d3-ad01-ded3dfd6bac6 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-278ba5c7-58d2-40d3-ad01-ded3dfd6bac6 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-278ba5c7-58d2-40d3-ad01-ded3dfd6bac6 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-278ba5c7-58d2-40d3-ad01-ded3dfd6bac6 div.sk-estimator:hover {background-color: #d4ebff;}#sk-278ba5c7-58d2-40d3-ad01-ded3dfd6bac6 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-278ba5c7-58d2-40d3-ad01-ded3dfd6bac6 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-278ba5c7-58d2-40d3-ad01-ded3dfd6bac6 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-278ba5c7-58d2-40d3-ad01-ded3dfd6bac6 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-278ba5c7-58d2-40d3-ad01-ded3dfd6bac6 div.sk-item {z-index: 1;}#sk-278ba5c7-58d2-40d3-ad01-ded3dfd6bac6 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-278ba5c7-58d2-40d3-ad01-ded3dfd6bac6 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-278ba5c7-58d2-40d3-ad01-ded3dfd6bac6 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-278ba5c7-58d2-40d3-ad01-ded3dfd6bac6 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-278ba5c7-58d2-40d3-ad01-ded3dfd6bac6 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-278ba5c7-58d2-40d3-ad01-ded3dfd6bac6 div.sk-parallel-item:only-child::after {width: 0;}#sk-278ba5c7-58d2-40d3-ad01-ded3dfd6bac6 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-278ba5c7-58d2-40d3-ad01-ded3dfd6bac6 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-278ba5c7-58d2-40d3-ad01-ded3dfd6bac6 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-278ba5c7-58d2-40d3-ad01-ded3dfd6bac6 div.sk-container {display: inline-block;position: relative;}#sk-278ba5c7-58d2-40d3-ad01-ded3dfd6bac6 div.sk-text-repr-fallback {display: none;}</style><div id="sk-278ba5c7-58d2-40d3-ad01-ded3dfd6bac6" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="dd8ec599-2fee-410c-bed9-34296d216d83" type="checkbox" ><label class="sk-toggleable__label" for="dd8ec599-2fee-410c-bed9-34296d216d83">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('columntransformer',
                     ColumnTransformer(transformers=[('categorical',
                                                      Pipeline(steps=[('imputation_constant',
                                                                       SimpleImputer(fill_value='missing',
                                                                                     strategy='constant')),
                                                                      ('onehot',
                                                                       OneHotEncoder(handle_unknown='ignore'))]),
                                                      ['state', 'gender']),
                                                     ('numerical',
                                                      Pipeline(steps=[('imputation_mean',
                                                                       SimpleImputer()),
                                                                      ('scaler',
                                                                       StandardScaler())]),
                                                      ['age', 'weight'])])),
                    ('logisticregression', LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cec3ea2b-73d3-40d9-acd0-c738c02bae85" type="checkbox" ><label class="sk-toggleable__label" for="cec3ea2b-73d3-40d9-acd0-c738c02bae85">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('categorical',
                                     Pipeline(steps=[('imputation_constant',
                                                      SimpleImputer(fill_value='missing',
                                                                    strategy='constant')),
                                                     ('onehot',
                                                      OneHotEncoder(handle_unknown='ignore'))]),
                                     ['state', 'gender']),
                                    ('numerical',
                                     Pipeline(steps=[('imputation_mean',
                                                      SimpleImputer()),
                                                     ('scaler', StandardScaler())]),
                                     ['age', 'weight'])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d43b19a4-813b-4995-8a86-618a07598b87" type="checkbox" ><label class="sk-toggleable__label" for="d43b19a4-813b-4995-8a86-618a07598b87">categorical</label><div class="sk-toggleable__content"><pre>['state', 'gender']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6a6e3478-1d73-44b4-918a-6063525f4eea" type="checkbox" ><label class="sk-toggleable__label" for="6a6e3478-1d73-44b4-918a-6063525f4eea">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value='missing', strategy='constant')</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d47b1367-f0f5-4eda-a39a-0f4dbce1e73b" type="checkbox" ><label class="sk-toggleable__label" for="d47b1367-f0f5-4eda-a39a-0f4dbce1e73b">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown='ignore')</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="619a1a17-472d-4814-96e9-3e660c87021c" type="checkbox" ><label class="sk-toggleable__label" for="619a1a17-472d-4814-96e9-3e660c87021c">numerical</label><div class="sk-toggleable__content"><pre>['age', 'weight']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="970c30bc-47db-4093-abfd-c3c94e798883" type="checkbox" ><label class="sk-toggleable__label" for="970c30bc-47db-4093-abfd-c3c94e798883">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4dc6525d-d1c3-4786-a9fa-84c48bbf2488" type="checkbox" ><label class="sk-toggleable__label" for="4dc6525d-d1c3-4786-a9fa-84c48bbf2488">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2cab18c5-0cc1-478d-acfd-0dc3f4a6541e" type="checkbox" ><label class="sk-toggleable__label" for="2cab18c5-0cc1-478d-acfd-0dc3f4a6541e">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-860f614e-b0f7-4f33-8b6d-bde9e5890abc {color: black;background-color: white;}#sk-860f614e-b0f7-4f33-8b6d-bde9e5890abc pre{padding: 0;}#sk-860f614e-b0f7-4f33-8b6d-bde9e5890abc div.sk-toggleable {background-color: white;}#sk-860f614e-b0f7-4f33-8b6d-bde9e5890abc label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-860f614e-b0f7-4f33-8b6d-bde9e5890abc div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-860f614e-b0f7-4f33-8b6d-bde9e5890abc div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-860f614e-b0f7-4f33-8b6d-bde9e5890abc input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-860f614e-b0f7-4f33-8b6d-bde9e5890abc div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-860f614e-b0f7-4f33-8b6d-bde9e5890abc div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-860f614e-b0f7-4f33-8b6d-bde9e5890abc input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-860f614e-b0f7-4f33-8b6d-bde9e5890abc div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-860f614e-b0f7-4f33-8b6d-bde9e5890abc div.sk-estimator:hover {background-color: #d4ebff;}#sk-860f614e-b0f7-4f33-8b6d-bde9e5890abc div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-860f614e-b0f7-4f33-8b6d-bde9e5890abc div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-860f614e-b0f7-4f33-8b6d-bde9e5890abc div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-860f614e-b0f7-4f33-8b6d-bde9e5890abc div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-860f614e-b0f7-4f33-8b6d-bde9e5890abc div.sk-item {z-index: 1;}#sk-860f614e-b0f7-4f33-8b6d-bde9e5890abc div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-860f614e-b0f7-4f33-8b6d-bde9e5890abc div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-860f614e-b0f7-4f33-8b6d-bde9e5890abc div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-860f614e-b0f7-4f33-8b6d-bde9e5890abc div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-860f614e-b0f7-4f33-8b6d-bde9e5890abc div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-860f614e-b0f7-4f33-8b6d-bde9e5890abc div.sk-parallel-item:only-child::after {width: 0;}#sk-860f614e-b0f7-4f33-8b6d-bde9e5890abc div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-860f614e-b0f7-4f33-8b6d-bde9e5890abc div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-860f614e-b0f7-4f33-8b6d-bde9e5890abc div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-860f614e-b0f7-4f33-8b6d-bde9e5890abc div.sk-container {display: inline-block;position: relative;}#sk-860f614e-b0f7-4f33-8b6d-bde9e5890abc div.sk-text-repr-fallback {display: none;}</style><div id="sk-860f614e-b0f7-4f33-8b6d-bde9e5890abc" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="94d8045b-0e03-40e7-9005-fe7d0f89530e" type="checkbox" ><label class="sk-toggleable__label" for="94d8045b-0e03-40e7-9005-fe7d0f89530e">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[('preprocessor',
                                            ColumnTransformer(transformers=[('categorical',
                                                                             Pipeline(steps=[('imputation_constant',
                                                                                              SimpleImputer(fill_value='missing',
                                                                                                            strategy='constant')),
                                                                                             ('onehot',
                                                                                              OneHotEncoder(handle_unknown='ignore'))]),
                                                                             ['state',
                                                                              'gender']),
                                                                            ('numerical',
                                                                             Pipeline(steps=[('imputation_mean',
                                                                                              SimpleImputer()),
                                                                                             ('scaler',
                                                                                              StandardScaler())]),
                                                                             ['age',
                                                                              'weight'])])),
                                           ('classifier',
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={'classifier__criterion': ['gini', 'entropy'],
                             'classifier__max_depth': [4, 5, 6, 7, 8],
                             'classifier__max_features': ['auto', 'sqrt', 'log2'],
                             'classifier__n_estimators': [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="73058372-be35-4a61-bebb-2e5999569d52" type="checkbox" ><label class="sk-toggleable__label" for="73058372-be35-4a61-bebb-2e5999569d52">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('categorical',
                                     Pipeline(steps=[('imputation_constant',
                                                      SimpleImputer(fill_value='missing',
                                                                    strategy='constant')),
                                                     ('onehot',
                                                      OneHotEncoder(handle_unknown='ignore'))]),
                                     ['state', 'gender']),
                                    ('numerical',
                                     Pipeline(steps=[('imputation_mean',
                                                      SimpleImputer()),
                                                     ('scaler', StandardScaler())]),
                                     ['age', 'weight'])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4c2d3ed1-cdb3-491c-8f2a-4bf766168efd" type="checkbox" ><label class="sk-toggleable__label" for="4c2d3ed1-cdb3-491c-8f2a-4bf766168efd">categorical</label><div class="sk-toggleable__content"><pre>['state', 'gender']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1e75465b-587d-4449-acde-a13ff10b3018" type="checkbox" ><label class="sk-toggleable__label" for="1e75465b-587d-4449-acde-a13ff10b3018">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value='missing', strategy='constant')</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bb7cc056-687b-43cf-853b-154463a49b88" type="checkbox" ><label class="sk-toggleable__label" for="bb7cc056-687b-43cf-853b-154463a49b88">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown='ignore')</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="416cc5eb-e5ba-44ea-b7ca-380df3bdeda6" type="checkbox" ><label class="sk-toggleable__label" for="416cc5eb-e5ba-44ea-b7ca-380df3bdeda6">numerical</label><div class="sk-toggleable__content"><pre>['age', 'weight']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d7761cb0-e30f-4066-b690-bea7b8cca431" type="checkbox" ><label class="sk-toggleable__label" for="d7761cb0-e30f-4066-b690-bea7b8cca431">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d3b6c023-e41e-423a-869c-4e67b11e20ee" type="checkbox" ><label class="sk-toggleable__label" for="d3b6c023-e41e-423a-869c-4e67b11e20ee">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5e0ad750-652d-4094-9cce-3bb38da05151" type="checkbox" ><label class="sk-toggleable__label" for="5e0ad750-652d-4094-9cce-3bb38da05151">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.087 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
