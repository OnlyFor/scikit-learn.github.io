
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-4bbe2a9c-7731-49c3-a2d3-248778b9ec22 {color: black;background-color: white;}#sk-4bbe2a9c-7731-49c3-a2d3-248778b9ec22 pre{padding: 0;}#sk-4bbe2a9c-7731-49c3-a2d3-248778b9ec22 div.sk-toggleable {background-color: white;}#sk-4bbe2a9c-7731-49c3-a2d3-248778b9ec22 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-4bbe2a9c-7731-49c3-a2d3-248778b9ec22 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-4bbe2a9c-7731-49c3-a2d3-248778b9ec22 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-4bbe2a9c-7731-49c3-a2d3-248778b9ec22 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-4bbe2a9c-7731-49c3-a2d3-248778b9ec22 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-4bbe2a9c-7731-49c3-a2d3-248778b9ec22 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-4bbe2a9c-7731-49c3-a2d3-248778b9ec22 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-4bbe2a9c-7731-49c3-a2d3-248778b9ec22 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-4bbe2a9c-7731-49c3-a2d3-248778b9ec22 div.sk-estimator:hover {background-color: #d4ebff;}#sk-4bbe2a9c-7731-49c3-a2d3-248778b9ec22 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-4bbe2a9c-7731-49c3-a2d3-248778b9ec22 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-4bbe2a9c-7731-49c3-a2d3-248778b9ec22 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-4bbe2a9c-7731-49c3-a2d3-248778b9ec22 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-4bbe2a9c-7731-49c3-a2d3-248778b9ec22 div.sk-item {z-index: 1;}#sk-4bbe2a9c-7731-49c3-a2d3-248778b9ec22 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-4bbe2a9c-7731-49c3-a2d3-248778b9ec22 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-4bbe2a9c-7731-49c3-a2d3-248778b9ec22 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-4bbe2a9c-7731-49c3-a2d3-248778b9ec22 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-4bbe2a9c-7731-49c3-a2d3-248778b9ec22 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-4bbe2a9c-7731-49c3-a2d3-248778b9ec22 div.sk-parallel-item:only-child::after {width: 0;}#sk-4bbe2a9c-7731-49c3-a2d3-248778b9ec22 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-4bbe2a9c-7731-49c3-a2d3-248778b9ec22 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-4bbe2a9c-7731-49c3-a2d3-248778b9ec22 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-4bbe2a9c-7731-49c3-a2d3-248778b9ec22 div.sk-container {display: inline-block;position: relative;}#sk-4bbe2a9c-7731-49c3-a2d3-248778b9ec22 div.sk-text-repr-fallback {display: none;}</style><div id="sk-4bbe2a9c-7731-49c3-a2d3-248778b9ec22" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="52be67ee-d6c1-446e-b601-82946285ca7b" type="checkbox" ><label class="sk-toggleable__label" for="52be67ee-d6c1-446e-b601-82946285ca7b">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1eae199e-182c-4b87-9dbb-0f0e86a0e8f0" type="checkbox" ><label class="sk-toggleable__label" for="1eae199e-182c-4b87-9dbb-0f0e86a0e8f0">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="33d252eb-50b2-44ce-8d96-fe183e9829ea" type="checkbox" ><label class="sk-toggleable__label" for="33d252eb-50b2-44ce-8d96-fe183e9829ea">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-fef161e9-6274-4a3e-b2f1-89903fb02dad {color: black;background-color: white;}#sk-fef161e9-6274-4a3e-b2f1-89903fb02dad pre{padding: 0;}#sk-fef161e9-6274-4a3e-b2f1-89903fb02dad div.sk-toggleable {background-color: white;}#sk-fef161e9-6274-4a3e-b2f1-89903fb02dad label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-fef161e9-6274-4a3e-b2f1-89903fb02dad div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-fef161e9-6274-4a3e-b2f1-89903fb02dad div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-fef161e9-6274-4a3e-b2f1-89903fb02dad input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-fef161e9-6274-4a3e-b2f1-89903fb02dad div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-fef161e9-6274-4a3e-b2f1-89903fb02dad div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-fef161e9-6274-4a3e-b2f1-89903fb02dad input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-fef161e9-6274-4a3e-b2f1-89903fb02dad div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-fef161e9-6274-4a3e-b2f1-89903fb02dad div.sk-estimator:hover {background-color: #d4ebff;}#sk-fef161e9-6274-4a3e-b2f1-89903fb02dad div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-fef161e9-6274-4a3e-b2f1-89903fb02dad div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-fef161e9-6274-4a3e-b2f1-89903fb02dad div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-fef161e9-6274-4a3e-b2f1-89903fb02dad div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-fef161e9-6274-4a3e-b2f1-89903fb02dad div.sk-item {z-index: 1;}#sk-fef161e9-6274-4a3e-b2f1-89903fb02dad div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-fef161e9-6274-4a3e-b2f1-89903fb02dad div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-fef161e9-6274-4a3e-b2f1-89903fb02dad div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-fef161e9-6274-4a3e-b2f1-89903fb02dad div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-fef161e9-6274-4a3e-b2f1-89903fb02dad div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-fef161e9-6274-4a3e-b2f1-89903fb02dad div.sk-parallel-item:only-child::after {width: 0;}#sk-fef161e9-6274-4a3e-b2f1-89903fb02dad div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-fef161e9-6274-4a3e-b2f1-89903fb02dad div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-fef161e9-6274-4a3e-b2f1-89903fb02dad div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-fef161e9-6274-4a3e-b2f1-89903fb02dad div.sk-container {display: inline-block;position: relative;}#sk-fef161e9-6274-4a3e-b2f1-89903fb02dad div.sk-text-repr-fallback {display: none;}</style><div id="sk-fef161e9-6274-4a3e-b2f1-89903fb02dad" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a54bb6a8-ace1-4509-bb01-75a1b2c81fa2" type="checkbox" ><label class="sk-toggleable__label" for="a54bb6a8-ace1-4509-bb01-75a1b2c81fa2">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('standard_scaler', StandardScaler()),
                    ('polynomial', PolynomialFeatures(degree=3)),
                    ('classifier', LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="08595126-9aec-4ce8-b011-d2192b501667" type="checkbox" ><label class="sk-toggleable__label" for="08595126-9aec-4ce8-b011-d2192b501667">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f0b4725c-36f0-4006-b31f-3874fdd5803f" type="checkbox" ><label class="sk-toggleable__label" for="f0b4725c-36f0-4006-b31f-3874fdd5803f">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="792f1eff-db40-47f8-a01d-6211b32e9521" type="checkbox" ><label class="sk-toggleable__label" for="792f1eff-db40-47f8-a01d-6211b32e9521">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-e66d3b8c-56f5-4cb3-a783-a0b599624c79 {color: black;background-color: white;}#sk-e66d3b8c-56f5-4cb3-a783-a0b599624c79 pre{padding: 0;}#sk-e66d3b8c-56f5-4cb3-a783-a0b599624c79 div.sk-toggleable {background-color: white;}#sk-e66d3b8c-56f5-4cb3-a783-a0b599624c79 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-e66d3b8c-56f5-4cb3-a783-a0b599624c79 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-e66d3b8c-56f5-4cb3-a783-a0b599624c79 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-e66d3b8c-56f5-4cb3-a783-a0b599624c79 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-e66d3b8c-56f5-4cb3-a783-a0b599624c79 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-e66d3b8c-56f5-4cb3-a783-a0b599624c79 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-e66d3b8c-56f5-4cb3-a783-a0b599624c79 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-e66d3b8c-56f5-4cb3-a783-a0b599624c79 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-e66d3b8c-56f5-4cb3-a783-a0b599624c79 div.sk-estimator:hover {background-color: #d4ebff;}#sk-e66d3b8c-56f5-4cb3-a783-a0b599624c79 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-e66d3b8c-56f5-4cb3-a783-a0b599624c79 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-e66d3b8c-56f5-4cb3-a783-a0b599624c79 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-e66d3b8c-56f5-4cb3-a783-a0b599624c79 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-e66d3b8c-56f5-4cb3-a783-a0b599624c79 div.sk-item {z-index: 1;}#sk-e66d3b8c-56f5-4cb3-a783-a0b599624c79 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-e66d3b8c-56f5-4cb3-a783-a0b599624c79 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-e66d3b8c-56f5-4cb3-a783-a0b599624c79 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-e66d3b8c-56f5-4cb3-a783-a0b599624c79 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-e66d3b8c-56f5-4cb3-a783-a0b599624c79 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-e66d3b8c-56f5-4cb3-a783-a0b599624c79 div.sk-parallel-item:only-child::after {width: 0;}#sk-e66d3b8c-56f5-4cb3-a783-a0b599624c79 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-e66d3b8c-56f5-4cb3-a783-a0b599624c79 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-e66d3b8c-56f5-4cb3-a783-a0b599624c79 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-e66d3b8c-56f5-4cb3-a783-a0b599624c79 div.sk-container {display: inline-block;position: relative;}#sk-e66d3b8c-56f5-4cb3-a783-a0b599624c79 div.sk-text-repr-fallback {display: none;}</style><div id="sk-e66d3b8c-56f5-4cb3-a783-a0b599624c79" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5b0408ba-3299-4288-a31f-6bed95cb8fec" type="checkbox" ><label class="sk-toggleable__label" for="5b0408ba-3299-4288-a31f-6bed95cb8fec">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('reduce_dim', PCA(n_components=4)),
                    ('classifier', SVC(kernel='linear'))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3e47fccf-a5dd-4696-81f4-6384d302079a" type="checkbox" ><label class="sk-toggleable__label" for="3e47fccf-a5dd-4696-81f4-6384d302079a">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2dbf567b-5878-4a45-9eba-8be3eef147c8" type="checkbox" ><label class="sk-toggleable__label" for="2dbf567b-5878-4a45-9eba-8be3eef147c8">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel='linear')</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-b33056f3-fd58-4699-a815-30e6b3cddeb7 {color: black;background-color: white;}#sk-b33056f3-fd58-4699-a815-30e6b3cddeb7 pre{padding: 0;}#sk-b33056f3-fd58-4699-a815-30e6b3cddeb7 div.sk-toggleable {background-color: white;}#sk-b33056f3-fd58-4699-a815-30e6b3cddeb7 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-b33056f3-fd58-4699-a815-30e6b3cddeb7 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-b33056f3-fd58-4699-a815-30e6b3cddeb7 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-b33056f3-fd58-4699-a815-30e6b3cddeb7 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-b33056f3-fd58-4699-a815-30e6b3cddeb7 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b33056f3-fd58-4699-a815-30e6b3cddeb7 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b33056f3-fd58-4699-a815-30e6b3cddeb7 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-b33056f3-fd58-4699-a815-30e6b3cddeb7 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-b33056f3-fd58-4699-a815-30e6b3cddeb7 div.sk-estimator:hover {background-color: #d4ebff;}#sk-b33056f3-fd58-4699-a815-30e6b3cddeb7 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-b33056f3-fd58-4699-a815-30e6b3cddeb7 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-b33056f3-fd58-4699-a815-30e6b3cddeb7 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b33056f3-fd58-4699-a815-30e6b3cddeb7 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-b33056f3-fd58-4699-a815-30e6b3cddeb7 div.sk-item {z-index: 1;}#sk-b33056f3-fd58-4699-a815-30e6b3cddeb7 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-b33056f3-fd58-4699-a815-30e6b3cddeb7 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b33056f3-fd58-4699-a815-30e6b3cddeb7 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-b33056f3-fd58-4699-a815-30e6b3cddeb7 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-b33056f3-fd58-4699-a815-30e6b3cddeb7 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-b33056f3-fd58-4699-a815-30e6b3cddeb7 div.sk-parallel-item:only-child::after {width: 0;}#sk-b33056f3-fd58-4699-a815-30e6b3cddeb7 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-b33056f3-fd58-4699-a815-30e6b3cddeb7 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-b33056f3-fd58-4699-a815-30e6b3cddeb7 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-b33056f3-fd58-4699-a815-30e6b3cddeb7 div.sk-container {display: inline-block;position: relative;}#sk-b33056f3-fd58-4699-a815-30e6b3cddeb7 div.sk-text-repr-fallback {display: none;}</style><div id="sk-b33056f3-fd58-4699-a815-30e6b3cddeb7" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="42ddef4a-0e62-4520-b1e0-059b933c1012" type="checkbox" ><label class="sk-toggleable__label" for="42ddef4a-0e62-4520-b1e0-059b933c1012">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('columntransformer',
                     ColumnTransformer(transformers=[('categorical',
                                                      Pipeline(steps=[('imputation_constant',
                                                                       SimpleImputer(fill_value='missing',
                                                                                     strategy='constant')),
                                                                      ('onehot',
                                                                       OneHotEncoder(handle_unknown='ignore'))]),
                                                      ['state', 'gender']),
                                                     ('numerical',
                                                      Pipeline(steps=[('imputation_mean',
                                                                       SimpleImputer()),
                                                                      ('scaler',
                                                                       StandardScaler())]),
                                                      ['age', 'weight'])])),
                    ('logisticregression', LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fc15eb6f-d4f7-42d3-a737-c04eec4ed2f9" type="checkbox" ><label class="sk-toggleable__label" for="fc15eb6f-d4f7-42d3-a737-c04eec4ed2f9">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('categorical',
                                     Pipeline(steps=[('imputation_constant',
                                                      SimpleImputer(fill_value='missing',
                                                                    strategy='constant')),
                                                     ('onehot',
                                                      OneHotEncoder(handle_unknown='ignore'))]),
                                     ['state', 'gender']),
                                    ('numerical',
                                     Pipeline(steps=[('imputation_mean',
                                                      SimpleImputer()),
                                                     ('scaler', StandardScaler())]),
                                     ['age', 'weight'])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2c42ac24-684a-41e3-8831-f6f5d126a26a" type="checkbox" ><label class="sk-toggleable__label" for="2c42ac24-684a-41e3-8831-f6f5d126a26a">categorical</label><div class="sk-toggleable__content"><pre>['state', 'gender']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="79f6ef36-0ff5-498d-b1b1-307bf3341cbf" type="checkbox" ><label class="sk-toggleable__label" for="79f6ef36-0ff5-498d-b1b1-307bf3341cbf">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value='missing', strategy='constant')</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8305284f-900f-4c16-a222-e2fc71dafa82" type="checkbox" ><label class="sk-toggleable__label" for="8305284f-900f-4c16-a222-e2fc71dafa82">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown='ignore')</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="24bd1a91-07f7-46a2-a50a-aaaf6a6a2503" type="checkbox" ><label class="sk-toggleable__label" for="24bd1a91-07f7-46a2-a50a-aaaf6a6a2503">numerical</label><div class="sk-toggleable__content"><pre>['age', 'weight']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9925df2d-f3dd-4919-b53f-83fa98d96e52" type="checkbox" ><label class="sk-toggleable__label" for="9925df2d-f3dd-4919-b53f-83fa98d96e52">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cf612350-07fd-4a1e-a7a0-12bdf01a943e" type="checkbox" ><label class="sk-toggleable__label" for="cf612350-07fd-4a1e-a7a0-12bdf01a943e">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8a656104-88ed-4d5e-8acd-9fddca1a5c84" type="checkbox" ><label class="sk-toggleable__label" for="8a656104-88ed-4d5e-8acd-9fddca1a5c84">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-87d38e56-9eee-480a-ad93-fad0b7000ffd {color: black;background-color: white;}#sk-87d38e56-9eee-480a-ad93-fad0b7000ffd pre{padding: 0;}#sk-87d38e56-9eee-480a-ad93-fad0b7000ffd div.sk-toggleable {background-color: white;}#sk-87d38e56-9eee-480a-ad93-fad0b7000ffd label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-87d38e56-9eee-480a-ad93-fad0b7000ffd div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-87d38e56-9eee-480a-ad93-fad0b7000ffd div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-87d38e56-9eee-480a-ad93-fad0b7000ffd input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-87d38e56-9eee-480a-ad93-fad0b7000ffd div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-87d38e56-9eee-480a-ad93-fad0b7000ffd div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-87d38e56-9eee-480a-ad93-fad0b7000ffd input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-87d38e56-9eee-480a-ad93-fad0b7000ffd div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-87d38e56-9eee-480a-ad93-fad0b7000ffd div.sk-estimator:hover {background-color: #d4ebff;}#sk-87d38e56-9eee-480a-ad93-fad0b7000ffd div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-87d38e56-9eee-480a-ad93-fad0b7000ffd div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-87d38e56-9eee-480a-ad93-fad0b7000ffd div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-87d38e56-9eee-480a-ad93-fad0b7000ffd div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-87d38e56-9eee-480a-ad93-fad0b7000ffd div.sk-item {z-index: 1;}#sk-87d38e56-9eee-480a-ad93-fad0b7000ffd div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-87d38e56-9eee-480a-ad93-fad0b7000ffd div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-87d38e56-9eee-480a-ad93-fad0b7000ffd div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-87d38e56-9eee-480a-ad93-fad0b7000ffd div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-87d38e56-9eee-480a-ad93-fad0b7000ffd div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-87d38e56-9eee-480a-ad93-fad0b7000ffd div.sk-parallel-item:only-child::after {width: 0;}#sk-87d38e56-9eee-480a-ad93-fad0b7000ffd div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-87d38e56-9eee-480a-ad93-fad0b7000ffd div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-87d38e56-9eee-480a-ad93-fad0b7000ffd div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-87d38e56-9eee-480a-ad93-fad0b7000ffd div.sk-container {display: inline-block;position: relative;}#sk-87d38e56-9eee-480a-ad93-fad0b7000ffd div.sk-text-repr-fallback {display: none;}</style><div id="sk-87d38e56-9eee-480a-ad93-fad0b7000ffd" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9c8900a4-4c4c-4e27-8b46-03041aed1ef9" type="checkbox" ><label class="sk-toggleable__label" for="9c8900a4-4c4c-4e27-8b46-03041aed1ef9">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[('preprocessor',
                                            ColumnTransformer(transformers=[('categorical',
                                                                             Pipeline(steps=[('imputation_constant',
                                                                                              SimpleImputer(fill_value='missing',
                                                                                                            strategy='constant')),
                                                                                             ('onehot',
                                                                                              OneHotEncoder(handle_unknown='ignore'))]),
                                                                             ['state',
                                                                              'gender']),
                                                                            ('numerical',
                                                                             Pipeline(steps=[('imputation_mean',
                                                                                              SimpleImputer()),
                                                                                             ('scaler',
                                                                                              StandardScaler())]),
                                                                             ['age',
                                                                              'weight'])])),
                                           ('classifier',
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={'classifier__criterion': ['gini', 'entropy'],
                             'classifier__max_depth': [4, 5, 6, 7, 8],
                             'classifier__max_features': ['auto', 'sqrt', 'log2'],
                             'classifier__n_estimators': [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9740cd9e-cba5-40a7-a576-aae0856f6c6b" type="checkbox" ><label class="sk-toggleable__label" for="9740cd9e-cba5-40a7-a576-aae0856f6c6b">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('categorical',
                                     Pipeline(steps=[('imputation_constant',
                                                      SimpleImputer(fill_value='missing',
                                                                    strategy='constant')),
                                                     ('onehot',
                                                      OneHotEncoder(handle_unknown='ignore'))]),
                                     ['state', 'gender']),
                                    ('numerical',
                                     Pipeline(steps=[('imputation_mean',
                                                      SimpleImputer()),
                                                     ('scaler', StandardScaler())]),
                                     ['age', 'weight'])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0e08034c-99f2-4d63-8758-b7e4fe6ee85f" type="checkbox" ><label class="sk-toggleable__label" for="0e08034c-99f2-4d63-8758-b7e4fe6ee85f">categorical</label><div class="sk-toggleable__content"><pre>['state', 'gender']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="14e2d74d-7578-4cbb-ad1b-458db4aec1be" type="checkbox" ><label class="sk-toggleable__label" for="14e2d74d-7578-4cbb-ad1b-458db4aec1be">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value='missing', strategy='constant')</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="458b674e-ef40-4fe9-9753-76a003cc9584" type="checkbox" ><label class="sk-toggleable__label" for="458b674e-ef40-4fe9-9753-76a003cc9584">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown='ignore')</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a7d380b7-9431-4e81-8a43-fbd0642e813f" type="checkbox" ><label class="sk-toggleable__label" for="a7d380b7-9431-4e81-8a43-fbd0642e813f">numerical</label><div class="sk-toggleable__content"><pre>['age', 'weight']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="02cc6dd5-d396-4c10-ab2c-cf663cd8496e" type="checkbox" ><label class="sk-toggleable__label" for="02cc6dd5-d396-4c10-ab2c-cf663cd8496e">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bd942d90-3623-4472-95f2-6502f979f7ad" type="checkbox" ><label class="sk-toggleable__label" for="bd942d90-3623-4472-95f2-6502f979f7ad">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8c6869ee-cc09-4856-b83d-570ba29c3e65" type="checkbox" ><label class="sk-toggleable__label" for="8c6869ee-cc09-4856-b83d-570ba29c3e65">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.076 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
