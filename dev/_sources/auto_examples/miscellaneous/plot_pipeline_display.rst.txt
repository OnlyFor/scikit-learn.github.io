
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-63992f2e-185b-4e96-b923-a0d39f995ec8 {color: black;background-color: white;}#sk-63992f2e-185b-4e96-b923-a0d39f995ec8 pre{padding: 0;}#sk-63992f2e-185b-4e96-b923-a0d39f995ec8 div.sk-toggleable {background-color: white;}#sk-63992f2e-185b-4e96-b923-a0d39f995ec8 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-63992f2e-185b-4e96-b923-a0d39f995ec8 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-63992f2e-185b-4e96-b923-a0d39f995ec8 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-63992f2e-185b-4e96-b923-a0d39f995ec8 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-63992f2e-185b-4e96-b923-a0d39f995ec8 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-63992f2e-185b-4e96-b923-a0d39f995ec8 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-63992f2e-185b-4e96-b923-a0d39f995ec8 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-63992f2e-185b-4e96-b923-a0d39f995ec8 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-63992f2e-185b-4e96-b923-a0d39f995ec8 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-63992f2e-185b-4e96-b923-a0d39f995ec8 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-63992f2e-185b-4e96-b923-a0d39f995ec8 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-63992f2e-185b-4e96-b923-a0d39f995ec8 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-63992f2e-185b-4e96-b923-a0d39f995ec8 div.sk-estimator:hover {background-color: #d4ebff;}#sk-63992f2e-185b-4e96-b923-a0d39f995ec8 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-63992f2e-185b-4e96-b923-a0d39f995ec8 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-63992f2e-185b-4e96-b923-a0d39f995ec8 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-63992f2e-185b-4e96-b923-a0d39f995ec8 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-63992f2e-185b-4e96-b923-a0d39f995ec8 div.sk-item {z-index: 1;}#sk-63992f2e-185b-4e96-b923-a0d39f995ec8 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-63992f2e-185b-4e96-b923-a0d39f995ec8 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-63992f2e-185b-4e96-b923-a0d39f995ec8 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-63992f2e-185b-4e96-b923-a0d39f995ec8 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-63992f2e-185b-4e96-b923-a0d39f995ec8 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-63992f2e-185b-4e96-b923-a0d39f995ec8 div.sk-parallel-item:only-child::after {width: 0;}#sk-63992f2e-185b-4e96-b923-a0d39f995ec8 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-63992f2e-185b-4e96-b923-a0d39f995ec8 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-63992f2e-185b-4e96-b923-a0d39f995ec8 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-63992f2e-185b-4e96-b923-a0d39f995ec8 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-63992f2e-185b-4e96-b923-a0d39f995ec8 div.sk-text-repr-fallback {display: none;}</style><div id="sk-63992f2e-185b-4e96-b923-a0d39f995ec8" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c7118c8b-6e51-4b36-a276-3eaa49617748" type="checkbox" ><label for="c7118c8b-6e51-4b36-a276-3eaa49617748" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c47a03ff-79db-4a36-8436-c6ccb105055d" type="checkbox" ><label for="c47a03ff-79db-4a36-8436-c6ccb105055d" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c7ff19b5-3693-4386-b3bc-781717e30237" type="checkbox" ><label for="c7ff19b5-3693-4386-b3bc-781717e30237" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-49491334-a039-4c0d-89ff-7fee607305c6 {color: black;background-color: white;}#sk-49491334-a039-4c0d-89ff-7fee607305c6 pre{padding: 0;}#sk-49491334-a039-4c0d-89ff-7fee607305c6 div.sk-toggleable {background-color: white;}#sk-49491334-a039-4c0d-89ff-7fee607305c6 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-49491334-a039-4c0d-89ff-7fee607305c6 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-49491334-a039-4c0d-89ff-7fee607305c6 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-49491334-a039-4c0d-89ff-7fee607305c6 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-49491334-a039-4c0d-89ff-7fee607305c6 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-49491334-a039-4c0d-89ff-7fee607305c6 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-49491334-a039-4c0d-89ff-7fee607305c6 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-49491334-a039-4c0d-89ff-7fee607305c6 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-49491334-a039-4c0d-89ff-7fee607305c6 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-49491334-a039-4c0d-89ff-7fee607305c6 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-49491334-a039-4c0d-89ff-7fee607305c6 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-49491334-a039-4c0d-89ff-7fee607305c6 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-49491334-a039-4c0d-89ff-7fee607305c6 div.sk-estimator:hover {background-color: #d4ebff;}#sk-49491334-a039-4c0d-89ff-7fee607305c6 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-49491334-a039-4c0d-89ff-7fee607305c6 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-49491334-a039-4c0d-89ff-7fee607305c6 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-49491334-a039-4c0d-89ff-7fee607305c6 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-49491334-a039-4c0d-89ff-7fee607305c6 div.sk-item {z-index: 1;}#sk-49491334-a039-4c0d-89ff-7fee607305c6 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-49491334-a039-4c0d-89ff-7fee607305c6 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-49491334-a039-4c0d-89ff-7fee607305c6 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-49491334-a039-4c0d-89ff-7fee607305c6 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-49491334-a039-4c0d-89ff-7fee607305c6 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-49491334-a039-4c0d-89ff-7fee607305c6 div.sk-parallel-item:only-child::after {width: 0;}#sk-49491334-a039-4c0d-89ff-7fee607305c6 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-49491334-a039-4c0d-89ff-7fee607305c6 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-49491334-a039-4c0d-89ff-7fee607305c6 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-49491334-a039-4c0d-89ff-7fee607305c6 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-49491334-a039-4c0d-89ff-7fee607305c6 div.sk-text-repr-fallback {display: none;}</style><div id="sk-49491334-a039-4c0d-89ff-7fee607305c6" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="73025fd9-213a-4939-b084-53c315a809aa" type="checkbox" ><label for="73025fd9-213a-4939-b084-53c315a809aa" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0a88295f-78e5-4373-b25e-f262655d79d4" type="checkbox" ><label for="0a88295f-78e5-4373-b25e-f262655d79d4" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="51da32f5-d561-4a0f-bca4-76686164367c" type="checkbox" ><label for="51da32f5-d561-4a0f-bca4-76686164367c" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e3e0c2c3-c9e3-44b3-b66b-254fdf11a437" type="checkbox" ><label for="e3e0c2c3-c9e3-44b3-b66b-254fdf11a437" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-b3adc51b-50f5-4657-8ac5-0b414f8a9d71 {color: black;background-color: white;}#sk-b3adc51b-50f5-4657-8ac5-0b414f8a9d71 pre{padding: 0;}#sk-b3adc51b-50f5-4657-8ac5-0b414f8a9d71 div.sk-toggleable {background-color: white;}#sk-b3adc51b-50f5-4657-8ac5-0b414f8a9d71 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-b3adc51b-50f5-4657-8ac5-0b414f8a9d71 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-b3adc51b-50f5-4657-8ac5-0b414f8a9d71 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-b3adc51b-50f5-4657-8ac5-0b414f8a9d71 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-b3adc51b-50f5-4657-8ac5-0b414f8a9d71 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-b3adc51b-50f5-4657-8ac5-0b414f8a9d71 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-b3adc51b-50f5-4657-8ac5-0b414f8a9d71 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-b3adc51b-50f5-4657-8ac5-0b414f8a9d71 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-b3adc51b-50f5-4657-8ac5-0b414f8a9d71 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b3adc51b-50f5-4657-8ac5-0b414f8a9d71 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b3adc51b-50f5-4657-8ac5-0b414f8a9d71 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-b3adc51b-50f5-4657-8ac5-0b414f8a9d71 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-b3adc51b-50f5-4657-8ac5-0b414f8a9d71 div.sk-estimator:hover {background-color: #d4ebff;}#sk-b3adc51b-50f5-4657-8ac5-0b414f8a9d71 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-b3adc51b-50f5-4657-8ac5-0b414f8a9d71 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-b3adc51b-50f5-4657-8ac5-0b414f8a9d71 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b3adc51b-50f5-4657-8ac5-0b414f8a9d71 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-b3adc51b-50f5-4657-8ac5-0b414f8a9d71 div.sk-item {z-index: 1;}#sk-b3adc51b-50f5-4657-8ac5-0b414f8a9d71 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-b3adc51b-50f5-4657-8ac5-0b414f8a9d71 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b3adc51b-50f5-4657-8ac5-0b414f8a9d71 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-b3adc51b-50f5-4657-8ac5-0b414f8a9d71 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-b3adc51b-50f5-4657-8ac5-0b414f8a9d71 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-b3adc51b-50f5-4657-8ac5-0b414f8a9d71 div.sk-parallel-item:only-child::after {width: 0;}#sk-b3adc51b-50f5-4657-8ac5-0b414f8a9d71 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-b3adc51b-50f5-4657-8ac5-0b414f8a9d71 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-b3adc51b-50f5-4657-8ac5-0b414f8a9d71 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-b3adc51b-50f5-4657-8ac5-0b414f8a9d71 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-b3adc51b-50f5-4657-8ac5-0b414f8a9d71 div.sk-text-repr-fallback {display: none;}</style><div id="sk-b3adc51b-50f5-4657-8ac5-0b414f8a9d71" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c987d6ed-1dbe-41b1-ae44-aa0d007ab311" type="checkbox" ><label for="c987d6ed-1dbe-41b1-ae44-aa0d007ab311" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="95b984d0-7c27-49fe-adc4-a2c3d432210f" type="checkbox" ><label for="95b984d0-7c27-49fe-adc4-a2c3d432210f" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fb7a5a41-64fd-4d79-97a7-c67ba4efffdd" type="checkbox" ><label for="fb7a5a41-64fd-4d79-97a7-c67ba4efffdd" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-be4d7a3e-0667-423f-8a5d-d19d8c6bcf08 {color: black;background-color: white;}#sk-be4d7a3e-0667-423f-8a5d-d19d8c6bcf08 pre{padding: 0;}#sk-be4d7a3e-0667-423f-8a5d-d19d8c6bcf08 div.sk-toggleable {background-color: white;}#sk-be4d7a3e-0667-423f-8a5d-d19d8c6bcf08 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-be4d7a3e-0667-423f-8a5d-d19d8c6bcf08 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-be4d7a3e-0667-423f-8a5d-d19d8c6bcf08 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-be4d7a3e-0667-423f-8a5d-d19d8c6bcf08 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-be4d7a3e-0667-423f-8a5d-d19d8c6bcf08 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-be4d7a3e-0667-423f-8a5d-d19d8c6bcf08 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-be4d7a3e-0667-423f-8a5d-d19d8c6bcf08 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-be4d7a3e-0667-423f-8a5d-d19d8c6bcf08 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-be4d7a3e-0667-423f-8a5d-d19d8c6bcf08 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-be4d7a3e-0667-423f-8a5d-d19d8c6bcf08 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-be4d7a3e-0667-423f-8a5d-d19d8c6bcf08 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-be4d7a3e-0667-423f-8a5d-d19d8c6bcf08 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-be4d7a3e-0667-423f-8a5d-d19d8c6bcf08 div.sk-estimator:hover {background-color: #d4ebff;}#sk-be4d7a3e-0667-423f-8a5d-d19d8c6bcf08 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-be4d7a3e-0667-423f-8a5d-d19d8c6bcf08 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-be4d7a3e-0667-423f-8a5d-d19d8c6bcf08 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-be4d7a3e-0667-423f-8a5d-d19d8c6bcf08 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-be4d7a3e-0667-423f-8a5d-d19d8c6bcf08 div.sk-item {z-index: 1;}#sk-be4d7a3e-0667-423f-8a5d-d19d8c6bcf08 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-be4d7a3e-0667-423f-8a5d-d19d8c6bcf08 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-be4d7a3e-0667-423f-8a5d-d19d8c6bcf08 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-be4d7a3e-0667-423f-8a5d-d19d8c6bcf08 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-be4d7a3e-0667-423f-8a5d-d19d8c6bcf08 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-be4d7a3e-0667-423f-8a5d-d19d8c6bcf08 div.sk-parallel-item:only-child::after {width: 0;}#sk-be4d7a3e-0667-423f-8a5d-d19d8c6bcf08 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-be4d7a3e-0667-423f-8a5d-d19d8c6bcf08 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-be4d7a3e-0667-423f-8a5d-d19d8c6bcf08 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-be4d7a3e-0667-423f-8a5d-d19d8c6bcf08 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-be4d7a3e-0667-423f-8a5d-d19d8c6bcf08 div.sk-text-repr-fallback {display: none;}</style><div id="sk-be4d7a3e-0667-423f-8a5d-d19d8c6bcf08" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1f1f62a9-3b1f-48d3-9401-03e78c84e7f1" type="checkbox" ><label for="1f1f62a9-3b1f-48d3-9401-03e78c84e7f1" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="58e0a273-3660-4ca3-8cd8-b11b4d5d2aef" type="checkbox" ><label for="58e0a273-3660-4ca3-8cd8-b11b4d5d2aef" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ec3aa15d-8f4c-4c88-9fc9-b7b1cd1adfff" type="checkbox" ><label for="ec3aa15d-8f4c-4c88-9fc9-b7b1cd1adfff" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="74869c9f-85c3-4efd-aaef-d79525bca1c6" type="checkbox" ><label for="74869c9f-85c3-4efd-aaef-d79525bca1c6" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="25f3db50-46dc-46df-a1c2-6ba379f947f3" type="checkbox" ><label for="25f3db50-46dc-46df-a1c2-6ba379f947f3" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="da8cff3e-c3af-4139-aaa5-3af3d0ddb885" type="checkbox" ><label for="da8cff3e-c3af-4139-aaa5-3af3d0ddb885" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="80de54b3-75c9-4fd1-8a72-0012c975cc4a" type="checkbox" ><label for="80de54b3-75c9-4fd1-8a72-0012c975cc4a" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="db518c8b-d363-417f-a87e-59208d72fc71" type="checkbox" ><label for="db518c8b-d363-417f-a87e-59208d72fc71" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fb4e21bf-83f8-487a-b355-32ca39da652a" type="checkbox" ><label for="fb4e21bf-83f8-487a-b355-32ca39da652a" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-0b39263f-41ad-48c2-9f3b-d87c8106554d {color: black;background-color: white;}#sk-0b39263f-41ad-48c2-9f3b-d87c8106554d pre{padding: 0;}#sk-0b39263f-41ad-48c2-9f3b-d87c8106554d div.sk-toggleable {background-color: white;}#sk-0b39263f-41ad-48c2-9f3b-d87c8106554d label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-0b39263f-41ad-48c2-9f3b-d87c8106554d label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-0b39263f-41ad-48c2-9f3b-d87c8106554d label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-0b39263f-41ad-48c2-9f3b-d87c8106554d div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-0b39263f-41ad-48c2-9f3b-d87c8106554d div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-0b39263f-41ad-48c2-9f3b-d87c8106554d div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-0b39263f-41ad-48c2-9f3b-d87c8106554d input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-0b39263f-41ad-48c2-9f3b-d87c8106554d input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-0b39263f-41ad-48c2-9f3b-d87c8106554d div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-0b39263f-41ad-48c2-9f3b-d87c8106554d div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-0b39263f-41ad-48c2-9f3b-d87c8106554d input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-0b39263f-41ad-48c2-9f3b-d87c8106554d div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-0b39263f-41ad-48c2-9f3b-d87c8106554d div.sk-estimator:hover {background-color: #d4ebff;}#sk-0b39263f-41ad-48c2-9f3b-d87c8106554d div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-0b39263f-41ad-48c2-9f3b-d87c8106554d div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-0b39263f-41ad-48c2-9f3b-d87c8106554d div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-0b39263f-41ad-48c2-9f3b-d87c8106554d div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-0b39263f-41ad-48c2-9f3b-d87c8106554d div.sk-item {z-index: 1;}#sk-0b39263f-41ad-48c2-9f3b-d87c8106554d div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-0b39263f-41ad-48c2-9f3b-d87c8106554d div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-0b39263f-41ad-48c2-9f3b-d87c8106554d div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-0b39263f-41ad-48c2-9f3b-d87c8106554d div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-0b39263f-41ad-48c2-9f3b-d87c8106554d div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-0b39263f-41ad-48c2-9f3b-d87c8106554d div.sk-parallel-item:only-child::after {width: 0;}#sk-0b39263f-41ad-48c2-9f3b-d87c8106554d div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-0b39263f-41ad-48c2-9f3b-d87c8106554d div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-0b39263f-41ad-48c2-9f3b-d87c8106554d div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-0b39263f-41ad-48c2-9f3b-d87c8106554d div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-0b39263f-41ad-48c2-9f3b-d87c8106554d div.sk-text-repr-fallback {display: none;}</style><div id="sk-0b39263f-41ad-48c2-9f3b-d87c8106554d" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6b150d1d-4317-4b0f-8878-9c008e1f25ec" type="checkbox" ><label for="6b150d1d-4317-4b0f-8878-9c008e1f25ec" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="20e9bb72-b9fe-4fa9-b4e4-7c11d55466c7" type="checkbox" ><label for="20e9bb72-b9fe-4fa9-b4e4-7c11d55466c7" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e8c646a3-418b-40ac-94a5-fce650c7d59f" type="checkbox" ><label for="e8c646a3-418b-40ac-94a5-fce650c7d59f" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5b05846a-3d50-4f0e-9fe2-d9f88e3bf601" type="checkbox" ><label for="5b05846a-3d50-4f0e-9fe2-d9f88e3bf601" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="73fc4aad-125d-4bd5-9aa4-b3f356a1836d" type="checkbox" ><label for="73fc4aad-125d-4bd5-9aa4-b3f356a1836d" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="54b48fe8-2d53-4dcd-b186-7cd99b696cd4" type="checkbox" ><label for="54b48fe8-2d53-4dcd-b186-7cd99b696cd4" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="84cd4963-cbfe-4539-840d-fd4ffb0b75b2" type="checkbox" ><label for="84cd4963-cbfe-4539-840d-fd4ffb0b75b2" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b36377f4-bd08-49f5-900f-2df9559f56f3" type="checkbox" ><label for="b36377f4-bd08-49f5-900f-2df9559f56f3" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d02d11de-f151-45a8-bd3a-3647c4090040" type="checkbox" ><label for="d02d11de-f151-45a8-bd3a-3647c4090040" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.083 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
