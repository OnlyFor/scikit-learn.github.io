
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-2b44d5df-b12c-49fc-bcea-5d10bbc62736 {color: black;background-color: white;}#sk-2b44d5df-b12c-49fc-bcea-5d10bbc62736 pre{padding: 0;}#sk-2b44d5df-b12c-49fc-bcea-5d10bbc62736 div.sk-toggleable {background-color: white;}#sk-2b44d5df-b12c-49fc-bcea-5d10bbc62736 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-2b44d5df-b12c-49fc-bcea-5d10bbc62736 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-2b44d5df-b12c-49fc-bcea-5d10bbc62736 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-2b44d5df-b12c-49fc-bcea-5d10bbc62736 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-2b44d5df-b12c-49fc-bcea-5d10bbc62736 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-2b44d5df-b12c-49fc-bcea-5d10bbc62736 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-2b44d5df-b12c-49fc-bcea-5d10bbc62736 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-2b44d5df-b12c-49fc-bcea-5d10bbc62736 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-2b44d5df-b12c-49fc-bcea-5d10bbc62736 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-2b44d5df-b12c-49fc-bcea-5d10bbc62736 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-2b44d5df-b12c-49fc-bcea-5d10bbc62736 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-2b44d5df-b12c-49fc-bcea-5d10bbc62736 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-2b44d5df-b12c-49fc-bcea-5d10bbc62736 div.sk-estimator:hover {background-color: #d4ebff;}#sk-2b44d5df-b12c-49fc-bcea-5d10bbc62736 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-2b44d5df-b12c-49fc-bcea-5d10bbc62736 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-2b44d5df-b12c-49fc-bcea-5d10bbc62736 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-2b44d5df-b12c-49fc-bcea-5d10bbc62736 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-2b44d5df-b12c-49fc-bcea-5d10bbc62736 div.sk-item {z-index: 1;}#sk-2b44d5df-b12c-49fc-bcea-5d10bbc62736 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-2b44d5df-b12c-49fc-bcea-5d10bbc62736 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-2b44d5df-b12c-49fc-bcea-5d10bbc62736 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-2b44d5df-b12c-49fc-bcea-5d10bbc62736 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-2b44d5df-b12c-49fc-bcea-5d10bbc62736 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-2b44d5df-b12c-49fc-bcea-5d10bbc62736 div.sk-parallel-item:only-child::after {width: 0;}#sk-2b44d5df-b12c-49fc-bcea-5d10bbc62736 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-2b44d5df-b12c-49fc-bcea-5d10bbc62736 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-2b44d5df-b12c-49fc-bcea-5d10bbc62736 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-2b44d5df-b12c-49fc-bcea-5d10bbc62736 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-2b44d5df-b12c-49fc-bcea-5d10bbc62736 div.sk-text-repr-fallback {display: none;}</style><div id="sk-2b44d5df-b12c-49fc-bcea-5d10bbc62736" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f60a0c34-fc16-464f-8ffa-993e409bc609" type="checkbox" ><label for="f60a0c34-fc16-464f-8ffa-993e409bc609" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bc9a8ca4-dfc4-4cef-83cc-1871b0a9c90d" type="checkbox" ><label for="bc9a8ca4-dfc4-4cef-83cc-1871b0a9c90d" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="05ed5fca-01e5-4529-ab71-ee817728e3b9" type="checkbox" ><label for="05ed5fca-01e5-4529-ab71-ee817728e3b9" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-09eaab49-9d12-4c1d-96c6-df0291c159cf {color: black;background-color: white;}#sk-09eaab49-9d12-4c1d-96c6-df0291c159cf pre{padding: 0;}#sk-09eaab49-9d12-4c1d-96c6-df0291c159cf div.sk-toggleable {background-color: white;}#sk-09eaab49-9d12-4c1d-96c6-df0291c159cf label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-09eaab49-9d12-4c1d-96c6-df0291c159cf label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-09eaab49-9d12-4c1d-96c6-df0291c159cf label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-09eaab49-9d12-4c1d-96c6-df0291c159cf div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-09eaab49-9d12-4c1d-96c6-df0291c159cf div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-09eaab49-9d12-4c1d-96c6-df0291c159cf div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-09eaab49-9d12-4c1d-96c6-df0291c159cf input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-09eaab49-9d12-4c1d-96c6-df0291c159cf input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-09eaab49-9d12-4c1d-96c6-df0291c159cf div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-09eaab49-9d12-4c1d-96c6-df0291c159cf div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-09eaab49-9d12-4c1d-96c6-df0291c159cf input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-09eaab49-9d12-4c1d-96c6-df0291c159cf div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-09eaab49-9d12-4c1d-96c6-df0291c159cf div.sk-estimator:hover {background-color: #d4ebff;}#sk-09eaab49-9d12-4c1d-96c6-df0291c159cf div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-09eaab49-9d12-4c1d-96c6-df0291c159cf div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-09eaab49-9d12-4c1d-96c6-df0291c159cf div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-09eaab49-9d12-4c1d-96c6-df0291c159cf div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-09eaab49-9d12-4c1d-96c6-df0291c159cf div.sk-item {z-index: 1;}#sk-09eaab49-9d12-4c1d-96c6-df0291c159cf div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-09eaab49-9d12-4c1d-96c6-df0291c159cf div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-09eaab49-9d12-4c1d-96c6-df0291c159cf div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-09eaab49-9d12-4c1d-96c6-df0291c159cf div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-09eaab49-9d12-4c1d-96c6-df0291c159cf div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-09eaab49-9d12-4c1d-96c6-df0291c159cf div.sk-parallel-item:only-child::after {width: 0;}#sk-09eaab49-9d12-4c1d-96c6-df0291c159cf div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-09eaab49-9d12-4c1d-96c6-df0291c159cf div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-09eaab49-9d12-4c1d-96c6-df0291c159cf div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-09eaab49-9d12-4c1d-96c6-df0291c159cf div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-09eaab49-9d12-4c1d-96c6-df0291c159cf div.sk-text-repr-fallback {display: none;}</style><div id="sk-09eaab49-9d12-4c1d-96c6-df0291c159cf" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fc33656a-d633-4970-b1be-348e267ee7fe" type="checkbox" ><label for="fc33656a-d633-4970-b1be-348e267ee7fe" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="69ff1927-ee63-4697-bbca-ada98e13fb0d" type="checkbox" ><label for="69ff1927-ee63-4697-bbca-ada98e13fb0d" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e20514c7-92f5-4de9-b5a2-1a08fbd97aa2" type="checkbox" ><label for="e20514c7-92f5-4de9-b5a2-1a08fbd97aa2" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f6167b67-e307-4b8d-9d7c-03e5ab75be2d" type="checkbox" ><label for="f6167b67-e307-4b8d-9d7c-03e5ab75be2d" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-3c17ba06-b837-41ac-9fc0-e10186d29015 {color: black;background-color: white;}#sk-3c17ba06-b837-41ac-9fc0-e10186d29015 pre{padding: 0;}#sk-3c17ba06-b837-41ac-9fc0-e10186d29015 div.sk-toggleable {background-color: white;}#sk-3c17ba06-b837-41ac-9fc0-e10186d29015 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-3c17ba06-b837-41ac-9fc0-e10186d29015 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-3c17ba06-b837-41ac-9fc0-e10186d29015 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-3c17ba06-b837-41ac-9fc0-e10186d29015 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-3c17ba06-b837-41ac-9fc0-e10186d29015 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-3c17ba06-b837-41ac-9fc0-e10186d29015 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-3c17ba06-b837-41ac-9fc0-e10186d29015 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-3c17ba06-b837-41ac-9fc0-e10186d29015 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-3c17ba06-b837-41ac-9fc0-e10186d29015 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-3c17ba06-b837-41ac-9fc0-e10186d29015 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-3c17ba06-b837-41ac-9fc0-e10186d29015 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-3c17ba06-b837-41ac-9fc0-e10186d29015 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-3c17ba06-b837-41ac-9fc0-e10186d29015 div.sk-estimator:hover {background-color: #d4ebff;}#sk-3c17ba06-b837-41ac-9fc0-e10186d29015 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-3c17ba06-b837-41ac-9fc0-e10186d29015 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-3c17ba06-b837-41ac-9fc0-e10186d29015 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-3c17ba06-b837-41ac-9fc0-e10186d29015 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-3c17ba06-b837-41ac-9fc0-e10186d29015 div.sk-item {z-index: 1;}#sk-3c17ba06-b837-41ac-9fc0-e10186d29015 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-3c17ba06-b837-41ac-9fc0-e10186d29015 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-3c17ba06-b837-41ac-9fc0-e10186d29015 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-3c17ba06-b837-41ac-9fc0-e10186d29015 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-3c17ba06-b837-41ac-9fc0-e10186d29015 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-3c17ba06-b837-41ac-9fc0-e10186d29015 div.sk-parallel-item:only-child::after {width: 0;}#sk-3c17ba06-b837-41ac-9fc0-e10186d29015 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-3c17ba06-b837-41ac-9fc0-e10186d29015 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-3c17ba06-b837-41ac-9fc0-e10186d29015 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-3c17ba06-b837-41ac-9fc0-e10186d29015 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-3c17ba06-b837-41ac-9fc0-e10186d29015 div.sk-text-repr-fallback {display: none;}</style><div id="sk-3c17ba06-b837-41ac-9fc0-e10186d29015" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0f62ed62-d60c-4ecc-968a-95216d271528" type="checkbox" ><label for="0f62ed62-d60c-4ecc-968a-95216d271528" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c658fed5-bfa0-4a09-b1e6-c730b47f3339" type="checkbox" ><label for="c658fed5-bfa0-4a09-b1e6-c730b47f3339" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="affff14d-8129-4ad9-b7b6-3d0abe1b69c6" type="checkbox" ><label for="affff14d-8129-4ad9-b7b6-3d0abe1b69c6" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-91603883-2240-4d9f-9fb2-031d53a25341 {color: black;background-color: white;}#sk-91603883-2240-4d9f-9fb2-031d53a25341 pre{padding: 0;}#sk-91603883-2240-4d9f-9fb2-031d53a25341 div.sk-toggleable {background-color: white;}#sk-91603883-2240-4d9f-9fb2-031d53a25341 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-91603883-2240-4d9f-9fb2-031d53a25341 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-91603883-2240-4d9f-9fb2-031d53a25341 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-91603883-2240-4d9f-9fb2-031d53a25341 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-91603883-2240-4d9f-9fb2-031d53a25341 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-91603883-2240-4d9f-9fb2-031d53a25341 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-91603883-2240-4d9f-9fb2-031d53a25341 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-91603883-2240-4d9f-9fb2-031d53a25341 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-91603883-2240-4d9f-9fb2-031d53a25341 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-91603883-2240-4d9f-9fb2-031d53a25341 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-91603883-2240-4d9f-9fb2-031d53a25341 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-91603883-2240-4d9f-9fb2-031d53a25341 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-91603883-2240-4d9f-9fb2-031d53a25341 div.sk-estimator:hover {background-color: #d4ebff;}#sk-91603883-2240-4d9f-9fb2-031d53a25341 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-91603883-2240-4d9f-9fb2-031d53a25341 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-91603883-2240-4d9f-9fb2-031d53a25341 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-91603883-2240-4d9f-9fb2-031d53a25341 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-91603883-2240-4d9f-9fb2-031d53a25341 div.sk-item {z-index: 1;}#sk-91603883-2240-4d9f-9fb2-031d53a25341 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-91603883-2240-4d9f-9fb2-031d53a25341 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-91603883-2240-4d9f-9fb2-031d53a25341 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-91603883-2240-4d9f-9fb2-031d53a25341 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-91603883-2240-4d9f-9fb2-031d53a25341 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-91603883-2240-4d9f-9fb2-031d53a25341 div.sk-parallel-item:only-child::after {width: 0;}#sk-91603883-2240-4d9f-9fb2-031d53a25341 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-91603883-2240-4d9f-9fb2-031d53a25341 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-91603883-2240-4d9f-9fb2-031d53a25341 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-91603883-2240-4d9f-9fb2-031d53a25341 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-91603883-2240-4d9f-9fb2-031d53a25341 div.sk-text-repr-fallback {display: none;}</style><div id="sk-91603883-2240-4d9f-9fb2-031d53a25341" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8b8af1e0-0101-4b58-a6e6-bd1647db8f36" type="checkbox" ><label for="8b8af1e0-0101-4b58-a6e6-bd1647db8f36" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7b6ab782-3043-4894-9dbd-bec249b9c288" type="checkbox" ><label for="7b6ab782-3043-4894-9dbd-bec249b9c288" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3fb41f78-eebe-49f5-801b-86103e9a703c" type="checkbox" ><label for="3fb41f78-eebe-49f5-801b-86103e9a703c" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0440dd0d-de9c-4f80-96b6-5d3ab9ee4ee7" type="checkbox" ><label for="0440dd0d-de9c-4f80-96b6-5d3ab9ee4ee7" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="92b86182-a3c4-4196-a39c-12261c976194" type="checkbox" ><label for="92b86182-a3c4-4196-a39c-12261c976194" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d96d34b1-71eb-4710-8422-8d206d246142" type="checkbox" ><label for="d96d34b1-71eb-4710-8422-8d206d246142" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="773b685a-b4b1-4094-844b-bf6c15971964" type="checkbox" ><label for="773b685a-b4b1-4094-844b-bf6c15971964" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f114d1eb-b95d-41f3-abf5-efbc1f19e979" type="checkbox" ><label for="f114d1eb-b95d-41f3-abf5-efbc1f19e979" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="412178f5-f7eb-46d0-b5df-bb018f2b6adf" type="checkbox" ><label for="412178f5-f7eb-46d0-b5df-bb018f2b6adf" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-f69c70cf-74ec-4a84-a427-97b0eb151cc0 {color: black;background-color: white;}#sk-f69c70cf-74ec-4a84-a427-97b0eb151cc0 pre{padding: 0;}#sk-f69c70cf-74ec-4a84-a427-97b0eb151cc0 div.sk-toggleable {background-color: white;}#sk-f69c70cf-74ec-4a84-a427-97b0eb151cc0 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-f69c70cf-74ec-4a84-a427-97b0eb151cc0 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-f69c70cf-74ec-4a84-a427-97b0eb151cc0 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-f69c70cf-74ec-4a84-a427-97b0eb151cc0 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-f69c70cf-74ec-4a84-a427-97b0eb151cc0 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-f69c70cf-74ec-4a84-a427-97b0eb151cc0 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-f69c70cf-74ec-4a84-a427-97b0eb151cc0 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-f69c70cf-74ec-4a84-a427-97b0eb151cc0 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-f69c70cf-74ec-4a84-a427-97b0eb151cc0 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-f69c70cf-74ec-4a84-a427-97b0eb151cc0 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-f69c70cf-74ec-4a84-a427-97b0eb151cc0 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-f69c70cf-74ec-4a84-a427-97b0eb151cc0 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-f69c70cf-74ec-4a84-a427-97b0eb151cc0 div.sk-estimator:hover {background-color: #d4ebff;}#sk-f69c70cf-74ec-4a84-a427-97b0eb151cc0 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-f69c70cf-74ec-4a84-a427-97b0eb151cc0 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-f69c70cf-74ec-4a84-a427-97b0eb151cc0 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-f69c70cf-74ec-4a84-a427-97b0eb151cc0 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-f69c70cf-74ec-4a84-a427-97b0eb151cc0 div.sk-item {z-index: 1;}#sk-f69c70cf-74ec-4a84-a427-97b0eb151cc0 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-f69c70cf-74ec-4a84-a427-97b0eb151cc0 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-f69c70cf-74ec-4a84-a427-97b0eb151cc0 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-f69c70cf-74ec-4a84-a427-97b0eb151cc0 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-f69c70cf-74ec-4a84-a427-97b0eb151cc0 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-f69c70cf-74ec-4a84-a427-97b0eb151cc0 div.sk-parallel-item:only-child::after {width: 0;}#sk-f69c70cf-74ec-4a84-a427-97b0eb151cc0 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-f69c70cf-74ec-4a84-a427-97b0eb151cc0 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-f69c70cf-74ec-4a84-a427-97b0eb151cc0 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-f69c70cf-74ec-4a84-a427-97b0eb151cc0 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-f69c70cf-74ec-4a84-a427-97b0eb151cc0 div.sk-text-repr-fallback {display: none;}</style><div id="sk-f69c70cf-74ec-4a84-a427-97b0eb151cc0" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="80d80d93-f20f-4fbb-922b-c4b2b6437a2e" type="checkbox" ><label for="80d80d93-f20f-4fbb-922b-c4b2b6437a2e" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="75f9d2b3-154d-4c35-9b3b-e35cc54c6f27" type="checkbox" ><label for="75f9d2b3-154d-4c35-9b3b-e35cc54c6f27" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="43b846cd-0e41-4ddb-8c27-af12fe8872c3" type="checkbox" ><label for="43b846cd-0e41-4ddb-8c27-af12fe8872c3" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="97d11b28-baba-4c81-b481-ebdaeb95c9da" type="checkbox" ><label for="97d11b28-baba-4c81-b481-ebdaeb95c9da" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0ec1c0a6-7837-4d54-a4d3-d51cfebac38c" type="checkbox" ><label for="0ec1c0a6-7837-4d54-a4d3-d51cfebac38c" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="dc681e0a-ab32-4cb5-bb7e-cbc5037c74e4" type="checkbox" ><label for="dc681e0a-ab32-4cb5-bb7e-cbc5037c74e4" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1c3a0bdc-df7f-4549-9e2e-71cdb0b2e9a5" type="checkbox" ><label for="1c3a0bdc-df7f-4549-9e2e-71cdb0b2e9a5" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a4dac26e-b039-4096-826c-633eeebebc6a" type="checkbox" ><label for="a4dac26e-b039-4096-826c-633eeebebc6a" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="45172d74-2aeb-4494-b0ed-7a8f8ec1f8e5" type="checkbox" ><label for="45172d74-2aeb-4494-b0ed-7a8f8ec1f8e5" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.081 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
