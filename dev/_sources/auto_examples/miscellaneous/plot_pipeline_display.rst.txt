
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-7b09f619-9463-47a5-a4d2-0ad58ca81a4c {color: black;background-color: white;}#sk-7b09f619-9463-47a5-a4d2-0ad58ca81a4c pre{padding: 0;}#sk-7b09f619-9463-47a5-a4d2-0ad58ca81a4c div.sk-toggleable {background-color: white;}#sk-7b09f619-9463-47a5-a4d2-0ad58ca81a4c label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-7b09f619-9463-47a5-a4d2-0ad58ca81a4c label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-7b09f619-9463-47a5-a4d2-0ad58ca81a4c label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-7b09f619-9463-47a5-a4d2-0ad58ca81a4c div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-7b09f619-9463-47a5-a4d2-0ad58ca81a4c div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-7b09f619-9463-47a5-a4d2-0ad58ca81a4c div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-7b09f619-9463-47a5-a4d2-0ad58ca81a4c input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-7b09f619-9463-47a5-a4d2-0ad58ca81a4c input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-7b09f619-9463-47a5-a4d2-0ad58ca81a4c div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-7b09f619-9463-47a5-a4d2-0ad58ca81a4c div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-7b09f619-9463-47a5-a4d2-0ad58ca81a4c input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-7b09f619-9463-47a5-a4d2-0ad58ca81a4c div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-7b09f619-9463-47a5-a4d2-0ad58ca81a4c div.sk-estimator:hover {background-color: #d4ebff;}#sk-7b09f619-9463-47a5-a4d2-0ad58ca81a4c div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-7b09f619-9463-47a5-a4d2-0ad58ca81a4c div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-7b09f619-9463-47a5-a4d2-0ad58ca81a4c div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-7b09f619-9463-47a5-a4d2-0ad58ca81a4c div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-7b09f619-9463-47a5-a4d2-0ad58ca81a4c div.sk-item {z-index: 1;}#sk-7b09f619-9463-47a5-a4d2-0ad58ca81a4c div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-7b09f619-9463-47a5-a4d2-0ad58ca81a4c div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-7b09f619-9463-47a5-a4d2-0ad58ca81a4c div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-7b09f619-9463-47a5-a4d2-0ad58ca81a4c div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-7b09f619-9463-47a5-a4d2-0ad58ca81a4c div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-7b09f619-9463-47a5-a4d2-0ad58ca81a4c div.sk-parallel-item:only-child::after {width: 0;}#sk-7b09f619-9463-47a5-a4d2-0ad58ca81a4c div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-7b09f619-9463-47a5-a4d2-0ad58ca81a4c div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-7b09f619-9463-47a5-a4d2-0ad58ca81a4c div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-7b09f619-9463-47a5-a4d2-0ad58ca81a4c div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-7b09f619-9463-47a5-a4d2-0ad58ca81a4c div.sk-text-repr-fallback {display: none;}</style><div id="sk-7b09f619-9463-47a5-a4d2-0ad58ca81a4c" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0881c8ab-d4e1-41b8-baf5-fedc84e73075" type="checkbox" ><label for="0881c8ab-d4e1-41b8-baf5-fedc84e73075" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="df35e146-2c60-46bb-8241-dae760f25dac" type="checkbox" ><label for="df35e146-2c60-46bb-8241-dae760f25dac" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5fad0176-1240-47e9-a54e-d9c176a7f86d" type="checkbox" ><label for="5fad0176-1240-47e9-a54e-d9c176a7f86d" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-c59d9ebd-50d8-4dea-9448-28331bef2225 {color: black;background-color: white;}#sk-c59d9ebd-50d8-4dea-9448-28331bef2225 pre{padding: 0;}#sk-c59d9ebd-50d8-4dea-9448-28331bef2225 div.sk-toggleable {background-color: white;}#sk-c59d9ebd-50d8-4dea-9448-28331bef2225 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-c59d9ebd-50d8-4dea-9448-28331bef2225 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-c59d9ebd-50d8-4dea-9448-28331bef2225 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-c59d9ebd-50d8-4dea-9448-28331bef2225 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-c59d9ebd-50d8-4dea-9448-28331bef2225 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-c59d9ebd-50d8-4dea-9448-28331bef2225 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-c59d9ebd-50d8-4dea-9448-28331bef2225 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-c59d9ebd-50d8-4dea-9448-28331bef2225 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-c59d9ebd-50d8-4dea-9448-28331bef2225 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-c59d9ebd-50d8-4dea-9448-28331bef2225 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-c59d9ebd-50d8-4dea-9448-28331bef2225 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-c59d9ebd-50d8-4dea-9448-28331bef2225 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-c59d9ebd-50d8-4dea-9448-28331bef2225 div.sk-estimator:hover {background-color: #d4ebff;}#sk-c59d9ebd-50d8-4dea-9448-28331bef2225 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-c59d9ebd-50d8-4dea-9448-28331bef2225 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-c59d9ebd-50d8-4dea-9448-28331bef2225 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-c59d9ebd-50d8-4dea-9448-28331bef2225 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-c59d9ebd-50d8-4dea-9448-28331bef2225 div.sk-item {z-index: 1;}#sk-c59d9ebd-50d8-4dea-9448-28331bef2225 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-c59d9ebd-50d8-4dea-9448-28331bef2225 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-c59d9ebd-50d8-4dea-9448-28331bef2225 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-c59d9ebd-50d8-4dea-9448-28331bef2225 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-c59d9ebd-50d8-4dea-9448-28331bef2225 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-c59d9ebd-50d8-4dea-9448-28331bef2225 div.sk-parallel-item:only-child::after {width: 0;}#sk-c59d9ebd-50d8-4dea-9448-28331bef2225 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-c59d9ebd-50d8-4dea-9448-28331bef2225 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-c59d9ebd-50d8-4dea-9448-28331bef2225 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-c59d9ebd-50d8-4dea-9448-28331bef2225 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-c59d9ebd-50d8-4dea-9448-28331bef2225 div.sk-text-repr-fallback {display: none;}</style><div id="sk-c59d9ebd-50d8-4dea-9448-28331bef2225" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="53ebe94c-a8ed-431c-a066-84858f9498e6" type="checkbox" ><label for="53ebe94c-a8ed-431c-a066-84858f9498e6" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="161df54b-3ea5-460e-bf8f-24ea95f1d3a2" type="checkbox" ><label for="161df54b-3ea5-460e-bf8f-24ea95f1d3a2" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c648e52e-b356-41ca-93c1-6b5ad0ed038b" type="checkbox" ><label for="c648e52e-b356-41ca-93c1-6b5ad0ed038b" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8f450b7e-3c28-40dc-b7cd-84874cf6478a" type="checkbox" ><label for="8f450b7e-3c28-40dc-b7cd-84874cf6478a" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-4fe7f730-f5f4-407a-ae60-7dedc1798ebc {color: black;background-color: white;}#sk-4fe7f730-f5f4-407a-ae60-7dedc1798ebc pre{padding: 0;}#sk-4fe7f730-f5f4-407a-ae60-7dedc1798ebc div.sk-toggleable {background-color: white;}#sk-4fe7f730-f5f4-407a-ae60-7dedc1798ebc label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-4fe7f730-f5f4-407a-ae60-7dedc1798ebc label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-4fe7f730-f5f4-407a-ae60-7dedc1798ebc label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-4fe7f730-f5f4-407a-ae60-7dedc1798ebc div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-4fe7f730-f5f4-407a-ae60-7dedc1798ebc div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-4fe7f730-f5f4-407a-ae60-7dedc1798ebc div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-4fe7f730-f5f4-407a-ae60-7dedc1798ebc input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-4fe7f730-f5f4-407a-ae60-7dedc1798ebc input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-4fe7f730-f5f4-407a-ae60-7dedc1798ebc div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-4fe7f730-f5f4-407a-ae60-7dedc1798ebc div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-4fe7f730-f5f4-407a-ae60-7dedc1798ebc input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-4fe7f730-f5f4-407a-ae60-7dedc1798ebc div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-4fe7f730-f5f4-407a-ae60-7dedc1798ebc div.sk-estimator:hover {background-color: #d4ebff;}#sk-4fe7f730-f5f4-407a-ae60-7dedc1798ebc div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-4fe7f730-f5f4-407a-ae60-7dedc1798ebc div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-4fe7f730-f5f4-407a-ae60-7dedc1798ebc div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-4fe7f730-f5f4-407a-ae60-7dedc1798ebc div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-4fe7f730-f5f4-407a-ae60-7dedc1798ebc div.sk-item {z-index: 1;}#sk-4fe7f730-f5f4-407a-ae60-7dedc1798ebc div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-4fe7f730-f5f4-407a-ae60-7dedc1798ebc div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-4fe7f730-f5f4-407a-ae60-7dedc1798ebc div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-4fe7f730-f5f4-407a-ae60-7dedc1798ebc div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-4fe7f730-f5f4-407a-ae60-7dedc1798ebc div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-4fe7f730-f5f4-407a-ae60-7dedc1798ebc div.sk-parallel-item:only-child::after {width: 0;}#sk-4fe7f730-f5f4-407a-ae60-7dedc1798ebc div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-4fe7f730-f5f4-407a-ae60-7dedc1798ebc div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-4fe7f730-f5f4-407a-ae60-7dedc1798ebc div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-4fe7f730-f5f4-407a-ae60-7dedc1798ebc div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-4fe7f730-f5f4-407a-ae60-7dedc1798ebc div.sk-text-repr-fallback {display: none;}</style><div id="sk-4fe7f730-f5f4-407a-ae60-7dedc1798ebc" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="710878d0-fbe0-42da-8181-6e0d4983e4b3" type="checkbox" ><label for="710878d0-fbe0-42da-8181-6e0d4983e4b3" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b572f875-45db-49fa-9b42-ae92ede413d4" type="checkbox" ><label for="b572f875-45db-49fa-9b42-ae92ede413d4" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="22c22416-605c-4508-9ae3-126f7dcf6137" type="checkbox" ><label for="22c22416-605c-4508-9ae3-126f7dcf6137" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-bf952b74-dc66-4f98-837e-1da6bf40faf0 {color: black;background-color: white;}#sk-bf952b74-dc66-4f98-837e-1da6bf40faf0 pre{padding: 0;}#sk-bf952b74-dc66-4f98-837e-1da6bf40faf0 div.sk-toggleable {background-color: white;}#sk-bf952b74-dc66-4f98-837e-1da6bf40faf0 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-bf952b74-dc66-4f98-837e-1da6bf40faf0 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-bf952b74-dc66-4f98-837e-1da6bf40faf0 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-bf952b74-dc66-4f98-837e-1da6bf40faf0 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-bf952b74-dc66-4f98-837e-1da6bf40faf0 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-bf952b74-dc66-4f98-837e-1da6bf40faf0 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-bf952b74-dc66-4f98-837e-1da6bf40faf0 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-bf952b74-dc66-4f98-837e-1da6bf40faf0 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-bf952b74-dc66-4f98-837e-1da6bf40faf0 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-bf952b74-dc66-4f98-837e-1da6bf40faf0 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-bf952b74-dc66-4f98-837e-1da6bf40faf0 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-bf952b74-dc66-4f98-837e-1da6bf40faf0 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-bf952b74-dc66-4f98-837e-1da6bf40faf0 div.sk-estimator:hover {background-color: #d4ebff;}#sk-bf952b74-dc66-4f98-837e-1da6bf40faf0 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-bf952b74-dc66-4f98-837e-1da6bf40faf0 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-bf952b74-dc66-4f98-837e-1da6bf40faf0 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-bf952b74-dc66-4f98-837e-1da6bf40faf0 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-bf952b74-dc66-4f98-837e-1da6bf40faf0 div.sk-item {z-index: 1;}#sk-bf952b74-dc66-4f98-837e-1da6bf40faf0 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-bf952b74-dc66-4f98-837e-1da6bf40faf0 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-bf952b74-dc66-4f98-837e-1da6bf40faf0 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-bf952b74-dc66-4f98-837e-1da6bf40faf0 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-bf952b74-dc66-4f98-837e-1da6bf40faf0 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-bf952b74-dc66-4f98-837e-1da6bf40faf0 div.sk-parallel-item:only-child::after {width: 0;}#sk-bf952b74-dc66-4f98-837e-1da6bf40faf0 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-bf952b74-dc66-4f98-837e-1da6bf40faf0 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-bf952b74-dc66-4f98-837e-1da6bf40faf0 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-bf952b74-dc66-4f98-837e-1da6bf40faf0 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-bf952b74-dc66-4f98-837e-1da6bf40faf0 div.sk-text-repr-fallback {display: none;}</style><div id="sk-bf952b74-dc66-4f98-837e-1da6bf40faf0" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0bb93e94-c7cd-49cb-b5cd-28ee3e13e274" type="checkbox" ><label for="0bb93e94-c7cd-49cb-b5cd-28ee3e13e274" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e2631b0a-9f6d-4658-9f7e-b5e86fef7247" type="checkbox" ><label for="e2631b0a-9f6d-4658-9f7e-b5e86fef7247" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="532dd548-9dd8-48a9-84d3-e844f21535ca" type="checkbox" ><label for="532dd548-9dd8-48a9-84d3-e844f21535ca" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f04c4625-c045-4cfc-b7c8-9961acb7e729" type="checkbox" ><label for="f04c4625-c045-4cfc-b7c8-9961acb7e729" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8253e8a3-fe0b-41dd-99df-44e80014a518" type="checkbox" ><label for="8253e8a3-fe0b-41dd-99df-44e80014a518" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="11d55a18-f8fa-42c0-9a6d-61c0e4944c2b" type="checkbox" ><label for="11d55a18-f8fa-42c0-9a6d-61c0e4944c2b" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e5b163a5-2485-4a60-a13e-ad7941dacea7" type="checkbox" ><label for="e5b163a5-2485-4a60-a13e-ad7941dacea7" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="935ee2cc-6abf-47f4-b219-1a6834673cbc" type="checkbox" ><label for="935ee2cc-6abf-47f4-b219-1a6834673cbc" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="573679e9-c05e-4402-ba85-f44c50a04cc3" type="checkbox" ><label for="573679e9-c05e-4402-ba85-f44c50a04cc3" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-19453f0c-ba16-4f20-ae86-49c51502de65 {color: black;background-color: white;}#sk-19453f0c-ba16-4f20-ae86-49c51502de65 pre{padding: 0;}#sk-19453f0c-ba16-4f20-ae86-49c51502de65 div.sk-toggleable {background-color: white;}#sk-19453f0c-ba16-4f20-ae86-49c51502de65 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-19453f0c-ba16-4f20-ae86-49c51502de65 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-19453f0c-ba16-4f20-ae86-49c51502de65 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-19453f0c-ba16-4f20-ae86-49c51502de65 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-19453f0c-ba16-4f20-ae86-49c51502de65 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-19453f0c-ba16-4f20-ae86-49c51502de65 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-19453f0c-ba16-4f20-ae86-49c51502de65 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-19453f0c-ba16-4f20-ae86-49c51502de65 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-19453f0c-ba16-4f20-ae86-49c51502de65 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-19453f0c-ba16-4f20-ae86-49c51502de65 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-19453f0c-ba16-4f20-ae86-49c51502de65 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-19453f0c-ba16-4f20-ae86-49c51502de65 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-19453f0c-ba16-4f20-ae86-49c51502de65 div.sk-estimator:hover {background-color: #d4ebff;}#sk-19453f0c-ba16-4f20-ae86-49c51502de65 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-19453f0c-ba16-4f20-ae86-49c51502de65 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-19453f0c-ba16-4f20-ae86-49c51502de65 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-19453f0c-ba16-4f20-ae86-49c51502de65 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-19453f0c-ba16-4f20-ae86-49c51502de65 div.sk-item {z-index: 1;}#sk-19453f0c-ba16-4f20-ae86-49c51502de65 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-19453f0c-ba16-4f20-ae86-49c51502de65 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-19453f0c-ba16-4f20-ae86-49c51502de65 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-19453f0c-ba16-4f20-ae86-49c51502de65 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-19453f0c-ba16-4f20-ae86-49c51502de65 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-19453f0c-ba16-4f20-ae86-49c51502de65 div.sk-parallel-item:only-child::after {width: 0;}#sk-19453f0c-ba16-4f20-ae86-49c51502de65 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-19453f0c-ba16-4f20-ae86-49c51502de65 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-19453f0c-ba16-4f20-ae86-49c51502de65 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-19453f0c-ba16-4f20-ae86-49c51502de65 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-19453f0c-ba16-4f20-ae86-49c51502de65 div.sk-text-repr-fallback {display: none;}</style><div id="sk-19453f0c-ba16-4f20-ae86-49c51502de65" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1606d7a4-ea8f-47b1-8398-1e0f95c1dc1d" type="checkbox" ><label for="1606d7a4-ea8f-47b1-8398-1e0f95c1dc1d" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="308ed279-1750-44f3-bf5c-d9c10f00e699" type="checkbox" ><label for="308ed279-1750-44f3-bf5c-d9c10f00e699" class="sk-toggleable__label sk-toggleable__label-arrow">estimator: Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessor&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;classifier&#x27;, RandomForestClassifier())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="68c2732a-c3a3-4351-b2fa-a077665230d8" type="checkbox" ><label for="68c2732a-c3a3-4351-b2fa-a077665230d8" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3b413b96-6adb-4941-8f78-5e3fe562fd5a" type="checkbox" ><label for="3b413b96-6adb-4941-8f78-5e3fe562fd5a" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0f85cef3-98af-4acc-b323-00f79cdf8cda" type="checkbox" ><label for="0f85cef3-98af-4acc-b323-00f79cdf8cda" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="92da6cd2-cc2c-4e4f-92e9-fe872cd12229" type="checkbox" ><label for="92da6cd2-cc2c-4e4f-92e9-fe872cd12229" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f97b1280-fc2c-4709-95b3-63ec8846350c" type="checkbox" ><label for="f97b1280-fc2c-4709-95b3-63ec8846350c" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="00b1c0ed-150f-41bd-a913-c205029bf99a" type="checkbox" ><label for="00b1c0ed-150f-41bd-a913-c205029bf99a" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7854d45b-a056-4375-b316-07749c0dcda3" type="checkbox" ><label for="7854d45b-a056-4375-b316-07749c0dcda3" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6fc4b000-f634-430b-b781-152846e8dbd3" type="checkbox" ><label for="6fc4b000-f634-430b-b781-152846e8dbd3" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.088 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
