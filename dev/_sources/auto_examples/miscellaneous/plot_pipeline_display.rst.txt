
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-dd610121-c949-4337-b01d-a885f70660c6 {color: black;background-color: white;}#sk-dd610121-c949-4337-b01d-a885f70660c6 pre{padding: 0;}#sk-dd610121-c949-4337-b01d-a885f70660c6 div.sk-toggleable {background-color: white;}#sk-dd610121-c949-4337-b01d-a885f70660c6 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-dd610121-c949-4337-b01d-a885f70660c6 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-dd610121-c949-4337-b01d-a885f70660c6 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-dd610121-c949-4337-b01d-a885f70660c6 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-dd610121-c949-4337-b01d-a885f70660c6 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-dd610121-c949-4337-b01d-a885f70660c6 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-dd610121-c949-4337-b01d-a885f70660c6 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-dd610121-c949-4337-b01d-a885f70660c6 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-dd610121-c949-4337-b01d-a885f70660c6 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-dd610121-c949-4337-b01d-a885f70660c6 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-dd610121-c949-4337-b01d-a885f70660c6 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-dd610121-c949-4337-b01d-a885f70660c6 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-dd610121-c949-4337-b01d-a885f70660c6 div.sk-estimator:hover {background-color: #d4ebff;}#sk-dd610121-c949-4337-b01d-a885f70660c6 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-dd610121-c949-4337-b01d-a885f70660c6 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-dd610121-c949-4337-b01d-a885f70660c6 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-dd610121-c949-4337-b01d-a885f70660c6 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-dd610121-c949-4337-b01d-a885f70660c6 div.sk-item {z-index: 1;}#sk-dd610121-c949-4337-b01d-a885f70660c6 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-dd610121-c949-4337-b01d-a885f70660c6 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-dd610121-c949-4337-b01d-a885f70660c6 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-dd610121-c949-4337-b01d-a885f70660c6 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-dd610121-c949-4337-b01d-a885f70660c6 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-dd610121-c949-4337-b01d-a885f70660c6 div.sk-parallel-item:only-child::after {width: 0;}#sk-dd610121-c949-4337-b01d-a885f70660c6 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-dd610121-c949-4337-b01d-a885f70660c6 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-dd610121-c949-4337-b01d-a885f70660c6 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-dd610121-c949-4337-b01d-a885f70660c6 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-dd610121-c949-4337-b01d-a885f70660c6 div.sk-text-repr-fallback {display: none;}</style><div id="sk-dd610121-c949-4337-b01d-a885f70660c6" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="99cf896e-95d5-431b-89a4-bee10f8ccd24" type="checkbox" ><label for="99cf896e-95d5-431b-89a4-bee10f8ccd24" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ed98f5c3-1e67-4992-9d68-ee31a3fabaff" type="checkbox" ><label for="ed98f5c3-1e67-4992-9d68-ee31a3fabaff" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0042a07c-e35f-4a39-b1da-50c2735c7631" type="checkbox" ><label for="0042a07c-e35f-4a39-b1da-50c2735c7631" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-2591b3ef-6c81-43e4-a0f5-ea38526de6eb {color: black;background-color: white;}#sk-2591b3ef-6c81-43e4-a0f5-ea38526de6eb pre{padding: 0;}#sk-2591b3ef-6c81-43e4-a0f5-ea38526de6eb div.sk-toggleable {background-color: white;}#sk-2591b3ef-6c81-43e4-a0f5-ea38526de6eb label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-2591b3ef-6c81-43e4-a0f5-ea38526de6eb label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-2591b3ef-6c81-43e4-a0f5-ea38526de6eb label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-2591b3ef-6c81-43e4-a0f5-ea38526de6eb div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-2591b3ef-6c81-43e4-a0f5-ea38526de6eb div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-2591b3ef-6c81-43e4-a0f5-ea38526de6eb div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-2591b3ef-6c81-43e4-a0f5-ea38526de6eb input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-2591b3ef-6c81-43e4-a0f5-ea38526de6eb input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-2591b3ef-6c81-43e4-a0f5-ea38526de6eb div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-2591b3ef-6c81-43e4-a0f5-ea38526de6eb div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-2591b3ef-6c81-43e4-a0f5-ea38526de6eb input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-2591b3ef-6c81-43e4-a0f5-ea38526de6eb div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-2591b3ef-6c81-43e4-a0f5-ea38526de6eb div.sk-estimator:hover {background-color: #d4ebff;}#sk-2591b3ef-6c81-43e4-a0f5-ea38526de6eb div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-2591b3ef-6c81-43e4-a0f5-ea38526de6eb div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-2591b3ef-6c81-43e4-a0f5-ea38526de6eb div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-2591b3ef-6c81-43e4-a0f5-ea38526de6eb div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-2591b3ef-6c81-43e4-a0f5-ea38526de6eb div.sk-item {z-index: 1;}#sk-2591b3ef-6c81-43e4-a0f5-ea38526de6eb div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-2591b3ef-6c81-43e4-a0f5-ea38526de6eb div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-2591b3ef-6c81-43e4-a0f5-ea38526de6eb div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-2591b3ef-6c81-43e4-a0f5-ea38526de6eb div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-2591b3ef-6c81-43e4-a0f5-ea38526de6eb div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-2591b3ef-6c81-43e4-a0f5-ea38526de6eb div.sk-parallel-item:only-child::after {width: 0;}#sk-2591b3ef-6c81-43e4-a0f5-ea38526de6eb div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-2591b3ef-6c81-43e4-a0f5-ea38526de6eb div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-2591b3ef-6c81-43e4-a0f5-ea38526de6eb div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-2591b3ef-6c81-43e4-a0f5-ea38526de6eb div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-2591b3ef-6c81-43e4-a0f5-ea38526de6eb div.sk-text-repr-fallback {display: none;}</style><div id="sk-2591b3ef-6c81-43e4-a0f5-ea38526de6eb" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="44fd5508-7804-4e4f-a9bb-fe889fca3e23" type="checkbox" ><label for="44fd5508-7804-4e4f-a9bb-fe889fca3e23" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="47eafe6d-de7f-4c66-b434-c9f60e74da5c" type="checkbox" ><label for="47eafe6d-de7f-4c66-b434-c9f60e74da5c" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="53557d94-bccf-443c-b6d9-608eab15f7a3" type="checkbox" ><label for="53557d94-bccf-443c-b6d9-608eab15f7a3" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="29da15a6-d0fe-4edf-a777-927942525f66" type="checkbox" ><label for="29da15a6-d0fe-4edf-a777-927942525f66" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-b9ada531-845e-4662-a85e-b5f5fefe5cc4 {color: black;background-color: white;}#sk-b9ada531-845e-4662-a85e-b5f5fefe5cc4 pre{padding: 0;}#sk-b9ada531-845e-4662-a85e-b5f5fefe5cc4 div.sk-toggleable {background-color: white;}#sk-b9ada531-845e-4662-a85e-b5f5fefe5cc4 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-b9ada531-845e-4662-a85e-b5f5fefe5cc4 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-b9ada531-845e-4662-a85e-b5f5fefe5cc4 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-b9ada531-845e-4662-a85e-b5f5fefe5cc4 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-b9ada531-845e-4662-a85e-b5f5fefe5cc4 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-b9ada531-845e-4662-a85e-b5f5fefe5cc4 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-b9ada531-845e-4662-a85e-b5f5fefe5cc4 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-b9ada531-845e-4662-a85e-b5f5fefe5cc4 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-b9ada531-845e-4662-a85e-b5f5fefe5cc4 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b9ada531-845e-4662-a85e-b5f5fefe5cc4 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b9ada531-845e-4662-a85e-b5f5fefe5cc4 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-b9ada531-845e-4662-a85e-b5f5fefe5cc4 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-b9ada531-845e-4662-a85e-b5f5fefe5cc4 div.sk-estimator:hover {background-color: #d4ebff;}#sk-b9ada531-845e-4662-a85e-b5f5fefe5cc4 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-b9ada531-845e-4662-a85e-b5f5fefe5cc4 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-b9ada531-845e-4662-a85e-b5f5fefe5cc4 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b9ada531-845e-4662-a85e-b5f5fefe5cc4 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-b9ada531-845e-4662-a85e-b5f5fefe5cc4 div.sk-item {z-index: 1;}#sk-b9ada531-845e-4662-a85e-b5f5fefe5cc4 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-b9ada531-845e-4662-a85e-b5f5fefe5cc4 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b9ada531-845e-4662-a85e-b5f5fefe5cc4 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-b9ada531-845e-4662-a85e-b5f5fefe5cc4 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-b9ada531-845e-4662-a85e-b5f5fefe5cc4 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-b9ada531-845e-4662-a85e-b5f5fefe5cc4 div.sk-parallel-item:only-child::after {width: 0;}#sk-b9ada531-845e-4662-a85e-b5f5fefe5cc4 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-b9ada531-845e-4662-a85e-b5f5fefe5cc4 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-b9ada531-845e-4662-a85e-b5f5fefe5cc4 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-b9ada531-845e-4662-a85e-b5f5fefe5cc4 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-b9ada531-845e-4662-a85e-b5f5fefe5cc4 div.sk-text-repr-fallback {display: none;}</style><div id="sk-b9ada531-845e-4662-a85e-b5f5fefe5cc4" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0e00453a-d7bf-4bbc-9224-f9d503e3e19d" type="checkbox" ><label for="0e00453a-d7bf-4bbc-9224-f9d503e3e19d" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="885abe2a-d8a3-4106-93ee-162e62373e4a" type="checkbox" ><label for="885abe2a-d8a3-4106-93ee-162e62373e4a" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="413c1f53-52a2-4d97-bb90-389e1f7dfcf0" type="checkbox" ><label for="413c1f53-52a2-4d97-bb90-389e1f7dfcf0" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-4a48a2ad-f5aa-472d-83e2-9e0cfd9785e2 {color: black;background-color: white;}#sk-4a48a2ad-f5aa-472d-83e2-9e0cfd9785e2 pre{padding: 0;}#sk-4a48a2ad-f5aa-472d-83e2-9e0cfd9785e2 div.sk-toggleable {background-color: white;}#sk-4a48a2ad-f5aa-472d-83e2-9e0cfd9785e2 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-4a48a2ad-f5aa-472d-83e2-9e0cfd9785e2 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-4a48a2ad-f5aa-472d-83e2-9e0cfd9785e2 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-4a48a2ad-f5aa-472d-83e2-9e0cfd9785e2 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-4a48a2ad-f5aa-472d-83e2-9e0cfd9785e2 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-4a48a2ad-f5aa-472d-83e2-9e0cfd9785e2 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-4a48a2ad-f5aa-472d-83e2-9e0cfd9785e2 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-4a48a2ad-f5aa-472d-83e2-9e0cfd9785e2 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-4a48a2ad-f5aa-472d-83e2-9e0cfd9785e2 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-4a48a2ad-f5aa-472d-83e2-9e0cfd9785e2 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-4a48a2ad-f5aa-472d-83e2-9e0cfd9785e2 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-4a48a2ad-f5aa-472d-83e2-9e0cfd9785e2 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-4a48a2ad-f5aa-472d-83e2-9e0cfd9785e2 div.sk-estimator:hover {background-color: #d4ebff;}#sk-4a48a2ad-f5aa-472d-83e2-9e0cfd9785e2 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-4a48a2ad-f5aa-472d-83e2-9e0cfd9785e2 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-4a48a2ad-f5aa-472d-83e2-9e0cfd9785e2 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-4a48a2ad-f5aa-472d-83e2-9e0cfd9785e2 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-4a48a2ad-f5aa-472d-83e2-9e0cfd9785e2 div.sk-item {z-index: 1;}#sk-4a48a2ad-f5aa-472d-83e2-9e0cfd9785e2 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-4a48a2ad-f5aa-472d-83e2-9e0cfd9785e2 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-4a48a2ad-f5aa-472d-83e2-9e0cfd9785e2 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-4a48a2ad-f5aa-472d-83e2-9e0cfd9785e2 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-4a48a2ad-f5aa-472d-83e2-9e0cfd9785e2 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-4a48a2ad-f5aa-472d-83e2-9e0cfd9785e2 div.sk-parallel-item:only-child::after {width: 0;}#sk-4a48a2ad-f5aa-472d-83e2-9e0cfd9785e2 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-4a48a2ad-f5aa-472d-83e2-9e0cfd9785e2 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-4a48a2ad-f5aa-472d-83e2-9e0cfd9785e2 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-4a48a2ad-f5aa-472d-83e2-9e0cfd9785e2 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-4a48a2ad-f5aa-472d-83e2-9e0cfd9785e2 div.sk-text-repr-fallback {display: none;}</style><div id="sk-4a48a2ad-f5aa-472d-83e2-9e0cfd9785e2" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0f09e0ba-eeec-4254-b505-a71f6fa8d3fe" type="checkbox" ><label for="0f09e0ba-eeec-4254-b505-a71f6fa8d3fe" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7b06654b-be80-4f61-9b9e-7a6a4d75e5b0" type="checkbox" ><label for="7b06654b-be80-4f61-9b9e-7a6a4d75e5b0" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="445b0348-1900-4aa3-afab-6c2027961f55" type="checkbox" ><label for="445b0348-1900-4aa3-afab-6c2027961f55" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="72beb3bd-eaf9-457d-aa59-e305ffa47917" type="checkbox" ><label for="72beb3bd-eaf9-457d-aa59-e305ffa47917" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e4c7beb1-2e90-4e58-b7ac-f230adadbc1f" type="checkbox" ><label for="e4c7beb1-2e90-4e58-b7ac-f230adadbc1f" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d6a73e3c-fdbd-4c46-af56-c627e38ef995" type="checkbox" ><label for="d6a73e3c-fdbd-4c46-af56-c627e38ef995" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d2e79072-984b-40d6-a12a-742cabd22e61" type="checkbox" ><label for="d2e79072-984b-40d6-a12a-742cabd22e61" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0e88b33b-a221-4b4f-9244-950a1efbd32e" type="checkbox" ><label for="0e88b33b-a221-4b4f-9244-950a1efbd32e" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c4c6d540-1588-400e-92aa-0fa9b206c3a2" type="checkbox" ><label for="c4c6d540-1588-400e-92aa-0fa9b206c3a2" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-ca227d5b-6006-4839-9143-40b7c9e85ccf {color: black;background-color: white;}#sk-ca227d5b-6006-4839-9143-40b7c9e85ccf pre{padding: 0;}#sk-ca227d5b-6006-4839-9143-40b7c9e85ccf div.sk-toggleable {background-color: white;}#sk-ca227d5b-6006-4839-9143-40b7c9e85ccf label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-ca227d5b-6006-4839-9143-40b7c9e85ccf label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-ca227d5b-6006-4839-9143-40b7c9e85ccf label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-ca227d5b-6006-4839-9143-40b7c9e85ccf div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-ca227d5b-6006-4839-9143-40b7c9e85ccf div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-ca227d5b-6006-4839-9143-40b7c9e85ccf div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-ca227d5b-6006-4839-9143-40b7c9e85ccf input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-ca227d5b-6006-4839-9143-40b7c9e85ccf input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-ca227d5b-6006-4839-9143-40b7c9e85ccf div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ca227d5b-6006-4839-9143-40b7c9e85ccf div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ca227d5b-6006-4839-9143-40b7c9e85ccf input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-ca227d5b-6006-4839-9143-40b7c9e85ccf div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-ca227d5b-6006-4839-9143-40b7c9e85ccf div.sk-estimator:hover {background-color: #d4ebff;}#sk-ca227d5b-6006-4839-9143-40b7c9e85ccf div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-ca227d5b-6006-4839-9143-40b7c9e85ccf div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-ca227d5b-6006-4839-9143-40b7c9e85ccf div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ca227d5b-6006-4839-9143-40b7c9e85ccf div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-ca227d5b-6006-4839-9143-40b7c9e85ccf div.sk-item {z-index: 1;}#sk-ca227d5b-6006-4839-9143-40b7c9e85ccf div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-ca227d5b-6006-4839-9143-40b7c9e85ccf div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ca227d5b-6006-4839-9143-40b7c9e85ccf div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-ca227d5b-6006-4839-9143-40b7c9e85ccf div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-ca227d5b-6006-4839-9143-40b7c9e85ccf div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-ca227d5b-6006-4839-9143-40b7c9e85ccf div.sk-parallel-item:only-child::after {width: 0;}#sk-ca227d5b-6006-4839-9143-40b7c9e85ccf div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-ca227d5b-6006-4839-9143-40b7c9e85ccf div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-ca227d5b-6006-4839-9143-40b7c9e85ccf div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-ca227d5b-6006-4839-9143-40b7c9e85ccf div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-ca227d5b-6006-4839-9143-40b7c9e85ccf div.sk-text-repr-fallback {display: none;}</style><div id="sk-ca227d5b-6006-4839-9143-40b7c9e85ccf" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fd4da387-e4e2-4271-9b86-26d673a09ba9" type="checkbox" ><label for="fd4da387-e4e2-4271-9b86-26d673a09ba9" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5761899c-7a2a-4dc5-95b3-d44837b971f4" type="checkbox" ><label for="5761899c-7a2a-4dc5-95b3-d44837b971f4" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="908493f7-9c63-44f3-a9a7-4ed898cf9871" type="checkbox" ><label for="908493f7-9c63-44f3-a9a7-4ed898cf9871" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="78e5191b-e057-4743-9c25-2001a021c70e" type="checkbox" ><label for="78e5191b-e057-4743-9c25-2001a021c70e" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ecbe7984-b7c1-4172-964c-5dcb794d37ab" type="checkbox" ><label for="ecbe7984-b7c1-4172-964c-5dcb794d37ab" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6a965872-4aae-4ede-a2de-36241dc6c467" type="checkbox" ><label for="6a965872-4aae-4ede-a2de-36241dc6c467" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0b629527-2422-4fb4-8ee3-e90edb672765" type="checkbox" ><label for="0b629527-2422-4fb4-8ee3-e90edb672765" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d18ddf54-dac0-4e2a-b784-7cd0e01cd5ee" type="checkbox" ><label for="d18ddf54-dac0-4e2a-b784-7cd0e01cd5ee" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="118cc1a2-64a7-44f4-a714-ff7f655c518f" type="checkbox" ><label for="118cc1a2-64a7-44f4-a714-ff7f655c518f" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.073 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
