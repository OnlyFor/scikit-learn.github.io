
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-34630142-726a-4e7a-9516-68dc58049947 {color: black;background-color: white;}#sk-34630142-726a-4e7a-9516-68dc58049947 pre{padding: 0;}#sk-34630142-726a-4e7a-9516-68dc58049947 div.sk-toggleable {background-color: white;}#sk-34630142-726a-4e7a-9516-68dc58049947 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-34630142-726a-4e7a-9516-68dc58049947 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-34630142-726a-4e7a-9516-68dc58049947 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-34630142-726a-4e7a-9516-68dc58049947 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-34630142-726a-4e7a-9516-68dc58049947 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-34630142-726a-4e7a-9516-68dc58049947 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-34630142-726a-4e7a-9516-68dc58049947 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-34630142-726a-4e7a-9516-68dc58049947 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-34630142-726a-4e7a-9516-68dc58049947 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-34630142-726a-4e7a-9516-68dc58049947 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-34630142-726a-4e7a-9516-68dc58049947 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-34630142-726a-4e7a-9516-68dc58049947 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-34630142-726a-4e7a-9516-68dc58049947 div.sk-estimator:hover {background-color: #d4ebff;}#sk-34630142-726a-4e7a-9516-68dc58049947 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-34630142-726a-4e7a-9516-68dc58049947 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-34630142-726a-4e7a-9516-68dc58049947 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-34630142-726a-4e7a-9516-68dc58049947 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-34630142-726a-4e7a-9516-68dc58049947 div.sk-item {z-index: 1;}#sk-34630142-726a-4e7a-9516-68dc58049947 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-34630142-726a-4e7a-9516-68dc58049947 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-34630142-726a-4e7a-9516-68dc58049947 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-34630142-726a-4e7a-9516-68dc58049947 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-34630142-726a-4e7a-9516-68dc58049947 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-34630142-726a-4e7a-9516-68dc58049947 div.sk-parallel-item:only-child::after {width: 0;}#sk-34630142-726a-4e7a-9516-68dc58049947 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-34630142-726a-4e7a-9516-68dc58049947 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-34630142-726a-4e7a-9516-68dc58049947 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-34630142-726a-4e7a-9516-68dc58049947 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-34630142-726a-4e7a-9516-68dc58049947 div.sk-text-repr-fallback {display: none;}</style><div id="sk-34630142-726a-4e7a-9516-68dc58049947" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="79769f54-95e3-4057-b631-a9400390c11c" type="checkbox" ><label for="79769f54-95e3-4057-b631-a9400390c11c" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="22ace545-f81a-40c2-a1c4-c4bd4a099ba4" type="checkbox" ><label for="22ace545-f81a-40c2-a1c4-c4bd4a099ba4" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d3b78461-5f6a-4bf5-a210-f9621f17d15d" type="checkbox" ><label for="d3b78461-5f6a-4bf5-a210-f9621f17d15d" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-3206e4c5-bcc2-46f4-896a-10dbe3b1368d {color: black;background-color: white;}#sk-3206e4c5-bcc2-46f4-896a-10dbe3b1368d pre{padding: 0;}#sk-3206e4c5-bcc2-46f4-896a-10dbe3b1368d div.sk-toggleable {background-color: white;}#sk-3206e4c5-bcc2-46f4-896a-10dbe3b1368d label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-3206e4c5-bcc2-46f4-896a-10dbe3b1368d label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-3206e4c5-bcc2-46f4-896a-10dbe3b1368d label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-3206e4c5-bcc2-46f4-896a-10dbe3b1368d div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-3206e4c5-bcc2-46f4-896a-10dbe3b1368d div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-3206e4c5-bcc2-46f4-896a-10dbe3b1368d div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-3206e4c5-bcc2-46f4-896a-10dbe3b1368d input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-3206e4c5-bcc2-46f4-896a-10dbe3b1368d input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-3206e4c5-bcc2-46f4-896a-10dbe3b1368d div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-3206e4c5-bcc2-46f4-896a-10dbe3b1368d div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-3206e4c5-bcc2-46f4-896a-10dbe3b1368d input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-3206e4c5-bcc2-46f4-896a-10dbe3b1368d div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-3206e4c5-bcc2-46f4-896a-10dbe3b1368d div.sk-estimator:hover {background-color: #d4ebff;}#sk-3206e4c5-bcc2-46f4-896a-10dbe3b1368d div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-3206e4c5-bcc2-46f4-896a-10dbe3b1368d div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-3206e4c5-bcc2-46f4-896a-10dbe3b1368d div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-3206e4c5-bcc2-46f4-896a-10dbe3b1368d div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-3206e4c5-bcc2-46f4-896a-10dbe3b1368d div.sk-item {z-index: 1;}#sk-3206e4c5-bcc2-46f4-896a-10dbe3b1368d div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-3206e4c5-bcc2-46f4-896a-10dbe3b1368d div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-3206e4c5-bcc2-46f4-896a-10dbe3b1368d div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-3206e4c5-bcc2-46f4-896a-10dbe3b1368d div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-3206e4c5-bcc2-46f4-896a-10dbe3b1368d div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-3206e4c5-bcc2-46f4-896a-10dbe3b1368d div.sk-parallel-item:only-child::after {width: 0;}#sk-3206e4c5-bcc2-46f4-896a-10dbe3b1368d div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-3206e4c5-bcc2-46f4-896a-10dbe3b1368d div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-3206e4c5-bcc2-46f4-896a-10dbe3b1368d div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-3206e4c5-bcc2-46f4-896a-10dbe3b1368d div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-3206e4c5-bcc2-46f4-896a-10dbe3b1368d div.sk-text-repr-fallback {display: none;}</style><div id="sk-3206e4c5-bcc2-46f4-896a-10dbe3b1368d" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5f854314-22bb-4d9b-a43c-c006ee025b60" type="checkbox" ><label for="5f854314-22bb-4d9b-a43c-c006ee025b60" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cdbec81a-53d3-4ee3-b9cf-d9d4ae6300c2" type="checkbox" ><label for="cdbec81a-53d3-4ee3-b9cf-d9d4ae6300c2" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d27008a6-cd32-4f29-9bff-28c572c7a3cb" type="checkbox" ><label for="d27008a6-cd32-4f29-9bff-28c572c7a3cb" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="04eb3dff-bfa8-415e-ad5a-3bea5bcf0111" type="checkbox" ><label for="04eb3dff-bfa8-415e-ad5a-3bea5bcf0111" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-80ebffdb-144e-4810-943a-fbe79d668f15 {color: black;background-color: white;}#sk-80ebffdb-144e-4810-943a-fbe79d668f15 pre{padding: 0;}#sk-80ebffdb-144e-4810-943a-fbe79d668f15 div.sk-toggleable {background-color: white;}#sk-80ebffdb-144e-4810-943a-fbe79d668f15 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-80ebffdb-144e-4810-943a-fbe79d668f15 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-80ebffdb-144e-4810-943a-fbe79d668f15 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-80ebffdb-144e-4810-943a-fbe79d668f15 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-80ebffdb-144e-4810-943a-fbe79d668f15 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-80ebffdb-144e-4810-943a-fbe79d668f15 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-80ebffdb-144e-4810-943a-fbe79d668f15 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-80ebffdb-144e-4810-943a-fbe79d668f15 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-80ebffdb-144e-4810-943a-fbe79d668f15 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-80ebffdb-144e-4810-943a-fbe79d668f15 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-80ebffdb-144e-4810-943a-fbe79d668f15 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-80ebffdb-144e-4810-943a-fbe79d668f15 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-80ebffdb-144e-4810-943a-fbe79d668f15 div.sk-estimator:hover {background-color: #d4ebff;}#sk-80ebffdb-144e-4810-943a-fbe79d668f15 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-80ebffdb-144e-4810-943a-fbe79d668f15 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-80ebffdb-144e-4810-943a-fbe79d668f15 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-80ebffdb-144e-4810-943a-fbe79d668f15 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-80ebffdb-144e-4810-943a-fbe79d668f15 div.sk-item {z-index: 1;}#sk-80ebffdb-144e-4810-943a-fbe79d668f15 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-80ebffdb-144e-4810-943a-fbe79d668f15 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-80ebffdb-144e-4810-943a-fbe79d668f15 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-80ebffdb-144e-4810-943a-fbe79d668f15 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-80ebffdb-144e-4810-943a-fbe79d668f15 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-80ebffdb-144e-4810-943a-fbe79d668f15 div.sk-parallel-item:only-child::after {width: 0;}#sk-80ebffdb-144e-4810-943a-fbe79d668f15 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-80ebffdb-144e-4810-943a-fbe79d668f15 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-80ebffdb-144e-4810-943a-fbe79d668f15 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-80ebffdb-144e-4810-943a-fbe79d668f15 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-80ebffdb-144e-4810-943a-fbe79d668f15 div.sk-text-repr-fallback {display: none;}</style><div id="sk-80ebffdb-144e-4810-943a-fbe79d668f15" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4ce377de-bf30-430c-9b5f-e09b678fd760" type="checkbox" ><label for="4ce377de-bf30-430c-9b5f-e09b678fd760" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4eb642a7-2b96-4332-b23e-6927c746537d" type="checkbox" ><label for="4eb642a7-2b96-4332-b23e-6927c746537d" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="00e2a257-5e42-4c8b-9a51-28809968ce93" type="checkbox" ><label for="00e2a257-5e42-4c8b-9a51-28809968ce93" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-144991fb-2670-4001-a7a3-34bec642fb51 {color: black;background-color: white;}#sk-144991fb-2670-4001-a7a3-34bec642fb51 pre{padding: 0;}#sk-144991fb-2670-4001-a7a3-34bec642fb51 div.sk-toggleable {background-color: white;}#sk-144991fb-2670-4001-a7a3-34bec642fb51 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-144991fb-2670-4001-a7a3-34bec642fb51 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-144991fb-2670-4001-a7a3-34bec642fb51 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-144991fb-2670-4001-a7a3-34bec642fb51 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-144991fb-2670-4001-a7a3-34bec642fb51 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-144991fb-2670-4001-a7a3-34bec642fb51 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-144991fb-2670-4001-a7a3-34bec642fb51 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-144991fb-2670-4001-a7a3-34bec642fb51 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-144991fb-2670-4001-a7a3-34bec642fb51 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-144991fb-2670-4001-a7a3-34bec642fb51 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-144991fb-2670-4001-a7a3-34bec642fb51 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-144991fb-2670-4001-a7a3-34bec642fb51 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-144991fb-2670-4001-a7a3-34bec642fb51 div.sk-estimator:hover {background-color: #d4ebff;}#sk-144991fb-2670-4001-a7a3-34bec642fb51 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-144991fb-2670-4001-a7a3-34bec642fb51 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-144991fb-2670-4001-a7a3-34bec642fb51 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-144991fb-2670-4001-a7a3-34bec642fb51 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-144991fb-2670-4001-a7a3-34bec642fb51 div.sk-item {z-index: 1;}#sk-144991fb-2670-4001-a7a3-34bec642fb51 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-144991fb-2670-4001-a7a3-34bec642fb51 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-144991fb-2670-4001-a7a3-34bec642fb51 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-144991fb-2670-4001-a7a3-34bec642fb51 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-144991fb-2670-4001-a7a3-34bec642fb51 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-144991fb-2670-4001-a7a3-34bec642fb51 div.sk-parallel-item:only-child::after {width: 0;}#sk-144991fb-2670-4001-a7a3-34bec642fb51 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-144991fb-2670-4001-a7a3-34bec642fb51 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-144991fb-2670-4001-a7a3-34bec642fb51 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-144991fb-2670-4001-a7a3-34bec642fb51 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-144991fb-2670-4001-a7a3-34bec642fb51 div.sk-text-repr-fallback {display: none;}</style><div id="sk-144991fb-2670-4001-a7a3-34bec642fb51" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="72cc3ec7-b7f0-4aec-9b8e-14573d3c832b" type="checkbox" ><label for="72cc3ec7-b7f0-4aec-9b8e-14573d3c832b" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0b630585-5fe3-4a96-9f0e-fc31d757965b" type="checkbox" ><label for="0b630585-5fe3-4a96-9f0e-fc31d757965b" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3ebe0894-91c2-4c41-8e5e-24df4f3d5309" type="checkbox" ><label for="3ebe0894-91c2-4c41-8e5e-24df4f3d5309" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c1cb12f1-c116-4490-b4a2-3fb413fb2e0d" type="checkbox" ><label for="c1cb12f1-c116-4490-b4a2-3fb413fb2e0d" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="746e5225-0dfd-480a-85ca-7c0b8e52c739" type="checkbox" ><label for="746e5225-0dfd-480a-85ca-7c0b8e52c739" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d0174086-5c6c-47aa-8157-1bb40a1c4c3a" type="checkbox" ><label for="d0174086-5c6c-47aa-8157-1bb40a1c4c3a" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1e55e794-8abc-46fe-84f9-8df599745435" type="checkbox" ><label for="1e55e794-8abc-46fe-84f9-8df599745435" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="38d55519-a4cf-4741-b3ed-1fd469733a12" type="checkbox" ><label for="38d55519-a4cf-4741-b3ed-1fd469733a12" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="906426b8-3595-4c09-b0e4-54f1e4ed1820" type="checkbox" ><label for="906426b8-3595-4c09-b0e4-54f1e4ed1820" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-89922a5b-2b01-42ec-bcaa-f75dd8a01032 {color: black;background-color: white;}#sk-89922a5b-2b01-42ec-bcaa-f75dd8a01032 pre{padding: 0;}#sk-89922a5b-2b01-42ec-bcaa-f75dd8a01032 div.sk-toggleable {background-color: white;}#sk-89922a5b-2b01-42ec-bcaa-f75dd8a01032 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-89922a5b-2b01-42ec-bcaa-f75dd8a01032 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-89922a5b-2b01-42ec-bcaa-f75dd8a01032 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-89922a5b-2b01-42ec-bcaa-f75dd8a01032 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-89922a5b-2b01-42ec-bcaa-f75dd8a01032 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-89922a5b-2b01-42ec-bcaa-f75dd8a01032 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-89922a5b-2b01-42ec-bcaa-f75dd8a01032 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-89922a5b-2b01-42ec-bcaa-f75dd8a01032 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-89922a5b-2b01-42ec-bcaa-f75dd8a01032 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-89922a5b-2b01-42ec-bcaa-f75dd8a01032 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-89922a5b-2b01-42ec-bcaa-f75dd8a01032 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-89922a5b-2b01-42ec-bcaa-f75dd8a01032 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-89922a5b-2b01-42ec-bcaa-f75dd8a01032 div.sk-estimator:hover {background-color: #d4ebff;}#sk-89922a5b-2b01-42ec-bcaa-f75dd8a01032 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-89922a5b-2b01-42ec-bcaa-f75dd8a01032 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-89922a5b-2b01-42ec-bcaa-f75dd8a01032 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-89922a5b-2b01-42ec-bcaa-f75dd8a01032 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-89922a5b-2b01-42ec-bcaa-f75dd8a01032 div.sk-item {z-index: 1;}#sk-89922a5b-2b01-42ec-bcaa-f75dd8a01032 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-89922a5b-2b01-42ec-bcaa-f75dd8a01032 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-89922a5b-2b01-42ec-bcaa-f75dd8a01032 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-89922a5b-2b01-42ec-bcaa-f75dd8a01032 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-89922a5b-2b01-42ec-bcaa-f75dd8a01032 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-89922a5b-2b01-42ec-bcaa-f75dd8a01032 div.sk-parallel-item:only-child::after {width: 0;}#sk-89922a5b-2b01-42ec-bcaa-f75dd8a01032 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-89922a5b-2b01-42ec-bcaa-f75dd8a01032 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-89922a5b-2b01-42ec-bcaa-f75dd8a01032 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-89922a5b-2b01-42ec-bcaa-f75dd8a01032 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-89922a5b-2b01-42ec-bcaa-f75dd8a01032 div.sk-text-repr-fallback {display: none;}</style><div id="sk-89922a5b-2b01-42ec-bcaa-f75dd8a01032" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="76d93c30-cebf-4678-b995-359bf1bbacf2" type="checkbox" ><label for="76d93c30-cebf-4678-b995-359bf1bbacf2" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d3a9de18-40c2-4a63-a316-1d9264f3e83d" type="checkbox" ><label for="d3a9de18-40c2-4a63-a316-1d9264f3e83d" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4acac7cc-8488-4a47-a1f4-df576d0744a5" type="checkbox" ><label for="4acac7cc-8488-4a47-a1f4-df576d0744a5" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5ef61c4c-057a-4690-a674-cfd93a4ee59b" type="checkbox" ><label for="5ef61c4c-057a-4690-a674-cfd93a4ee59b" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bfb4d2c4-1b09-4256-b4c0-adf00250bce3" type="checkbox" ><label for="bfb4d2c4-1b09-4256-b4c0-adf00250bce3" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0d7f87d5-e394-446d-be84-a1d3404fea1f" type="checkbox" ><label for="0d7f87d5-e394-446d-be84-a1d3404fea1f" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a87aa387-c28f-4fcb-a758-8279f8b743ef" type="checkbox" ><label for="a87aa387-c28f-4fcb-a758-8279f8b743ef" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4602966a-4726-4b2d-8e91-abbcff49ea03" type="checkbox" ><label for="4602966a-4726-4b2d-8e91-abbcff49ea03" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f8ee8639-30e1-4dfc-8d4b-a136855f944c" type="checkbox" ><label for="f8ee8639-30e1-4dfc-8d4b-a136855f944c" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.140 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
