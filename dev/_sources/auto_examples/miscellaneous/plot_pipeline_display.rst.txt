
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-464ba5f5-ba0d-45c7-bec5-dac62682695e {color: black;background-color: white;}#sk-464ba5f5-ba0d-45c7-bec5-dac62682695e pre{padding: 0;}#sk-464ba5f5-ba0d-45c7-bec5-dac62682695e div.sk-toggleable {background-color: white;}#sk-464ba5f5-ba0d-45c7-bec5-dac62682695e label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-464ba5f5-ba0d-45c7-bec5-dac62682695e label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-464ba5f5-ba0d-45c7-bec5-dac62682695e label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-464ba5f5-ba0d-45c7-bec5-dac62682695e div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-464ba5f5-ba0d-45c7-bec5-dac62682695e div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-464ba5f5-ba0d-45c7-bec5-dac62682695e div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-464ba5f5-ba0d-45c7-bec5-dac62682695e input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-464ba5f5-ba0d-45c7-bec5-dac62682695e input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-464ba5f5-ba0d-45c7-bec5-dac62682695e div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-464ba5f5-ba0d-45c7-bec5-dac62682695e div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-464ba5f5-ba0d-45c7-bec5-dac62682695e input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-464ba5f5-ba0d-45c7-bec5-dac62682695e div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-464ba5f5-ba0d-45c7-bec5-dac62682695e div.sk-estimator:hover {background-color: #d4ebff;}#sk-464ba5f5-ba0d-45c7-bec5-dac62682695e div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-464ba5f5-ba0d-45c7-bec5-dac62682695e div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-464ba5f5-ba0d-45c7-bec5-dac62682695e div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-464ba5f5-ba0d-45c7-bec5-dac62682695e div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-464ba5f5-ba0d-45c7-bec5-dac62682695e div.sk-item {z-index: 1;}#sk-464ba5f5-ba0d-45c7-bec5-dac62682695e div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-464ba5f5-ba0d-45c7-bec5-dac62682695e div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-464ba5f5-ba0d-45c7-bec5-dac62682695e div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-464ba5f5-ba0d-45c7-bec5-dac62682695e div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-464ba5f5-ba0d-45c7-bec5-dac62682695e div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-464ba5f5-ba0d-45c7-bec5-dac62682695e div.sk-parallel-item:only-child::after {width: 0;}#sk-464ba5f5-ba0d-45c7-bec5-dac62682695e div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-464ba5f5-ba0d-45c7-bec5-dac62682695e div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-464ba5f5-ba0d-45c7-bec5-dac62682695e div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-464ba5f5-ba0d-45c7-bec5-dac62682695e div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-464ba5f5-ba0d-45c7-bec5-dac62682695e div.sk-text-repr-fallback {display: none;}</style><div id="sk-464ba5f5-ba0d-45c7-bec5-dac62682695e" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c0b7e50b-ac05-4915-a9a7-73bb6bafdae6" type="checkbox" ><label for="c0b7e50b-ac05-4915-a9a7-73bb6bafdae6" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="17ca9d93-d8eb-4a98-b702-a37c4e6f8e3d" type="checkbox" ><label for="17ca9d93-d8eb-4a98-b702-a37c4e6f8e3d" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="78794be2-5138-44b8-b1f0-d469c675c55c" type="checkbox" ><label for="78794be2-5138-44b8-b1f0-d469c675c55c" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-515abdfb-4474-4b00-8c51-a5ef109e19ce {color: black;background-color: white;}#sk-515abdfb-4474-4b00-8c51-a5ef109e19ce pre{padding: 0;}#sk-515abdfb-4474-4b00-8c51-a5ef109e19ce div.sk-toggleable {background-color: white;}#sk-515abdfb-4474-4b00-8c51-a5ef109e19ce label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-515abdfb-4474-4b00-8c51-a5ef109e19ce label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-515abdfb-4474-4b00-8c51-a5ef109e19ce label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-515abdfb-4474-4b00-8c51-a5ef109e19ce div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-515abdfb-4474-4b00-8c51-a5ef109e19ce div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-515abdfb-4474-4b00-8c51-a5ef109e19ce div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-515abdfb-4474-4b00-8c51-a5ef109e19ce input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-515abdfb-4474-4b00-8c51-a5ef109e19ce input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-515abdfb-4474-4b00-8c51-a5ef109e19ce div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-515abdfb-4474-4b00-8c51-a5ef109e19ce div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-515abdfb-4474-4b00-8c51-a5ef109e19ce input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-515abdfb-4474-4b00-8c51-a5ef109e19ce div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-515abdfb-4474-4b00-8c51-a5ef109e19ce div.sk-estimator:hover {background-color: #d4ebff;}#sk-515abdfb-4474-4b00-8c51-a5ef109e19ce div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-515abdfb-4474-4b00-8c51-a5ef109e19ce div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-515abdfb-4474-4b00-8c51-a5ef109e19ce div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-515abdfb-4474-4b00-8c51-a5ef109e19ce div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-515abdfb-4474-4b00-8c51-a5ef109e19ce div.sk-item {z-index: 1;}#sk-515abdfb-4474-4b00-8c51-a5ef109e19ce div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-515abdfb-4474-4b00-8c51-a5ef109e19ce div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-515abdfb-4474-4b00-8c51-a5ef109e19ce div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-515abdfb-4474-4b00-8c51-a5ef109e19ce div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-515abdfb-4474-4b00-8c51-a5ef109e19ce div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-515abdfb-4474-4b00-8c51-a5ef109e19ce div.sk-parallel-item:only-child::after {width: 0;}#sk-515abdfb-4474-4b00-8c51-a5ef109e19ce div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-515abdfb-4474-4b00-8c51-a5ef109e19ce div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-515abdfb-4474-4b00-8c51-a5ef109e19ce div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-515abdfb-4474-4b00-8c51-a5ef109e19ce div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-515abdfb-4474-4b00-8c51-a5ef109e19ce div.sk-text-repr-fallback {display: none;}</style><div id="sk-515abdfb-4474-4b00-8c51-a5ef109e19ce" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="64d783b5-dde1-4fb4-ac9a-e4f6b6c8a101" type="checkbox" ><label for="64d783b5-dde1-4fb4-ac9a-e4f6b6c8a101" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a69e2af0-13ed-4c6b-add8-6d0569874ac1" type="checkbox" ><label for="a69e2af0-13ed-4c6b-add8-6d0569874ac1" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1a33b30f-2bba-48da-8e70-b0fd0f70fac0" type="checkbox" ><label for="1a33b30f-2bba-48da-8e70-b0fd0f70fac0" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bfc9d3eb-4675-477d-afad-147f24ba0aa0" type="checkbox" ><label for="bfc9d3eb-4675-477d-afad-147f24ba0aa0" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-19b4c401-118a-4ff9-987a-70dc2bde01e3 {color: black;background-color: white;}#sk-19b4c401-118a-4ff9-987a-70dc2bde01e3 pre{padding: 0;}#sk-19b4c401-118a-4ff9-987a-70dc2bde01e3 div.sk-toggleable {background-color: white;}#sk-19b4c401-118a-4ff9-987a-70dc2bde01e3 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-19b4c401-118a-4ff9-987a-70dc2bde01e3 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-19b4c401-118a-4ff9-987a-70dc2bde01e3 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-19b4c401-118a-4ff9-987a-70dc2bde01e3 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-19b4c401-118a-4ff9-987a-70dc2bde01e3 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-19b4c401-118a-4ff9-987a-70dc2bde01e3 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-19b4c401-118a-4ff9-987a-70dc2bde01e3 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-19b4c401-118a-4ff9-987a-70dc2bde01e3 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-19b4c401-118a-4ff9-987a-70dc2bde01e3 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-19b4c401-118a-4ff9-987a-70dc2bde01e3 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-19b4c401-118a-4ff9-987a-70dc2bde01e3 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-19b4c401-118a-4ff9-987a-70dc2bde01e3 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-19b4c401-118a-4ff9-987a-70dc2bde01e3 div.sk-estimator:hover {background-color: #d4ebff;}#sk-19b4c401-118a-4ff9-987a-70dc2bde01e3 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-19b4c401-118a-4ff9-987a-70dc2bde01e3 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-19b4c401-118a-4ff9-987a-70dc2bde01e3 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-19b4c401-118a-4ff9-987a-70dc2bde01e3 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-19b4c401-118a-4ff9-987a-70dc2bde01e3 div.sk-item {z-index: 1;}#sk-19b4c401-118a-4ff9-987a-70dc2bde01e3 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-19b4c401-118a-4ff9-987a-70dc2bde01e3 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-19b4c401-118a-4ff9-987a-70dc2bde01e3 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-19b4c401-118a-4ff9-987a-70dc2bde01e3 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-19b4c401-118a-4ff9-987a-70dc2bde01e3 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-19b4c401-118a-4ff9-987a-70dc2bde01e3 div.sk-parallel-item:only-child::after {width: 0;}#sk-19b4c401-118a-4ff9-987a-70dc2bde01e3 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-19b4c401-118a-4ff9-987a-70dc2bde01e3 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-19b4c401-118a-4ff9-987a-70dc2bde01e3 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-19b4c401-118a-4ff9-987a-70dc2bde01e3 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-19b4c401-118a-4ff9-987a-70dc2bde01e3 div.sk-text-repr-fallback {display: none;}</style><div id="sk-19b4c401-118a-4ff9-987a-70dc2bde01e3" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8c0c234b-6931-4bb4-b782-2cef7d35df74" type="checkbox" ><label for="8c0c234b-6931-4bb4-b782-2cef7d35df74" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ed65e8e2-4cd6-4ae1-9d41-ad0dd568e545" type="checkbox" ><label for="ed65e8e2-4cd6-4ae1-9d41-ad0dd568e545" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="436a5d5d-1351-49dc-bc18-0090eb213564" type="checkbox" ><label for="436a5d5d-1351-49dc-bc18-0090eb213564" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-c721417b-b333-4be1-be9d-ccca1e55e5da {color: black;background-color: white;}#sk-c721417b-b333-4be1-be9d-ccca1e55e5da pre{padding: 0;}#sk-c721417b-b333-4be1-be9d-ccca1e55e5da div.sk-toggleable {background-color: white;}#sk-c721417b-b333-4be1-be9d-ccca1e55e5da label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-c721417b-b333-4be1-be9d-ccca1e55e5da label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-c721417b-b333-4be1-be9d-ccca1e55e5da label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-c721417b-b333-4be1-be9d-ccca1e55e5da div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-c721417b-b333-4be1-be9d-ccca1e55e5da div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-c721417b-b333-4be1-be9d-ccca1e55e5da div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-c721417b-b333-4be1-be9d-ccca1e55e5da input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-c721417b-b333-4be1-be9d-ccca1e55e5da input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-c721417b-b333-4be1-be9d-ccca1e55e5da div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-c721417b-b333-4be1-be9d-ccca1e55e5da div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-c721417b-b333-4be1-be9d-ccca1e55e5da input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-c721417b-b333-4be1-be9d-ccca1e55e5da div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-c721417b-b333-4be1-be9d-ccca1e55e5da div.sk-estimator:hover {background-color: #d4ebff;}#sk-c721417b-b333-4be1-be9d-ccca1e55e5da div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-c721417b-b333-4be1-be9d-ccca1e55e5da div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-c721417b-b333-4be1-be9d-ccca1e55e5da div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-c721417b-b333-4be1-be9d-ccca1e55e5da div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-c721417b-b333-4be1-be9d-ccca1e55e5da div.sk-item {z-index: 1;}#sk-c721417b-b333-4be1-be9d-ccca1e55e5da div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-c721417b-b333-4be1-be9d-ccca1e55e5da div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-c721417b-b333-4be1-be9d-ccca1e55e5da div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-c721417b-b333-4be1-be9d-ccca1e55e5da div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-c721417b-b333-4be1-be9d-ccca1e55e5da div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-c721417b-b333-4be1-be9d-ccca1e55e5da div.sk-parallel-item:only-child::after {width: 0;}#sk-c721417b-b333-4be1-be9d-ccca1e55e5da div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-c721417b-b333-4be1-be9d-ccca1e55e5da div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-c721417b-b333-4be1-be9d-ccca1e55e5da div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-c721417b-b333-4be1-be9d-ccca1e55e5da div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-c721417b-b333-4be1-be9d-ccca1e55e5da div.sk-text-repr-fallback {display: none;}</style><div id="sk-c721417b-b333-4be1-be9d-ccca1e55e5da" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8c163b86-5f64-4748-8551-d865c9dac0a5" type="checkbox" ><label for="8c163b86-5f64-4748-8551-d865c9dac0a5" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d6aa2dc1-d09d-4b32-a675-261d183f225c" type="checkbox" ><label for="d6aa2dc1-d09d-4b32-a675-261d183f225c" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d98cdc95-7178-4402-86b2-dad55247fe0c" type="checkbox" ><label for="d98cdc95-7178-4402-86b2-dad55247fe0c" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1d93a50c-e4e2-48c3-8961-5a16e5e8c41b" type="checkbox" ><label for="1d93a50c-e4e2-48c3-8961-5a16e5e8c41b" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3dfbce05-68c1-4a89-88c9-44e902793aa7" type="checkbox" ><label for="3dfbce05-68c1-4a89-88c9-44e902793aa7" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1af28e54-e149-4266-a95e-6e8df3b2c2e8" type="checkbox" ><label for="1af28e54-e149-4266-a95e-6e8df3b2c2e8" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c4a4c246-165e-49bf-a32b-89eb409131d5" type="checkbox" ><label for="c4a4c246-165e-49bf-a32b-89eb409131d5" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="512a84cf-723d-4aed-9e73-58dfb5db606f" type="checkbox" ><label for="512a84cf-723d-4aed-9e73-58dfb5db606f" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c359d8ef-1a37-484d-8b1f-c339242251af" type="checkbox" ><label for="c359d8ef-1a37-484d-8b1f-c339242251af" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-695ee794-7b8c-4237-9c8f-04c76a8843cd {color: black;background-color: white;}#sk-695ee794-7b8c-4237-9c8f-04c76a8843cd pre{padding: 0;}#sk-695ee794-7b8c-4237-9c8f-04c76a8843cd div.sk-toggleable {background-color: white;}#sk-695ee794-7b8c-4237-9c8f-04c76a8843cd label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-695ee794-7b8c-4237-9c8f-04c76a8843cd label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-695ee794-7b8c-4237-9c8f-04c76a8843cd label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-695ee794-7b8c-4237-9c8f-04c76a8843cd div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-695ee794-7b8c-4237-9c8f-04c76a8843cd div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-695ee794-7b8c-4237-9c8f-04c76a8843cd div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-695ee794-7b8c-4237-9c8f-04c76a8843cd input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-695ee794-7b8c-4237-9c8f-04c76a8843cd input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-695ee794-7b8c-4237-9c8f-04c76a8843cd div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-695ee794-7b8c-4237-9c8f-04c76a8843cd div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-695ee794-7b8c-4237-9c8f-04c76a8843cd input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-695ee794-7b8c-4237-9c8f-04c76a8843cd div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-695ee794-7b8c-4237-9c8f-04c76a8843cd div.sk-estimator:hover {background-color: #d4ebff;}#sk-695ee794-7b8c-4237-9c8f-04c76a8843cd div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-695ee794-7b8c-4237-9c8f-04c76a8843cd div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-695ee794-7b8c-4237-9c8f-04c76a8843cd div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-695ee794-7b8c-4237-9c8f-04c76a8843cd div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-695ee794-7b8c-4237-9c8f-04c76a8843cd div.sk-item {z-index: 1;}#sk-695ee794-7b8c-4237-9c8f-04c76a8843cd div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-695ee794-7b8c-4237-9c8f-04c76a8843cd div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-695ee794-7b8c-4237-9c8f-04c76a8843cd div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-695ee794-7b8c-4237-9c8f-04c76a8843cd div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-695ee794-7b8c-4237-9c8f-04c76a8843cd div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-695ee794-7b8c-4237-9c8f-04c76a8843cd div.sk-parallel-item:only-child::after {width: 0;}#sk-695ee794-7b8c-4237-9c8f-04c76a8843cd div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-695ee794-7b8c-4237-9c8f-04c76a8843cd div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-695ee794-7b8c-4237-9c8f-04c76a8843cd div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-695ee794-7b8c-4237-9c8f-04c76a8843cd div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-695ee794-7b8c-4237-9c8f-04c76a8843cd div.sk-text-repr-fallback {display: none;}</style><div id="sk-695ee794-7b8c-4237-9c8f-04c76a8843cd" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="70fabbee-ceb5-426d-aece-58a58fa81059" type="checkbox" ><label for="70fabbee-ceb5-426d-aece-58a58fa81059" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bc6a9583-ac8e-4db2-945a-829c30ce8ace" type="checkbox" ><label for="bc6a9583-ac8e-4db2-945a-829c30ce8ace" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="eae2136d-7c1a-4cd3-b5ec-78589e777568" type="checkbox" ><label for="eae2136d-7c1a-4cd3-b5ec-78589e777568" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="44da5791-1f3b-4c19-8ed3-3c7689918152" type="checkbox" ><label for="44da5791-1f3b-4c19-8ed3-3c7689918152" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="51b3d825-c771-40ec-a175-e924b8d16a44" type="checkbox" ><label for="51b3d825-c771-40ec-a175-e924b8d16a44" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c1870ede-9d40-4992-b259-67d4b046fc99" type="checkbox" ><label for="c1870ede-9d40-4992-b259-67d4b046fc99" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="aac4c854-bee4-4c01-ba43-1c41f3c91c6c" type="checkbox" ><label for="aac4c854-bee4-4c01-ba43-1c41f3c91c6c" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="760d4c3c-3ad0-46cc-934e-a7342f8bc076" type="checkbox" ><label for="760d4c3c-3ad0-46cc-934e-a7342f8bc076" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9a757add-fccf-4b2b-8d12-3a7558aef756" type="checkbox" ><label for="9a757add-fccf-4b2b-8d12-3a7558aef756" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.071 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
