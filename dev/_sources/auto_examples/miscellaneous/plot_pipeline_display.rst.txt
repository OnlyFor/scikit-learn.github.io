
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-a014a75c-9429-4e91-93aa-a221c07e6c67 {color: black;background-color: white;}#sk-a014a75c-9429-4e91-93aa-a221c07e6c67 pre{padding: 0;}#sk-a014a75c-9429-4e91-93aa-a221c07e6c67 div.sk-toggleable {background-color: white;}#sk-a014a75c-9429-4e91-93aa-a221c07e6c67 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-a014a75c-9429-4e91-93aa-a221c07e6c67 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-a014a75c-9429-4e91-93aa-a221c07e6c67 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-a014a75c-9429-4e91-93aa-a221c07e6c67 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-a014a75c-9429-4e91-93aa-a221c07e6c67 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-a014a75c-9429-4e91-93aa-a221c07e6c67 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-a014a75c-9429-4e91-93aa-a221c07e6c67 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-a014a75c-9429-4e91-93aa-a221c07e6c67 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-a014a75c-9429-4e91-93aa-a221c07e6c67 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-a014a75c-9429-4e91-93aa-a221c07e6c67 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-a014a75c-9429-4e91-93aa-a221c07e6c67 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-a014a75c-9429-4e91-93aa-a221c07e6c67 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-a014a75c-9429-4e91-93aa-a221c07e6c67 div.sk-estimator:hover {background-color: #d4ebff;}#sk-a014a75c-9429-4e91-93aa-a221c07e6c67 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-a014a75c-9429-4e91-93aa-a221c07e6c67 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-a014a75c-9429-4e91-93aa-a221c07e6c67 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-a014a75c-9429-4e91-93aa-a221c07e6c67 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-a014a75c-9429-4e91-93aa-a221c07e6c67 div.sk-item {z-index: 1;}#sk-a014a75c-9429-4e91-93aa-a221c07e6c67 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-a014a75c-9429-4e91-93aa-a221c07e6c67 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-a014a75c-9429-4e91-93aa-a221c07e6c67 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-a014a75c-9429-4e91-93aa-a221c07e6c67 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-a014a75c-9429-4e91-93aa-a221c07e6c67 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-a014a75c-9429-4e91-93aa-a221c07e6c67 div.sk-parallel-item:only-child::after {width: 0;}#sk-a014a75c-9429-4e91-93aa-a221c07e6c67 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-a014a75c-9429-4e91-93aa-a221c07e6c67 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-a014a75c-9429-4e91-93aa-a221c07e6c67 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-a014a75c-9429-4e91-93aa-a221c07e6c67 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-a014a75c-9429-4e91-93aa-a221c07e6c67 div.sk-text-repr-fallback {display: none;}</style><div id="sk-a014a75c-9429-4e91-93aa-a221c07e6c67" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f9e4d60b-ab97-4122-8832-983d8d97e11f" type="checkbox" ><label for="f9e4d60b-ab97-4122-8832-983d8d97e11f" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="80d3af89-7d7d-466e-87d2-ee309642c736" type="checkbox" ><label for="80d3af89-7d7d-466e-87d2-ee309642c736" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0b08dff0-726c-4692-a0cd-505774b81860" type="checkbox" ><label for="0b08dff0-726c-4692-a0cd-505774b81860" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-c3161f10-1b0f-44a2-ab91-fe48e5a9d672 {color: black;background-color: white;}#sk-c3161f10-1b0f-44a2-ab91-fe48e5a9d672 pre{padding: 0;}#sk-c3161f10-1b0f-44a2-ab91-fe48e5a9d672 div.sk-toggleable {background-color: white;}#sk-c3161f10-1b0f-44a2-ab91-fe48e5a9d672 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-c3161f10-1b0f-44a2-ab91-fe48e5a9d672 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-c3161f10-1b0f-44a2-ab91-fe48e5a9d672 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-c3161f10-1b0f-44a2-ab91-fe48e5a9d672 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-c3161f10-1b0f-44a2-ab91-fe48e5a9d672 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-c3161f10-1b0f-44a2-ab91-fe48e5a9d672 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-c3161f10-1b0f-44a2-ab91-fe48e5a9d672 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-c3161f10-1b0f-44a2-ab91-fe48e5a9d672 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-c3161f10-1b0f-44a2-ab91-fe48e5a9d672 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-c3161f10-1b0f-44a2-ab91-fe48e5a9d672 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-c3161f10-1b0f-44a2-ab91-fe48e5a9d672 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-c3161f10-1b0f-44a2-ab91-fe48e5a9d672 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-c3161f10-1b0f-44a2-ab91-fe48e5a9d672 div.sk-estimator:hover {background-color: #d4ebff;}#sk-c3161f10-1b0f-44a2-ab91-fe48e5a9d672 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-c3161f10-1b0f-44a2-ab91-fe48e5a9d672 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-c3161f10-1b0f-44a2-ab91-fe48e5a9d672 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-c3161f10-1b0f-44a2-ab91-fe48e5a9d672 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-c3161f10-1b0f-44a2-ab91-fe48e5a9d672 div.sk-item {z-index: 1;}#sk-c3161f10-1b0f-44a2-ab91-fe48e5a9d672 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-c3161f10-1b0f-44a2-ab91-fe48e5a9d672 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-c3161f10-1b0f-44a2-ab91-fe48e5a9d672 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-c3161f10-1b0f-44a2-ab91-fe48e5a9d672 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-c3161f10-1b0f-44a2-ab91-fe48e5a9d672 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-c3161f10-1b0f-44a2-ab91-fe48e5a9d672 div.sk-parallel-item:only-child::after {width: 0;}#sk-c3161f10-1b0f-44a2-ab91-fe48e5a9d672 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-c3161f10-1b0f-44a2-ab91-fe48e5a9d672 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-c3161f10-1b0f-44a2-ab91-fe48e5a9d672 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-c3161f10-1b0f-44a2-ab91-fe48e5a9d672 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-c3161f10-1b0f-44a2-ab91-fe48e5a9d672 div.sk-text-repr-fallback {display: none;}</style><div id="sk-c3161f10-1b0f-44a2-ab91-fe48e5a9d672" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="825c4951-93b7-4839-aa94-262b36f776b1" type="checkbox" ><label for="825c4951-93b7-4839-aa94-262b36f776b1" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9004799b-bbe7-45e5-8f63-9929c3ee7cce" type="checkbox" ><label for="9004799b-bbe7-45e5-8f63-9929c3ee7cce" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="30543618-9c03-4f4a-af61-b55295df052a" type="checkbox" ><label for="30543618-9c03-4f4a-af61-b55295df052a" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="57180331-bb95-4531-8e56-88f47afe87d0" type="checkbox" ><label for="57180331-bb95-4531-8e56-88f47afe87d0" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-558600af-39c1-4d96-b905-5b7ee37c4fe4 {color: black;background-color: white;}#sk-558600af-39c1-4d96-b905-5b7ee37c4fe4 pre{padding: 0;}#sk-558600af-39c1-4d96-b905-5b7ee37c4fe4 div.sk-toggleable {background-color: white;}#sk-558600af-39c1-4d96-b905-5b7ee37c4fe4 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-558600af-39c1-4d96-b905-5b7ee37c4fe4 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-558600af-39c1-4d96-b905-5b7ee37c4fe4 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-558600af-39c1-4d96-b905-5b7ee37c4fe4 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-558600af-39c1-4d96-b905-5b7ee37c4fe4 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-558600af-39c1-4d96-b905-5b7ee37c4fe4 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-558600af-39c1-4d96-b905-5b7ee37c4fe4 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-558600af-39c1-4d96-b905-5b7ee37c4fe4 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-558600af-39c1-4d96-b905-5b7ee37c4fe4 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-558600af-39c1-4d96-b905-5b7ee37c4fe4 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-558600af-39c1-4d96-b905-5b7ee37c4fe4 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-558600af-39c1-4d96-b905-5b7ee37c4fe4 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-558600af-39c1-4d96-b905-5b7ee37c4fe4 div.sk-estimator:hover {background-color: #d4ebff;}#sk-558600af-39c1-4d96-b905-5b7ee37c4fe4 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-558600af-39c1-4d96-b905-5b7ee37c4fe4 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-558600af-39c1-4d96-b905-5b7ee37c4fe4 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-558600af-39c1-4d96-b905-5b7ee37c4fe4 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-558600af-39c1-4d96-b905-5b7ee37c4fe4 div.sk-item {z-index: 1;}#sk-558600af-39c1-4d96-b905-5b7ee37c4fe4 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-558600af-39c1-4d96-b905-5b7ee37c4fe4 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-558600af-39c1-4d96-b905-5b7ee37c4fe4 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-558600af-39c1-4d96-b905-5b7ee37c4fe4 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-558600af-39c1-4d96-b905-5b7ee37c4fe4 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-558600af-39c1-4d96-b905-5b7ee37c4fe4 div.sk-parallel-item:only-child::after {width: 0;}#sk-558600af-39c1-4d96-b905-5b7ee37c4fe4 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-558600af-39c1-4d96-b905-5b7ee37c4fe4 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-558600af-39c1-4d96-b905-5b7ee37c4fe4 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-558600af-39c1-4d96-b905-5b7ee37c4fe4 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-558600af-39c1-4d96-b905-5b7ee37c4fe4 div.sk-text-repr-fallback {display: none;}</style><div id="sk-558600af-39c1-4d96-b905-5b7ee37c4fe4" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ac4f4539-4cf4-4265-8d61-e698062f0c02" type="checkbox" ><label for="ac4f4539-4cf4-4265-8d61-e698062f0c02" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cdd7ff0a-a8ab-492a-8695-cd56d6b25323" type="checkbox" ><label for="cdd7ff0a-a8ab-492a-8695-cd56d6b25323" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="510663a3-8171-4b86-96cb-655ef8567381" type="checkbox" ><label for="510663a3-8171-4b86-96cb-655ef8567381" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-dcecea88-9b71-46b4-bba1-e5aa9a241c1e {color: black;background-color: white;}#sk-dcecea88-9b71-46b4-bba1-e5aa9a241c1e pre{padding: 0;}#sk-dcecea88-9b71-46b4-bba1-e5aa9a241c1e div.sk-toggleable {background-color: white;}#sk-dcecea88-9b71-46b4-bba1-e5aa9a241c1e label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-dcecea88-9b71-46b4-bba1-e5aa9a241c1e label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-dcecea88-9b71-46b4-bba1-e5aa9a241c1e label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-dcecea88-9b71-46b4-bba1-e5aa9a241c1e div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-dcecea88-9b71-46b4-bba1-e5aa9a241c1e div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-dcecea88-9b71-46b4-bba1-e5aa9a241c1e div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-dcecea88-9b71-46b4-bba1-e5aa9a241c1e input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-dcecea88-9b71-46b4-bba1-e5aa9a241c1e input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-dcecea88-9b71-46b4-bba1-e5aa9a241c1e div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-dcecea88-9b71-46b4-bba1-e5aa9a241c1e div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-dcecea88-9b71-46b4-bba1-e5aa9a241c1e input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-dcecea88-9b71-46b4-bba1-e5aa9a241c1e div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-dcecea88-9b71-46b4-bba1-e5aa9a241c1e div.sk-estimator:hover {background-color: #d4ebff;}#sk-dcecea88-9b71-46b4-bba1-e5aa9a241c1e div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-dcecea88-9b71-46b4-bba1-e5aa9a241c1e div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-dcecea88-9b71-46b4-bba1-e5aa9a241c1e div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-dcecea88-9b71-46b4-bba1-e5aa9a241c1e div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-dcecea88-9b71-46b4-bba1-e5aa9a241c1e div.sk-item {z-index: 1;}#sk-dcecea88-9b71-46b4-bba1-e5aa9a241c1e div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-dcecea88-9b71-46b4-bba1-e5aa9a241c1e div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-dcecea88-9b71-46b4-bba1-e5aa9a241c1e div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-dcecea88-9b71-46b4-bba1-e5aa9a241c1e div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-dcecea88-9b71-46b4-bba1-e5aa9a241c1e div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-dcecea88-9b71-46b4-bba1-e5aa9a241c1e div.sk-parallel-item:only-child::after {width: 0;}#sk-dcecea88-9b71-46b4-bba1-e5aa9a241c1e div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-dcecea88-9b71-46b4-bba1-e5aa9a241c1e div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-dcecea88-9b71-46b4-bba1-e5aa9a241c1e div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-dcecea88-9b71-46b4-bba1-e5aa9a241c1e div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-dcecea88-9b71-46b4-bba1-e5aa9a241c1e div.sk-text-repr-fallback {display: none;}</style><div id="sk-dcecea88-9b71-46b4-bba1-e5aa9a241c1e" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b1f87c73-fa79-42a4-912d-1021ce0b192e" type="checkbox" ><label for="b1f87c73-fa79-42a4-912d-1021ce0b192e" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="462b324f-7b5b-426b-be43-e22a2d21be5f" type="checkbox" ><label for="462b324f-7b5b-426b-be43-e22a2d21be5f" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="eb03d292-59f7-4c3e-a7f3-d4dfdd9b47f9" type="checkbox" ><label for="eb03d292-59f7-4c3e-a7f3-d4dfdd9b47f9" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ad960e38-aa19-4d0e-a749-be79bebcd4ac" type="checkbox" ><label for="ad960e38-aa19-4d0e-a749-be79bebcd4ac" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="20264b13-b72f-4912-8e51-b84a805cd068" type="checkbox" ><label for="20264b13-b72f-4912-8e51-b84a805cd068" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a2b53226-3a27-44ee-b6bc-ddeaac18ff03" type="checkbox" ><label for="a2b53226-3a27-44ee-b6bc-ddeaac18ff03" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="861c9df7-d721-4c34-8c4b-3d674b6f439e" type="checkbox" ><label for="861c9df7-d721-4c34-8c4b-3d674b6f439e" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fc00ad10-535f-4e61-84ab-23bd7875612a" type="checkbox" ><label for="fc00ad10-535f-4e61-84ab-23bd7875612a" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="079265a2-e5c7-4180-8f49-899bde9d57ea" type="checkbox" ><label for="079265a2-e5c7-4180-8f49-899bde9d57ea" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-424b5ecf-c93d-4339-83dc-9706eb0c0319 {color: black;background-color: white;}#sk-424b5ecf-c93d-4339-83dc-9706eb0c0319 pre{padding: 0;}#sk-424b5ecf-c93d-4339-83dc-9706eb0c0319 div.sk-toggleable {background-color: white;}#sk-424b5ecf-c93d-4339-83dc-9706eb0c0319 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-424b5ecf-c93d-4339-83dc-9706eb0c0319 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-424b5ecf-c93d-4339-83dc-9706eb0c0319 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-424b5ecf-c93d-4339-83dc-9706eb0c0319 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-424b5ecf-c93d-4339-83dc-9706eb0c0319 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-424b5ecf-c93d-4339-83dc-9706eb0c0319 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-424b5ecf-c93d-4339-83dc-9706eb0c0319 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-424b5ecf-c93d-4339-83dc-9706eb0c0319 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-424b5ecf-c93d-4339-83dc-9706eb0c0319 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-424b5ecf-c93d-4339-83dc-9706eb0c0319 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-424b5ecf-c93d-4339-83dc-9706eb0c0319 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-424b5ecf-c93d-4339-83dc-9706eb0c0319 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-424b5ecf-c93d-4339-83dc-9706eb0c0319 div.sk-estimator:hover {background-color: #d4ebff;}#sk-424b5ecf-c93d-4339-83dc-9706eb0c0319 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-424b5ecf-c93d-4339-83dc-9706eb0c0319 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-424b5ecf-c93d-4339-83dc-9706eb0c0319 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-424b5ecf-c93d-4339-83dc-9706eb0c0319 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-424b5ecf-c93d-4339-83dc-9706eb0c0319 div.sk-item {z-index: 1;}#sk-424b5ecf-c93d-4339-83dc-9706eb0c0319 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-424b5ecf-c93d-4339-83dc-9706eb0c0319 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-424b5ecf-c93d-4339-83dc-9706eb0c0319 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-424b5ecf-c93d-4339-83dc-9706eb0c0319 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-424b5ecf-c93d-4339-83dc-9706eb0c0319 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-424b5ecf-c93d-4339-83dc-9706eb0c0319 div.sk-parallel-item:only-child::after {width: 0;}#sk-424b5ecf-c93d-4339-83dc-9706eb0c0319 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-424b5ecf-c93d-4339-83dc-9706eb0c0319 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-424b5ecf-c93d-4339-83dc-9706eb0c0319 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-424b5ecf-c93d-4339-83dc-9706eb0c0319 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-424b5ecf-c93d-4339-83dc-9706eb0c0319 div.sk-text-repr-fallback {display: none;}</style><div id="sk-424b5ecf-c93d-4339-83dc-9706eb0c0319" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cb1aadab-ab69-4211-9952-2ddb881dd3bb" type="checkbox" ><label for="cb1aadab-ab69-4211-9952-2ddb881dd3bb" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e3fe1931-c132-4470-bf75-b11ed386467f" type="checkbox" ><label for="e3fe1931-c132-4470-bf75-b11ed386467f" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ef08ccd2-56d5-4cf6-98e2-fb81717c514b" type="checkbox" ><label for="ef08ccd2-56d5-4cf6-98e2-fb81717c514b" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="192c94f7-ffbe-4ebe-ba31-ccf6f08b6b1e" type="checkbox" ><label for="192c94f7-ffbe-4ebe-ba31-ccf6f08b6b1e" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0303e209-ba10-4494-a645-2f7cc9391072" type="checkbox" ><label for="0303e209-ba10-4494-a645-2f7cc9391072" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e2ccd501-b5fd-420d-a0dc-e870abeedc2e" type="checkbox" ><label for="e2ccd501-b5fd-420d-a0dc-e870abeedc2e" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3482ec3d-9f01-47da-a5be-06d32a2ee24f" type="checkbox" ><label for="3482ec3d-9f01-47da-a5be-06d32a2ee24f" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7c921fd4-640d-44f3-a523-ae9c8c4ce012" type="checkbox" ><label for="7c921fd4-640d-44f3-a523-ae9c8c4ce012" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fbd67f50-f1a6-4071-b367-5eec2dc80436" type="checkbox" ><label for="fbd67f50-f1a6-4071-b367-5eec2dc80436" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.113 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
