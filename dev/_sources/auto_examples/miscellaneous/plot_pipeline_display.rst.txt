
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-3cc8bd94-f8f1-4e49-8a75-ca39eb53827a {color: black;background-color: white;}#sk-3cc8bd94-f8f1-4e49-8a75-ca39eb53827a pre{padding: 0;}#sk-3cc8bd94-f8f1-4e49-8a75-ca39eb53827a div.sk-toggleable {background-color: white;}#sk-3cc8bd94-f8f1-4e49-8a75-ca39eb53827a label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-3cc8bd94-f8f1-4e49-8a75-ca39eb53827a label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-3cc8bd94-f8f1-4e49-8a75-ca39eb53827a label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-3cc8bd94-f8f1-4e49-8a75-ca39eb53827a div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-3cc8bd94-f8f1-4e49-8a75-ca39eb53827a div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-3cc8bd94-f8f1-4e49-8a75-ca39eb53827a div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-3cc8bd94-f8f1-4e49-8a75-ca39eb53827a input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-3cc8bd94-f8f1-4e49-8a75-ca39eb53827a input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-3cc8bd94-f8f1-4e49-8a75-ca39eb53827a div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-3cc8bd94-f8f1-4e49-8a75-ca39eb53827a div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-3cc8bd94-f8f1-4e49-8a75-ca39eb53827a input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-3cc8bd94-f8f1-4e49-8a75-ca39eb53827a div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-3cc8bd94-f8f1-4e49-8a75-ca39eb53827a div.sk-estimator:hover {background-color: #d4ebff;}#sk-3cc8bd94-f8f1-4e49-8a75-ca39eb53827a div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-3cc8bd94-f8f1-4e49-8a75-ca39eb53827a div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-3cc8bd94-f8f1-4e49-8a75-ca39eb53827a div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-3cc8bd94-f8f1-4e49-8a75-ca39eb53827a div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-3cc8bd94-f8f1-4e49-8a75-ca39eb53827a div.sk-item {z-index: 1;}#sk-3cc8bd94-f8f1-4e49-8a75-ca39eb53827a div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-3cc8bd94-f8f1-4e49-8a75-ca39eb53827a div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-3cc8bd94-f8f1-4e49-8a75-ca39eb53827a div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-3cc8bd94-f8f1-4e49-8a75-ca39eb53827a div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-3cc8bd94-f8f1-4e49-8a75-ca39eb53827a div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-3cc8bd94-f8f1-4e49-8a75-ca39eb53827a div.sk-parallel-item:only-child::after {width: 0;}#sk-3cc8bd94-f8f1-4e49-8a75-ca39eb53827a div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-3cc8bd94-f8f1-4e49-8a75-ca39eb53827a div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-3cc8bd94-f8f1-4e49-8a75-ca39eb53827a div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-3cc8bd94-f8f1-4e49-8a75-ca39eb53827a div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-3cc8bd94-f8f1-4e49-8a75-ca39eb53827a div.sk-text-repr-fallback {display: none;}</style><div id="sk-3cc8bd94-f8f1-4e49-8a75-ca39eb53827a" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e5e532cc-7e67-4b9a-9de3-74d49f50dcfe" type="checkbox" ><label for="e5e532cc-7e67-4b9a-9de3-74d49f50dcfe" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f64da9c6-18ed-4927-908c-d6d39954469c" type="checkbox" ><label for="f64da9c6-18ed-4927-908c-d6d39954469c" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f8130a96-da5f-42e3-8f04-266a45cb8ed3" type="checkbox" ><label for="f8130a96-da5f-42e3-8f04-266a45cb8ed3" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-f5cf3ad2-6026-44ce-b3b2-6884f86590e1 {color: black;background-color: white;}#sk-f5cf3ad2-6026-44ce-b3b2-6884f86590e1 pre{padding: 0;}#sk-f5cf3ad2-6026-44ce-b3b2-6884f86590e1 div.sk-toggleable {background-color: white;}#sk-f5cf3ad2-6026-44ce-b3b2-6884f86590e1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-f5cf3ad2-6026-44ce-b3b2-6884f86590e1 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-f5cf3ad2-6026-44ce-b3b2-6884f86590e1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-f5cf3ad2-6026-44ce-b3b2-6884f86590e1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-f5cf3ad2-6026-44ce-b3b2-6884f86590e1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-f5cf3ad2-6026-44ce-b3b2-6884f86590e1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-f5cf3ad2-6026-44ce-b3b2-6884f86590e1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-f5cf3ad2-6026-44ce-b3b2-6884f86590e1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-f5cf3ad2-6026-44ce-b3b2-6884f86590e1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-f5cf3ad2-6026-44ce-b3b2-6884f86590e1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-f5cf3ad2-6026-44ce-b3b2-6884f86590e1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-f5cf3ad2-6026-44ce-b3b2-6884f86590e1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-f5cf3ad2-6026-44ce-b3b2-6884f86590e1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-f5cf3ad2-6026-44ce-b3b2-6884f86590e1 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-f5cf3ad2-6026-44ce-b3b2-6884f86590e1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-f5cf3ad2-6026-44ce-b3b2-6884f86590e1 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-f5cf3ad2-6026-44ce-b3b2-6884f86590e1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-f5cf3ad2-6026-44ce-b3b2-6884f86590e1 div.sk-item {z-index: 1;}#sk-f5cf3ad2-6026-44ce-b3b2-6884f86590e1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-f5cf3ad2-6026-44ce-b3b2-6884f86590e1 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-f5cf3ad2-6026-44ce-b3b2-6884f86590e1 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-f5cf3ad2-6026-44ce-b3b2-6884f86590e1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-f5cf3ad2-6026-44ce-b3b2-6884f86590e1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-f5cf3ad2-6026-44ce-b3b2-6884f86590e1 div.sk-parallel-item:only-child::after {width: 0;}#sk-f5cf3ad2-6026-44ce-b3b2-6884f86590e1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-f5cf3ad2-6026-44ce-b3b2-6884f86590e1 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-f5cf3ad2-6026-44ce-b3b2-6884f86590e1 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-f5cf3ad2-6026-44ce-b3b2-6884f86590e1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-f5cf3ad2-6026-44ce-b3b2-6884f86590e1 div.sk-text-repr-fallback {display: none;}</style><div id="sk-f5cf3ad2-6026-44ce-b3b2-6884f86590e1" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="75a3ecf0-ab40-45b6-a6b7-522882fa4e94" type="checkbox" ><label for="75a3ecf0-ab40-45b6-a6b7-522882fa4e94" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="db3a425d-5ac0-46a1-a854-f8b0d66e242a" type="checkbox" ><label for="db3a425d-5ac0-46a1-a854-f8b0d66e242a" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5373f095-1c7e-4b61-b74b-f44051bc3ee5" type="checkbox" ><label for="5373f095-1c7e-4b61-b74b-f44051bc3ee5" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="85fbd8cf-5695-479e-8873-f5103d83d6e4" type="checkbox" ><label for="85fbd8cf-5695-479e-8873-f5103d83d6e4" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-f9df6fee-2080-4baf-9a0f-4171eda57849 {color: black;background-color: white;}#sk-f9df6fee-2080-4baf-9a0f-4171eda57849 pre{padding: 0;}#sk-f9df6fee-2080-4baf-9a0f-4171eda57849 div.sk-toggleable {background-color: white;}#sk-f9df6fee-2080-4baf-9a0f-4171eda57849 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-f9df6fee-2080-4baf-9a0f-4171eda57849 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-f9df6fee-2080-4baf-9a0f-4171eda57849 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-f9df6fee-2080-4baf-9a0f-4171eda57849 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-f9df6fee-2080-4baf-9a0f-4171eda57849 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-f9df6fee-2080-4baf-9a0f-4171eda57849 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-f9df6fee-2080-4baf-9a0f-4171eda57849 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-f9df6fee-2080-4baf-9a0f-4171eda57849 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-f9df6fee-2080-4baf-9a0f-4171eda57849 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-f9df6fee-2080-4baf-9a0f-4171eda57849 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-f9df6fee-2080-4baf-9a0f-4171eda57849 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-f9df6fee-2080-4baf-9a0f-4171eda57849 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-f9df6fee-2080-4baf-9a0f-4171eda57849 div.sk-estimator:hover {background-color: #d4ebff;}#sk-f9df6fee-2080-4baf-9a0f-4171eda57849 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-f9df6fee-2080-4baf-9a0f-4171eda57849 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-f9df6fee-2080-4baf-9a0f-4171eda57849 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-f9df6fee-2080-4baf-9a0f-4171eda57849 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-f9df6fee-2080-4baf-9a0f-4171eda57849 div.sk-item {z-index: 1;}#sk-f9df6fee-2080-4baf-9a0f-4171eda57849 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-f9df6fee-2080-4baf-9a0f-4171eda57849 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-f9df6fee-2080-4baf-9a0f-4171eda57849 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-f9df6fee-2080-4baf-9a0f-4171eda57849 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-f9df6fee-2080-4baf-9a0f-4171eda57849 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-f9df6fee-2080-4baf-9a0f-4171eda57849 div.sk-parallel-item:only-child::after {width: 0;}#sk-f9df6fee-2080-4baf-9a0f-4171eda57849 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-f9df6fee-2080-4baf-9a0f-4171eda57849 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-f9df6fee-2080-4baf-9a0f-4171eda57849 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-f9df6fee-2080-4baf-9a0f-4171eda57849 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-f9df6fee-2080-4baf-9a0f-4171eda57849 div.sk-text-repr-fallback {display: none;}</style><div id="sk-f9df6fee-2080-4baf-9a0f-4171eda57849" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="212092d1-aa47-4e93-9a29-7697d382477a" type="checkbox" ><label for="212092d1-aa47-4e93-9a29-7697d382477a" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="dcad8ebf-72b4-401a-bf80-76582047cbb5" type="checkbox" ><label for="dcad8ebf-72b4-401a-bf80-76582047cbb5" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="34b33903-47b0-4b66-ae23-8f33b69ef01e" type="checkbox" ><label for="34b33903-47b0-4b66-ae23-8f33b69ef01e" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-53cf4def-f7af-4264-8cd2-7c8b97b44504 {color: black;background-color: white;}#sk-53cf4def-f7af-4264-8cd2-7c8b97b44504 pre{padding: 0;}#sk-53cf4def-f7af-4264-8cd2-7c8b97b44504 div.sk-toggleable {background-color: white;}#sk-53cf4def-f7af-4264-8cd2-7c8b97b44504 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-53cf4def-f7af-4264-8cd2-7c8b97b44504 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-53cf4def-f7af-4264-8cd2-7c8b97b44504 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-53cf4def-f7af-4264-8cd2-7c8b97b44504 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-53cf4def-f7af-4264-8cd2-7c8b97b44504 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-53cf4def-f7af-4264-8cd2-7c8b97b44504 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-53cf4def-f7af-4264-8cd2-7c8b97b44504 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-53cf4def-f7af-4264-8cd2-7c8b97b44504 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-53cf4def-f7af-4264-8cd2-7c8b97b44504 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-53cf4def-f7af-4264-8cd2-7c8b97b44504 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-53cf4def-f7af-4264-8cd2-7c8b97b44504 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-53cf4def-f7af-4264-8cd2-7c8b97b44504 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-53cf4def-f7af-4264-8cd2-7c8b97b44504 div.sk-estimator:hover {background-color: #d4ebff;}#sk-53cf4def-f7af-4264-8cd2-7c8b97b44504 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-53cf4def-f7af-4264-8cd2-7c8b97b44504 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-53cf4def-f7af-4264-8cd2-7c8b97b44504 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-53cf4def-f7af-4264-8cd2-7c8b97b44504 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-53cf4def-f7af-4264-8cd2-7c8b97b44504 div.sk-item {z-index: 1;}#sk-53cf4def-f7af-4264-8cd2-7c8b97b44504 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-53cf4def-f7af-4264-8cd2-7c8b97b44504 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-53cf4def-f7af-4264-8cd2-7c8b97b44504 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-53cf4def-f7af-4264-8cd2-7c8b97b44504 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-53cf4def-f7af-4264-8cd2-7c8b97b44504 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-53cf4def-f7af-4264-8cd2-7c8b97b44504 div.sk-parallel-item:only-child::after {width: 0;}#sk-53cf4def-f7af-4264-8cd2-7c8b97b44504 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-53cf4def-f7af-4264-8cd2-7c8b97b44504 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-53cf4def-f7af-4264-8cd2-7c8b97b44504 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-53cf4def-f7af-4264-8cd2-7c8b97b44504 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-53cf4def-f7af-4264-8cd2-7c8b97b44504 div.sk-text-repr-fallback {display: none;}</style><div id="sk-53cf4def-f7af-4264-8cd2-7c8b97b44504" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="23ef2fa8-83de-421b-82d7-d651b4eff4fd" type="checkbox" ><label for="23ef2fa8-83de-421b-82d7-d651b4eff4fd" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fc65d07c-f274-49d6-8092-4ee755f8776f" type="checkbox" ><label for="fc65d07c-f274-49d6-8092-4ee755f8776f" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c9da2599-db9c-4a0a-8d65-dbeaf9179dcd" type="checkbox" ><label for="c9da2599-db9c-4a0a-8d65-dbeaf9179dcd" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="74a25876-5c67-453c-a781-2912dbb0b6a2" type="checkbox" ><label for="74a25876-5c67-453c-a781-2912dbb0b6a2" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="88d4cd79-8555-45d2-8d99-47ccd40efee9" type="checkbox" ><label for="88d4cd79-8555-45d2-8d99-47ccd40efee9" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="546a79e3-719a-4135-a760-f5764b0fbfcf" type="checkbox" ><label for="546a79e3-719a-4135-a760-f5764b0fbfcf" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4ce43153-c707-4404-97b9-8fe0bf5eb3cd" type="checkbox" ><label for="4ce43153-c707-4404-97b9-8fe0bf5eb3cd" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6bf09984-d51e-4668-a964-899a09e0b423" type="checkbox" ><label for="6bf09984-d51e-4668-a964-899a09e0b423" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3479ac3d-e398-46ba-af54-250026cab939" type="checkbox" ><label for="3479ac3d-e398-46ba-af54-250026cab939" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-ae06b768-e367-40ec-a1d4-2caef9b59d5d {color: black;background-color: white;}#sk-ae06b768-e367-40ec-a1d4-2caef9b59d5d pre{padding: 0;}#sk-ae06b768-e367-40ec-a1d4-2caef9b59d5d div.sk-toggleable {background-color: white;}#sk-ae06b768-e367-40ec-a1d4-2caef9b59d5d label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-ae06b768-e367-40ec-a1d4-2caef9b59d5d label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-ae06b768-e367-40ec-a1d4-2caef9b59d5d label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-ae06b768-e367-40ec-a1d4-2caef9b59d5d div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-ae06b768-e367-40ec-a1d4-2caef9b59d5d div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-ae06b768-e367-40ec-a1d4-2caef9b59d5d div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-ae06b768-e367-40ec-a1d4-2caef9b59d5d input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-ae06b768-e367-40ec-a1d4-2caef9b59d5d input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-ae06b768-e367-40ec-a1d4-2caef9b59d5d div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ae06b768-e367-40ec-a1d4-2caef9b59d5d div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ae06b768-e367-40ec-a1d4-2caef9b59d5d input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-ae06b768-e367-40ec-a1d4-2caef9b59d5d div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-ae06b768-e367-40ec-a1d4-2caef9b59d5d div.sk-estimator:hover {background-color: #d4ebff;}#sk-ae06b768-e367-40ec-a1d4-2caef9b59d5d div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-ae06b768-e367-40ec-a1d4-2caef9b59d5d div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-ae06b768-e367-40ec-a1d4-2caef9b59d5d div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ae06b768-e367-40ec-a1d4-2caef9b59d5d div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-ae06b768-e367-40ec-a1d4-2caef9b59d5d div.sk-item {z-index: 1;}#sk-ae06b768-e367-40ec-a1d4-2caef9b59d5d div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-ae06b768-e367-40ec-a1d4-2caef9b59d5d div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ae06b768-e367-40ec-a1d4-2caef9b59d5d div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-ae06b768-e367-40ec-a1d4-2caef9b59d5d div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-ae06b768-e367-40ec-a1d4-2caef9b59d5d div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-ae06b768-e367-40ec-a1d4-2caef9b59d5d div.sk-parallel-item:only-child::after {width: 0;}#sk-ae06b768-e367-40ec-a1d4-2caef9b59d5d div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-ae06b768-e367-40ec-a1d4-2caef9b59d5d div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-ae06b768-e367-40ec-a1d4-2caef9b59d5d div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-ae06b768-e367-40ec-a1d4-2caef9b59d5d div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-ae06b768-e367-40ec-a1d4-2caef9b59d5d div.sk-text-repr-fallback {display: none;}</style><div id="sk-ae06b768-e367-40ec-a1d4-2caef9b59d5d" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="83cb516c-f45b-418c-a97a-2cebd8817c6d" type="checkbox" ><label for="83cb516c-f45b-418c-a97a-2cebd8817c6d" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d4d76272-341f-44dd-b5a3-40909ef383f5" type="checkbox" ><label for="d4d76272-341f-44dd-b5a3-40909ef383f5" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="dd31f06b-0aef-4cb5-b6b1-b08cb6b7798a" type="checkbox" ><label for="dd31f06b-0aef-4cb5-b6b1-b08cb6b7798a" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ca08a598-4e0b-44e2-a0ad-00c22ef0962a" type="checkbox" ><label for="ca08a598-4e0b-44e2-a0ad-00c22ef0962a" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8e1a3779-d1e6-4385-800a-d62340d7b40b" type="checkbox" ><label for="8e1a3779-d1e6-4385-800a-d62340d7b40b" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5c2f5a8c-e136-4f8a-8d86-59a228d3cbad" type="checkbox" ><label for="5c2f5a8c-e136-4f8a-8d86-59a228d3cbad" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8857b534-c62b-4545-b270-d5b46a6228fd" type="checkbox" ><label for="8857b534-c62b-4545-b270-d5b46a6228fd" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fb4ae386-7ec8-42e6-9036-6f71bd6c898a" type="checkbox" ><label for="fb4ae386-7ec8-42e6-9036-6f71bd6c898a" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e8127936-f8ff-4ae0-878d-0f85f57980dc" type="checkbox" ><label for="e8127936-f8ff-4ae0-878d-0f85f57980dc" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.069 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
