
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-bea51450-843c-4617-a37b-2c727d5a1d10 {color: black;background-color: white;}#sk-bea51450-843c-4617-a37b-2c727d5a1d10 pre{padding: 0;}#sk-bea51450-843c-4617-a37b-2c727d5a1d10 div.sk-toggleable {background-color: white;}#sk-bea51450-843c-4617-a37b-2c727d5a1d10 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-bea51450-843c-4617-a37b-2c727d5a1d10 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-bea51450-843c-4617-a37b-2c727d5a1d10 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-bea51450-843c-4617-a37b-2c727d5a1d10 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-bea51450-843c-4617-a37b-2c727d5a1d10 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-bea51450-843c-4617-a37b-2c727d5a1d10 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-bea51450-843c-4617-a37b-2c727d5a1d10 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-bea51450-843c-4617-a37b-2c727d5a1d10 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-bea51450-843c-4617-a37b-2c727d5a1d10 div.sk-estimator:hover {background-color: #d4ebff;}#sk-bea51450-843c-4617-a37b-2c727d5a1d10 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-bea51450-843c-4617-a37b-2c727d5a1d10 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-bea51450-843c-4617-a37b-2c727d5a1d10 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-bea51450-843c-4617-a37b-2c727d5a1d10 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-bea51450-843c-4617-a37b-2c727d5a1d10 div.sk-item {z-index: 1;}#sk-bea51450-843c-4617-a37b-2c727d5a1d10 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-bea51450-843c-4617-a37b-2c727d5a1d10 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-bea51450-843c-4617-a37b-2c727d5a1d10 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-bea51450-843c-4617-a37b-2c727d5a1d10 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-bea51450-843c-4617-a37b-2c727d5a1d10 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-bea51450-843c-4617-a37b-2c727d5a1d10 div.sk-parallel-item:only-child::after {width: 0;}#sk-bea51450-843c-4617-a37b-2c727d5a1d10 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-bea51450-843c-4617-a37b-2c727d5a1d10 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-bea51450-843c-4617-a37b-2c727d5a1d10 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-bea51450-843c-4617-a37b-2c727d5a1d10 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org.  See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-bea51450-843c-4617-a37b-2c727d5a1d10 div.sk-text-repr-fallback {display: none;}</style><div id="sk-bea51450-843c-4617-a37b-2c727d5a1d10" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="13883e65-6d6c-4fd2-b74a-1e1036a5c166" type="checkbox" ><label class="sk-toggleable__label" for="13883e65-6d6c-4fd2-b74a-1e1036a5c166">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d8c3e42f-b116-435f-9efc-1b7988e6f5e9" type="checkbox" ><label class="sk-toggleable__label" for="d8c3e42f-b116-435f-9efc-1b7988e6f5e9">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="91b5835e-dcc9-4312-bc12-6320f5f5fd6f" type="checkbox" ><label class="sk-toggleable__label" for="91b5835e-dcc9-4312-bc12-6320f5f5fd6f">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-91d9164c-d7ea-41e4-80f0-b10c39b6984c {color: black;background-color: white;}#sk-91d9164c-d7ea-41e4-80f0-b10c39b6984c pre{padding: 0;}#sk-91d9164c-d7ea-41e4-80f0-b10c39b6984c div.sk-toggleable {background-color: white;}#sk-91d9164c-d7ea-41e4-80f0-b10c39b6984c label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-91d9164c-d7ea-41e4-80f0-b10c39b6984c div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-91d9164c-d7ea-41e4-80f0-b10c39b6984c div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-91d9164c-d7ea-41e4-80f0-b10c39b6984c input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-91d9164c-d7ea-41e4-80f0-b10c39b6984c div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-91d9164c-d7ea-41e4-80f0-b10c39b6984c div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-91d9164c-d7ea-41e4-80f0-b10c39b6984c input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-91d9164c-d7ea-41e4-80f0-b10c39b6984c div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-91d9164c-d7ea-41e4-80f0-b10c39b6984c div.sk-estimator:hover {background-color: #d4ebff;}#sk-91d9164c-d7ea-41e4-80f0-b10c39b6984c div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-91d9164c-d7ea-41e4-80f0-b10c39b6984c div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-91d9164c-d7ea-41e4-80f0-b10c39b6984c div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-91d9164c-d7ea-41e4-80f0-b10c39b6984c div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-91d9164c-d7ea-41e4-80f0-b10c39b6984c div.sk-item {z-index: 1;}#sk-91d9164c-d7ea-41e4-80f0-b10c39b6984c div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-91d9164c-d7ea-41e4-80f0-b10c39b6984c div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-91d9164c-d7ea-41e4-80f0-b10c39b6984c div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-91d9164c-d7ea-41e4-80f0-b10c39b6984c div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-91d9164c-d7ea-41e4-80f0-b10c39b6984c div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-91d9164c-d7ea-41e4-80f0-b10c39b6984c div.sk-parallel-item:only-child::after {width: 0;}#sk-91d9164c-d7ea-41e4-80f0-b10c39b6984c div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-91d9164c-d7ea-41e4-80f0-b10c39b6984c div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-91d9164c-d7ea-41e4-80f0-b10c39b6984c div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-91d9164c-d7ea-41e4-80f0-b10c39b6984c div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org.  See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-91d9164c-d7ea-41e4-80f0-b10c39b6984c div.sk-text-repr-fallback {display: none;}</style><div id="sk-91d9164c-d7ea-41e4-80f0-b10c39b6984c" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e9c2f041-b7c9-46bd-aca8-31f2f73d4e39" type="checkbox" ><label class="sk-toggleable__label" for="e9c2f041-b7c9-46bd-aca8-31f2f73d4e39">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="288b890f-034d-417a-ad84-5b5f30ef5cf3" type="checkbox" ><label class="sk-toggleable__label" for="288b890f-034d-417a-ad84-5b5f30ef5cf3">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="49357ba1-753b-4dbf-b1b2-41148501efee" type="checkbox" ><label class="sk-toggleable__label" for="49357ba1-753b-4dbf-b1b2-41148501efee">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="19016534-9370-4554-b6f9-1bd1ee7bb412" type="checkbox" ><label class="sk-toggleable__label" for="19016534-9370-4554-b6f9-1bd1ee7bb412">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-ded6e846-9c72-4aae-8839-ba0357f6ff53 {color: black;background-color: white;}#sk-ded6e846-9c72-4aae-8839-ba0357f6ff53 pre{padding: 0;}#sk-ded6e846-9c72-4aae-8839-ba0357f6ff53 div.sk-toggleable {background-color: white;}#sk-ded6e846-9c72-4aae-8839-ba0357f6ff53 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-ded6e846-9c72-4aae-8839-ba0357f6ff53 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-ded6e846-9c72-4aae-8839-ba0357f6ff53 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-ded6e846-9c72-4aae-8839-ba0357f6ff53 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-ded6e846-9c72-4aae-8839-ba0357f6ff53 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ded6e846-9c72-4aae-8839-ba0357f6ff53 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ded6e846-9c72-4aae-8839-ba0357f6ff53 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-ded6e846-9c72-4aae-8839-ba0357f6ff53 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-ded6e846-9c72-4aae-8839-ba0357f6ff53 div.sk-estimator:hover {background-color: #d4ebff;}#sk-ded6e846-9c72-4aae-8839-ba0357f6ff53 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-ded6e846-9c72-4aae-8839-ba0357f6ff53 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-ded6e846-9c72-4aae-8839-ba0357f6ff53 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ded6e846-9c72-4aae-8839-ba0357f6ff53 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-ded6e846-9c72-4aae-8839-ba0357f6ff53 div.sk-item {z-index: 1;}#sk-ded6e846-9c72-4aae-8839-ba0357f6ff53 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-ded6e846-9c72-4aae-8839-ba0357f6ff53 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ded6e846-9c72-4aae-8839-ba0357f6ff53 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-ded6e846-9c72-4aae-8839-ba0357f6ff53 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-ded6e846-9c72-4aae-8839-ba0357f6ff53 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-ded6e846-9c72-4aae-8839-ba0357f6ff53 div.sk-parallel-item:only-child::after {width: 0;}#sk-ded6e846-9c72-4aae-8839-ba0357f6ff53 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-ded6e846-9c72-4aae-8839-ba0357f6ff53 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-ded6e846-9c72-4aae-8839-ba0357f6ff53 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-ded6e846-9c72-4aae-8839-ba0357f6ff53 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org.  See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-ded6e846-9c72-4aae-8839-ba0357f6ff53 div.sk-text-repr-fallback {display: none;}</style><div id="sk-ded6e846-9c72-4aae-8839-ba0357f6ff53" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="142da917-a507-4a0d-8d36-75b2fb408f4a" type="checkbox" ><label class="sk-toggleable__label" for="142da917-a507-4a0d-8d36-75b2fb408f4a">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7ab87194-c01d-4f99-ba3f-70fc893188f2" type="checkbox" ><label class="sk-toggleable__label" for="7ab87194-c01d-4f99-ba3f-70fc893188f2">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6fc9a78c-a877-4e55-8e31-845f4cb45fb6" type="checkbox" ><label class="sk-toggleable__label" for="6fc9a78c-a877-4e55-8e31-845f4cb45fb6">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-bf5c0f2a-78f7-4f98-af5c-8076e69ecef0 {color: black;background-color: white;}#sk-bf5c0f2a-78f7-4f98-af5c-8076e69ecef0 pre{padding: 0;}#sk-bf5c0f2a-78f7-4f98-af5c-8076e69ecef0 div.sk-toggleable {background-color: white;}#sk-bf5c0f2a-78f7-4f98-af5c-8076e69ecef0 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-bf5c0f2a-78f7-4f98-af5c-8076e69ecef0 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-bf5c0f2a-78f7-4f98-af5c-8076e69ecef0 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-bf5c0f2a-78f7-4f98-af5c-8076e69ecef0 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-bf5c0f2a-78f7-4f98-af5c-8076e69ecef0 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-bf5c0f2a-78f7-4f98-af5c-8076e69ecef0 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-bf5c0f2a-78f7-4f98-af5c-8076e69ecef0 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-bf5c0f2a-78f7-4f98-af5c-8076e69ecef0 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-bf5c0f2a-78f7-4f98-af5c-8076e69ecef0 div.sk-estimator:hover {background-color: #d4ebff;}#sk-bf5c0f2a-78f7-4f98-af5c-8076e69ecef0 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-bf5c0f2a-78f7-4f98-af5c-8076e69ecef0 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-bf5c0f2a-78f7-4f98-af5c-8076e69ecef0 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-bf5c0f2a-78f7-4f98-af5c-8076e69ecef0 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-bf5c0f2a-78f7-4f98-af5c-8076e69ecef0 div.sk-item {z-index: 1;}#sk-bf5c0f2a-78f7-4f98-af5c-8076e69ecef0 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-bf5c0f2a-78f7-4f98-af5c-8076e69ecef0 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-bf5c0f2a-78f7-4f98-af5c-8076e69ecef0 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-bf5c0f2a-78f7-4f98-af5c-8076e69ecef0 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-bf5c0f2a-78f7-4f98-af5c-8076e69ecef0 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-bf5c0f2a-78f7-4f98-af5c-8076e69ecef0 div.sk-parallel-item:only-child::after {width: 0;}#sk-bf5c0f2a-78f7-4f98-af5c-8076e69ecef0 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-bf5c0f2a-78f7-4f98-af5c-8076e69ecef0 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-bf5c0f2a-78f7-4f98-af5c-8076e69ecef0 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-bf5c0f2a-78f7-4f98-af5c-8076e69ecef0 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org.  See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-bf5c0f2a-78f7-4f98-af5c-8076e69ecef0 div.sk-text-repr-fallback {display: none;}</style><div id="sk-bf5c0f2a-78f7-4f98-af5c-8076e69ecef0" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="83b6ab64-273e-4606-bbb5-26becc2da395" type="checkbox" ><label class="sk-toggleable__label" for="83b6ab64-273e-4606-bbb5-26becc2da395">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5b3114c1-6c3e-459e-9342-4b4077a23314" type="checkbox" ><label class="sk-toggleable__label" for="5b3114c1-6c3e-459e-9342-4b4077a23314">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="39917ac6-8706-470a-936c-36638a7c5887" type="checkbox" ><label class="sk-toggleable__label" for="39917ac6-8706-470a-936c-36638a7c5887">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cf26ff4c-1776-4e50-a225-0f408dd9b2d4" type="checkbox" ><label class="sk-toggleable__label" for="cf26ff4c-1776-4e50-a225-0f408dd9b2d4">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f1b64c2e-899f-4cfa-8b5a-d46b79181bfa" type="checkbox" ><label class="sk-toggleable__label" for="f1b64c2e-899f-4cfa-8b5a-d46b79181bfa">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0a225ebc-1af7-4426-af10-4316cd0f72f4" type="checkbox" ><label class="sk-toggleable__label" for="0a225ebc-1af7-4426-af10-4316cd0f72f4">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5d9763ac-8de2-4882-b651-70cf23b2eba1" type="checkbox" ><label class="sk-toggleable__label" for="5d9763ac-8de2-4882-b651-70cf23b2eba1">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="769550e6-ffa7-43b0-abad-a1f570571174" type="checkbox" ><label class="sk-toggleable__label" for="769550e6-ffa7-43b0-abad-a1f570571174">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="488e33c5-860b-498e-99df-9a0c86b8ae4f" type="checkbox" ><label class="sk-toggleable__label" for="488e33c5-860b-498e-99df-9a0c86b8ae4f">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-af9d8578-9a79-4c3f-ba9c-55d12ead5a95 {color: black;background-color: white;}#sk-af9d8578-9a79-4c3f-ba9c-55d12ead5a95 pre{padding: 0;}#sk-af9d8578-9a79-4c3f-ba9c-55d12ead5a95 div.sk-toggleable {background-color: white;}#sk-af9d8578-9a79-4c3f-ba9c-55d12ead5a95 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-af9d8578-9a79-4c3f-ba9c-55d12ead5a95 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-af9d8578-9a79-4c3f-ba9c-55d12ead5a95 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-af9d8578-9a79-4c3f-ba9c-55d12ead5a95 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-af9d8578-9a79-4c3f-ba9c-55d12ead5a95 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-af9d8578-9a79-4c3f-ba9c-55d12ead5a95 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-af9d8578-9a79-4c3f-ba9c-55d12ead5a95 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-af9d8578-9a79-4c3f-ba9c-55d12ead5a95 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-af9d8578-9a79-4c3f-ba9c-55d12ead5a95 div.sk-estimator:hover {background-color: #d4ebff;}#sk-af9d8578-9a79-4c3f-ba9c-55d12ead5a95 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-af9d8578-9a79-4c3f-ba9c-55d12ead5a95 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-af9d8578-9a79-4c3f-ba9c-55d12ead5a95 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-af9d8578-9a79-4c3f-ba9c-55d12ead5a95 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-af9d8578-9a79-4c3f-ba9c-55d12ead5a95 div.sk-item {z-index: 1;}#sk-af9d8578-9a79-4c3f-ba9c-55d12ead5a95 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-af9d8578-9a79-4c3f-ba9c-55d12ead5a95 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-af9d8578-9a79-4c3f-ba9c-55d12ead5a95 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-af9d8578-9a79-4c3f-ba9c-55d12ead5a95 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-af9d8578-9a79-4c3f-ba9c-55d12ead5a95 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-af9d8578-9a79-4c3f-ba9c-55d12ead5a95 div.sk-parallel-item:only-child::after {width: 0;}#sk-af9d8578-9a79-4c3f-ba9c-55d12ead5a95 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-af9d8578-9a79-4c3f-ba9c-55d12ead5a95 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-af9d8578-9a79-4c3f-ba9c-55d12ead5a95 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-af9d8578-9a79-4c3f-ba9c-55d12ead5a95 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org.  See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-af9d8578-9a79-4c3f-ba9c-55d12ead5a95 div.sk-text-repr-fallback {display: none;}</style><div id="sk-af9d8578-9a79-4c3f-ba9c-55d12ead5a95" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9b0bbdbd-3209-4441-bec8-9094eda4f1aa" type="checkbox" ><label class="sk-toggleable__label" for="9b0bbdbd-3209-4441-bec8-9094eda4f1aa">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c8612a55-7211-415d-bbb6-9fad67492699" type="checkbox" ><label class="sk-toggleable__label" for="c8612a55-7211-415d-bbb6-9fad67492699">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3a7cfd72-94f5-4d2b-86d0-574e6f4c5e78" type="checkbox" ><label class="sk-toggleable__label" for="3a7cfd72-94f5-4d2b-86d0-574e6f4c5e78">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="58f4dbac-ceec-43db-8c80-946ca3794f7b" type="checkbox" ><label class="sk-toggleable__label" for="58f4dbac-ceec-43db-8c80-946ca3794f7b">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1521b6ab-7e1e-4457-94a5-c4d7b359dd6c" type="checkbox" ><label class="sk-toggleable__label" for="1521b6ab-7e1e-4457-94a5-c4d7b359dd6c">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ee413455-0d8e-4f41-b22f-72c5fe413698" type="checkbox" ><label class="sk-toggleable__label" for="ee413455-0d8e-4f41-b22f-72c5fe413698">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d5de506a-42bb-4504-adfd-ddf346bfae13" type="checkbox" ><label class="sk-toggleable__label" for="d5de506a-42bb-4504-adfd-ddf346bfae13">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="21f64983-82a2-4e24-b227-d72161805425" type="checkbox" ><label class="sk-toggleable__label" for="21f64983-82a2-4e24-b227-d72161805425">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="948ba9ed-f2cd-4950-9917-9d42312f2833" type="checkbox" ><label class="sk-toggleable__label" for="948ba9ed-f2cd-4950-9917-9d42312f2833">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.086 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
