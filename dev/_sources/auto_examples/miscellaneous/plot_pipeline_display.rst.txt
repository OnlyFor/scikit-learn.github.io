
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-6ab89402-5792-476a-bb99-af23f6efce43 {color: black;background-color: white;}#sk-6ab89402-5792-476a-bb99-af23f6efce43 pre{padding: 0;}#sk-6ab89402-5792-476a-bb99-af23f6efce43 div.sk-toggleable {background-color: white;}#sk-6ab89402-5792-476a-bb99-af23f6efce43 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-6ab89402-5792-476a-bb99-af23f6efce43 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-6ab89402-5792-476a-bb99-af23f6efce43 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-6ab89402-5792-476a-bb99-af23f6efce43 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-6ab89402-5792-476a-bb99-af23f6efce43 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-6ab89402-5792-476a-bb99-af23f6efce43 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-6ab89402-5792-476a-bb99-af23f6efce43 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-6ab89402-5792-476a-bb99-af23f6efce43 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-6ab89402-5792-476a-bb99-af23f6efce43 div.sk-estimator:hover {background-color: #d4ebff;}#sk-6ab89402-5792-476a-bb99-af23f6efce43 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-6ab89402-5792-476a-bb99-af23f6efce43 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-6ab89402-5792-476a-bb99-af23f6efce43 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-6ab89402-5792-476a-bb99-af23f6efce43 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-6ab89402-5792-476a-bb99-af23f6efce43 div.sk-item {z-index: 1;}#sk-6ab89402-5792-476a-bb99-af23f6efce43 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-6ab89402-5792-476a-bb99-af23f6efce43 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-6ab89402-5792-476a-bb99-af23f6efce43 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-6ab89402-5792-476a-bb99-af23f6efce43 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-6ab89402-5792-476a-bb99-af23f6efce43 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-6ab89402-5792-476a-bb99-af23f6efce43 div.sk-parallel-item:only-child::after {width: 0;}#sk-6ab89402-5792-476a-bb99-af23f6efce43 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-6ab89402-5792-476a-bb99-af23f6efce43 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-6ab89402-5792-476a-bb99-af23f6efce43 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-6ab89402-5792-476a-bb99-af23f6efce43 div.sk-container {display: inline-block;position: relative;}#sk-6ab89402-5792-476a-bb99-af23f6efce43 div.sk-text-repr-fallback {display: none;}</style><div id="sk-6ab89402-5792-476a-bb99-af23f6efce43" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="758c2bb3-2879-4853-89dd-790bce4534d2" type="checkbox" ><label class="sk-toggleable__label" for="758c2bb3-2879-4853-89dd-790bce4534d2">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="54e5951e-ad57-4541-8b23-3592c2e98d59" type="checkbox" ><label class="sk-toggleable__label" for="54e5951e-ad57-4541-8b23-3592c2e98d59">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b1f20e11-b357-456a-8034-fd8d37838119" type="checkbox" ><label class="sk-toggleable__label" for="b1f20e11-b357-456a-8034-fd8d37838119">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-1a278ce7-ae3f-469e-b0bc-f8c34ad98656 {color: black;background-color: white;}#sk-1a278ce7-ae3f-469e-b0bc-f8c34ad98656 pre{padding: 0;}#sk-1a278ce7-ae3f-469e-b0bc-f8c34ad98656 div.sk-toggleable {background-color: white;}#sk-1a278ce7-ae3f-469e-b0bc-f8c34ad98656 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-1a278ce7-ae3f-469e-b0bc-f8c34ad98656 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-1a278ce7-ae3f-469e-b0bc-f8c34ad98656 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-1a278ce7-ae3f-469e-b0bc-f8c34ad98656 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-1a278ce7-ae3f-469e-b0bc-f8c34ad98656 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-1a278ce7-ae3f-469e-b0bc-f8c34ad98656 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-1a278ce7-ae3f-469e-b0bc-f8c34ad98656 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-1a278ce7-ae3f-469e-b0bc-f8c34ad98656 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-1a278ce7-ae3f-469e-b0bc-f8c34ad98656 div.sk-estimator:hover {background-color: #d4ebff;}#sk-1a278ce7-ae3f-469e-b0bc-f8c34ad98656 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-1a278ce7-ae3f-469e-b0bc-f8c34ad98656 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-1a278ce7-ae3f-469e-b0bc-f8c34ad98656 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-1a278ce7-ae3f-469e-b0bc-f8c34ad98656 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-1a278ce7-ae3f-469e-b0bc-f8c34ad98656 div.sk-item {z-index: 1;}#sk-1a278ce7-ae3f-469e-b0bc-f8c34ad98656 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-1a278ce7-ae3f-469e-b0bc-f8c34ad98656 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-1a278ce7-ae3f-469e-b0bc-f8c34ad98656 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-1a278ce7-ae3f-469e-b0bc-f8c34ad98656 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-1a278ce7-ae3f-469e-b0bc-f8c34ad98656 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-1a278ce7-ae3f-469e-b0bc-f8c34ad98656 div.sk-parallel-item:only-child::after {width: 0;}#sk-1a278ce7-ae3f-469e-b0bc-f8c34ad98656 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-1a278ce7-ae3f-469e-b0bc-f8c34ad98656 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-1a278ce7-ae3f-469e-b0bc-f8c34ad98656 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-1a278ce7-ae3f-469e-b0bc-f8c34ad98656 div.sk-container {display: inline-block;position: relative;}#sk-1a278ce7-ae3f-469e-b0bc-f8c34ad98656 div.sk-text-repr-fallback {display: none;}</style><div id="sk-1a278ce7-ae3f-469e-b0bc-f8c34ad98656" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2518b37e-05eb-4d66-bc85-f881debe59dd" type="checkbox" ><label class="sk-toggleable__label" for="2518b37e-05eb-4d66-bc85-f881debe59dd">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('standard_scaler', StandardScaler()),
                    ('polynomial', PolynomialFeatures(degree=3)),
                    ('classifier', LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d6ca11c5-6812-4a00-8d2e-68f2140c9962" type="checkbox" ><label class="sk-toggleable__label" for="d6ca11c5-6812-4a00-8d2e-68f2140c9962">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="36f533ac-818e-41f1-8008-196083d274df" type="checkbox" ><label class="sk-toggleable__label" for="36f533ac-818e-41f1-8008-196083d274df">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="417dd49b-b2af-4f22-85a6-e83ceabcb790" type="checkbox" ><label class="sk-toggleable__label" for="417dd49b-b2af-4f22-85a6-e83ceabcb790">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-3e8637c7-f4cc-4bcf-8b75-3a17f1a986c4 {color: black;background-color: white;}#sk-3e8637c7-f4cc-4bcf-8b75-3a17f1a986c4 pre{padding: 0;}#sk-3e8637c7-f4cc-4bcf-8b75-3a17f1a986c4 div.sk-toggleable {background-color: white;}#sk-3e8637c7-f4cc-4bcf-8b75-3a17f1a986c4 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-3e8637c7-f4cc-4bcf-8b75-3a17f1a986c4 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-3e8637c7-f4cc-4bcf-8b75-3a17f1a986c4 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-3e8637c7-f4cc-4bcf-8b75-3a17f1a986c4 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-3e8637c7-f4cc-4bcf-8b75-3a17f1a986c4 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-3e8637c7-f4cc-4bcf-8b75-3a17f1a986c4 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-3e8637c7-f4cc-4bcf-8b75-3a17f1a986c4 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-3e8637c7-f4cc-4bcf-8b75-3a17f1a986c4 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-3e8637c7-f4cc-4bcf-8b75-3a17f1a986c4 div.sk-estimator:hover {background-color: #d4ebff;}#sk-3e8637c7-f4cc-4bcf-8b75-3a17f1a986c4 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-3e8637c7-f4cc-4bcf-8b75-3a17f1a986c4 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-3e8637c7-f4cc-4bcf-8b75-3a17f1a986c4 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-3e8637c7-f4cc-4bcf-8b75-3a17f1a986c4 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-3e8637c7-f4cc-4bcf-8b75-3a17f1a986c4 div.sk-item {z-index: 1;}#sk-3e8637c7-f4cc-4bcf-8b75-3a17f1a986c4 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-3e8637c7-f4cc-4bcf-8b75-3a17f1a986c4 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-3e8637c7-f4cc-4bcf-8b75-3a17f1a986c4 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-3e8637c7-f4cc-4bcf-8b75-3a17f1a986c4 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-3e8637c7-f4cc-4bcf-8b75-3a17f1a986c4 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-3e8637c7-f4cc-4bcf-8b75-3a17f1a986c4 div.sk-parallel-item:only-child::after {width: 0;}#sk-3e8637c7-f4cc-4bcf-8b75-3a17f1a986c4 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-3e8637c7-f4cc-4bcf-8b75-3a17f1a986c4 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-3e8637c7-f4cc-4bcf-8b75-3a17f1a986c4 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-3e8637c7-f4cc-4bcf-8b75-3a17f1a986c4 div.sk-container {display: inline-block;position: relative;}#sk-3e8637c7-f4cc-4bcf-8b75-3a17f1a986c4 div.sk-text-repr-fallback {display: none;}</style><div id="sk-3e8637c7-f4cc-4bcf-8b75-3a17f1a986c4" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="485d28e7-6f55-40b8-a487-592adf46e753" type="checkbox" ><label class="sk-toggleable__label" for="485d28e7-6f55-40b8-a487-592adf46e753">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('reduce_dim', PCA(n_components=4)),
                    ('classifier', SVC(kernel='linear'))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0a591de7-4611-4f47-af4d-4aab7325fc8f" type="checkbox" ><label class="sk-toggleable__label" for="0a591de7-4611-4f47-af4d-4aab7325fc8f">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1bb3fa4a-0054-4a12-86f9-6ccaf5cc8c30" type="checkbox" ><label class="sk-toggleable__label" for="1bb3fa4a-0054-4a12-86f9-6ccaf5cc8c30">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel='linear')</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-41ba53e6-17ad-4ce8-bed6-74c55038a98c {color: black;background-color: white;}#sk-41ba53e6-17ad-4ce8-bed6-74c55038a98c pre{padding: 0;}#sk-41ba53e6-17ad-4ce8-bed6-74c55038a98c div.sk-toggleable {background-color: white;}#sk-41ba53e6-17ad-4ce8-bed6-74c55038a98c label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-41ba53e6-17ad-4ce8-bed6-74c55038a98c div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-41ba53e6-17ad-4ce8-bed6-74c55038a98c div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-41ba53e6-17ad-4ce8-bed6-74c55038a98c input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-41ba53e6-17ad-4ce8-bed6-74c55038a98c div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-41ba53e6-17ad-4ce8-bed6-74c55038a98c div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-41ba53e6-17ad-4ce8-bed6-74c55038a98c input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-41ba53e6-17ad-4ce8-bed6-74c55038a98c div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-41ba53e6-17ad-4ce8-bed6-74c55038a98c div.sk-estimator:hover {background-color: #d4ebff;}#sk-41ba53e6-17ad-4ce8-bed6-74c55038a98c div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-41ba53e6-17ad-4ce8-bed6-74c55038a98c div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-41ba53e6-17ad-4ce8-bed6-74c55038a98c div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-41ba53e6-17ad-4ce8-bed6-74c55038a98c div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-41ba53e6-17ad-4ce8-bed6-74c55038a98c div.sk-item {z-index: 1;}#sk-41ba53e6-17ad-4ce8-bed6-74c55038a98c div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-41ba53e6-17ad-4ce8-bed6-74c55038a98c div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-41ba53e6-17ad-4ce8-bed6-74c55038a98c div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-41ba53e6-17ad-4ce8-bed6-74c55038a98c div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-41ba53e6-17ad-4ce8-bed6-74c55038a98c div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-41ba53e6-17ad-4ce8-bed6-74c55038a98c div.sk-parallel-item:only-child::after {width: 0;}#sk-41ba53e6-17ad-4ce8-bed6-74c55038a98c div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-41ba53e6-17ad-4ce8-bed6-74c55038a98c div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-41ba53e6-17ad-4ce8-bed6-74c55038a98c div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-41ba53e6-17ad-4ce8-bed6-74c55038a98c div.sk-container {display: inline-block;position: relative;}#sk-41ba53e6-17ad-4ce8-bed6-74c55038a98c div.sk-text-repr-fallback {display: none;}</style><div id="sk-41ba53e6-17ad-4ce8-bed6-74c55038a98c" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="079d5d91-08e1-41d9-8de2-8e7499f34fe7" type="checkbox" ><label class="sk-toggleable__label" for="079d5d91-08e1-41d9-8de2-8e7499f34fe7">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('columntransformer',
                     ColumnTransformer(transformers=[('categorical',
                                                      Pipeline(steps=[('imputation_constant',
                                                                       SimpleImputer(fill_value='missing',
                                                                                     strategy='constant')),
                                                                      ('onehot',
                                                                       OneHotEncoder(handle_unknown='ignore'))]),
                                                      ['state', 'gender']),
                                                     ('numerical',
                                                      Pipeline(steps=[('imputation_mean',
                                                                       SimpleImputer()),
                                                                      ('scaler',
                                                                       StandardScaler())]),
                                                      ['age', 'weight'])])),
                    ('logisticregression', LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a0e3b047-23d1-4c27-be83-350434dd4102" type="checkbox" ><label class="sk-toggleable__label" for="a0e3b047-23d1-4c27-be83-350434dd4102">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('categorical',
                                     Pipeline(steps=[('imputation_constant',
                                                      SimpleImputer(fill_value='missing',
                                                                    strategy='constant')),
                                                     ('onehot',
                                                      OneHotEncoder(handle_unknown='ignore'))]),
                                     ['state', 'gender']),
                                    ('numerical',
                                     Pipeline(steps=[('imputation_mean',
                                                      SimpleImputer()),
                                                     ('scaler', StandardScaler())]),
                                     ['age', 'weight'])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="150b52c1-456e-4524-b3b4-7a4fdd770b31" type="checkbox" ><label class="sk-toggleable__label" for="150b52c1-456e-4524-b3b4-7a4fdd770b31">categorical</label><div class="sk-toggleable__content"><pre>['state', 'gender']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="01cee701-01e0-4e67-a34d-f474e744ab83" type="checkbox" ><label class="sk-toggleable__label" for="01cee701-01e0-4e67-a34d-f474e744ab83">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value='missing', strategy='constant')</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f1531614-719e-4bd6-97e3-4f9baef5a6c4" type="checkbox" ><label class="sk-toggleable__label" for="f1531614-719e-4bd6-97e3-4f9baef5a6c4">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown='ignore')</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="09810c80-4243-49cf-b146-a60333c0fa5a" type="checkbox" ><label class="sk-toggleable__label" for="09810c80-4243-49cf-b146-a60333c0fa5a">numerical</label><div class="sk-toggleable__content"><pre>['age', 'weight']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5559d04b-d020-4a6c-b042-97b6f061d76b" type="checkbox" ><label class="sk-toggleable__label" for="5559d04b-d020-4a6c-b042-97b6f061d76b">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a43b672f-a9d1-4d3b-b952-6c93c29f397f" type="checkbox" ><label class="sk-toggleable__label" for="a43b672f-a9d1-4d3b-b952-6c93c29f397f">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="14aa8c67-1308-4b11-8a61-dd84bf392cf0" type="checkbox" ><label class="sk-toggleable__label" for="14aa8c67-1308-4b11-8a61-dd84bf392cf0">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-136086f4-7c17-4188-8d9b-f46917828c6c {color: black;background-color: white;}#sk-136086f4-7c17-4188-8d9b-f46917828c6c pre{padding: 0;}#sk-136086f4-7c17-4188-8d9b-f46917828c6c div.sk-toggleable {background-color: white;}#sk-136086f4-7c17-4188-8d9b-f46917828c6c label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-136086f4-7c17-4188-8d9b-f46917828c6c div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-136086f4-7c17-4188-8d9b-f46917828c6c div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-136086f4-7c17-4188-8d9b-f46917828c6c input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-136086f4-7c17-4188-8d9b-f46917828c6c div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-136086f4-7c17-4188-8d9b-f46917828c6c div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-136086f4-7c17-4188-8d9b-f46917828c6c input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-136086f4-7c17-4188-8d9b-f46917828c6c div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-136086f4-7c17-4188-8d9b-f46917828c6c div.sk-estimator:hover {background-color: #d4ebff;}#sk-136086f4-7c17-4188-8d9b-f46917828c6c div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-136086f4-7c17-4188-8d9b-f46917828c6c div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-136086f4-7c17-4188-8d9b-f46917828c6c div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-136086f4-7c17-4188-8d9b-f46917828c6c div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-136086f4-7c17-4188-8d9b-f46917828c6c div.sk-item {z-index: 1;}#sk-136086f4-7c17-4188-8d9b-f46917828c6c div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-136086f4-7c17-4188-8d9b-f46917828c6c div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-136086f4-7c17-4188-8d9b-f46917828c6c div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-136086f4-7c17-4188-8d9b-f46917828c6c div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-136086f4-7c17-4188-8d9b-f46917828c6c div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-136086f4-7c17-4188-8d9b-f46917828c6c div.sk-parallel-item:only-child::after {width: 0;}#sk-136086f4-7c17-4188-8d9b-f46917828c6c div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-136086f4-7c17-4188-8d9b-f46917828c6c div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-136086f4-7c17-4188-8d9b-f46917828c6c div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-136086f4-7c17-4188-8d9b-f46917828c6c div.sk-container {display: inline-block;position: relative;}#sk-136086f4-7c17-4188-8d9b-f46917828c6c div.sk-text-repr-fallback {display: none;}</style><div id="sk-136086f4-7c17-4188-8d9b-f46917828c6c" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="234259d1-d470-48f2-93ca-a768bb9592bd" type="checkbox" ><label class="sk-toggleable__label" for="234259d1-d470-48f2-93ca-a768bb9592bd">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[('preprocessor',
                                            ColumnTransformer(transformers=[('categorical',
                                                                             Pipeline(steps=[('imputation_constant',
                                                                                              SimpleImputer(fill_value='missing',
                                                                                                            strategy='constant')),
                                                                                             ('onehot',
                                                                                              OneHotEncoder(handle_unknown='ignore'))]),
                                                                             ['state',
                                                                              'gender']),
                                                                            ('numerical',
                                                                             Pipeline(steps=[('imputation_mean',
                                                                                              SimpleImputer()),
                                                                                             ('scaler',
                                                                                              StandardScaler())]),
                                                                             ['age',
                                                                              'weight'])])),
                                           ('classifier',
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={'classifier__criterion': ['gini', 'entropy'],
                             'classifier__max_depth': [4, 5, 6, 7, 8],
                             'classifier__max_features': ['auto', 'sqrt', 'log2'],
                             'classifier__n_estimators': [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a06ce327-d1ea-4632-9929-2a58a4d39b78" type="checkbox" ><label class="sk-toggleable__label" for="a06ce327-d1ea-4632-9929-2a58a4d39b78">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('categorical',
                                     Pipeline(steps=[('imputation_constant',
                                                      SimpleImputer(fill_value='missing',
                                                                    strategy='constant')),
                                                     ('onehot',
                                                      OneHotEncoder(handle_unknown='ignore'))]),
                                     ['state', 'gender']),
                                    ('numerical',
                                     Pipeline(steps=[('imputation_mean',
                                                      SimpleImputer()),
                                                     ('scaler', StandardScaler())]),
                                     ['age', 'weight'])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="efb9a93b-aac9-4a9b-a9f0-7d24606c7ca0" type="checkbox" ><label class="sk-toggleable__label" for="efb9a93b-aac9-4a9b-a9f0-7d24606c7ca0">categorical</label><div class="sk-toggleable__content"><pre>['state', 'gender']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c87fcfdd-9896-4b46-b816-968d671336a7" type="checkbox" ><label class="sk-toggleable__label" for="c87fcfdd-9896-4b46-b816-968d671336a7">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value='missing', strategy='constant')</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="82a78b3d-9f57-4960-be0f-16f153393346" type="checkbox" ><label class="sk-toggleable__label" for="82a78b3d-9f57-4960-be0f-16f153393346">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown='ignore')</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="09c3da5f-8966-4ac8-8f51-450e2daf4e51" type="checkbox" ><label class="sk-toggleable__label" for="09c3da5f-8966-4ac8-8f51-450e2daf4e51">numerical</label><div class="sk-toggleable__content"><pre>['age', 'weight']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f4c90c51-f9da-4ded-a662-4f3225b588d4" type="checkbox" ><label class="sk-toggleable__label" for="f4c90c51-f9da-4ded-a662-4f3225b588d4">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d0487a93-a6fb-4409-ac88-3f0c4825ea30" type="checkbox" ><label class="sk-toggleable__label" for="d0487a93-a6fb-4409-ac88-3f0c4825ea30">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="df7edc63-2f07-47c0-a2b4-6fedbcb19725" type="checkbox" ><label class="sk-toggleable__label" for="df7edc63-2f07-47c0-a2b4-6fedbcb19725">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.073 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
