
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-cb394679-020b-420f-bb79-376014bad275 {color: black;background-color: white;}#sk-cb394679-020b-420f-bb79-376014bad275 pre{padding: 0;}#sk-cb394679-020b-420f-bb79-376014bad275 div.sk-toggleable {background-color: white;}#sk-cb394679-020b-420f-bb79-376014bad275 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-cb394679-020b-420f-bb79-376014bad275 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-cb394679-020b-420f-bb79-376014bad275 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-cb394679-020b-420f-bb79-376014bad275 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-cb394679-020b-420f-bb79-376014bad275 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-cb394679-020b-420f-bb79-376014bad275 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-cb394679-020b-420f-bb79-376014bad275 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-cb394679-020b-420f-bb79-376014bad275 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-cb394679-020b-420f-bb79-376014bad275 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-cb394679-020b-420f-bb79-376014bad275 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-cb394679-020b-420f-bb79-376014bad275 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-cb394679-020b-420f-bb79-376014bad275 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-cb394679-020b-420f-bb79-376014bad275 div.sk-estimator:hover {background-color: #d4ebff;}#sk-cb394679-020b-420f-bb79-376014bad275 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-cb394679-020b-420f-bb79-376014bad275 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-cb394679-020b-420f-bb79-376014bad275 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-cb394679-020b-420f-bb79-376014bad275 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-cb394679-020b-420f-bb79-376014bad275 div.sk-item {z-index: 1;}#sk-cb394679-020b-420f-bb79-376014bad275 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-cb394679-020b-420f-bb79-376014bad275 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-cb394679-020b-420f-bb79-376014bad275 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-cb394679-020b-420f-bb79-376014bad275 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-cb394679-020b-420f-bb79-376014bad275 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-cb394679-020b-420f-bb79-376014bad275 div.sk-parallel-item:only-child::after {width: 0;}#sk-cb394679-020b-420f-bb79-376014bad275 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-cb394679-020b-420f-bb79-376014bad275 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-cb394679-020b-420f-bb79-376014bad275 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-cb394679-020b-420f-bb79-376014bad275 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-cb394679-020b-420f-bb79-376014bad275 div.sk-text-repr-fallback {display: none;}</style><div id="sk-cb394679-020b-420f-bb79-376014bad275" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6ae3bdc8-57e9-4c82-b1d3-3dd62299840b" type="checkbox" ><label for="6ae3bdc8-57e9-4c82-b1d3-3dd62299840b" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="82fd4e59-49f0-4206-a0f0-7bf9e2367fb9" type="checkbox" ><label for="82fd4e59-49f0-4206-a0f0-7bf9e2367fb9" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0bf7e862-7ddc-427b-88db-93074b24f2bb" type="checkbox" ><label for="0bf7e862-7ddc-427b-88db-93074b24f2bb" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-14d83b07-5177-441a-8c14-7588de06ebc8 {color: black;background-color: white;}#sk-14d83b07-5177-441a-8c14-7588de06ebc8 pre{padding: 0;}#sk-14d83b07-5177-441a-8c14-7588de06ebc8 div.sk-toggleable {background-color: white;}#sk-14d83b07-5177-441a-8c14-7588de06ebc8 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-14d83b07-5177-441a-8c14-7588de06ebc8 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-14d83b07-5177-441a-8c14-7588de06ebc8 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-14d83b07-5177-441a-8c14-7588de06ebc8 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-14d83b07-5177-441a-8c14-7588de06ebc8 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-14d83b07-5177-441a-8c14-7588de06ebc8 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-14d83b07-5177-441a-8c14-7588de06ebc8 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-14d83b07-5177-441a-8c14-7588de06ebc8 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-14d83b07-5177-441a-8c14-7588de06ebc8 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-14d83b07-5177-441a-8c14-7588de06ebc8 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-14d83b07-5177-441a-8c14-7588de06ebc8 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-14d83b07-5177-441a-8c14-7588de06ebc8 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-14d83b07-5177-441a-8c14-7588de06ebc8 div.sk-estimator:hover {background-color: #d4ebff;}#sk-14d83b07-5177-441a-8c14-7588de06ebc8 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-14d83b07-5177-441a-8c14-7588de06ebc8 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-14d83b07-5177-441a-8c14-7588de06ebc8 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-14d83b07-5177-441a-8c14-7588de06ebc8 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-14d83b07-5177-441a-8c14-7588de06ebc8 div.sk-item {z-index: 1;}#sk-14d83b07-5177-441a-8c14-7588de06ebc8 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-14d83b07-5177-441a-8c14-7588de06ebc8 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-14d83b07-5177-441a-8c14-7588de06ebc8 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-14d83b07-5177-441a-8c14-7588de06ebc8 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-14d83b07-5177-441a-8c14-7588de06ebc8 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-14d83b07-5177-441a-8c14-7588de06ebc8 div.sk-parallel-item:only-child::after {width: 0;}#sk-14d83b07-5177-441a-8c14-7588de06ebc8 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-14d83b07-5177-441a-8c14-7588de06ebc8 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-14d83b07-5177-441a-8c14-7588de06ebc8 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-14d83b07-5177-441a-8c14-7588de06ebc8 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-14d83b07-5177-441a-8c14-7588de06ebc8 div.sk-text-repr-fallback {display: none;}</style><div id="sk-14d83b07-5177-441a-8c14-7588de06ebc8" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f26c8ae3-fa67-41e4-8282-9a7b847645d9" type="checkbox" ><label for="f26c8ae3-fa67-41e4-8282-9a7b847645d9" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7cc66b0c-d3bf-4d71-9f82-90916c5c730a" type="checkbox" ><label for="7cc66b0c-d3bf-4d71-9f82-90916c5c730a" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0f7484e2-8524-4fc0-9633-105dd05b5c0e" type="checkbox" ><label for="0f7484e2-8524-4fc0-9633-105dd05b5c0e" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="602cd464-1253-4e22-8f62-7386530ba25f" type="checkbox" ><label for="602cd464-1253-4e22-8f62-7386530ba25f" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-63151840-f75b-4029-8f3e-a19f16421c79 {color: black;background-color: white;}#sk-63151840-f75b-4029-8f3e-a19f16421c79 pre{padding: 0;}#sk-63151840-f75b-4029-8f3e-a19f16421c79 div.sk-toggleable {background-color: white;}#sk-63151840-f75b-4029-8f3e-a19f16421c79 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-63151840-f75b-4029-8f3e-a19f16421c79 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-63151840-f75b-4029-8f3e-a19f16421c79 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-63151840-f75b-4029-8f3e-a19f16421c79 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-63151840-f75b-4029-8f3e-a19f16421c79 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-63151840-f75b-4029-8f3e-a19f16421c79 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-63151840-f75b-4029-8f3e-a19f16421c79 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-63151840-f75b-4029-8f3e-a19f16421c79 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-63151840-f75b-4029-8f3e-a19f16421c79 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-63151840-f75b-4029-8f3e-a19f16421c79 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-63151840-f75b-4029-8f3e-a19f16421c79 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-63151840-f75b-4029-8f3e-a19f16421c79 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-63151840-f75b-4029-8f3e-a19f16421c79 div.sk-estimator:hover {background-color: #d4ebff;}#sk-63151840-f75b-4029-8f3e-a19f16421c79 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-63151840-f75b-4029-8f3e-a19f16421c79 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-63151840-f75b-4029-8f3e-a19f16421c79 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-63151840-f75b-4029-8f3e-a19f16421c79 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-63151840-f75b-4029-8f3e-a19f16421c79 div.sk-item {z-index: 1;}#sk-63151840-f75b-4029-8f3e-a19f16421c79 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-63151840-f75b-4029-8f3e-a19f16421c79 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-63151840-f75b-4029-8f3e-a19f16421c79 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-63151840-f75b-4029-8f3e-a19f16421c79 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-63151840-f75b-4029-8f3e-a19f16421c79 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-63151840-f75b-4029-8f3e-a19f16421c79 div.sk-parallel-item:only-child::after {width: 0;}#sk-63151840-f75b-4029-8f3e-a19f16421c79 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-63151840-f75b-4029-8f3e-a19f16421c79 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-63151840-f75b-4029-8f3e-a19f16421c79 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-63151840-f75b-4029-8f3e-a19f16421c79 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-63151840-f75b-4029-8f3e-a19f16421c79 div.sk-text-repr-fallback {display: none;}</style><div id="sk-63151840-f75b-4029-8f3e-a19f16421c79" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="73fed7e1-9674-47a9-9f23-bdd5b25e6e0c" type="checkbox" ><label for="73fed7e1-9674-47a9-9f23-bdd5b25e6e0c" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="47bf5459-e3bb-4c35-ba30-d46e1c1ec219" type="checkbox" ><label for="47bf5459-e3bb-4c35-ba30-d46e1c1ec219" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d37a2283-58f8-4a95-b737-05d5219a1c0b" type="checkbox" ><label for="d37a2283-58f8-4a95-b737-05d5219a1c0b" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-008ad9ca-4e72-4c3f-afce-92bb6a067f53 {color: black;background-color: white;}#sk-008ad9ca-4e72-4c3f-afce-92bb6a067f53 pre{padding: 0;}#sk-008ad9ca-4e72-4c3f-afce-92bb6a067f53 div.sk-toggleable {background-color: white;}#sk-008ad9ca-4e72-4c3f-afce-92bb6a067f53 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-008ad9ca-4e72-4c3f-afce-92bb6a067f53 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-008ad9ca-4e72-4c3f-afce-92bb6a067f53 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-008ad9ca-4e72-4c3f-afce-92bb6a067f53 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-008ad9ca-4e72-4c3f-afce-92bb6a067f53 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-008ad9ca-4e72-4c3f-afce-92bb6a067f53 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-008ad9ca-4e72-4c3f-afce-92bb6a067f53 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-008ad9ca-4e72-4c3f-afce-92bb6a067f53 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-008ad9ca-4e72-4c3f-afce-92bb6a067f53 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-008ad9ca-4e72-4c3f-afce-92bb6a067f53 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-008ad9ca-4e72-4c3f-afce-92bb6a067f53 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-008ad9ca-4e72-4c3f-afce-92bb6a067f53 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-008ad9ca-4e72-4c3f-afce-92bb6a067f53 div.sk-estimator:hover {background-color: #d4ebff;}#sk-008ad9ca-4e72-4c3f-afce-92bb6a067f53 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-008ad9ca-4e72-4c3f-afce-92bb6a067f53 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-008ad9ca-4e72-4c3f-afce-92bb6a067f53 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-008ad9ca-4e72-4c3f-afce-92bb6a067f53 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-008ad9ca-4e72-4c3f-afce-92bb6a067f53 div.sk-item {z-index: 1;}#sk-008ad9ca-4e72-4c3f-afce-92bb6a067f53 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-008ad9ca-4e72-4c3f-afce-92bb6a067f53 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-008ad9ca-4e72-4c3f-afce-92bb6a067f53 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-008ad9ca-4e72-4c3f-afce-92bb6a067f53 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-008ad9ca-4e72-4c3f-afce-92bb6a067f53 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-008ad9ca-4e72-4c3f-afce-92bb6a067f53 div.sk-parallel-item:only-child::after {width: 0;}#sk-008ad9ca-4e72-4c3f-afce-92bb6a067f53 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-008ad9ca-4e72-4c3f-afce-92bb6a067f53 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-008ad9ca-4e72-4c3f-afce-92bb6a067f53 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-008ad9ca-4e72-4c3f-afce-92bb6a067f53 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-008ad9ca-4e72-4c3f-afce-92bb6a067f53 div.sk-text-repr-fallback {display: none;}</style><div id="sk-008ad9ca-4e72-4c3f-afce-92bb6a067f53" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e32c4559-9c7b-4279-bcb1-84e46c8d82c4" type="checkbox" ><label for="e32c4559-9c7b-4279-bcb1-84e46c8d82c4" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b0033b65-9896-4149-9ed8-d9f133e2c1f7" type="checkbox" ><label for="b0033b65-9896-4149-9ed8-d9f133e2c1f7" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7a0a5f48-3b71-490f-b0d7-252d543bc8a8" type="checkbox" ><label for="7a0a5f48-3b71-490f-b0d7-252d543bc8a8" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="61227115-c3b9-4106-b8b4-bf247b663b78" type="checkbox" ><label for="61227115-c3b9-4106-b8b4-bf247b663b78" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="97b0f4b4-aaf2-44ce-8532-8829ab1b3725" type="checkbox" ><label for="97b0f4b4-aaf2-44ce-8532-8829ab1b3725" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4d5d9db5-1df5-4f66-92f2-c6bef7482a6b" type="checkbox" ><label for="4d5d9db5-1df5-4f66-92f2-c6bef7482a6b" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b34fc3da-53ff-40bc-a7bb-e95eff7da4bf" type="checkbox" ><label for="b34fc3da-53ff-40bc-a7bb-e95eff7da4bf" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="484afbe5-4041-4d23-9a7a-621356d8bf1d" type="checkbox" ><label for="484afbe5-4041-4d23-9a7a-621356d8bf1d" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2d371b3a-068d-49ab-a5dd-fa30240df03a" type="checkbox" ><label for="2d371b3a-068d-49ab-a5dd-fa30240df03a" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-451b348b-2eb5-42f9-9051-b851ac29f9ea {color: black;background-color: white;}#sk-451b348b-2eb5-42f9-9051-b851ac29f9ea pre{padding: 0;}#sk-451b348b-2eb5-42f9-9051-b851ac29f9ea div.sk-toggleable {background-color: white;}#sk-451b348b-2eb5-42f9-9051-b851ac29f9ea label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-451b348b-2eb5-42f9-9051-b851ac29f9ea label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-451b348b-2eb5-42f9-9051-b851ac29f9ea label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-451b348b-2eb5-42f9-9051-b851ac29f9ea div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-451b348b-2eb5-42f9-9051-b851ac29f9ea div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-451b348b-2eb5-42f9-9051-b851ac29f9ea div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-451b348b-2eb5-42f9-9051-b851ac29f9ea input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-451b348b-2eb5-42f9-9051-b851ac29f9ea input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-451b348b-2eb5-42f9-9051-b851ac29f9ea div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-451b348b-2eb5-42f9-9051-b851ac29f9ea div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-451b348b-2eb5-42f9-9051-b851ac29f9ea input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-451b348b-2eb5-42f9-9051-b851ac29f9ea div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-451b348b-2eb5-42f9-9051-b851ac29f9ea div.sk-estimator:hover {background-color: #d4ebff;}#sk-451b348b-2eb5-42f9-9051-b851ac29f9ea div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-451b348b-2eb5-42f9-9051-b851ac29f9ea div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-451b348b-2eb5-42f9-9051-b851ac29f9ea div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-451b348b-2eb5-42f9-9051-b851ac29f9ea div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-451b348b-2eb5-42f9-9051-b851ac29f9ea div.sk-item {z-index: 1;}#sk-451b348b-2eb5-42f9-9051-b851ac29f9ea div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-451b348b-2eb5-42f9-9051-b851ac29f9ea div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-451b348b-2eb5-42f9-9051-b851ac29f9ea div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-451b348b-2eb5-42f9-9051-b851ac29f9ea div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-451b348b-2eb5-42f9-9051-b851ac29f9ea div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-451b348b-2eb5-42f9-9051-b851ac29f9ea div.sk-parallel-item:only-child::after {width: 0;}#sk-451b348b-2eb5-42f9-9051-b851ac29f9ea div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-451b348b-2eb5-42f9-9051-b851ac29f9ea div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-451b348b-2eb5-42f9-9051-b851ac29f9ea div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-451b348b-2eb5-42f9-9051-b851ac29f9ea div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-451b348b-2eb5-42f9-9051-b851ac29f9ea div.sk-text-repr-fallback {display: none;}</style><div id="sk-451b348b-2eb5-42f9-9051-b851ac29f9ea" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f4bfaa08-c4d5-4716-a21f-8bd57eb0a222" type="checkbox" ><label for="f4bfaa08-c4d5-4716-a21f-8bd57eb0a222" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cddbc963-db04-48e8-a43a-e12d13c7fb81" type="checkbox" ><label for="cddbc963-db04-48e8-a43a-e12d13c7fb81" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b7160cb1-afa0-4db8-9d5d-2401120d49fa" type="checkbox" ><label for="b7160cb1-afa0-4db8-9d5d-2401120d49fa" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5731639a-064e-490c-9ee6-93bbb7f3b305" type="checkbox" ><label for="5731639a-064e-490c-9ee6-93bbb7f3b305" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="65dca133-17b9-44da-98c5-2efcfc940b00" type="checkbox" ><label for="65dca133-17b9-44da-98c5-2efcfc940b00" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="51ab176e-b53a-4584-b201-9bf90c248014" type="checkbox" ><label for="51ab176e-b53a-4584-b201-9bf90c248014" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5e6e9416-0e63-4b97-8574-981a001c5d36" type="checkbox" ><label for="5e6e9416-0e63-4b97-8574-981a001c5d36" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="939508ea-edb1-44ae-a81a-8c04f0c881cd" type="checkbox" ><label for="939508ea-edb1-44ae-a81a-8c04f0c881cd" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ec9abf9c-b844-45f9-84b3-3a4cdea22c0f" type="checkbox" ><label for="ec9abf9c-b844-45f9-84b3-3a4cdea22c0f" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.071 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
