
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-9fb6c2c7-3e19-4745-b40a-8d025268254a {color: black;background-color: white;}#sk-9fb6c2c7-3e19-4745-b40a-8d025268254a pre{padding: 0;}#sk-9fb6c2c7-3e19-4745-b40a-8d025268254a div.sk-toggleable {background-color: white;}#sk-9fb6c2c7-3e19-4745-b40a-8d025268254a label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-9fb6c2c7-3e19-4745-b40a-8d025268254a div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-9fb6c2c7-3e19-4745-b40a-8d025268254a div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-9fb6c2c7-3e19-4745-b40a-8d025268254a input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-9fb6c2c7-3e19-4745-b40a-8d025268254a div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-9fb6c2c7-3e19-4745-b40a-8d025268254a div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-9fb6c2c7-3e19-4745-b40a-8d025268254a input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-9fb6c2c7-3e19-4745-b40a-8d025268254a div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-9fb6c2c7-3e19-4745-b40a-8d025268254a div.sk-estimator:hover {background-color: #d4ebff;}#sk-9fb6c2c7-3e19-4745-b40a-8d025268254a div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-9fb6c2c7-3e19-4745-b40a-8d025268254a div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-9fb6c2c7-3e19-4745-b40a-8d025268254a div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-9fb6c2c7-3e19-4745-b40a-8d025268254a div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-9fb6c2c7-3e19-4745-b40a-8d025268254a div.sk-item {z-index: 1;}#sk-9fb6c2c7-3e19-4745-b40a-8d025268254a div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-9fb6c2c7-3e19-4745-b40a-8d025268254a div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-9fb6c2c7-3e19-4745-b40a-8d025268254a div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-9fb6c2c7-3e19-4745-b40a-8d025268254a div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-9fb6c2c7-3e19-4745-b40a-8d025268254a div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-9fb6c2c7-3e19-4745-b40a-8d025268254a div.sk-parallel-item:only-child::after {width: 0;}#sk-9fb6c2c7-3e19-4745-b40a-8d025268254a div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-9fb6c2c7-3e19-4745-b40a-8d025268254a div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-9fb6c2c7-3e19-4745-b40a-8d025268254a div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-9fb6c2c7-3e19-4745-b40a-8d025268254a div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org.  See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-9fb6c2c7-3e19-4745-b40a-8d025268254a div.sk-text-repr-fallback {display: none;}</style><div id="sk-9fb6c2c7-3e19-4745-b40a-8d025268254a" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9dd1d514-7693-4b3b-9e43-eafe176636ae" type="checkbox" ><label class="sk-toggleable__label" for="9dd1d514-7693-4b3b-9e43-eafe176636ae">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cc7ce219-8c02-4c41-9f39-d2bfbafcc63c" type="checkbox" ><label class="sk-toggleable__label" for="cc7ce219-8c02-4c41-9f39-d2bfbafcc63c">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6d2c36e6-7a37-4f8e-b17d-ebfd631e5099" type="checkbox" ><label class="sk-toggleable__label" for="6d2c36e6-7a37-4f8e-b17d-ebfd631e5099">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-4f3e0941-e4ff-4c26-8724-5295a73155e8 {color: black;background-color: white;}#sk-4f3e0941-e4ff-4c26-8724-5295a73155e8 pre{padding: 0;}#sk-4f3e0941-e4ff-4c26-8724-5295a73155e8 div.sk-toggleable {background-color: white;}#sk-4f3e0941-e4ff-4c26-8724-5295a73155e8 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-4f3e0941-e4ff-4c26-8724-5295a73155e8 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-4f3e0941-e4ff-4c26-8724-5295a73155e8 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-4f3e0941-e4ff-4c26-8724-5295a73155e8 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-4f3e0941-e4ff-4c26-8724-5295a73155e8 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-4f3e0941-e4ff-4c26-8724-5295a73155e8 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-4f3e0941-e4ff-4c26-8724-5295a73155e8 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-4f3e0941-e4ff-4c26-8724-5295a73155e8 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-4f3e0941-e4ff-4c26-8724-5295a73155e8 div.sk-estimator:hover {background-color: #d4ebff;}#sk-4f3e0941-e4ff-4c26-8724-5295a73155e8 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-4f3e0941-e4ff-4c26-8724-5295a73155e8 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-4f3e0941-e4ff-4c26-8724-5295a73155e8 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-4f3e0941-e4ff-4c26-8724-5295a73155e8 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-4f3e0941-e4ff-4c26-8724-5295a73155e8 div.sk-item {z-index: 1;}#sk-4f3e0941-e4ff-4c26-8724-5295a73155e8 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-4f3e0941-e4ff-4c26-8724-5295a73155e8 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-4f3e0941-e4ff-4c26-8724-5295a73155e8 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-4f3e0941-e4ff-4c26-8724-5295a73155e8 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-4f3e0941-e4ff-4c26-8724-5295a73155e8 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-4f3e0941-e4ff-4c26-8724-5295a73155e8 div.sk-parallel-item:only-child::after {width: 0;}#sk-4f3e0941-e4ff-4c26-8724-5295a73155e8 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-4f3e0941-e4ff-4c26-8724-5295a73155e8 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-4f3e0941-e4ff-4c26-8724-5295a73155e8 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-4f3e0941-e4ff-4c26-8724-5295a73155e8 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org.  See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-4f3e0941-e4ff-4c26-8724-5295a73155e8 div.sk-text-repr-fallback {display: none;}</style><div id="sk-4f3e0941-e4ff-4c26-8724-5295a73155e8" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="03df4568-3714-4d2f-ac1a-b8379f37eeae" type="checkbox" ><label class="sk-toggleable__label" for="03df4568-3714-4d2f-ac1a-b8379f37eeae">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="66e6299c-f931-4d08-b07c-9f3aa8548771" type="checkbox" ><label class="sk-toggleable__label" for="66e6299c-f931-4d08-b07c-9f3aa8548771">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c46b3a6b-c483-4691-837f-c715fdc043e2" type="checkbox" ><label class="sk-toggleable__label" for="c46b3a6b-c483-4691-837f-c715fdc043e2">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="65fa4886-17eb-4478-9aa8-b3265d2d2067" type="checkbox" ><label class="sk-toggleable__label" for="65fa4886-17eb-4478-9aa8-b3265d2d2067">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-0394f700-57f8-4669-8fd8-b7a819e72ca1 {color: black;background-color: white;}#sk-0394f700-57f8-4669-8fd8-b7a819e72ca1 pre{padding: 0;}#sk-0394f700-57f8-4669-8fd8-b7a819e72ca1 div.sk-toggleable {background-color: white;}#sk-0394f700-57f8-4669-8fd8-b7a819e72ca1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-0394f700-57f8-4669-8fd8-b7a819e72ca1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-0394f700-57f8-4669-8fd8-b7a819e72ca1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-0394f700-57f8-4669-8fd8-b7a819e72ca1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-0394f700-57f8-4669-8fd8-b7a819e72ca1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-0394f700-57f8-4669-8fd8-b7a819e72ca1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-0394f700-57f8-4669-8fd8-b7a819e72ca1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-0394f700-57f8-4669-8fd8-b7a819e72ca1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-0394f700-57f8-4669-8fd8-b7a819e72ca1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-0394f700-57f8-4669-8fd8-b7a819e72ca1 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-0394f700-57f8-4669-8fd8-b7a819e72ca1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-0394f700-57f8-4669-8fd8-b7a819e72ca1 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-0394f700-57f8-4669-8fd8-b7a819e72ca1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-0394f700-57f8-4669-8fd8-b7a819e72ca1 div.sk-item {z-index: 1;}#sk-0394f700-57f8-4669-8fd8-b7a819e72ca1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-0394f700-57f8-4669-8fd8-b7a819e72ca1 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-0394f700-57f8-4669-8fd8-b7a819e72ca1 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-0394f700-57f8-4669-8fd8-b7a819e72ca1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-0394f700-57f8-4669-8fd8-b7a819e72ca1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-0394f700-57f8-4669-8fd8-b7a819e72ca1 div.sk-parallel-item:only-child::after {width: 0;}#sk-0394f700-57f8-4669-8fd8-b7a819e72ca1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-0394f700-57f8-4669-8fd8-b7a819e72ca1 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-0394f700-57f8-4669-8fd8-b7a819e72ca1 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-0394f700-57f8-4669-8fd8-b7a819e72ca1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org.  See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-0394f700-57f8-4669-8fd8-b7a819e72ca1 div.sk-text-repr-fallback {display: none;}</style><div id="sk-0394f700-57f8-4669-8fd8-b7a819e72ca1" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b6c9b455-8b7f-432d-b0ff-41519926db65" type="checkbox" ><label class="sk-toggleable__label" for="b6c9b455-8b7f-432d-b0ff-41519926db65">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2605db7f-d250-4318-9960-54a1637849da" type="checkbox" ><label class="sk-toggleable__label" for="2605db7f-d250-4318-9960-54a1637849da">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f992b8bc-6cb5-4ec1-81d6-a5d5a0fcd885" type="checkbox" ><label class="sk-toggleable__label" for="f992b8bc-6cb5-4ec1-81d6-a5d5a0fcd885">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-5eec80ff-247e-48b2-bd34-810c866b96dd {color: black;background-color: white;}#sk-5eec80ff-247e-48b2-bd34-810c866b96dd pre{padding: 0;}#sk-5eec80ff-247e-48b2-bd34-810c866b96dd div.sk-toggleable {background-color: white;}#sk-5eec80ff-247e-48b2-bd34-810c866b96dd label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-5eec80ff-247e-48b2-bd34-810c866b96dd div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-5eec80ff-247e-48b2-bd34-810c866b96dd div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-5eec80ff-247e-48b2-bd34-810c866b96dd input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-5eec80ff-247e-48b2-bd34-810c866b96dd div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-5eec80ff-247e-48b2-bd34-810c866b96dd div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-5eec80ff-247e-48b2-bd34-810c866b96dd input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-5eec80ff-247e-48b2-bd34-810c866b96dd div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-5eec80ff-247e-48b2-bd34-810c866b96dd div.sk-estimator:hover {background-color: #d4ebff;}#sk-5eec80ff-247e-48b2-bd34-810c866b96dd div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-5eec80ff-247e-48b2-bd34-810c866b96dd div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-5eec80ff-247e-48b2-bd34-810c866b96dd div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-5eec80ff-247e-48b2-bd34-810c866b96dd div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-5eec80ff-247e-48b2-bd34-810c866b96dd div.sk-item {z-index: 1;}#sk-5eec80ff-247e-48b2-bd34-810c866b96dd div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-5eec80ff-247e-48b2-bd34-810c866b96dd div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-5eec80ff-247e-48b2-bd34-810c866b96dd div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-5eec80ff-247e-48b2-bd34-810c866b96dd div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-5eec80ff-247e-48b2-bd34-810c866b96dd div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-5eec80ff-247e-48b2-bd34-810c866b96dd div.sk-parallel-item:only-child::after {width: 0;}#sk-5eec80ff-247e-48b2-bd34-810c866b96dd div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-5eec80ff-247e-48b2-bd34-810c866b96dd div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-5eec80ff-247e-48b2-bd34-810c866b96dd div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-5eec80ff-247e-48b2-bd34-810c866b96dd div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org.  See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-5eec80ff-247e-48b2-bd34-810c866b96dd div.sk-text-repr-fallback {display: none;}</style><div id="sk-5eec80ff-247e-48b2-bd34-810c866b96dd" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ed189e3a-59ea-4881-9e7e-e5daaf1a93ab" type="checkbox" ><label class="sk-toggleable__label" for="ed189e3a-59ea-4881-9e7e-e5daaf1a93ab">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1e61346d-ae24-4f38-be79-4361e42b5e4a" type="checkbox" ><label class="sk-toggleable__label" for="1e61346d-ae24-4f38-be79-4361e42b5e4a">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0a4b359a-43b9-4a60-8037-12348fbd2ee6" type="checkbox" ><label class="sk-toggleable__label" for="0a4b359a-43b9-4a60-8037-12348fbd2ee6">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9f742f56-d303-45c7-921a-04513d312b4f" type="checkbox" ><label class="sk-toggleable__label" for="9f742f56-d303-45c7-921a-04513d312b4f">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="88e35b10-a8a3-43fb-b2ff-9924068d50eb" type="checkbox" ><label class="sk-toggleable__label" for="88e35b10-a8a3-43fb-b2ff-9924068d50eb">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1abc21a5-6c1e-4ce0-b14a-5d0df04871e6" type="checkbox" ><label class="sk-toggleable__label" for="1abc21a5-6c1e-4ce0-b14a-5d0df04871e6">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1f2a4150-7a45-4d3e-99ad-62653a7ad2a4" type="checkbox" ><label class="sk-toggleable__label" for="1f2a4150-7a45-4d3e-99ad-62653a7ad2a4">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e2f873d2-5aec-4f72-b011-9dccbdb2e785" type="checkbox" ><label class="sk-toggleable__label" for="e2f873d2-5aec-4f72-b011-9dccbdb2e785">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="dfcca7de-fe19-4558-8187-a1f74a89c5da" type="checkbox" ><label class="sk-toggleable__label" for="dfcca7de-fe19-4558-8187-a1f74a89c5da">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-47f459e4-e2b0-4a46-9287-1aa0b8d80f69 {color: black;background-color: white;}#sk-47f459e4-e2b0-4a46-9287-1aa0b8d80f69 pre{padding: 0;}#sk-47f459e4-e2b0-4a46-9287-1aa0b8d80f69 div.sk-toggleable {background-color: white;}#sk-47f459e4-e2b0-4a46-9287-1aa0b8d80f69 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-47f459e4-e2b0-4a46-9287-1aa0b8d80f69 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-47f459e4-e2b0-4a46-9287-1aa0b8d80f69 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-47f459e4-e2b0-4a46-9287-1aa0b8d80f69 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-47f459e4-e2b0-4a46-9287-1aa0b8d80f69 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-47f459e4-e2b0-4a46-9287-1aa0b8d80f69 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-47f459e4-e2b0-4a46-9287-1aa0b8d80f69 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-47f459e4-e2b0-4a46-9287-1aa0b8d80f69 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-47f459e4-e2b0-4a46-9287-1aa0b8d80f69 div.sk-estimator:hover {background-color: #d4ebff;}#sk-47f459e4-e2b0-4a46-9287-1aa0b8d80f69 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-47f459e4-e2b0-4a46-9287-1aa0b8d80f69 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-47f459e4-e2b0-4a46-9287-1aa0b8d80f69 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-47f459e4-e2b0-4a46-9287-1aa0b8d80f69 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-47f459e4-e2b0-4a46-9287-1aa0b8d80f69 div.sk-item {z-index: 1;}#sk-47f459e4-e2b0-4a46-9287-1aa0b8d80f69 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-47f459e4-e2b0-4a46-9287-1aa0b8d80f69 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-47f459e4-e2b0-4a46-9287-1aa0b8d80f69 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-47f459e4-e2b0-4a46-9287-1aa0b8d80f69 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-47f459e4-e2b0-4a46-9287-1aa0b8d80f69 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-47f459e4-e2b0-4a46-9287-1aa0b8d80f69 div.sk-parallel-item:only-child::after {width: 0;}#sk-47f459e4-e2b0-4a46-9287-1aa0b8d80f69 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-47f459e4-e2b0-4a46-9287-1aa0b8d80f69 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-47f459e4-e2b0-4a46-9287-1aa0b8d80f69 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-47f459e4-e2b0-4a46-9287-1aa0b8d80f69 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org.  See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-47f459e4-e2b0-4a46-9287-1aa0b8d80f69 div.sk-text-repr-fallback {display: none;}</style><div id="sk-47f459e4-e2b0-4a46-9287-1aa0b8d80f69" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ea920448-1aa9-49cf-9c57-cc17f648b668" type="checkbox" ><label class="sk-toggleable__label" for="ea920448-1aa9-49cf-9c57-cc17f648b668">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ac28d44e-64b8-4183-822d-b130bea3c02e" type="checkbox" ><label class="sk-toggleable__label" for="ac28d44e-64b8-4183-822d-b130bea3c02e">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ee385fc6-5706-4afb-a5e2-519c676155bc" type="checkbox" ><label class="sk-toggleable__label" for="ee385fc6-5706-4afb-a5e2-519c676155bc">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="34940e2e-ccb4-4ef1-8426-610a863a5fc5" type="checkbox" ><label class="sk-toggleable__label" for="34940e2e-ccb4-4ef1-8426-610a863a5fc5">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="889918f4-2440-469d-bb56-f58a06fdbebc" type="checkbox" ><label class="sk-toggleable__label" for="889918f4-2440-469d-bb56-f58a06fdbebc">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="495cdf27-585d-4b1b-8973-0af42eb2a643" type="checkbox" ><label class="sk-toggleable__label" for="495cdf27-585d-4b1b-8973-0af42eb2a643">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9763190b-3e83-4e5e-85cd-654eb4b013ce" type="checkbox" ><label class="sk-toggleable__label" for="9763190b-3e83-4e5e-85cd-654eb4b013ce">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="271cd899-8ce0-4365-9af2-af2127fb6753" type="checkbox" ><label class="sk-toggleable__label" for="271cd899-8ce0-4365-9af2-af2127fb6753">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4e46ed9b-f64a-4461-92d8-e4f0b48bdb40" type="checkbox" ><label class="sk-toggleable__label" for="4e46ed9b-f64a-4461-92d8-e4f0b48bdb40">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.106 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
