
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-6c4ad1a4-12c7-4e82-9aac-0a6a16416694 {color: black;background-color: white;}#sk-6c4ad1a4-12c7-4e82-9aac-0a6a16416694 pre{padding: 0;}#sk-6c4ad1a4-12c7-4e82-9aac-0a6a16416694 div.sk-toggleable {background-color: white;}#sk-6c4ad1a4-12c7-4e82-9aac-0a6a16416694 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-6c4ad1a4-12c7-4e82-9aac-0a6a16416694 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-6c4ad1a4-12c7-4e82-9aac-0a6a16416694 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-6c4ad1a4-12c7-4e82-9aac-0a6a16416694 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-6c4ad1a4-12c7-4e82-9aac-0a6a16416694 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-6c4ad1a4-12c7-4e82-9aac-0a6a16416694 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-6c4ad1a4-12c7-4e82-9aac-0a6a16416694 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-6c4ad1a4-12c7-4e82-9aac-0a6a16416694 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-6c4ad1a4-12c7-4e82-9aac-0a6a16416694 div.sk-estimator:hover {background-color: #d4ebff;}#sk-6c4ad1a4-12c7-4e82-9aac-0a6a16416694 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-6c4ad1a4-12c7-4e82-9aac-0a6a16416694 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-6c4ad1a4-12c7-4e82-9aac-0a6a16416694 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-6c4ad1a4-12c7-4e82-9aac-0a6a16416694 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-6c4ad1a4-12c7-4e82-9aac-0a6a16416694 div.sk-item {z-index: 1;}#sk-6c4ad1a4-12c7-4e82-9aac-0a6a16416694 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-6c4ad1a4-12c7-4e82-9aac-0a6a16416694 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-6c4ad1a4-12c7-4e82-9aac-0a6a16416694 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-6c4ad1a4-12c7-4e82-9aac-0a6a16416694 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-6c4ad1a4-12c7-4e82-9aac-0a6a16416694 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-6c4ad1a4-12c7-4e82-9aac-0a6a16416694 div.sk-parallel-item:only-child::after {width: 0;}#sk-6c4ad1a4-12c7-4e82-9aac-0a6a16416694 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-6c4ad1a4-12c7-4e82-9aac-0a6a16416694 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-6c4ad1a4-12c7-4e82-9aac-0a6a16416694 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-6c4ad1a4-12c7-4e82-9aac-0a6a16416694 div.sk-container {display: inline-block;position: relative;}#sk-6c4ad1a4-12c7-4e82-9aac-0a6a16416694 div.sk-text-repr-fallback {display: none;}</style><div id="sk-6c4ad1a4-12c7-4e82-9aac-0a6a16416694" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6d36b15f-267c-467e-8a88-8271ceccd27f" type="checkbox" ><label class="sk-toggleable__label" for="6d36b15f-267c-467e-8a88-8271ceccd27f">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b88e015a-1c9f-4496-a64a-d3624c22f100" type="checkbox" ><label class="sk-toggleable__label" for="b88e015a-1c9f-4496-a64a-d3624c22f100">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="02d4096e-543d-403d-a579-fa96556c4e58" type="checkbox" ><label class="sk-toggleable__label" for="02d4096e-543d-403d-a579-fa96556c4e58">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-c35a036a-fbf0-4e46-b1e3-f3616a2567bd {color: black;background-color: white;}#sk-c35a036a-fbf0-4e46-b1e3-f3616a2567bd pre{padding: 0;}#sk-c35a036a-fbf0-4e46-b1e3-f3616a2567bd div.sk-toggleable {background-color: white;}#sk-c35a036a-fbf0-4e46-b1e3-f3616a2567bd label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-c35a036a-fbf0-4e46-b1e3-f3616a2567bd div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-c35a036a-fbf0-4e46-b1e3-f3616a2567bd div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-c35a036a-fbf0-4e46-b1e3-f3616a2567bd input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-c35a036a-fbf0-4e46-b1e3-f3616a2567bd div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-c35a036a-fbf0-4e46-b1e3-f3616a2567bd div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-c35a036a-fbf0-4e46-b1e3-f3616a2567bd input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-c35a036a-fbf0-4e46-b1e3-f3616a2567bd div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-c35a036a-fbf0-4e46-b1e3-f3616a2567bd div.sk-estimator:hover {background-color: #d4ebff;}#sk-c35a036a-fbf0-4e46-b1e3-f3616a2567bd div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-c35a036a-fbf0-4e46-b1e3-f3616a2567bd div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-c35a036a-fbf0-4e46-b1e3-f3616a2567bd div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-c35a036a-fbf0-4e46-b1e3-f3616a2567bd div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-c35a036a-fbf0-4e46-b1e3-f3616a2567bd div.sk-item {z-index: 1;}#sk-c35a036a-fbf0-4e46-b1e3-f3616a2567bd div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-c35a036a-fbf0-4e46-b1e3-f3616a2567bd div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-c35a036a-fbf0-4e46-b1e3-f3616a2567bd div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-c35a036a-fbf0-4e46-b1e3-f3616a2567bd div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-c35a036a-fbf0-4e46-b1e3-f3616a2567bd div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-c35a036a-fbf0-4e46-b1e3-f3616a2567bd div.sk-parallel-item:only-child::after {width: 0;}#sk-c35a036a-fbf0-4e46-b1e3-f3616a2567bd div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-c35a036a-fbf0-4e46-b1e3-f3616a2567bd div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-c35a036a-fbf0-4e46-b1e3-f3616a2567bd div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-c35a036a-fbf0-4e46-b1e3-f3616a2567bd div.sk-container {display: inline-block;position: relative;}#sk-c35a036a-fbf0-4e46-b1e3-f3616a2567bd div.sk-text-repr-fallback {display: none;}</style><div id="sk-c35a036a-fbf0-4e46-b1e3-f3616a2567bd" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="38824e7c-189f-4aae-86e7-b363682064f6" type="checkbox" ><label class="sk-toggleable__label" for="38824e7c-189f-4aae-86e7-b363682064f6">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('standard_scaler', StandardScaler()),
                    ('polynomial', PolynomialFeatures(degree=3)),
                    ('classifier', LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3e2bbb14-d734-438a-9992-1d5ed2a16231" type="checkbox" ><label class="sk-toggleable__label" for="3e2bbb14-d734-438a-9992-1d5ed2a16231">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="734ef70b-508b-4239-9f0f-de0eb173f448" type="checkbox" ><label class="sk-toggleable__label" for="734ef70b-508b-4239-9f0f-de0eb173f448">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6ce2cc0a-44e7-4aff-9077-3ef26e8bdf28" type="checkbox" ><label class="sk-toggleable__label" for="6ce2cc0a-44e7-4aff-9077-3ef26e8bdf28">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-b18cf1f1-59ca-4136-a3ff-0e89a2dcac1a {color: black;background-color: white;}#sk-b18cf1f1-59ca-4136-a3ff-0e89a2dcac1a pre{padding: 0;}#sk-b18cf1f1-59ca-4136-a3ff-0e89a2dcac1a div.sk-toggleable {background-color: white;}#sk-b18cf1f1-59ca-4136-a3ff-0e89a2dcac1a label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-b18cf1f1-59ca-4136-a3ff-0e89a2dcac1a div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-b18cf1f1-59ca-4136-a3ff-0e89a2dcac1a div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-b18cf1f1-59ca-4136-a3ff-0e89a2dcac1a input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-b18cf1f1-59ca-4136-a3ff-0e89a2dcac1a div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b18cf1f1-59ca-4136-a3ff-0e89a2dcac1a div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b18cf1f1-59ca-4136-a3ff-0e89a2dcac1a input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-b18cf1f1-59ca-4136-a3ff-0e89a2dcac1a div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-b18cf1f1-59ca-4136-a3ff-0e89a2dcac1a div.sk-estimator:hover {background-color: #d4ebff;}#sk-b18cf1f1-59ca-4136-a3ff-0e89a2dcac1a div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-b18cf1f1-59ca-4136-a3ff-0e89a2dcac1a div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-b18cf1f1-59ca-4136-a3ff-0e89a2dcac1a div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b18cf1f1-59ca-4136-a3ff-0e89a2dcac1a div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-b18cf1f1-59ca-4136-a3ff-0e89a2dcac1a div.sk-item {z-index: 1;}#sk-b18cf1f1-59ca-4136-a3ff-0e89a2dcac1a div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-b18cf1f1-59ca-4136-a3ff-0e89a2dcac1a div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b18cf1f1-59ca-4136-a3ff-0e89a2dcac1a div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-b18cf1f1-59ca-4136-a3ff-0e89a2dcac1a div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-b18cf1f1-59ca-4136-a3ff-0e89a2dcac1a div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-b18cf1f1-59ca-4136-a3ff-0e89a2dcac1a div.sk-parallel-item:only-child::after {width: 0;}#sk-b18cf1f1-59ca-4136-a3ff-0e89a2dcac1a div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-b18cf1f1-59ca-4136-a3ff-0e89a2dcac1a div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-b18cf1f1-59ca-4136-a3ff-0e89a2dcac1a div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-b18cf1f1-59ca-4136-a3ff-0e89a2dcac1a div.sk-container {display: inline-block;position: relative;}#sk-b18cf1f1-59ca-4136-a3ff-0e89a2dcac1a div.sk-text-repr-fallback {display: none;}</style><div id="sk-b18cf1f1-59ca-4136-a3ff-0e89a2dcac1a" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="76571ce6-9585-409b-8fab-14a005f775c4" type="checkbox" ><label class="sk-toggleable__label" for="76571ce6-9585-409b-8fab-14a005f775c4">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('reduce_dim', PCA(n_components=4)),
                    ('classifier', SVC(kernel='linear'))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="817725f0-47d7-45f0-b6ba-58dc25995945" type="checkbox" ><label class="sk-toggleable__label" for="817725f0-47d7-45f0-b6ba-58dc25995945">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0b8b660c-a880-4362-b69f-ce5294c9bb53" type="checkbox" ><label class="sk-toggleable__label" for="0b8b660c-a880-4362-b69f-ce5294c9bb53">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel='linear')</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-010f49a1-7899-4ace-b006-c28a28b9b25e {color: black;background-color: white;}#sk-010f49a1-7899-4ace-b006-c28a28b9b25e pre{padding: 0;}#sk-010f49a1-7899-4ace-b006-c28a28b9b25e div.sk-toggleable {background-color: white;}#sk-010f49a1-7899-4ace-b006-c28a28b9b25e label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-010f49a1-7899-4ace-b006-c28a28b9b25e div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-010f49a1-7899-4ace-b006-c28a28b9b25e div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-010f49a1-7899-4ace-b006-c28a28b9b25e input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-010f49a1-7899-4ace-b006-c28a28b9b25e div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-010f49a1-7899-4ace-b006-c28a28b9b25e div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-010f49a1-7899-4ace-b006-c28a28b9b25e input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-010f49a1-7899-4ace-b006-c28a28b9b25e div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-010f49a1-7899-4ace-b006-c28a28b9b25e div.sk-estimator:hover {background-color: #d4ebff;}#sk-010f49a1-7899-4ace-b006-c28a28b9b25e div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-010f49a1-7899-4ace-b006-c28a28b9b25e div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-010f49a1-7899-4ace-b006-c28a28b9b25e div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-010f49a1-7899-4ace-b006-c28a28b9b25e div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-010f49a1-7899-4ace-b006-c28a28b9b25e div.sk-item {z-index: 1;}#sk-010f49a1-7899-4ace-b006-c28a28b9b25e div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-010f49a1-7899-4ace-b006-c28a28b9b25e div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-010f49a1-7899-4ace-b006-c28a28b9b25e div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-010f49a1-7899-4ace-b006-c28a28b9b25e div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-010f49a1-7899-4ace-b006-c28a28b9b25e div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-010f49a1-7899-4ace-b006-c28a28b9b25e div.sk-parallel-item:only-child::after {width: 0;}#sk-010f49a1-7899-4ace-b006-c28a28b9b25e div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-010f49a1-7899-4ace-b006-c28a28b9b25e div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-010f49a1-7899-4ace-b006-c28a28b9b25e div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-010f49a1-7899-4ace-b006-c28a28b9b25e div.sk-container {display: inline-block;position: relative;}#sk-010f49a1-7899-4ace-b006-c28a28b9b25e div.sk-text-repr-fallback {display: none;}</style><div id="sk-010f49a1-7899-4ace-b006-c28a28b9b25e" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9c15180f-fe83-49e9-8870-f6adb630dc9b" type="checkbox" ><label class="sk-toggleable__label" for="9c15180f-fe83-49e9-8870-f6adb630dc9b">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('columntransformer',
                     ColumnTransformer(transformers=[('categorical',
                                                      Pipeline(steps=[('imputation_constant',
                                                                       SimpleImputer(fill_value='missing',
                                                                                     strategy='constant')),
                                                                      ('onehot',
                                                                       OneHotEncoder(handle_unknown='ignore'))]),
                                                      ['state', 'gender']),
                                                     ('numerical',
                                                      Pipeline(steps=[('imputation_mean',
                                                                       SimpleImputer()),
                                                                      ('scaler',
                                                                       StandardScaler())]),
                                                      ['age', 'weight'])])),
                    ('logisticregression', LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4c7841b1-2ce8-4e60-b4d7-6c5bbfa9b4f4" type="checkbox" ><label class="sk-toggleable__label" for="4c7841b1-2ce8-4e60-b4d7-6c5bbfa9b4f4">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('categorical',
                                     Pipeline(steps=[('imputation_constant',
                                                      SimpleImputer(fill_value='missing',
                                                                    strategy='constant')),
                                                     ('onehot',
                                                      OneHotEncoder(handle_unknown='ignore'))]),
                                     ['state', 'gender']),
                                    ('numerical',
                                     Pipeline(steps=[('imputation_mean',
                                                      SimpleImputer()),
                                                     ('scaler', StandardScaler())]),
                                     ['age', 'weight'])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="49ea73c6-dfd4-4382-97b1-02326639c6e8" type="checkbox" ><label class="sk-toggleable__label" for="49ea73c6-dfd4-4382-97b1-02326639c6e8">categorical</label><div class="sk-toggleable__content"><pre>['state', 'gender']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4d6c7ac9-c61f-4178-8ec9-ec8e88589a81" type="checkbox" ><label class="sk-toggleable__label" for="4d6c7ac9-c61f-4178-8ec9-ec8e88589a81">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value='missing', strategy='constant')</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b6573759-692e-43c4-ba83-f4b7233f0b7b" type="checkbox" ><label class="sk-toggleable__label" for="b6573759-692e-43c4-ba83-f4b7233f0b7b">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown='ignore')</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8306f971-c343-4b1e-87f4-572cac8e274c" type="checkbox" ><label class="sk-toggleable__label" for="8306f971-c343-4b1e-87f4-572cac8e274c">numerical</label><div class="sk-toggleable__content"><pre>['age', 'weight']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="31e71dad-2a49-4a84-84c0-4a05f4979762" type="checkbox" ><label class="sk-toggleable__label" for="31e71dad-2a49-4a84-84c0-4a05f4979762">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3156c097-0a9b-4abd-a8ed-46575606ba1f" type="checkbox" ><label class="sk-toggleable__label" for="3156c097-0a9b-4abd-a8ed-46575606ba1f">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c1e5b745-94c0-4a2c-a27a-6730dc13308d" type="checkbox" ><label class="sk-toggleable__label" for="c1e5b745-94c0-4a2c-a27a-6730dc13308d">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-8f4d9669-e9a3-499b-b6e1-e20a1f52e3c4 {color: black;background-color: white;}#sk-8f4d9669-e9a3-499b-b6e1-e20a1f52e3c4 pre{padding: 0;}#sk-8f4d9669-e9a3-499b-b6e1-e20a1f52e3c4 div.sk-toggleable {background-color: white;}#sk-8f4d9669-e9a3-499b-b6e1-e20a1f52e3c4 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-8f4d9669-e9a3-499b-b6e1-e20a1f52e3c4 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-8f4d9669-e9a3-499b-b6e1-e20a1f52e3c4 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-8f4d9669-e9a3-499b-b6e1-e20a1f52e3c4 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-8f4d9669-e9a3-499b-b6e1-e20a1f52e3c4 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-8f4d9669-e9a3-499b-b6e1-e20a1f52e3c4 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-8f4d9669-e9a3-499b-b6e1-e20a1f52e3c4 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-8f4d9669-e9a3-499b-b6e1-e20a1f52e3c4 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-8f4d9669-e9a3-499b-b6e1-e20a1f52e3c4 div.sk-estimator:hover {background-color: #d4ebff;}#sk-8f4d9669-e9a3-499b-b6e1-e20a1f52e3c4 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-8f4d9669-e9a3-499b-b6e1-e20a1f52e3c4 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-8f4d9669-e9a3-499b-b6e1-e20a1f52e3c4 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-8f4d9669-e9a3-499b-b6e1-e20a1f52e3c4 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-8f4d9669-e9a3-499b-b6e1-e20a1f52e3c4 div.sk-item {z-index: 1;}#sk-8f4d9669-e9a3-499b-b6e1-e20a1f52e3c4 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-8f4d9669-e9a3-499b-b6e1-e20a1f52e3c4 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-8f4d9669-e9a3-499b-b6e1-e20a1f52e3c4 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-8f4d9669-e9a3-499b-b6e1-e20a1f52e3c4 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-8f4d9669-e9a3-499b-b6e1-e20a1f52e3c4 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-8f4d9669-e9a3-499b-b6e1-e20a1f52e3c4 div.sk-parallel-item:only-child::after {width: 0;}#sk-8f4d9669-e9a3-499b-b6e1-e20a1f52e3c4 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-8f4d9669-e9a3-499b-b6e1-e20a1f52e3c4 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-8f4d9669-e9a3-499b-b6e1-e20a1f52e3c4 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-8f4d9669-e9a3-499b-b6e1-e20a1f52e3c4 div.sk-container {display: inline-block;position: relative;}#sk-8f4d9669-e9a3-499b-b6e1-e20a1f52e3c4 div.sk-text-repr-fallback {display: none;}</style><div id="sk-8f4d9669-e9a3-499b-b6e1-e20a1f52e3c4" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0c4bc06d-8056-40db-bcf0-e765de579efc" type="checkbox" ><label class="sk-toggleable__label" for="0c4bc06d-8056-40db-bcf0-e765de579efc">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[('preprocessor',
                                            ColumnTransformer(transformers=[('categorical',
                                                                             Pipeline(steps=[('imputation_constant',
                                                                                              SimpleImputer(fill_value='missing',
                                                                                                            strategy='constant')),
                                                                                             ('onehot',
                                                                                              OneHotEncoder(handle_unknown='ignore'))]),
                                                                             ['state',
                                                                              'gender']),
                                                                            ('numerical',
                                                                             Pipeline(steps=[('imputation_mean',
                                                                                              SimpleImputer()),
                                                                                             ('scaler',
                                                                                              StandardScaler())]),
                                                                             ['age',
                                                                              'weight'])])),
                                           ('classifier',
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={'classifier__criterion': ['gini', 'entropy'],
                             'classifier__max_depth': [4, 5, 6, 7, 8],
                             'classifier__max_features': ['auto', 'sqrt', 'log2'],
                             'classifier__n_estimators': [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="feeae2c3-76bd-41a2-9586-f33df8ed96a7" type="checkbox" ><label class="sk-toggleable__label" for="feeae2c3-76bd-41a2-9586-f33df8ed96a7">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('categorical',
                                     Pipeline(steps=[('imputation_constant',
                                                      SimpleImputer(fill_value='missing',
                                                                    strategy='constant')),
                                                     ('onehot',
                                                      OneHotEncoder(handle_unknown='ignore'))]),
                                     ['state', 'gender']),
                                    ('numerical',
                                     Pipeline(steps=[('imputation_mean',
                                                      SimpleImputer()),
                                                     ('scaler', StandardScaler())]),
                                     ['age', 'weight'])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="548c40f4-0880-42e9-9314-f9652479fdc8" type="checkbox" ><label class="sk-toggleable__label" for="548c40f4-0880-42e9-9314-f9652479fdc8">categorical</label><div class="sk-toggleable__content"><pre>['state', 'gender']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="be8de2e2-5b36-406f-af52-aff79e87a355" type="checkbox" ><label class="sk-toggleable__label" for="be8de2e2-5b36-406f-af52-aff79e87a355">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value='missing', strategy='constant')</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b0838ba6-fe23-494a-a20e-3dfc0169d567" type="checkbox" ><label class="sk-toggleable__label" for="b0838ba6-fe23-494a-a20e-3dfc0169d567">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown='ignore')</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="20a70559-aeb4-40d5-985b-a30fa7f65d4a" type="checkbox" ><label class="sk-toggleable__label" for="20a70559-aeb4-40d5-985b-a30fa7f65d4a">numerical</label><div class="sk-toggleable__content"><pre>['age', 'weight']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1fab9ea1-cf1a-4025-b78d-7286b5e5a274" type="checkbox" ><label class="sk-toggleable__label" for="1fab9ea1-cf1a-4025-b78d-7286b5e5a274">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ab217428-2d89-4c74-81c5-2d4c14292229" type="checkbox" ><label class="sk-toggleable__label" for="ab217428-2d89-4c74-81c5-2d4c14292229">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e38db276-e9b9-4135-a128-dfc5e2b104d3" type="checkbox" ><label class="sk-toggleable__label" for="e38db276-e9b9-4135-a128-dfc5e2b104d3">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.081 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
