
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-0898dd41-9144-4001-8385-ec2d5e32ab91 {color: black;background-color: white;}#sk-0898dd41-9144-4001-8385-ec2d5e32ab91 pre{padding: 0;}#sk-0898dd41-9144-4001-8385-ec2d5e32ab91 div.sk-toggleable {background-color: white;}#sk-0898dd41-9144-4001-8385-ec2d5e32ab91 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-0898dd41-9144-4001-8385-ec2d5e32ab91 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-0898dd41-9144-4001-8385-ec2d5e32ab91 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-0898dd41-9144-4001-8385-ec2d5e32ab91 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-0898dd41-9144-4001-8385-ec2d5e32ab91 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-0898dd41-9144-4001-8385-ec2d5e32ab91 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-0898dd41-9144-4001-8385-ec2d5e32ab91 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-0898dd41-9144-4001-8385-ec2d5e32ab91 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-0898dd41-9144-4001-8385-ec2d5e32ab91 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-0898dd41-9144-4001-8385-ec2d5e32ab91 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-0898dd41-9144-4001-8385-ec2d5e32ab91 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-0898dd41-9144-4001-8385-ec2d5e32ab91 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-0898dd41-9144-4001-8385-ec2d5e32ab91 div.sk-estimator:hover {background-color: #d4ebff;}#sk-0898dd41-9144-4001-8385-ec2d5e32ab91 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-0898dd41-9144-4001-8385-ec2d5e32ab91 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-0898dd41-9144-4001-8385-ec2d5e32ab91 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-0898dd41-9144-4001-8385-ec2d5e32ab91 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-0898dd41-9144-4001-8385-ec2d5e32ab91 div.sk-item {z-index: 1;}#sk-0898dd41-9144-4001-8385-ec2d5e32ab91 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-0898dd41-9144-4001-8385-ec2d5e32ab91 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-0898dd41-9144-4001-8385-ec2d5e32ab91 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-0898dd41-9144-4001-8385-ec2d5e32ab91 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-0898dd41-9144-4001-8385-ec2d5e32ab91 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-0898dd41-9144-4001-8385-ec2d5e32ab91 div.sk-parallel-item:only-child::after {width: 0;}#sk-0898dd41-9144-4001-8385-ec2d5e32ab91 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-0898dd41-9144-4001-8385-ec2d5e32ab91 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-0898dd41-9144-4001-8385-ec2d5e32ab91 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-0898dd41-9144-4001-8385-ec2d5e32ab91 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-0898dd41-9144-4001-8385-ec2d5e32ab91 div.sk-text-repr-fallback {display: none;}</style><div id="sk-0898dd41-9144-4001-8385-ec2d5e32ab91" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c48c293e-8991-4d6c-8c1c-0ecbedca640b" type="checkbox" ><label for="c48c293e-8991-4d6c-8c1c-0ecbedca640b" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="78605994-7cb7-43ea-b997-80f1d63610c9" type="checkbox" ><label for="78605994-7cb7-43ea-b997-80f1d63610c9" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="99d2d6fc-0eb2-4d64-aabd-f70c70ed5a54" type="checkbox" ><label for="99d2d6fc-0eb2-4d64-aabd-f70c70ed5a54" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-bfe1a6a4-0e87-48c4-9541-7ea3714034d7 {color: black;background-color: white;}#sk-bfe1a6a4-0e87-48c4-9541-7ea3714034d7 pre{padding: 0;}#sk-bfe1a6a4-0e87-48c4-9541-7ea3714034d7 div.sk-toggleable {background-color: white;}#sk-bfe1a6a4-0e87-48c4-9541-7ea3714034d7 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-bfe1a6a4-0e87-48c4-9541-7ea3714034d7 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-bfe1a6a4-0e87-48c4-9541-7ea3714034d7 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-bfe1a6a4-0e87-48c4-9541-7ea3714034d7 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-bfe1a6a4-0e87-48c4-9541-7ea3714034d7 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-bfe1a6a4-0e87-48c4-9541-7ea3714034d7 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-bfe1a6a4-0e87-48c4-9541-7ea3714034d7 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-bfe1a6a4-0e87-48c4-9541-7ea3714034d7 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-bfe1a6a4-0e87-48c4-9541-7ea3714034d7 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-bfe1a6a4-0e87-48c4-9541-7ea3714034d7 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-bfe1a6a4-0e87-48c4-9541-7ea3714034d7 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-bfe1a6a4-0e87-48c4-9541-7ea3714034d7 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-bfe1a6a4-0e87-48c4-9541-7ea3714034d7 div.sk-estimator:hover {background-color: #d4ebff;}#sk-bfe1a6a4-0e87-48c4-9541-7ea3714034d7 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-bfe1a6a4-0e87-48c4-9541-7ea3714034d7 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-bfe1a6a4-0e87-48c4-9541-7ea3714034d7 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-bfe1a6a4-0e87-48c4-9541-7ea3714034d7 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-bfe1a6a4-0e87-48c4-9541-7ea3714034d7 div.sk-item {z-index: 1;}#sk-bfe1a6a4-0e87-48c4-9541-7ea3714034d7 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-bfe1a6a4-0e87-48c4-9541-7ea3714034d7 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-bfe1a6a4-0e87-48c4-9541-7ea3714034d7 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-bfe1a6a4-0e87-48c4-9541-7ea3714034d7 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-bfe1a6a4-0e87-48c4-9541-7ea3714034d7 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-bfe1a6a4-0e87-48c4-9541-7ea3714034d7 div.sk-parallel-item:only-child::after {width: 0;}#sk-bfe1a6a4-0e87-48c4-9541-7ea3714034d7 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-bfe1a6a4-0e87-48c4-9541-7ea3714034d7 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-bfe1a6a4-0e87-48c4-9541-7ea3714034d7 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-bfe1a6a4-0e87-48c4-9541-7ea3714034d7 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-bfe1a6a4-0e87-48c4-9541-7ea3714034d7 div.sk-text-repr-fallback {display: none;}</style><div id="sk-bfe1a6a4-0e87-48c4-9541-7ea3714034d7" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="078d1d2b-a2b9-432d-b7bb-4a98f9620573" type="checkbox" ><label for="078d1d2b-a2b9-432d-b7bb-4a98f9620573" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f5f1249d-802f-478a-8ee2-48579e832999" type="checkbox" ><label for="f5f1249d-802f-478a-8ee2-48579e832999" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c54e3238-30d0-4fac-a4bc-8f4727309b2b" type="checkbox" ><label for="c54e3238-30d0-4fac-a4bc-8f4727309b2b" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7035c549-62f1-42a2-a957-27eb1bbfe298" type="checkbox" ><label for="7035c549-62f1-42a2-a957-27eb1bbfe298" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-7c3537d5-2d24-46c6-abca-8d289c310407 {color: black;background-color: white;}#sk-7c3537d5-2d24-46c6-abca-8d289c310407 pre{padding: 0;}#sk-7c3537d5-2d24-46c6-abca-8d289c310407 div.sk-toggleable {background-color: white;}#sk-7c3537d5-2d24-46c6-abca-8d289c310407 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-7c3537d5-2d24-46c6-abca-8d289c310407 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-7c3537d5-2d24-46c6-abca-8d289c310407 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-7c3537d5-2d24-46c6-abca-8d289c310407 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-7c3537d5-2d24-46c6-abca-8d289c310407 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-7c3537d5-2d24-46c6-abca-8d289c310407 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-7c3537d5-2d24-46c6-abca-8d289c310407 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-7c3537d5-2d24-46c6-abca-8d289c310407 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-7c3537d5-2d24-46c6-abca-8d289c310407 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-7c3537d5-2d24-46c6-abca-8d289c310407 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-7c3537d5-2d24-46c6-abca-8d289c310407 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-7c3537d5-2d24-46c6-abca-8d289c310407 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-7c3537d5-2d24-46c6-abca-8d289c310407 div.sk-estimator:hover {background-color: #d4ebff;}#sk-7c3537d5-2d24-46c6-abca-8d289c310407 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-7c3537d5-2d24-46c6-abca-8d289c310407 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-7c3537d5-2d24-46c6-abca-8d289c310407 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-7c3537d5-2d24-46c6-abca-8d289c310407 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-7c3537d5-2d24-46c6-abca-8d289c310407 div.sk-item {z-index: 1;}#sk-7c3537d5-2d24-46c6-abca-8d289c310407 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-7c3537d5-2d24-46c6-abca-8d289c310407 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-7c3537d5-2d24-46c6-abca-8d289c310407 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-7c3537d5-2d24-46c6-abca-8d289c310407 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-7c3537d5-2d24-46c6-abca-8d289c310407 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-7c3537d5-2d24-46c6-abca-8d289c310407 div.sk-parallel-item:only-child::after {width: 0;}#sk-7c3537d5-2d24-46c6-abca-8d289c310407 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-7c3537d5-2d24-46c6-abca-8d289c310407 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-7c3537d5-2d24-46c6-abca-8d289c310407 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-7c3537d5-2d24-46c6-abca-8d289c310407 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-7c3537d5-2d24-46c6-abca-8d289c310407 div.sk-text-repr-fallback {display: none;}</style><div id="sk-7c3537d5-2d24-46c6-abca-8d289c310407" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="522821b3-c79f-4c14-a79b-053449eaa8d8" type="checkbox" ><label for="522821b3-c79f-4c14-a79b-053449eaa8d8" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d5e4962f-652f-4ff5-923f-1c6b191be5c3" type="checkbox" ><label for="d5e4962f-652f-4ff5-923f-1c6b191be5c3" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f51fc2ff-d40a-4090-8a73-20415b88abff" type="checkbox" ><label for="f51fc2ff-d40a-4090-8a73-20415b88abff" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-9b75a27f-cc32-44b1-8dfb-05d9799a5bcd {color: black;background-color: white;}#sk-9b75a27f-cc32-44b1-8dfb-05d9799a5bcd pre{padding: 0;}#sk-9b75a27f-cc32-44b1-8dfb-05d9799a5bcd div.sk-toggleable {background-color: white;}#sk-9b75a27f-cc32-44b1-8dfb-05d9799a5bcd label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-9b75a27f-cc32-44b1-8dfb-05d9799a5bcd label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-9b75a27f-cc32-44b1-8dfb-05d9799a5bcd label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-9b75a27f-cc32-44b1-8dfb-05d9799a5bcd div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-9b75a27f-cc32-44b1-8dfb-05d9799a5bcd div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-9b75a27f-cc32-44b1-8dfb-05d9799a5bcd div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-9b75a27f-cc32-44b1-8dfb-05d9799a5bcd input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-9b75a27f-cc32-44b1-8dfb-05d9799a5bcd input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-9b75a27f-cc32-44b1-8dfb-05d9799a5bcd div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-9b75a27f-cc32-44b1-8dfb-05d9799a5bcd div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-9b75a27f-cc32-44b1-8dfb-05d9799a5bcd input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-9b75a27f-cc32-44b1-8dfb-05d9799a5bcd div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-9b75a27f-cc32-44b1-8dfb-05d9799a5bcd div.sk-estimator:hover {background-color: #d4ebff;}#sk-9b75a27f-cc32-44b1-8dfb-05d9799a5bcd div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-9b75a27f-cc32-44b1-8dfb-05d9799a5bcd div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-9b75a27f-cc32-44b1-8dfb-05d9799a5bcd div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-9b75a27f-cc32-44b1-8dfb-05d9799a5bcd div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-9b75a27f-cc32-44b1-8dfb-05d9799a5bcd div.sk-item {z-index: 1;}#sk-9b75a27f-cc32-44b1-8dfb-05d9799a5bcd div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-9b75a27f-cc32-44b1-8dfb-05d9799a5bcd div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-9b75a27f-cc32-44b1-8dfb-05d9799a5bcd div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-9b75a27f-cc32-44b1-8dfb-05d9799a5bcd div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-9b75a27f-cc32-44b1-8dfb-05d9799a5bcd div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-9b75a27f-cc32-44b1-8dfb-05d9799a5bcd div.sk-parallel-item:only-child::after {width: 0;}#sk-9b75a27f-cc32-44b1-8dfb-05d9799a5bcd div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-9b75a27f-cc32-44b1-8dfb-05d9799a5bcd div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-9b75a27f-cc32-44b1-8dfb-05d9799a5bcd div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-9b75a27f-cc32-44b1-8dfb-05d9799a5bcd div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-9b75a27f-cc32-44b1-8dfb-05d9799a5bcd div.sk-text-repr-fallback {display: none;}</style><div id="sk-9b75a27f-cc32-44b1-8dfb-05d9799a5bcd" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1316dae7-95da-40b7-bd77-6b02b2d109b1" type="checkbox" ><label for="1316dae7-95da-40b7-bd77-6b02b2d109b1" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1252415b-413d-4b0f-8ba3-3f683d2f9fa9" type="checkbox" ><label for="1252415b-413d-4b0f-8ba3-3f683d2f9fa9" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8b33c702-ded8-461b-b725-daf5fa6bde46" type="checkbox" ><label for="8b33c702-ded8-461b-b725-daf5fa6bde46" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4cdc5077-45bf-4c33-bfb9-835cbb0d2167" type="checkbox" ><label for="4cdc5077-45bf-4c33-bfb9-835cbb0d2167" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cc56ff26-2861-478c-8fd5-091c0f4042b6" type="checkbox" ><label for="cc56ff26-2861-478c-8fd5-091c0f4042b6" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="81e9bd7f-ea9e-4b19-86b4-62047e746bc9" type="checkbox" ><label for="81e9bd7f-ea9e-4b19-86b4-62047e746bc9" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="70aed595-693d-43c9-8acd-c1e22585609e" type="checkbox" ><label for="70aed595-693d-43c9-8acd-c1e22585609e" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4a4257f5-59a9-4096-ba07-3e5888bc02b7" type="checkbox" ><label for="4a4257f5-59a9-4096-ba07-3e5888bc02b7" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="97ec2312-e905-48f4-aa3b-0b2a9ba15055" type="checkbox" ><label for="97ec2312-e905-48f4-aa3b-0b2a9ba15055" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-bf3c7c6e-1924-4442-b5ba-cd4a14d653bf {color: black;background-color: white;}#sk-bf3c7c6e-1924-4442-b5ba-cd4a14d653bf pre{padding: 0;}#sk-bf3c7c6e-1924-4442-b5ba-cd4a14d653bf div.sk-toggleable {background-color: white;}#sk-bf3c7c6e-1924-4442-b5ba-cd4a14d653bf label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-bf3c7c6e-1924-4442-b5ba-cd4a14d653bf label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-bf3c7c6e-1924-4442-b5ba-cd4a14d653bf label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-bf3c7c6e-1924-4442-b5ba-cd4a14d653bf div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-bf3c7c6e-1924-4442-b5ba-cd4a14d653bf div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-bf3c7c6e-1924-4442-b5ba-cd4a14d653bf div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-bf3c7c6e-1924-4442-b5ba-cd4a14d653bf input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-bf3c7c6e-1924-4442-b5ba-cd4a14d653bf input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-bf3c7c6e-1924-4442-b5ba-cd4a14d653bf div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-bf3c7c6e-1924-4442-b5ba-cd4a14d653bf div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-bf3c7c6e-1924-4442-b5ba-cd4a14d653bf input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-bf3c7c6e-1924-4442-b5ba-cd4a14d653bf div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-bf3c7c6e-1924-4442-b5ba-cd4a14d653bf div.sk-estimator:hover {background-color: #d4ebff;}#sk-bf3c7c6e-1924-4442-b5ba-cd4a14d653bf div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-bf3c7c6e-1924-4442-b5ba-cd4a14d653bf div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-bf3c7c6e-1924-4442-b5ba-cd4a14d653bf div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-bf3c7c6e-1924-4442-b5ba-cd4a14d653bf div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-bf3c7c6e-1924-4442-b5ba-cd4a14d653bf div.sk-item {z-index: 1;}#sk-bf3c7c6e-1924-4442-b5ba-cd4a14d653bf div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-bf3c7c6e-1924-4442-b5ba-cd4a14d653bf div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-bf3c7c6e-1924-4442-b5ba-cd4a14d653bf div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-bf3c7c6e-1924-4442-b5ba-cd4a14d653bf div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-bf3c7c6e-1924-4442-b5ba-cd4a14d653bf div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-bf3c7c6e-1924-4442-b5ba-cd4a14d653bf div.sk-parallel-item:only-child::after {width: 0;}#sk-bf3c7c6e-1924-4442-b5ba-cd4a14d653bf div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-bf3c7c6e-1924-4442-b5ba-cd4a14d653bf div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-bf3c7c6e-1924-4442-b5ba-cd4a14d653bf div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-bf3c7c6e-1924-4442-b5ba-cd4a14d653bf div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-bf3c7c6e-1924-4442-b5ba-cd4a14d653bf div.sk-text-repr-fallback {display: none;}</style><div id="sk-bf3c7c6e-1924-4442-b5ba-cd4a14d653bf" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="63bd6216-2432-42e1-b548-7133adae78c1" type="checkbox" ><label for="63bd6216-2432-42e1-b548-7133adae78c1" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2dddc7a7-9082-460f-8a25-4d2c6f9fff0b" type="checkbox" ><label for="2dddc7a7-9082-460f-8a25-4d2c6f9fff0b" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="413693e7-b2e0-45bd-8933-d3a07da70b7b" type="checkbox" ><label for="413693e7-b2e0-45bd-8933-d3a07da70b7b" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2c329248-749a-4fc0-a93f-952f9d6d70ed" type="checkbox" ><label for="2c329248-749a-4fc0-a93f-952f9d6d70ed" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f85c7d64-bd06-409a-a2b5-a2becb0832e2" type="checkbox" ><label for="f85c7d64-bd06-409a-a2b5-a2becb0832e2" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c7144fb5-113c-4b0c-a6b3-11d01bb8cdca" type="checkbox" ><label for="c7144fb5-113c-4b0c-a6b3-11d01bb8cdca" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d2464f1f-dcd4-4208-8ab6-b4ea17581fe4" type="checkbox" ><label for="d2464f1f-dcd4-4208-8ab6-b4ea17581fe4" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="486b19f5-c8fe-40c9-91d5-1391953111e4" type="checkbox" ><label for="486b19f5-c8fe-40c9-91d5-1391953111e4" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="20a49354-acd6-4f83-b6f9-2c8dde2174f4" type="checkbox" ><label for="20a49354-acd6-4f83-b6f9-2c8dde2174f4" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.074 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
