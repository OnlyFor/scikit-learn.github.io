
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-453b08c4-e396-41ab-a387-184f9383a4bd {color: black;background-color: white;}#sk-453b08c4-e396-41ab-a387-184f9383a4bd pre{padding: 0;}#sk-453b08c4-e396-41ab-a387-184f9383a4bd div.sk-toggleable {background-color: white;}#sk-453b08c4-e396-41ab-a387-184f9383a4bd label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-453b08c4-e396-41ab-a387-184f9383a4bd div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-453b08c4-e396-41ab-a387-184f9383a4bd div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-453b08c4-e396-41ab-a387-184f9383a4bd input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-453b08c4-e396-41ab-a387-184f9383a4bd div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-453b08c4-e396-41ab-a387-184f9383a4bd div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-453b08c4-e396-41ab-a387-184f9383a4bd input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-453b08c4-e396-41ab-a387-184f9383a4bd div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-453b08c4-e396-41ab-a387-184f9383a4bd div.sk-estimator:hover {background-color: #d4ebff;}#sk-453b08c4-e396-41ab-a387-184f9383a4bd div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-453b08c4-e396-41ab-a387-184f9383a4bd div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-453b08c4-e396-41ab-a387-184f9383a4bd div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-453b08c4-e396-41ab-a387-184f9383a4bd div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-453b08c4-e396-41ab-a387-184f9383a4bd div.sk-item {z-index: 1;}#sk-453b08c4-e396-41ab-a387-184f9383a4bd div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-453b08c4-e396-41ab-a387-184f9383a4bd div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-453b08c4-e396-41ab-a387-184f9383a4bd div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-453b08c4-e396-41ab-a387-184f9383a4bd div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-453b08c4-e396-41ab-a387-184f9383a4bd div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-453b08c4-e396-41ab-a387-184f9383a4bd div.sk-parallel-item:only-child::after {width: 0;}#sk-453b08c4-e396-41ab-a387-184f9383a4bd div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-453b08c4-e396-41ab-a387-184f9383a4bd div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-453b08c4-e396-41ab-a387-184f9383a4bd div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-453b08c4-e396-41ab-a387-184f9383a4bd div.sk-container {display: inline-block;position: relative;}#sk-453b08c4-e396-41ab-a387-184f9383a4bd div.sk-text-repr-fallback {display: none;}</style><div id="sk-453b08c4-e396-41ab-a387-184f9383a4bd" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a0511fdd-2913-4418-a15d-d2b10cbdb6ab" type="checkbox" ><label class="sk-toggleable__label" for="a0511fdd-2913-4418-a15d-d2b10cbdb6ab">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9f00eb36-d7b1-42a1-9ab4-62a466b93bc3" type="checkbox" ><label class="sk-toggleable__label" for="9f00eb36-d7b1-42a1-9ab4-62a466b93bc3">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bc139904-87f9-416f-81b5-70da1aa6e553" type="checkbox" ><label class="sk-toggleable__label" for="bc139904-87f9-416f-81b5-70da1aa6e553">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-68a991cc-2904-4504-afae-ffb5cf645874 {color: black;background-color: white;}#sk-68a991cc-2904-4504-afae-ffb5cf645874 pre{padding: 0;}#sk-68a991cc-2904-4504-afae-ffb5cf645874 div.sk-toggleable {background-color: white;}#sk-68a991cc-2904-4504-afae-ffb5cf645874 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-68a991cc-2904-4504-afae-ffb5cf645874 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-68a991cc-2904-4504-afae-ffb5cf645874 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-68a991cc-2904-4504-afae-ffb5cf645874 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-68a991cc-2904-4504-afae-ffb5cf645874 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-68a991cc-2904-4504-afae-ffb5cf645874 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-68a991cc-2904-4504-afae-ffb5cf645874 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-68a991cc-2904-4504-afae-ffb5cf645874 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-68a991cc-2904-4504-afae-ffb5cf645874 div.sk-estimator:hover {background-color: #d4ebff;}#sk-68a991cc-2904-4504-afae-ffb5cf645874 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-68a991cc-2904-4504-afae-ffb5cf645874 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-68a991cc-2904-4504-afae-ffb5cf645874 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-68a991cc-2904-4504-afae-ffb5cf645874 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-68a991cc-2904-4504-afae-ffb5cf645874 div.sk-item {z-index: 1;}#sk-68a991cc-2904-4504-afae-ffb5cf645874 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-68a991cc-2904-4504-afae-ffb5cf645874 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-68a991cc-2904-4504-afae-ffb5cf645874 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-68a991cc-2904-4504-afae-ffb5cf645874 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-68a991cc-2904-4504-afae-ffb5cf645874 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-68a991cc-2904-4504-afae-ffb5cf645874 div.sk-parallel-item:only-child::after {width: 0;}#sk-68a991cc-2904-4504-afae-ffb5cf645874 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-68a991cc-2904-4504-afae-ffb5cf645874 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-68a991cc-2904-4504-afae-ffb5cf645874 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-68a991cc-2904-4504-afae-ffb5cf645874 div.sk-container {display: inline-block;position: relative;}#sk-68a991cc-2904-4504-afae-ffb5cf645874 div.sk-text-repr-fallback {display: none;}</style><div id="sk-68a991cc-2904-4504-afae-ffb5cf645874" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1718e2c6-b89d-4a81-a253-08a4fe03a5eb" type="checkbox" ><label class="sk-toggleable__label" for="1718e2c6-b89d-4a81-a253-08a4fe03a5eb">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('standard_scaler', StandardScaler()),
                    ('polynomial', PolynomialFeatures(degree=3)),
                    ('classifier', LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0a6be44a-43e8-4f34-a1cc-af14d44319a1" type="checkbox" ><label class="sk-toggleable__label" for="0a6be44a-43e8-4f34-a1cc-af14d44319a1">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4d68681a-eae9-4f06-bab0-4b6681a5464d" type="checkbox" ><label class="sk-toggleable__label" for="4d68681a-eae9-4f06-bab0-4b6681a5464d">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="07e0c5eb-b562-45be-8dd9-97e985e4192a" type="checkbox" ><label class="sk-toggleable__label" for="07e0c5eb-b562-45be-8dd9-97e985e4192a">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-13534fbb-410b-438e-b202-78ecadfd0715 {color: black;background-color: white;}#sk-13534fbb-410b-438e-b202-78ecadfd0715 pre{padding: 0;}#sk-13534fbb-410b-438e-b202-78ecadfd0715 div.sk-toggleable {background-color: white;}#sk-13534fbb-410b-438e-b202-78ecadfd0715 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-13534fbb-410b-438e-b202-78ecadfd0715 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-13534fbb-410b-438e-b202-78ecadfd0715 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-13534fbb-410b-438e-b202-78ecadfd0715 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-13534fbb-410b-438e-b202-78ecadfd0715 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-13534fbb-410b-438e-b202-78ecadfd0715 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-13534fbb-410b-438e-b202-78ecadfd0715 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-13534fbb-410b-438e-b202-78ecadfd0715 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-13534fbb-410b-438e-b202-78ecadfd0715 div.sk-estimator:hover {background-color: #d4ebff;}#sk-13534fbb-410b-438e-b202-78ecadfd0715 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-13534fbb-410b-438e-b202-78ecadfd0715 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-13534fbb-410b-438e-b202-78ecadfd0715 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-13534fbb-410b-438e-b202-78ecadfd0715 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-13534fbb-410b-438e-b202-78ecadfd0715 div.sk-item {z-index: 1;}#sk-13534fbb-410b-438e-b202-78ecadfd0715 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-13534fbb-410b-438e-b202-78ecadfd0715 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-13534fbb-410b-438e-b202-78ecadfd0715 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-13534fbb-410b-438e-b202-78ecadfd0715 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-13534fbb-410b-438e-b202-78ecadfd0715 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-13534fbb-410b-438e-b202-78ecadfd0715 div.sk-parallel-item:only-child::after {width: 0;}#sk-13534fbb-410b-438e-b202-78ecadfd0715 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-13534fbb-410b-438e-b202-78ecadfd0715 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-13534fbb-410b-438e-b202-78ecadfd0715 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-13534fbb-410b-438e-b202-78ecadfd0715 div.sk-container {display: inline-block;position: relative;}#sk-13534fbb-410b-438e-b202-78ecadfd0715 div.sk-text-repr-fallback {display: none;}</style><div id="sk-13534fbb-410b-438e-b202-78ecadfd0715" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8463e507-6e5a-455b-b985-f0096e779184" type="checkbox" ><label class="sk-toggleable__label" for="8463e507-6e5a-455b-b985-f0096e779184">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('reduce_dim', PCA(n_components=4)),
                    ('classifier', SVC(kernel='linear'))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f5153f7a-f25a-45c3-a236-f96b7b4d5905" type="checkbox" ><label class="sk-toggleable__label" for="f5153f7a-f25a-45c3-a236-f96b7b4d5905">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a6afa489-ed75-4b78-9d0d-3f64df1a1236" type="checkbox" ><label class="sk-toggleable__label" for="a6afa489-ed75-4b78-9d0d-3f64df1a1236">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel='linear')</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-7d634bf0-cd1f-4da1-a2a8-62716aa49e12 {color: black;background-color: white;}#sk-7d634bf0-cd1f-4da1-a2a8-62716aa49e12 pre{padding: 0;}#sk-7d634bf0-cd1f-4da1-a2a8-62716aa49e12 div.sk-toggleable {background-color: white;}#sk-7d634bf0-cd1f-4da1-a2a8-62716aa49e12 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-7d634bf0-cd1f-4da1-a2a8-62716aa49e12 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-7d634bf0-cd1f-4da1-a2a8-62716aa49e12 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-7d634bf0-cd1f-4da1-a2a8-62716aa49e12 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-7d634bf0-cd1f-4da1-a2a8-62716aa49e12 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-7d634bf0-cd1f-4da1-a2a8-62716aa49e12 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-7d634bf0-cd1f-4da1-a2a8-62716aa49e12 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-7d634bf0-cd1f-4da1-a2a8-62716aa49e12 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-7d634bf0-cd1f-4da1-a2a8-62716aa49e12 div.sk-estimator:hover {background-color: #d4ebff;}#sk-7d634bf0-cd1f-4da1-a2a8-62716aa49e12 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-7d634bf0-cd1f-4da1-a2a8-62716aa49e12 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-7d634bf0-cd1f-4da1-a2a8-62716aa49e12 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-7d634bf0-cd1f-4da1-a2a8-62716aa49e12 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-7d634bf0-cd1f-4da1-a2a8-62716aa49e12 div.sk-item {z-index: 1;}#sk-7d634bf0-cd1f-4da1-a2a8-62716aa49e12 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-7d634bf0-cd1f-4da1-a2a8-62716aa49e12 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-7d634bf0-cd1f-4da1-a2a8-62716aa49e12 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-7d634bf0-cd1f-4da1-a2a8-62716aa49e12 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-7d634bf0-cd1f-4da1-a2a8-62716aa49e12 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-7d634bf0-cd1f-4da1-a2a8-62716aa49e12 div.sk-parallel-item:only-child::after {width: 0;}#sk-7d634bf0-cd1f-4da1-a2a8-62716aa49e12 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-7d634bf0-cd1f-4da1-a2a8-62716aa49e12 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-7d634bf0-cd1f-4da1-a2a8-62716aa49e12 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-7d634bf0-cd1f-4da1-a2a8-62716aa49e12 div.sk-container {display: inline-block;position: relative;}#sk-7d634bf0-cd1f-4da1-a2a8-62716aa49e12 div.sk-text-repr-fallback {display: none;}</style><div id="sk-7d634bf0-cd1f-4da1-a2a8-62716aa49e12" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0a2ba239-f6cd-461d-9061-e8b5e9c14b74" type="checkbox" ><label class="sk-toggleable__label" for="0a2ba239-f6cd-461d-9061-e8b5e9c14b74">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('columntransformer',
                     ColumnTransformer(transformers=[('categorical',
                                                      Pipeline(steps=[('imputation_constant',
                                                                       SimpleImputer(fill_value='missing',
                                                                                     strategy='constant')),
                                                                      ('onehot',
                                                                       OneHotEncoder(handle_unknown='ignore'))]),
                                                      ['state', 'gender']),
                                                     ('numerical',
                                                      Pipeline(steps=[('imputation_mean',
                                                                       SimpleImputer()),
                                                                      ('scaler',
                                                                       StandardScaler())]),
                                                      ['age', 'weight'])])),
                    ('logisticregression', LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="47c346a3-52fb-4c7d-83a4-f84d1015c946" type="checkbox" ><label class="sk-toggleable__label" for="47c346a3-52fb-4c7d-83a4-f84d1015c946">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('categorical',
                                     Pipeline(steps=[('imputation_constant',
                                                      SimpleImputer(fill_value='missing',
                                                                    strategy='constant')),
                                                     ('onehot',
                                                      OneHotEncoder(handle_unknown='ignore'))]),
                                     ['state', 'gender']),
                                    ('numerical',
                                     Pipeline(steps=[('imputation_mean',
                                                      SimpleImputer()),
                                                     ('scaler', StandardScaler())]),
                                     ['age', 'weight'])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="be758734-2736-4eba-aecf-86eaa5856f28" type="checkbox" ><label class="sk-toggleable__label" for="be758734-2736-4eba-aecf-86eaa5856f28">categorical</label><div class="sk-toggleable__content"><pre>['state', 'gender']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="821f82ea-446e-4179-8041-8436e1220f94" type="checkbox" ><label class="sk-toggleable__label" for="821f82ea-446e-4179-8041-8436e1220f94">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value='missing', strategy='constant')</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="930f0f68-ecb8-478e-b046-8ebaf15cd64b" type="checkbox" ><label class="sk-toggleable__label" for="930f0f68-ecb8-478e-b046-8ebaf15cd64b">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown='ignore')</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="721beb56-c1e2-4682-84a1-0935c5344b47" type="checkbox" ><label class="sk-toggleable__label" for="721beb56-c1e2-4682-84a1-0935c5344b47">numerical</label><div class="sk-toggleable__content"><pre>['age', 'weight']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6b789800-7518-4c1e-8aeb-d83fd6e63d40" type="checkbox" ><label class="sk-toggleable__label" for="6b789800-7518-4c1e-8aeb-d83fd6e63d40">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0e672f23-90fe-45f7-a7de-aafbb4f2f005" type="checkbox" ><label class="sk-toggleable__label" for="0e672f23-90fe-45f7-a7de-aafbb4f2f005">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="628d4b5e-14ea-4f9c-809a-313c00ca2cfc" type="checkbox" ><label class="sk-toggleable__label" for="628d4b5e-14ea-4f9c-809a-313c00ca2cfc">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-78d29ef2-78aa-474b-a976-ce9c32b369be {color: black;background-color: white;}#sk-78d29ef2-78aa-474b-a976-ce9c32b369be pre{padding: 0;}#sk-78d29ef2-78aa-474b-a976-ce9c32b369be div.sk-toggleable {background-color: white;}#sk-78d29ef2-78aa-474b-a976-ce9c32b369be label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-78d29ef2-78aa-474b-a976-ce9c32b369be div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-78d29ef2-78aa-474b-a976-ce9c32b369be div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-78d29ef2-78aa-474b-a976-ce9c32b369be input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-78d29ef2-78aa-474b-a976-ce9c32b369be div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-78d29ef2-78aa-474b-a976-ce9c32b369be div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-78d29ef2-78aa-474b-a976-ce9c32b369be input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-78d29ef2-78aa-474b-a976-ce9c32b369be div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-78d29ef2-78aa-474b-a976-ce9c32b369be div.sk-estimator:hover {background-color: #d4ebff;}#sk-78d29ef2-78aa-474b-a976-ce9c32b369be div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-78d29ef2-78aa-474b-a976-ce9c32b369be div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-78d29ef2-78aa-474b-a976-ce9c32b369be div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-78d29ef2-78aa-474b-a976-ce9c32b369be div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-78d29ef2-78aa-474b-a976-ce9c32b369be div.sk-item {z-index: 1;}#sk-78d29ef2-78aa-474b-a976-ce9c32b369be div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-78d29ef2-78aa-474b-a976-ce9c32b369be div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-78d29ef2-78aa-474b-a976-ce9c32b369be div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-78d29ef2-78aa-474b-a976-ce9c32b369be div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-78d29ef2-78aa-474b-a976-ce9c32b369be div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-78d29ef2-78aa-474b-a976-ce9c32b369be div.sk-parallel-item:only-child::after {width: 0;}#sk-78d29ef2-78aa-474b-a976-ce9c32b369be div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-78d29ef2-78aa-474b-a976-ce9c32b369be div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-78d29ef2-78aa-474b-a976-ce9c32b369be div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-78d29ef2-78aa-474b-a976-ce9c32b369be div.sk-container {display: inline-block;position: relative;}#sk-78d29ef2-78aa-474b-a976-ce9c32b369be div.sk-text-repr-fallback {display: none;}</style><div id="sk-78d29ef2-78aa-474b-a976-ce9c32b369be" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f3cf3123-548e-4dee-bec3-c30123e641ac" type="checkbox" ><label class="sk-toggleable__label" for="f3cf3123-548e-4dee-bec3-c30123e641ac">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[('preprocessor',
                                            ColumnTransformer(transformers=[('categorical',
                                                                             Pipeline(steps=[('imputation_constant',
                                                                                              SimpleImputer(fill_value='missing',
                                                                                                            strategy='constant')),
                                                                                             ('onehot',
                                                                                              OneHotEncoder(handle_unknown='ignore'))]),
                                                                             ['state',
                                                                              'gender']),
                                                                            ('numerical',
                                                                             Pipeline(steps=[('imputation_mean',
                                                                                              SimpleImputer()),
                                                                                             ('scaler',
                                                                                              StandardScaler())]),
                                                                             ['age',
                                                                              'weight'])])),
                                           ('classifier',
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={'classifier__criterion': ['gini', 'entropy'],
                             'classifier__max_depth': [4, 5, 6, 7, 8],
                             'classifier__max_features': ['auto', 'sqrt', 'log2'],
                             'classifier__n_estimators': [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8110b918-ff09-4f8e-9c29-de5063504b92" type="checkbox" ><label class="sk-toggleable__label" for="8110b918-ff09-4f8e-9c29-de5063504b92">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('categorical',
                                     Pipeline(steps=[('imputation_constant',
                                                      SimpleImputer(fill_value='missing',
                                                                    strategy='constant')),
                                                     ('onehot',
                                                      OneHotEncoder(handle_unknown='ignore'))]),
                                     ['state', 'gender']),
                                    ('numerical',
                                     Pipeline(steps=[('imputation_mean',
                                                      SimpleImputer()),
                                                     ('scaler', StandardScaler())]),
                                     ['age', 'weight'])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7646840f-bf7e-4fdb-9145-f29bef02eccc" type="checkbox" ><label class="sk-toggleable__label" for="7646840f-bf7e-4fdb-9145-f29bef02eccc">categorical</label><div class="sk-toggleable__content"><pre>['state', 'gender']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3b2a8aa0-eb6f-4887-abef-e6250b96ceaa" type="checkbox" ><label class="sk-toggleable__label" for="3b2a8aa0-eb6f-4887-abef-e6250b96ceaa">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value='missing', strategy='constant')</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f49b2e5a-e848-4343-8a5c-ffcfa195a55b" type="checkbox" ><label class="sk-toggleable__label" for="f49b2e5a-e848-4343-8a5c-ffcfa195a55b">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown='ignore')</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="862ae48e-0f8e-4da7-bf55-02d4f6154eda" type="checkbox" ><label class="sk-toggleable__label" for="862ae48e-0f8e-4da7-bf55-02d4f6154eda">numerical</label><div class="sk-toggleable__content"><pre>['age', 'weight']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="02488c29-37f7-4839-bb74-101ca95f55db" type="checkbox" ><label class="sk-toggleable__label" for="02488c29-37f7-4839-bb74-101ca95f55db">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ce9bc9cb-a9c0-466a-b70f-95053b7633ac" type="checkbox" ><label class="sk-toggleable__label" for="ce9bc9cb-a9c0-466a-b70f-95053b7633ac">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fca88757-cad1-4355-9dac-8f68e8702a8b" type="checkbox" ><label class="sk-toggleable__label" for="fca88757-cad1-4355-9dac-8f68e8702a8b">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.072 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
