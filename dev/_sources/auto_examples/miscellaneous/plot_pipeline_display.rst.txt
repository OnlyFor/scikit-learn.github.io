
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-4a0756da-10b7-408f-89ad-90778d8a11f9 {color: black;background-color: white;}#sk-4a0756da-10b7-408f-89ad-90778d8a11f9 pre{padding: 0;}#sk-4a0756da-10b7-408f-89ad-90778d8a11f9 div.sk-toggleable {background-color: white;}#sk-4a0756da-10b7-408f-89ad-90778d8a11f9 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-4a0756da-10b7-408f-89ad-90778d8a11f9 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-4a0756da-10b7-408f-89ad-90778d8a11f9 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-4a0756da-10b7-408f-89ad-90778d8a11f9 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-4a0756da-10b7-408f-89ad-90778d8a11f9 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-4a0756da-10b7-408f-89ad-90778d8a11f9 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-4a0756da-10b7-408f-89ad-90778d8a11f9 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-4a0756da-10b7-408f-89ad-90778d8a11f9 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-4a0756da-10b7-408f-89ad-90778d8a11f9 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-4a0756da-10b7-408f-89ad-90778d8a11f9 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-4a0756da-10b7-408f-89ad-90778d8a11f9 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-4a0756da-10b7-408f-89ad-90778d8a11f9 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-4a0756da-10b7-408f-89ad-90778d8a11f9 div.sk-estimator:hover {background-color: #d4ebff;}#sk-4a0756da-10b7-408f-89ad-90778d8a11f9 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-4a0756da-10b7-408f-89ad-90778d8a11f9 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-4a0756da-10b7-408f-89ad-90778d8a11f9 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-4a0756da-10b7-408f-89ad-90778d8a11f9 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-4a0756da-10b7-408f-89ad-90778d8a11f9 div.sk-item {z-index: 1;}#sk-4a0756da-10b7-408f-89ad-90778d8a11f9 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-4a0756da-10b7-408f-89ad-90778d8a11f9 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-4a0756da-10b7-408f-89ad-90778d8a11f9 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-4a0756da-10b7-408f-89ad-90778d8a11f9 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-4a0756da-10b7-408f-89ad-90778d8a11f9 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-4a0756da-10b7-408f-89ad-90778d8a11f9 div.sk-parallel-item:only-child::after {width: 0;}#sk-4a0756da-10b7-408f-89ad-90778d8a11f9 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-4a0756da-10b7-408f-89ad-90778d8a11f9 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-4a0756da-10b7-408f-89ad-90778d8a11f9 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-4a0756da-10b7-408f-89ad-90778d8a11f9 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-4a0756da-10b7-408f-89ad-90778d8a11f9 div.sk-text-repr-fallback {display: none;}</style><div id="sk-4a0756da-10b7-408f-89ad-90778d8a11f9" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="776304ff-74dd-4b78-89ae-6d809a5d492e" type="checkbox" ><label for="776304ff-74dd-4b78-89ae-6d809a5d492e" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f25729c4-952e-4cf0-81da-fbaa03af423c" type="checkbox" ><label for="f25729c4-952e-4cf0-81da-fbaa03af423c" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ee8d8198-f5b1-4e43-9fec-34b86a213da1" type="checkbox" ><label for="ee8d8198-f5b1-4e43-9fec-34b86a213da1" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-c7476121-453f-4a55-b4ce-9c5cb7d8f711 {color: black;background-color: white;}#sk-c7476121-453f-4a55-b4ce-9c5cb7d8f711 pre{padding: 0;}#sk-c7476121-453f-4a55-b4ce-9c5cb7d8f711 div.sk-toggleable {background-color: white;}#sk-c7476121-453f-4a55-b4ce-9c5cb7d8f711 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-c7476121-453f-4a55-b4ce-9c5cb7d8f711 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-c7476121-453f-4a55-b4ce-9c5cb7d8f711 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-c7476121-453f-4a55-b4ce-9c5cb7d8f711 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-c7476121-453f-4a55-b4ce-9c5cb7d8f711 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-c7476121-453f-4a55-b4ce-9c5cb7d8f711 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-c7476121-453f-4a55-b4ce-9c5cb7d8f711 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-c7476121-453f-4a55-b4ce-9c5cb7d8f711 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-c7476121-453f-4a55-b4ce-9c5cb7d8f711 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-c7476121-453f-4a55-b4ce-9c5cb7d8f711 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-c7476121-453f-4a55-b4ce-9c5cb7d8f711 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-c7476121-453f-4a55-b4ce-9c5cb7d8f711 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-c7476121-453f-4a55-b4ce-9c5cb7d8f711 div.sk-estimator:hover {background-color: #d4ebff;}#sk-c7476121-453f-4a55-b4ce-9c5cb7d8f711 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-c7476121-453f-4a55-b4ce-9c5cb7d8f711 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-c7476121-453f-4a55-b4ce-9c5cb7d8f711 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-c7476121-453f-4a55-b4ce-9c5cb7d8f711 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-c7476121-453f-4a55-b4ce-9c5cb7d8f711 div.sk-item {z-index: 1;}#sk-c7476121-453f-4a55-b4ce-9c5cb7d8f711 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-c7476121-453f-4a55-b4ce-9c5cb7d8f711 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-c7476121-453f-4a55-b4ce-9c5cb7d8f711 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-c7476121-453f-4a55-b4ce-9c5cb7d8f711 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-c7476121-453f-4a55-b4ce-9c5cb7d8f711 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-c7476121-453f-4a55-b4ce-9c5cb7d8f711 div.sk-parallel-item:only-child::after {width: 0;}#sk-c7476121-453f-4a55-b4ce-9c5cb7d8f711 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-c7476121-453f-4a55-b4ce-9c5cb7d8f711 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-c7476121-453f-4a55-b4ce-9c5cb7d8f711 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-c7476121-453f-4a55-b4ce-9c5cb7d8f711 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-c7476121-453f-4a55-b4ce-9c5cb7d8f711 div.sk-text-repr-fallback {display: none;}</style><div id="sk-c7476121-453f-4a55-b4ce-9c5cb7d8f711" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a0497d17-277e-4b4b-a389-4bb89d2e6297" type="checkbox" ><label for="a0497d17-277e-4b4b-a389-4bb89d2e6297" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="65949662-6cbc-4752-a15b-587ba41a8c5c" type="checkbox" ><label for="65949662-6cbc-4752-a15b-587ba41a8c5c" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="22dd2677-6eda-432b-ba9b-aa41b257a0e4" type="checkbox" ><label for="22dd2677-6eda-432b-ba9b-aa41b257a0e4" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e4f5d744-986c-4f7b-907e-5177f4497fca" type="checkbox" ><label for="e4f5d744-986c-4f7b-907e-5177f4497fca" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-07f5e0b5-3919-4ffc-bd33-2d3268434679 {color: black;background-color: white;}#sk-07f5e0b5-3919-4ffc-bd33-2d3268434679 pre{padding: 0;}#sk-07f5e0b5-3919-4ffc-bd33-2d3268434679 div.sk-toggleable {background-color: white;}#sk-07f5e0b5-3919-4ffc-bd33-2d3268434679 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-07f5e0b5-3919-4ffc-bd33-2d3268434679 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-07f5e0b5-3919-4ffc-bd33-2d3268434679 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-07f5e0b5-3919-4ffc-bd33-2d3268434679 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-07f5e0b5-3919-4ffc-bd33-2d3268434679 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-07f5e0b5-3919-4ffc-bd33-2d3268434679 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-07f5e0b5-3919-4ffc-bd33-2d3268434679 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-07f5e0b5-3919-4ffc-bd33-2d3268434679 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-07f5e0b5-3919-4ffc-bd33-2d3268434679 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-07f5e0b5-3919-4ffc-bd33-2d3268434679 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-07f5e0b5-3919-4ffc-bd33-2d3268434679 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-07f5e0b5-3919-4ffc-bd33-2d3268434679 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-07f5e0b5-3919-4ffc-bd33-2d3268434679 div.sk-estimator:hover {background-color: #d4ebff;}#sk-07f5e0b5-3919-4ffc-bd33-2d3268434679 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-07f5e0b5-3919-4ffc-bd33-2d3268434679 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-07f5e0b5-3919-4ffc-bd33-2d3268434679 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-07f5e0b5-3919-4ffc-bd33-2d3268434679 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-07f5e0b5-3919-4ffc-bd33-2d3268434679 div.sk-item {z-index: 1;}#sk-07f5e0b5-3919-4ffc-bd33-2d3268434679 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-07f5e0b5-3919-4ffc-bd33-2d3268434679 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-07f5e0b5-3919-4ffc-bd33-2d3268434679 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-07f5e0b5-3919-4ffc-bd33-2d3268434679 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-07f5e0b5-3919-4ffc-bd33-2d3268434679 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-07f5e0b5-3919-4ffc-bd33-2d3268434679 div.sk-parallel-item:only-child::after {width: 0;}#sk-07f5e0b5-3919-4ffc-bd33-2d3268434679 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-07f5e0b5-3919-4ffc-bd33-2d3268434679 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-07f5e0b5-3919-4ffc-bd33-2d3268434679 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-07f5e0b5-3919-4ffc-bd33-2d3268434679 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-07f5e0b5-3919-4ffc-bd33-2d3268434679 div.sk-text-repr-fallback {display: none;}</style><div id="sk-07f5e0b5-3919-4ffc-bd33-2d3268434679" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0065ddba-7bb6-42dd-882a-ac7f41c6a4ea" type="checkbox" ><label for="0065ddba-7bb6-42dd-882a-ac7f41c6a4ea" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5e5b3881-25b4-45e9-ba6a-491a9b214a54" type="checkbox" ><label for="5e5b3881-25b4-45e9-ba6a-491a9b214a54" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="32fcb153-77a5-48be-b074-2ea78d6a08b3" type="checkbox" ><label for="32fcb153-77a5-48be-b074-2ea78d6a08b3" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-39c3c135-0cfb-4088-80b9-b96ab3b1338f {color: black;background-color: white;}#sk-39c3c135-0cfb-4088-80b9-b96ab3b1338f pre{padding: 0;}#sk-39c3c135-0cfb-4088-80b9-b96ab3b1338f div.sk-toggleable {background-color: white;}#sk-39c3c135-0cfb-4088-80b9-b96ab3b1338f label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-39c3c135-0cfb-4088-80b9-b96ab3b1338f label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-39c3c135-0cfb-4088-80b9-b96ab3b1338f label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-39c3c135-0cfb-4088-80b9-b96ab3b1338f div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-39c3c135-0cfb-4088-80b9-b96ab3b1338f div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-39c3c135-0cfb-4088-80b9-b96ab3b1338f div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-39c3c135-0cfb-4088-80b9-b96ab3b1338f input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-39c3c135-0cfb-4088-80b9-b96ab3b1338f input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-39c3c135-0cfb-4088-80b9-b96ab3b1338f div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-39c3c135-0cfb-4088-80b9-b96ab3b1338f div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-39c3c135-0cfb-4088-80b9-b96ab3b1338f input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-39c3c135-0cfb-4088-80b9-b96ab3b1338f div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-39c3c135-0cfb-4088-80b9-b96ab3b1338f div.sk-estimator:hover {background-color: #d4ebff;}#sk-39c3c135-0cfb-4088-80b9-b96ab3b1338f div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-39c3c135-0cfb-4088-80b9-b96ab3b1338f div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-39c3c135-0cfb-4088-80b9-b96ab3b1338f div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-39c3c135-0cfb-4088-80b9-b96ab3b1338f div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-39c3c135-0cfb-4088-80b9-b96ab3b1338f div.sk-item {z-index: 1;}#sk-39c3c135-0cfb-4088-80b9-b96ab3b1338f div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-39c3c135-0cfb-4088-80b9-b96ab3b1338f div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-39c3c135-0cfb-4088-80b9-b96ab3b1338f div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-39c3c135-0cfb-4088-80b9-b96ab3b1338f div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-39c3c135-0cfb-4088-80b9-b96ab3b1338f div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-39c3c135-0cfb-4088-80b9-b96ab3b1338f div.sk-parallel-item:only-child::after {width: 0;}#sk-39c3c135-0cfb-4088-80b9-b96ab3b1338f div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-39c3c135-0cfb-4088-80b9-b96ab3b1338f div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-39c3c135-0cfb-4088-80b9-b96ab3b1338f div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-39c3c135-0cfb-4088-80b9-b96ab3b1338f div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-39c3c135-0cfb-4088-80b9-b96ab3b1338f div.sk-text-repr-fallback {display: none;}</style><div id="sk-39c3c135-0cfb-4088-80b9-b96ab3b1338f" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bc176fd1-a6db-45b5-9c28-9674dc802827" type="checkbox" ><label for="bc176fd1-a6db-45b5-9c28-9674dc802827" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fc868d9d-998d-4ead-b3fb-6bf355938d01" type="checkbox" ><label for="fc868d9d-998d-4ead-b3fb-6bf355938d01" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6c20ee54-ee54-47c7-884b-03a77adf35a4" type="checkbox" ><label for="6c20ee54-ee54-47c7-884b-03a77adf35a4" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f48092d6-1eac-455c-bafd-44a4758ace27" type="checkbox" ><label for="f48092d6-1eac-455c-bafd-44a4758ace27" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4bcae6fa-6470-4a02-9a7a-8b7eaa5cf25f" type="checkbox" ><label for="4bcae6fa-6470-4a02-9a7a-8b7eaa5cf25f" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="600ad583-993b-45d3-8c79-f67ffdd86d02" type="checkbox" ><label for="600ad583-993b-45d3-8c79-f67ffdd86d02" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cf50e6ac-d313-4ef2-89a7-14c1b5067692" type="checkbox" ><label for="cf50e6ac-d313-4ef2-89a7-14c1b5067692" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f645070d-dd0e-4932-ae62-34ec900843fd" type="checkbox" ><label for="f645070d-dd0e-4932-ae62-34ec900843fd" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2b4904dc-0194-4f55-8d87-6900b961f473" type="checkbox" ><label for="2b4904dc-0194-4f55-8d87-6900b961f473" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-f50bb5db-f5f3-4af5-8914-8304f3e55e60 {color: black;background-color: white;}#sk-f50bb5db-f5f3-4af5-8914-8304f3e55e60 pre{padding: 0;}#sk-f50bb5db-f5f3-4af5-8914-8304f3e55e60 div.sk-toggleable {background-color: white;}#sk-f50bb5db-f5f3-4af5-8914-8304f3e55e60 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-f50bb5db-f5f3-4af5-8914-8304f3e55e60 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-f50bb5db-f5f3-4af5-8914-8304f3e55e60 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-f50bb5db-f5f3-4af5-8914-8304f3e55e60 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-f50bb5db-f5f3-4af5-8914-8304f3e55e60 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-f50bb5db-f5f3-4af5-8914-8304f3e55e60 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-f50bb5db-f5f3-4af5-8914-8304f3e55e60 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-f50bb5db-f5f3-4af5-8914-8304f3e55e60 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-f50bb5db-f5f3-4af5-8914-8304f3e55e60 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-f50bb5db-f5f3-4af5-8914-8304f3e55e60 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-f50bb5db-f5f3-4af5-8914-8304f3e55e60 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-f50bb5db-f5f3-4af5-8914-8304f3e55e60 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-f50bb5db-f5f3-4af5-8914-8304f3e55e60 div.sk-estimator:hover {background-color: #d4ebff;}#sk-f50bb5db-f5f3-4af5-8914-8304f3e55e60 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-f50bb5db-f5f3-4af5-8914-8304f3e55e60 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-f50bb5db-f5f3-4af5-8914-8304f3e55e60 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-f50bb5db-f5f3-4af5-8914-8304f3e55e60 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-f50bb5db-f5f3-4af5-8914-8304f3e55e60 div.sk-item {z-index: 1;}#sk-f50bb5db-f5f3-4af5-8914-8304f3e55e60 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-f50bb5db-f5f3-4af5-8914-8304f3e55e60 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-f50bb5db-f5f3-4af5-8914-8304f3e55e60 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-f50bb5db-f5f3-4af5-8914-8304f3e55e60 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-f50bb5db-f5f3-4af5-8914-8304f3e55e60 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-f50bb5db-f5f3-4af5-8914-8304f3e55e60 div.sk-parallel-item:only-child::after {width: 0;}#sk-f50bb5db-f5f3-4af5-8914-8304f3e55e60 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-f50bb5db-f5f3-4af5-8914-8304f3e55e60 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-f50bb5db-f5f3-4af5-8914-8304f3e55e60 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-f50bb5db-f5f3-4af5-8914-8304f3e55e60 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-f50bb5db-f5f3-4af5-8914-8304f3e55e60 div.sk-text-repr-fallback {display: none;}</style><div id="sk-f50bb5db-f5f3-4af5-8914-8304f3e55e60" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6642c693-ddfc-459c-99bb-ea09ea2a95b4" type="checkbox" ><label for="6642c693-ddfc-459c-99bb-ea09ea2a95b4" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cbcf5965-a37f-498c-a797-8e50e108fe1b" type="checkbox" ><label for="cbcf5965-a37f-498c-a797-8e50e108fe1b" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b4968e82-15e9-40a4-ac29-f32642a1ab88" type="checkbox" ><label for="b4968e82-15e9-40a4-ac29-f32642a1ab88" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d269f537-d6ba-413c-978e-2c78f42627a2" type="checkbox" ><label for="d269f537-d6ba-413c-978e-2c78f42627a2" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="32701062-e204-4be0-80a6-30a74a8ec496" type="checkbox" ><label for="32701062-e204-4be0-80a6-30a74a8ec496" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d7d6d879-efe3-43fc-8018-772e02288f53" type="checkbox" ><label for="d7d6d879-efe3-43fc-8018-772e02288f53" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5b974162-4c10-4a06-a4c4-321ee1626b7d" type="checkbox" ><label for="5b974162-4c10-4a06-a4c4-321ee1626b7d" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="59674d24-022f-4b38-b8c2-5634bafd36b4" type="checkbox" ><label for="59674d24-022f-4b38-b8c2-5634bafd36b4" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="95f478ac-9b54-47a1-a975-2e4af0515573" type="checkbox" ><label for="95f478ac-9b54-47a1-a975-2e4af0515573" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.073 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
