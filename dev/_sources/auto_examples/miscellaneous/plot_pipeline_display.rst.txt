
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-9418a63a-fb01-4e4c-8abb-21a9dccd994a {color: black;background-color: white;}#sk-9418a63a-fb01-4e4c-8abb-21a9dccd994a pre{padding: 0;}#sk-9418a63a-fb01-4e4c-8abb-21a9dccd994a div.sk-toggleable {background-color: white;}#sk-9418a63a-fb01-4e4c-8abb-21a9dccd994a label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-9418a63a-fb01-4e4c-8abb-21a9dccd994a label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-9418a63a-fb01-4e4c-8abb-21a9dccd994a label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-9418a63a-fb01-4e4c-8abb-21a9dccd994a div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-9418a63a-fb01-4e4c-8abb-21a9dccd994a div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-9418a63a-fb01-4e4c-8abb-21a9dccd994a div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-9418a63a-fb01-4e4c-8abb-21a9dccd994a input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-9418a63a-fb01-4e4c-8abb-21a9dccd994a input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-9418a63a-fb01-4e4c-8abb-21a9dccd994a div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-9418a63a-fb01-4e4c-8abb-21a9dccd994a div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-9418a63a-fb01-4e4c-8abb-21a9dccd994a input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-9418a63a-fb01-4e4c-8abb-21a9dccd994a div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-9418a63a-fb01-4e4c-8abb-21a9dccd994a div.sk-estimator:hover {background-color: #d4ebff;}#sk-9418a63a-fb01-4e4c-8abb-21a9dccd994a div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-9418a63a-fb01-4e4c-8abb-21a9dccd994a div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-9418a63a-fb01-4e4c-8abb-21a9dccd994a div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-9418a63a-fb01-4e4c-8abb-21a9dccd994a div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-9418a63a-fb01-4e4c-8abb-21a9dccd994a div.sk-item {z-index: 1;}#sk-9418a63a-fb01-4e4c-8abb-21a9dccd994a div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-9418a63a-fb01-4e4c-8abb-21a9dccd994a div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-9418a63a-fb01-4e4c-8abb-21a9dccd994a div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-9418a63a-fb01-4e4c-8abb-21a9dccd994a div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-9418a63a-fb01-4e4c-8abb-21a9dccd994a div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-9418a63a-fb01-4e4c-8abb-21a9dccd994a div.sk-parallel-item:only-child::after {width: 0;}#sk-9418a63a-fb01-4e4c-8abb-21a9dccd994a div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-9418a63a-fb01-4e4c-8abb-21a9dccd994a div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-9418a63a-fb01-4e4c-8abb-21a9dccd994a div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-9418a63a-fb01-4e4c-8abb-21a9dccd994a div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-9418a63a-fb01-4e4c-8abb-21a9dccd994a div.sk-text-repr-fallback {display: none;}</style><div id="sk-9418a63a-fb01-4e4c-8abb-21a9dccd994a" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d87b86dc-216b-43fc-b023-4054bb06ee40" type="checkbox" ><label for="d87b86dc-216b-43fc-b023-4054bb06ee40" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3c299218-3add-4289-a0f4-d73a873346f5" type="checkbox" ><label for="3c299218-3add-4289-a0f4-d73a873346f5" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="06789faa-48b3-4398-9743-68cbe4439864" type="checkbox" ><label for="06789faa-48b3-4398-9743-68cbe4439864" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-bbea2135-b2e6-4ef4-b41f-0ea60c0a8590 {color: black;background-color: white;}#sk-bbea2135-b2e6-4ef4-b41f-0ea60c0a8590 pre{padding: 0;}#sk-bbea2135-b2e6-4ef4-b41f-0ea60c0a8590 div.sk-toggleable {background-color: white;}#sk-bbea2135-b2e6-4ef4-b41f-0ea60c0a8590 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-bbea2135-b2e6-4ef4-b41f-0ea60c0a8590 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-bbea2135-b2e6-4ef4-b41f-0ea60c0a8590 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-bbea2135-b2e6-4ef4-b41f-0ea60c0a8590 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-bbea2135-b2e6-4ef4-b41f-0ea60c0a8590 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-bbea2135-b2e6-4ef4-b41f-0ea60c0a8590 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-bbea2135-b2e6-4ef4-b41f-0ea60c0a8590 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-bbea2135-b2e6-4ef4-b41f-0ea60c0a8590 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-bbea2135-b2e6-4ef4-b41f-0ea60c0a8590 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-bbea2135-b2e6-4ef4-b41f-0ea60c0a8590 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-bbea2135-b2e6-4ef4-b41f-0ea60c0a8590 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-bbea2135-b2e6-4ef4-b41f-0ea60c0a8590 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-bbea2135-b2e6-4ef4-b41f-0ea60c0a8590 div.sk-estimator:hover {background-color: #d4ebff;}#sk-bbea2135-b2e6-4ef4-b41f-0ea60c0a8590 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-bbea2135-b2e6-4ef4-b41f-0ea60c0a8590 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-bbea2135-b2e6-4ef4-b41f-0ea60c0a8590 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-bbea2135-b2e6-4ef4-b41f-0ea60c0a8590 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-bbea2135-b2e6-4ef4-b41f-0ea60c0a8590 div.sk-item {z-index: 1;}#sk-bbea2135-b2e6-4ef4-b41f-0ea60c0a8590 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-bbea2135-b2e6-4ef4-b41f-0ea60c0a8590 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-bbea2135-b2e6-4ef4-b41f-0ea60c0a8590 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-bbea2135-b2e6-4ef4-b41f-0ea60c0a8590 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-bbea2135-b2e6-4ef4-b41f-0ea60c0a8590 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-bbea2135-b2e6-4ef4-b41f-0ea60c0a8590 div.sk-parallel-item:only-child::after {width: 0;}#sk-bbea2135-b2e6-4ef4-b41f-0ea60c0a8590 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-bbea2135-b2e6-4ef4-b41f-0ea60c0a8590 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-bbea2135-b2e6-4ef4-b41f-0ea60c0a8590 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-bbea2135-b2e6-4ef4-b41f-0ea60c0a8590 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-bbea2135-b2e6-4ef4-b41f-0ea60c0a8590 div.sk-text-repr-fallback {display: none;}</style><div id="sk-bbea2135-b2e6-4ef4-b41f-0ea60c0a8590" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="380e97ad-860a-48e6-9501-01e80d586a32" type="checkbox" ><label for="380e97ad-860a-48e6-9501-01e80d586a32" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1c1cca5d-64f4-4148-9c03-c9210ff8e097" type="checkbox" ><label for="1c1cca5d-64f4-4148-9c03-c9210ff8e097" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="eb8c46e2-9445-45f6-a0fe-801602c661c9" type="checkbox" ><label for="eb8c46e2-9445-45f6-a0fe-801602c661c9" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="793ae539-c552-4b90-8819-e113d39590cf" type="checkbox" ><label for="793ae539-c552-4b90-8819-e113d39590cf" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-457179c3-f0a2-48a6-840b-b8abfd7de571 {color: black;background-color: white;}#sk-457179c3-f0a2-48a6-840b-b8abfd7de571 pre{padding: 0;}#sk-457179c3-f0a2-48a6-840b-b8abfd7de571 div.sk-toggleable {background-color: white;}#sk-457179c3-f0a2-48a6-840b-b8abfd7de571 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-457179c3-f0a2-48a6-840b-b8abfd7de571 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-457179c3-f0a2-48a6-840b-b8abfd7de571 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-457179c3-f0a2-48a6-840b-b8abfd7de571 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-457179c3-f0a2-48a6-840b-b8abfd7de571 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-457179c3-f0a2-48a6-840b-b8abfd7de571 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-457179c3-f0a2-48a6-840b-b8abfd7de571 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-457179c3-f0a2-48a6-840b-b8abfd7de571 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-457179c3-f0a2-48a6-840b-b8abfd7de571 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-457179c3-f0a2-48a6-840b-b8abfd7de571 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-457179c3-f0a2-48a6-840b-b8abfd7de571 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-457179c3-f0a2-48a6-840b-b8abfd7de571 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-457179c3-f0a2-48a6-840b-b8abfd7de571 div.sk-estimator:hover {background-color: #d4ebff;}#sk-457179c3-f0a2-48a6-840b-b8abfd7de571 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-457179c3-f0a2-48a6-840b-b8abfd7de571 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-457179c3-f0a2-48a6-840b-b8abfd7de571 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-457179c3-f0a2-48a6-840b-b8abfd7de571 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-457179c3-f0a2-48a6-840b-b8abfd7de571 div.sk-item {z-index: 1;}#sk-457179c3-f0a2-48a6-840b-b8abfd7de571 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-457179c3-f0a2-48a6-840b-b8abfd7de571 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-457179c3-f0a2-48a6-840b-b8abfd7de571 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-457179c3-f0a2-48a6-840b-b8abfd7de571 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-457179c3-f0a2-48a6-840b-b8abfd7de571 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-457179c3-f0a2-48a6-840b-b8abfd7de571 div.sk-parallel-item:only-child::after {width: 0;}#sk-457179c3-f0a2-48a6-840b-b8abfd7de571 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-457179c3-f0a2-48a6-840b-b8abfd7de571 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-457179c3-f0a2-48a6-840b-b8abfd7de571 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-457179c3-f0a2-48a6-840b-b8abfd7de571 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-457179c3-f0a2-48a6-840b-b8abfd7de571 div.sk-text-repr-fallback {display: none;}</style><div id="sk-457179c3-f0a2-48a6-840b-b8abfd7de571" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b984c06c-240a-46b2-b09c-19cd5b9ec9e6" type="checkbox" ><label for="b984c06c-240a-46b2-b09c-19cd5b9ec9e6" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ee109191-439e-4908-9248-b748a4724aa3" type="checkbox" ><label for="ee109191-439e-4908-9248-b748a4724aa3" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a4e05b17-cadd-4cee-9197-a43562f93a7c" type="checkbox" ><label for="a4e05b17-cadd-4cee-9197-a43562f93a7c" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-b87b8124-1f09-4909-a598-23030ce00d41 {color: black;background-color: white;}#sk-b87b8124-1f09-4909-a598-23030ce00d41 pre{padding: 0;}#sk-b87b8124-1f09-4909-a598-23030ce00d41 div.sk-toggleable {background-color: white;}#sk-b87b8124-1f09-4909-a598-23030ce00d41 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-b87b8124-1f09-4909-a598-23030ce00d41 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-b87b8124-1f09-4909-a598-23030ce00d41 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-b87b8124-1f09-4909-a598-23030ce00d41 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-b87b8124-1f09-4909-a598-23030ce00d41 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-b87b8124-1f09-4909-a598-23030ce00d41 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-b87b8124-1f09-4909-a598-23030ce00d41 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-b87b8124-1f09-4909-a598-23030ce00d41 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-b87b8124-1f09-4909-a598-23030ce00d41 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b87b8124-1f09-4909-a598-23030ce00d41 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b87b8124-1f09-4909-a598-23030ce00d41 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-b87b8124-1f09-4909-a598-23030ce00d41 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-b87b8124-1f09-4909-a598-23030ce00d41 div.sk-estimator:hover {background-color: #d4ebff;}#sk-b87b8124-1f09-4909-a598-23030ce00d41 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-b87b8124-1f09-4909-a598-23030ce00d41 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-b87b8124-1f09-4909-a598-23030ce00d41 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b87b8124-1f09-4909-a598-23030ce00d41 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-b87b8124-1f09-4909-a598-23030ce00d41 div.sk-item {z-index: 1;}#sk-b87b8124-1f09-4909-a598-23030ce00d41 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-b87b8124-1f09-4909-a598-23030ce00d41 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b87b8124-1f09-4909-a598-23030ce00d41 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-b87b8124-1f09-4909-a598-23030ce00d41 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-b87b8124-1f09-4909-a598-23030ce00d41 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-b87b8124-1f09-4909-a598-23030ce00d41 div.sk-parallel-item:only-child::after {width: 0;}#sk-b87b8124-1f09-4909-a598-23030ce00d41 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-b87b8124-1f09-4909-a598-23030ce00d41 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-b87b8124-1f09-4909-a598-23030ce00d41 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-b87b8124-1f09-4909-a598-23030ce00d41 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-b87b8124-1f09-4909-a598-23030ce00d41 div.sk-text-repr-fallback {display: none;}</style><div id="sk-b87b8124-1f09-4909-a598-23030ce00d41" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d7d12c7a-8686-4276-b531-b58b318cf034" type="checkbox" ><label for="d7d12c7a-8686-4276-b531-b58b318cf034" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="095d4483-fd54-41b6-b067-891206915c65" type="checkbox" ><label for="095d4483-fd54-41b6-b067-891206915c65" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6256ac34-f43c-4cef-8e53-7c6d8441f4ed" type="checkbox" ><label for="6256ac34-f43c-4cef-8e53-7c6d8441f4ed" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="03515f98-c101-4c43-be56-a3b7540a64cf" type="checkbox" ><label for="03515f98-c101-4c43-be56-a3b7540a64cf" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3240da99-cf60-4f5b-8c10-9fc86e3cb71b" type="checkbox" ><label for="3240da99-cf60-4f5b-8c10-9fc86e3cb71b" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="12051981-0be1-458f-8678-e6e0b66d67c5" type="checkbox" ><label for="12051981-0be1-458f-8678-e6e0b66d67c5" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c7b430db-c1cf-4d4b-8899-e26eb920088a" type="checkbox" ><label for="c7b430db-c1cf-4d4b-8899-e26eb920088a" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1838f1ac-459e-4627-abf6-fd1f0f108d94" type="checkbox" ><label for="1838f1ac-459e-4627-abf6-fd1f0f108d94" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="384c1b0c-744b-4076-8a1e-4cbf98a59cf2" type="checkbox" ><label for="384c1b0c-744b-4076-8a1e-4cbf98a59cf2" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-760b8f1a-d382-4b89-af53-e2cbf6c567a2 {color: black;background-color: white;}#sk-760b8f1a-d382-4b89-af53-e2cbf6c567a2 pre{padding: 0;}#sk-760b8f1a-d382-4b89-af53-e2cbf6c567a2 div.sk-toggleable {background-color: white;}#sk-760b8f1a-d382-4b89-af53-e2cbf6c567a2 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-760b8f1a-d382-4b89-af53-e2cbf6c567a2 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-760b8f1a-d382-4b89-af53-e2cbf6c567a2 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-760b8f1a-d382-4b89-af53-e2cbf6c567a2 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-760b8f1a-d382-4b89-af53-e2cbf6c567a2 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-760b8f1a-d382-4b89-af53-e2cbf6c567a2 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-760b8f1a-d382-4b89-af53-e2cbf6c567a2 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-760b8f1a-d382-4b89-af53-e2cbf6c567a2 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-760b8f1a-d382-4b89-af53-e2cbf6c567a2 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-760b8f1a-d382-4b89-af53-e2cbf6c567a2 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-760b8f1a-d382-4b89-af53-e2cbf6c567a2 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-760b8f1a-d382-4b89-af53-e2cbf6c567a2 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-760b8f1a-d382-4b89-af53-e2cbf6c567a2 div.sk-estimator:hover {background-color: #d4ebff;}#sk-760b8f1a-d382-4b89-af53-e2cbf6c567a2 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-760b8f1a-d382-4b89-af53-e2cbf6c567a2 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-760b8f1a-d382-4b89-af53-e2cbf6c567a2 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-760b8f1a-d382-4b89-af53-e2cbf6c567a2 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-760b8f1a-d382-4b89-af53-e2cbf6c567a2 div.sk-item {z-index: 1;}#sk-760b8f1a-d382-4b89-af53-e2cbf6c567a2 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-760b8f1a-d382-4b89-af53-e2cbf6c567a2 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-760b8f1a-d382-4b89-af53-e2cbf6c567a2 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-760b8f1a-d382-4b89-af53-e2cbf6c567a2 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-760b8f1a-d382-4b89-af53-e2cbf6c567a2 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-760b8f1a-d382-4b89-af53-e2cbf6c567a2 div.sk-parallel-item:only-child::after {width: 0;}#sk-760b8f1a-d382-4b89-af53-e2cbf6c567a2 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-760b8f1a-d382-4b89-af53-e2cbf6c567a2 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-760b8f1a-d382-4b89-af53-e2cbf6c567a2 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-760b8f1a-d382-4b89-af53-e2cbf6c567a2 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-760b8f1a-d382-4b89-af53-e2cbf6c567a2 div.sk-text-repr-fallback {display: none;}</style><div id="sk-760b8f1a-d382-4b89-af53-e2cbf6c567a2" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4cd6f922-ea5e-404d-8d46-6f5369eadb07" type="checkbox" ><label for="4cd6f922-ea5e-404d-8d46-6f5369eadb07" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="70ce006b-ba26-4ad5-b81d-21f142056d1b" type="checkbox" ><label for="70ce006b-ba26-4ad5-b81d-21f142056d1b" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f0d8bb49-d42d-4767-9007-9c90fa74f8a1" type="checkbox" ><label for="f0d8bb49-d42d-4767-9007-9c90fa74f8a1" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8c6fa005-174a-4536-bf9b-e9f0ae549a8c" type="checkbox" ><label for="8c6fa005-174a-4536-bf9b-e9f0ae549a8c" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0a9e67ff-2ef5-476f-a7ac-58a3941d8589" type="checkbox" ><label for="0a9e67ff-2ef5-476f-a7ac-58a3941d8589" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="59af5047-bfaf-4432-adc0-b828a68c0613" type="checkbox" ><label for="59af5047-bfaf-4432-adc0-b828a68c0613" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cb28434a-b7d4-4602-9555-3af5ffdad937" type="checkbox" ><label for="cb28434a-b7d4-4602-9555-3af5ffdad937" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="06d693e0-6e09-415f-8503-ccf0fca1a533" type="checkbox" ><label for="06d693e0-6e09-415f-8503-ccf0fca1a533" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a2e34153-2cd5-413a-be84-4135cb2b68c0" type="checkbox" ><label for="a2e34153-2cd5-413a-be84-4135cb2b68c0" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.082 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
