
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-88252d04-eab5-4281-b2b8-6985571c1f91 {color: black;background-color: white;}#sk-88252d04-eab5-4281-b2b8-6985571c1f91 pre{padding: 0;}#sk-88252d04-eab5-4281-b2b8-6985571c1f91 div.sk-toggleable {background-color: white;}#sk-88252d04-eab5-4281-b2b8-6985571c1f91 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-88252d04-eab5-4281-b2b8-6985571c1f91 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-88252d04-eab5-4281-b2b8-6985571c1f91 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-88252d04-eab5-4281-b2b8-6985571c1f91 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-88252d04-eab5-4281-b2b8-6985571c1f91 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-88252d04-eab5-4281-b2b8-6985571c1f91 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-88252d04-eab5-4281-b2b8-6985571c1f91 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-88252d04-eab5-4281-b2b8-6985571c1f91 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-88252d04-eab5-4281-b2b8-6985571c1f91 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-88252d04-eab5-4281-b2b8-6985571c1f91 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-88252d04-eab5-4281-b2b8-6985571c1f91 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-88252d04-eab5-4281-b2b8-6985571c1f91 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-88252d04-eab5-4281-b2b8-6985571c1f91 div.sk-estimator:hover {background-color: #d4ebff;}#sk-88252d04-eab5-4281-b2b8-6985571c1f91 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-88252d04-eab5-4281-b2b8-6985571c1f91 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-88252d04-eab5-4281-b2b8-6985571c1f91 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-88252d04-eab5-4281-b2b8-6985571c1f91 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-88252d04-eab5-4281-b2b8-6985571c1f91 div.sk-item {z-index: 1;}#sk-88252d04-eab5-4281-b2b8-6985571c1f91 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-88252d04-eab5-4281-b2b8-6985571c1f91 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-88252d04-eab5-4281-b2b8-6985571c1f91 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-88252d04-eab5-4281-b2b8-6985571c1f91 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-88252d04-eab5-4281-b2b8-6985571c1f91 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-88252d04-eab5-4281-b2b8-6985571c1f91 div.sk-parallel-item:only-child::after {width: 0;}#sk-88252d04-eab5-4281-b2b8-6985571c1f91 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-88252d04-eab5-4281-b2b8-6985571c1f91 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-88252d04-eab5-4281-b2b8-6985571c1f91 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-88252d04-eab5-4281-b2b8-6985571c1f91 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-88252d04-eab5-4281-b2b8-6985571c1f91 div.sk-text-repr-fallback {display: none;}</style><div id="sk-88252d04-eab5-4281-b2b8-6985571c1f91" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6a9b6674-feeb-45df-8d63-5b1b5d7998cb" type="checkbox" ><label for="6a9b6674-feeb-45df-8d63-5b1b5d7998cb" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="834084c7-4b2b-42f7-8909-ff1c5ee7b67c" type="checkbox" ><label for="834084c7-4b2b-42f7-8909-ff1c5ee7b67c" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="355c429e-e3c2-4d5c-9d7d-cefc81530048" type="checkbox" ><label for="355c429e-e3c2-4d5c-9d7d-cefc81530048" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-d492faab-9af7-44e2-a94d-15c025e0b361 {color: black;background-color: white;}#sk-d492faab-9af7-44e2-a94d-15c025e0b361 pre{padding: 0;}#sk-d492faab-9af7-44e2-a94d-15c025e0b361 div.sk-toggleable {background-color: white;}#sk-d492faab-9af7-44e2-a94d-15c025e0b361 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-d492faab-9af7-44e2-a94d-15c025e0b361 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-d492faab-9af7-44e2-a94d-15c025e0b361 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-d492faab-9af7-44e2-a94d-15c025e0b361 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-d492faab-9af7-44e2-a94d-15c025e0b361 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-d492faab-9af7-44e2-a94d-15c025e0b361 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-d492faab-9af7-44e2-a94d-15c025e0b361 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-d492faab-9af7-44e2-a94d-15c025e0b361 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-d492faab-9af7-44e2-a94d-15c025e0b361 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-d492faab-9af7-44e2-a94d-15c025e0b361 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-d492faab-9af7-44e2-a94d-15c025e0b361 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-d492faab-9af7-44e2-a94d-15c025e0b361 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-d492faab-9af7-44e2-a94d-15c025e0b361 div.sk-estimator:hover {background-color: #d4ebff;}#sk-d492faab-9af7-44e2-a94d-15c025e0b361 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-d492faab-9af7-44e2-a94d-15c025e0b361 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-d492faab-9af7-44e2-a94d-15c025e0b361 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-d492faab-9af7-44e2-a94d-15c025e0b361 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-d492faab-9af7-44e2-a94d-15c025e0b361 div.sk-item {z-index: 1;}#sk-d492faab-9af7-44e2-a94d-15c025e0b361 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-d492faab-9af7-44e2-a94d-15c025e0b361 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-d492faab-9af7-44e2-a94d-15c025e0b361 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-d492faab-9af7-44e2-a94d-15c025e0b361 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-d492faab-9af7-44e2-a94d-15c025e0b361 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-d492faab-9af7-44e2-a94d-15c025e0b361 div.sk-parallel-item:only-child::after {width: 0;}#sk-d492faab-9af7-44e2-a94d-15c025e0b361 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-d492faab-9af7-44e2-a94d-15c025e0b361 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-d492faab-9af7-44e2-a94d-15c025e0b361 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-d492faab-9af7-44e2-a94d-15c025e0b361 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-d492faab-9af7-44e2-a94d-15c025e0b361 div.sk-text-repr-fallback {display: none;}</style><div id="sk-d492faab-9af7-44e2-a94d-15c025e0b361" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2f0a46c3-9eb4-435f-80ae-c55787705975" type="checkbox" ><label for="2f0a46c3-9eb4-435f-80ae-c55787705975" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a84ceb0b-3ac4-4b3d-8b30-8cd3014437ed" type="checkbox" ><label for="a84ceb0b-3ac4-4b3d-8b30-8cd3014437ed" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="731694d5-8085-4c34-9e3c-b7e779c74624" type="checkbox" ><label for="731694d5-8085-4c34-9e3c-b7e779c74624" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="34caef82-b3df-446d-aa6c-92e90086206f" type="checkbox" ><label for="34caef82-b3df-446d-aa6c-92e90086206f" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-bb2443f6-4c8b-4f81-9954-b4f6c12214e5 {color: black;background-color: white;}#sk-bb2443f6-4c8b-4f81-9954-b4f6c12214e5 pre{padding: 0;}#sk-bb2443f6-4c8b-4f81-9954-b4f6c12214e5 div.sk-toggleable {background-color: white;}#sk-bb2443f6-4c8b-4f81-9954-b4f6c12214e5 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-bb2443f6-4c8b-4f81-9954-b4f6c12214e5 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-bb2443f6-4c8b-4f81-9954-b4f6c12214e5 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-bb2443f6-4c8b-4f81-9954-b4f6c12214e5 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-bb2443f6-4c8b-4f81-9954-b4f6c12214e5 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-bb2443f6-4c8b-4f81-9954-b4f6c12214e5 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-bb2443f6-4c8b-4f81-9954-b4f6c12214e5 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-bb2443f6-4c8b-4f81-9954-b4f6c12214e5 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-bb2443f6-4c8b-4f81-9954-b4f6c12214e5 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-bb2443f6-4c8b-4f81-9954-b4f6c12214e5 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-bb2443f6-4c8b-4f81-9954-b4f6c12214e5 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-bb2443f6-4c8b-4f81-9954-b4f6c12214e5 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-bb2443f6-4c8b-4f81-9954-b4f6c12214e5 div.sk-estimator:hover {background-color: #d4ebff;}#sk-bb2443f6-4c8b-4f81-9954-b4f6c12214e5 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-bb2443f6-4c8b-4f81-9954-b4f6c12214e5 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-bb2443f6-4c8b-4f81-9954-b4f6c12214e5 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-bb2443f6-4c8b-4f81-9954-b4f6c12214e5 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-bb2443f6-4c8b-4f81-9954-b4f6c12214e5 div.sk-item {z-index: 1;}#sk-bb2443f6-4c8b-4f81-9954-b4f6c12214e5 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-bb2443f6-4c8b-4f81-9954-b4f6c12214e5 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-bb2443f6-4c8b-4f81-9954-b4f6c12214e5 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-bb2443f6-4c8b-4f81-9954-b4f6c12214e5 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-bb2443f6-4c8b-4f81-9954-b4f6c12214e5 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-bb2443f6-4c8b-4f81-9954-b4f6c12214e5 div.sk-parallel-item:only-child::after {width: 0;}#sk-bb2443f6-4c8b-4f81-9954-b4f6c12214e5 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-bb2443f6-4c8b-4f81-9954-b4f6c12214e5 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-bb2443f6-4c8b-4f81-9954-b4f6c12214e5 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-bb2443f6-4c8b-4f81-9954-b4f6c12214e5 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-bb2443f6-4c8b-4f81-9954-b4f6c12214e5 div.sk-text-repr-fallback {display: none;}</style><div id="sk-bb2443f6-4c8b-4f81-9954-b4f6c12214e5" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="743867ee-cdaf-4ffc-86e1-526ee4e1817f" type="checkbox" ><label for="743867ee-cdaf-4ffc-86e1-526ee4e1817f" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b8409e2b-dcd0-4281-b1ed-3f9117f52132" type="checkbox" ><label for="b8409e2b-dcd0-4281-b1ed-3f9117f52132" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="20794794-7082-457e-88be-d6588da71bf6" type="checkbox" ><label for="20794794-7082-457e-88be-d6588da71bf6" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-e4ed865b-6725-4a9d-8333-2558ae3080ae {color: black;background-color: white;}#sk-e4ed865b-6725-4a9d-8333-2558ae3080ae pre{padding: 0;}#sk-e4ed865b-6725-4a9d-8333-2558ae3080ae div.sk-toggleable {background-color: white;}#sk-e4ed865b-6725-4a9d-8333-2558ae3080ae label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-e4ed865b-6725-4a9d-8333-2558ae3080ae label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-e4ed865b-6725-4a9d-8333-2558ae3080ae label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-e4ed865b-6725-4a9d-8333-2558ae3080ae div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-e4ed865b-6725-4a9d-8333-2558ae3080ae div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-e4ed865b-6725-4a9d-8333-2558ae3080ae div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-e4ed865b-6725-4a9d-8333-2558ae3080ae input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-e4ed865b-6725-4a9d-8333-2558ae3080ae input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-e4ed865b-6725-4a9d-8333-2558ae3080ae div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-e4ed865b-6725-4a9d-8333-2558ae3080ae div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-e4ed865b-6725-4a9d-8333-2558ae3080ae input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-e4ed865b-6725-4a9d-8333-2558ae3080ae div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-e4ed865b-6725-4a9d-8333-2558ae3080ae div.sk-estimator:hover {background-color: #d4ebff;}#sk-e4ed865b-6725-4a9d-8333-2558ae3080ae div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-e4ed865b-6725-4a9d-8333-2558ae3080ae div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-e4ed865b-6725-4a9d-8333-2558ae3080ae div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-e4ed865b-6725-4a9d-8333-2558ae3080ae div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-e4ed865b-6725-4a9d-8333-2558ae3080ae div.sk-item {z-index: 1;}#sk-e4ed865b-6725-4a9d-8333-2558ae3080ae div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-e4ed865b-6725-4a9d-8333-2558ae3080ae div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-e4ed865b-6725-4a9d-8333-2558ae3080ae div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-e4ed865b-6725-4a9d-8333-2558ae3080ae div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-e4ed865b-6725-4a9d-8333-2558ae3080ae div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-e4ed865b-6725-4a9d-8333-2558ae3080ae div.sk-parallel-item:only-child::after {width: 0;}#sk-e4ed865b-6725-4a9d-8333-2558ae3080ae div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-e4ed865b-6725-4a9d-8333-2558ae3080ae div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-e4ed865b-6725-4a9d-8333-2558ae3080ae div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-e4ed865b-6725-4a9d-8333-2558ae3080ae div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-e4ed865b-6725-4a9d-8333-2558ae3080ae div.sk-text-repr-fallback {display: none;}</style><div id="sk-e4ed865b-6725-4a9d-8333-2558ae3080ae" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a2f15eb3-56cd-4c9f-812c-38103ddcdd01" type="checkbox" ><label for="a2f15eb3-56cd-4c9f-812c-38103ddcdd01" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7fde5ffc-9bdf-4a30-8d70-d0ad1e6d2aa2" type="checkbox" ><label for="7fde5ffc-9bdf-4a30-8d70-d0ad1e6d2aa2" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b64d2f24-305b-4efb-8177-d800e27f7d7b" type="checkbox" ><label for="b64d2f24-305b-4efb-8177-d800e27f7d7b" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fd98f5ed-2d36-48a1-870e-1592c7864c6b" type="checkbox" ><label for="fd98f5ed-2d36-48a1-870e-1592c7864c6b" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cde0a3e1-80bd-4fb9-801d-5a1b2a9fb938" type="checkbox" ><label for="cde0a3e1-80bd-4fb9-801d-5a1b2a9fb938" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="74280b4d-7dbf-4abe-98a1-3c1719453ebe" type="checkbox" ><label for="74280b4d-7dbf-4abe-98a1-3c1719453ebe" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="abc15d82-87e7-4c47-84c6-b3ba21a63fe9" type="checkbox" ><label for="abc15d82-87e7-4c47-84c6-b3ba21a63fe9" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bea487fe-8eac-4272-a1dc-7b5d3254e889" type="checkbox" ><label for="bea487fe-8eac-4272-a1dc-7b5d3254e889" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="42edf0dc-414a-4e60-a1dd-59892474c53f" type="checkbox" ><label for="42edf0dc-414a-4e60-a1dd-59892474c53f" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-68bb67e8-2fee-4125-9210-739df85ff7be {color: black;background-color: white;}#sk-68bb67e8-2fee-4125-9210-739df85ff7be pre{padding: 0;}#sk-68bb67e8-2fee-4125-9210-739df85ff7be div.sk-toggleable {background-color: white;}#sk-68bb67e8-2fee-4125-9210-739df85ff7be label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-68bb67e8-2fee-4125-9210-739df85ff7be label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-68bb67e8-2fee-4125-9210-739df85ff7be label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-68bb67e8-2fee-4125-9210-739df85ff7be div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-68bb67e8-2fee-4125-9210-739df85ff7be div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-68bb67e8-2fee-4125-9210-739df85ff7be div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-68bb67e8-2fee-4125-9210-739df85ff7be input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-68bb67e8-2fee-4125-9210-739df85ff7be input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-68bb67e8-2fee-4125-9210-739df85ff7be div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-68bb67e8-2fee-4125-9210-739df85ff7be div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-68bb67e8-2fee-4125-9210-739df85ff7be input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-68bb67e8-2fee-4125-9210-739df85ff7be div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-68bb67e8-2fee-4125-9210-739df85ff7be div.sk-estimator:hover {background-color: #d4ebff;}#sk-68bb67e8-2fee-4125-9210-739df85ff7be div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-68bb67e8-2fee-4125-9210-739df85ff7be div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-68bb67e8-2fee-4125-9210-739df85ff7be div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-68bb67e8-2fee-4125-9210-739df85ff7be div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-68bb67e8-2fee-4125-9210-739df85ff7be div.sk-item {z-index: 1;}#sk-68bb67e8-2fee-4125-9210-739df85ff7be div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-68bb67e8-2fee-4125-9210-739df85ff7be div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-68bb67e8-2fee-4125-9210-739df85ff7be div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-68bb67e8-2fee-4125-9210-739df85ff7be div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-68bb67e8-2fee-4125-9210-739df85ff7be div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-68bb67e8-2fee-4125-9210-739df85ff7be div.sk-parallel-item:only-child::after {width: 0;}#sk-68bb67e8-2fee-4125-9210-739df85ff7be div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-68bb67e8-2fee-4125-9210-739df85ff7be div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-68bb67e8-2fee-4125-9210-739df85ff7be div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-68bb67e8-2fee-4125-9210-739df85ff7be div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-68bb67e8-2fee-4125-9210-739df85ff7be div.sk-text-repr-fallback {display: none;}</style><div id="sk-68bb67e8-2fee-4125-9210-739df85ff7be" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2882eb4c-b997-4a10-b140-13d4998f8594" type="checkbox" ><label for="2882eb4c-b997-4a10-b140-13d4998f8594" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="99d6304c-777a-4779-a160-3942d462ce12" type="checkbox" ><label for="99d6304c-777a-4779-a160-3942d462ce12" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7b316c5a-e3bf-4d88-a390-0e1d84682826" type="checkbox" ><label for="7b316c5a-e3bf-4d88-a390-0e1d84682826" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e90ad024-bde5-4e2f-acf6-1483190cb5cd" type="checkbox" ><label for="e90ad024-bde5-4e2f-acf6-1483190cb5cd" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c9d97f1b-402a-4891-adc6-16cf50f45501" type="checkbox" ><label for="c9d97f1b-402a-4891-adc6-16cf50f45501" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c2bcfe69-0e35-4249-a961-45520f0d16fd" type="checkbox" ><label for="c2bcfe69-0e35-4249-a961-45520f0d16fd" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0ab2480a-3bf2-4b79-816b-c0ecb801616c" type="checkbox" ><label for="0ab2480a-3bf2-4b79-816b-c0ecb801616c" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2ee0110d-daee-4fa8-8a0f-e06e29681867" type="checkbox" ><label for="2ee0110d-daee-4fa8-8a0f-e06e29681867" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="eaca0cd2-e293-4302-8695-b43aa8e53f61" type="checkbox" ><label for="eaca0cd2-e293-4302-8695-b43aa8e53f61" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.133 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
