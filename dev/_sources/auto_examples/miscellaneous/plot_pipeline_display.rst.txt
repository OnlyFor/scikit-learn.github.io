
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-1f5ba97d-19ea-4657-8088-0287639531f7 {color: black;background-color: white;}#sk-1f5ba97d-19ea-4657-8088-0287639531f7 pre{padding: 0;}#sk-1f5ba97d-19ea-4657-8088-0287639531f7 div.sk-toggleable {background-color: white;}#sk-1f5ba97d-19ea-4657-8088-0287639531f7 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-1f5ba97d-19ea-4657-8088-0287639531f7 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-1f5ba97d-19ea-4657-8088-0287639531f7 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-1f5ba97d-19ea-4657-8088-0287639531f7 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-1f5ba97d-19ea-4657-8088-0287639531f7 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-1f5ba97d-19ea-4657-8088-0287639531f7 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-1f5ba97d-19ea-4657-8088-0287639531f7 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-1f5ba97d-19ea-4657-8088-0287639531f7 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-1f5ba97d-19ea-4657-8088-0287639531f7 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-1f5ba97d-19ea-4657-8088-0287639531f7 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-1f5ba97d-19ea-4657-8088-0287639531f7 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-1f5ba97d-19ea-4657-8088-0287639531f7 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-1f5ba97d-19ea-4657-8088-0287639531f7 div.sk-estimator:hover {background-color: #d4ebff;}#sk-1f5ba97d-19ea-4657-8088-0287639531f7 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-1f5ba97d-19ea-4657-8088-0287639531f7 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-1f5ba97d-19ea-4657-8088-0287639531f7 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-1f5ba97d-19ea-4657-8088-0287639531f7 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-1f5ba97d-19ea-4657-8088-0287639531f7 div.sk-item {z-index: 1;}#sk-1f5ba97d-19ea-4657-8088-0287639531f7 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-1f5ba97d-19ea-4657-8088-0287639531f7 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-1f5ba97d-19ea-4657-8088-0287639531f7 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-1f5ba97d-19ea-4657-8088-0287639531f7 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-1f5ba97d-19ea-4657-8088-0287639531f7 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-1f5ba97d-19ea-4657-8088-0287639531f7 div.sk-parallel-item:only-child::after {width: 0;}#sk-1f5ba97d-19ea-4657-8088-0287639531f7 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-1f5ba97d-19ea-4657-8088-0287639531f7 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-1f5ba97d-19ea-4657-8088-0287639531f7 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-1f5ba97d-19ea-4657-8088-0287639531f7 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-1f5ba97d-19ea-4657-8088-0287639531f7 div.sk-text-repr-fallback {display: none;}</style><div id="sk-1f5ba97d-19ea-4657-8088-0287639531f7" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e1cad78b-8586-4153-8aca-4f6386a1e572" type="checkbox" ><label for="e1cad78b-8586-4153-8aca-4f6386a1e572" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a3c349f3-4b9e-41f8-a554-192d5d292575" type="checkbox" ><label for="a3c349f3-4b9e-41f8-a554-192d5d292575" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="340e9260-6d86-4d3d-a9e7-de836b5df3bb" type="checkbox" ><label for="340e9260-6d86-4d3d-a9e7-de836b5df3bb" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-87af793a-90da-4e80-b06d-cd3625b27d9d {color: black;background-color: white;}#sk-87af793a-90da-4e80-b06d-cd3625b27d9d pre{padding: 0;}#sk-87af793a-90da-4e80-b06d-cd3625b27d9d div.sk-toggleable {background-color: white;}#sk-87af793a-90da-4e80-b06d-cd3625b27d9d label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-87af793a-90da-4e80-b06d-cd3625b27d9d label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-87af793a-90da-4e80-b06d-cd3625b27d9d label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-87af793a-90da-4e80-b06d-cd3625b27d9d div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-87af793a-90da-4e80-b06d-cd3625b27d9d div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-87af793a-90da-4e80-b06d-cd3625b27d9d div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-87af793a-90da-4e80-b06d-cd3625b27d9d input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-87af793a-90da-4e80-b06d-cd3625b27d9d input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-87af793a-90da-4e80-b06d-cd3625b27d9d div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-87af793a-90da-4e80-b06d-cd3625b27d9d div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-87af793a-90da-4e80-b06d-cd3625b27d9d input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-87af793a-90da-4e80-b06d-cd3625b27d9d div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-87af793a-90da-4e80-b06d-cd3625b27d9d div.sk-estimator:hover {background-color: #d4ebff;}#sk-87af793a-90da-4e80-b06d-cd3625b27d9d div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-87af793a-90da-4e80-b06d-cd3625b27d9d div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-87af793a-90da-4e80-b06d-cd3625b27d9d div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-87af793a-90da-4e80-b06d-cd3625b27d9d div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-87af793a-90da-4e80-b06d-cd3625b27d9d div.sk-item {z-index: 1;}#sk-87af793a-90da-4e80-b06d-cd3625b27d9d div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-87af793a-90da-4e80-b06d-cd3625b27d9d div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-87af793a-90da-4e80-b06d-cd3625b27d9d div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-87af793a-90da-4e80-b06d-cd3625b27d9d div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-87af793a-90da-4e80-b06d-cd3625b27d9d div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-87af793a-90da-4e80-b06d-cd3625b27d9d div.sk-parallel-item:only-child::after {width: 0;}#sk-87af793a-90da-4e80-b06d-cd3625b27d9d div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-87af793a-90da-4e80-b06d-cd3625b27d9d div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-87af793a-90da-4e80-b06d-cd3625b27d9d div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-87af793a-90da-4e80-b06d-cd3625b27d9d div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-87af793a-90da-4e80-b06d-cd3625b27d9d div.sk-text-repr-fallback {display: none;}</style><div id="sk-87af793a-90da-4e80-b06d-cd3625b27d9d" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="21813d20-1941-497d-80ae-77c347402868" type="checkbox" ><label for="21813d20-1941-497d-80ae-77c347402868" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6304cc94-0e85-4638-809c-ce84f4ce4381" type="checkbox" ><label for="6304cc94-0e85-4638-809c-ce84f4ce4381" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="42fafd63-59f2-4a2c-98ff-c362b6ff6da8" type="checkbox" ><label for="42fafd63-59f2-4a2c-98ff-c362b6ff6da8" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8b466b03-7dbf-4cfa-958e-f3f2fb7633ae" type="checkbox" ><label for="8b466b03-7dbf-4cfa-958e-f3f2fb7633ae" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-a1094ee2-5fa6-4bca-a7a3-0e26d9917f73 {color: black;background-color: white;}#sk-a1094ee2-5fa6-4bca-a7a3-0e26d9917f73 pre{padding: 0;}#sk-a1094ee2-5fa6-4bca-a7a3-0e26d9917f73 div.sk-toggleable {background-color: white;}#sk-a1094ee2-5fa6-4bca-a7a3-0e26d9917f73 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-a1094ee2-5fa6-4bca-a7a3-0e26d9917f73 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-a1094ee2-5fa6-4bca-a7a3-0e26d9917f73 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-a1094ee2-5fa6-4bca-a7a3-0e26d9917f73 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-a1094ee2-5fa6-4bca-a7a3-0e26d9917f73 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-a1094ee2-5fa6-4bca-a7a3-0e26d9917f73 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-a1094ee2-5fa6-4bca-a7a3-0e26d9917f73 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-a1094ee2-5fa6-4bca-a7a3-0e26d9917f73 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-a1094ee2-5fa6-4bca-a7a3-0e26d9917f73 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-a1094ee2-5fa6-4bca-a7a3-0e26d9917f73 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-a1094ee2-5fa6-4bca-a7a3-0e26d9917f73 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-a1094ee2-5fa6-4bca-a7a3-0e26d9917f73 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-a1094ee2-5fa6-4bca-a7a3-0e26d9917f73 div.sk-estimator:hover {background-color: #d4ebff;}#sk-a1094ee2-5fa6-4bca-a7a3-0e26d9917f73 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-a1094ee2-5fa6-4bca-a7a3-0e26d9917f73 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-a1094ee2-5fa6-4bca-a7a3-0e26d9917f73 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-a1094ee2-5fa6-4bca-a7a3-0e26d9917f73 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-a1094ee2-5fa6-4bca-a7a3-0e26d9917f73 div.sk-item {z-index: 1;}#sk-a1094ee2-5fa6-4bca-a7a3-0e26d9917f73 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-a1094ee2-5fa6-4bca-a7a3-0e26d9917f73 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-a1094ee2-5fa6-4bca-a7a3-0e26d9917f73 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-a1094ee2-5fa6-4bca-a7a3-0e26d9917f73 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-a1094ee2-5fa6-4bca-a7a3-0e26d9917f73 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-a1094ee2-5fa6-4bca-a7a3-0e26d9917f73 div.sk-parallel-item:only-child::after {width: 0;}#sk-a1094ee2-5fa6-4bca-a7a3-0e26d9917f73 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-a1094ee2-5fa6-4bca-a7a3-0e26d9917f73 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-a1094ee2-5fa6-4bca-a7a3-0e26d9917f73 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-a1094ee2-5fa6-4bca-a7a3-0e26d9917f73 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-a1094ee2-5fa6-4bca-a7a3-0e26d9917f73 div.sk-text-repr-fallback {display: none;}</style><div id="sk-a1094ee2-5fa6-4bca-a7a3-0e26d9917f73" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="80ece613-15cc-4283-b543-69c66cb97da6" type="checkbox" ><label for="80ece613-15cc-4283-b543-69c66cb97da6" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9f94ed19-a432-4453-aac2-b7c6c4c01f7c" type="checkbox" ><label for="9f94ed19-a432-4453-aac2-b7c6c4c01f7c" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6bec206c-6007-4a91-963f-217a3bbf46bb" type="checkbox" ><label for="6bec206c-6007-4a91-963f-217a3bbf46bb" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-51c9865f-0535-4349-a38d-4368bb8a8175 {color: black;background-color: white;}#sk-51c9865f-0535-4349-a38d-4368bb8a8175 pre{padding: 0;}#sk-51c9865f-0535-4349-a38d-4368bb8a8175 div.sk-toggleable {background-color: white;}#sk-51c9865f-0535-4349-a38d-4368bb8a8175 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-51c9865f-0535-4349-a38d-4368bb8a8175 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-51c9865f-0535-4349-a38d-4368bb8a8175 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-51c9865f-0535-4349-a38d-4368bb8a8175 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-51c9865f-0535-4349-a38d-4368bb8a8175 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-51c9865f-0535-4349-a38d-4368bb8a8175 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-51c9865f-0535-4349-a38d-4368bb8a8175 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-51c9865f-0535-4349-a38d-4368bb8a8175 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-51c9865f-0535-4349-a38d-4368bb8a8175 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-51c9865f-0535-4349-a38d-4368bb8a8175 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-51c9865f-0535-4349-a38d-4368bb8a8175 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-51c9865f-0535-4349-a38d-4368bb8a8175 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-51c9865f-0535-4349-a38d-4368bb8a8175 div.sk-estimator:hover {background-color: #d4ebff;}#sk-51c9865f-0535-4349-a38d-4368bb8a8175 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-51c9865f-0535-4349-a38d-4368bb8a8175 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-51c9865f-0535-4349-a38d-4368bb8a8175 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-51c9865f-0535-4349-a38d-4368bb8a8175 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-51c9865f-0535-4349-a38d-4368bb8a8175 div.sk-item {z-index: 1;}#sk-51c9865f-0535-4349-a38d-4368bb8a8175 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-51c9865f-0535-4349-a38d-4368bb8a8175 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-51c9865f-0535-4349-a38d-4368bb8a8175 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-51c9865f-0535-4349-a38d-4368bb8a8175 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-51c9865f-0535-4349-a38d-4368bb8a8175 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-51c9865f-0535-4349-a38d-4368bb8a8175 div.sk-parallel-item:only-child::after {width: 0;}#sk-51c9865f-0535-4349-a38d-4368bb8a8175 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-51c9865f-0535-4349-a38d-4368bb8a8175 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-51c9865f-0535-4349-a38d-4368bb8a8175 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-51c9865f-0535-4349-a38d-4368bb8a8175 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-51c9865f-0535-4349-a38d-4368bb8a8175 div.sk-text-repr-fallback {display: none;}</style><div id="sk-51c9865f-0535-4349-a38d-4368bb8a8175" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="546f88a8-b2cf-456c-948d-4087f7ccf452" type="checkbox" ><label for="546f88a8-b2cf-456c-948d-4087f7ccf452" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="52f7289f-7c66-4b5d-964b-01e71470ff93" type="checkbox" ><label for="52f7289f-7c66-4b5d-964b-01e71470ff93" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5acff681-aa86-478c-8f32-f4acd389056e" type="checkbox" ><label for="5acff681-aa86-478c-8f32-f4acd389056e" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b6102a34-840b-4212-93f5-19158e167e12" type="checkbox" ><label for="b6102a34-840b-4212-93f5-19158e167e12" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8293d968-d07a-4e8e-915c-ee361aedc763" type="checkbox" ><label for="8293d968-d07a-4e8e-915c-ee361aedc763" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8cc3eaa4-e6fc-4cbb-9c9f-68ece5bce931" type="checkbox" ><label for="8cc3eaa4-e6fc-4cbb-9c9f-68ece5bce931" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ac7ff962-c4ce-4676-88cc-67f0e3a8d2c7" type="checkbox" ><label for="ac7ff962-c4ce-4676-88cc-67f0e3a8d2c7" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f5888f3a-6428-4be5-b1d1-1af70684dcb1" type="checkbox" ><label for="f5888f3a-6428-4be5-b1d1-1af70684dcb1" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6527abf7-7ab7-4859-a322-1c46f6d4d5c3" type="checkbox" ><label for="6527abf7-7ab7-4859-a322-1c46f6d4d5c3" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-13e326eb-fe9f-4759-8aae-7c62cf7d5eb1 {color: black;background-color: white;}#sk-13e326eb-fe9f-4759-8aae-7c62cf7d5eb1 pre{padding: 0;}#sk-13e326eb-fe9f-4759-8aae-7c62cf7d5eb1 div.sk-toggleable {background-color: white;}#sk-13e326eb-fe9f-4759-8aae-7c62cf7d5eb1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-13e326eb-fe9f-4759-8aae-7c62cf7d5eb1 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-13e326eb-fe9f-4759-8aae-7c62cf7d5eb1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-13e326eb-fe9f-4759-8aae-7c62cf7d5eb1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-13e326eb-fe9f-4759-8aae-7c62cf7d5eb1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-13e326eb-fe9f-4759-8aae-7c62cf7d5eb1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-13e326eb-fe9f-4759-8aae-7c62cf7d5eb1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-13e326eb-fe9f-4759-8aae-7c62cf7d5eb1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-13e326eb-fe9f-4759-8aae-7c62cf7d5eb1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-13e326eb-fe9f-4759-8aae-7c62cf7d5eb1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-13e326eb-fe9f-4759-8aae-7c62cf7d5eb1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-13e326eb-fe9f-4759-8aae-7c62cf7d5eb1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-13e326eb-fe9f-4759-8aae-7c62cf7d5eb1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-13e326eb-fe9f-4759-8aae-7c62cf7d5eb1 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-13e326eb-fe9f-4759-8aae-7c62cf7d5eb1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-13e326eb-fe9f-4759-8aae-7c62cf7d5eb1 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-13e326eb-fe9f-4759-8aae-7c62cf7d5eb1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-13e326eb-fe9f-4759-8aae-7c62cf7d5eb1 div.sk-item {z-index: 1;}#sk-13e326eb-fe9f-4759-8aae-7c62cf7d5eb1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-13e326eb-fe9f-4759-8aae-7c62cf7d5eb1 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-13e326eb-fe9f-4759-8aae-7c62cf7d5eb1 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-13e326eb-fe9f-4759-8aae-7c62cf7d5eb1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-13e326eb-fe9f-4759-8aae-7c62cf7d5eb1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-13e326eb-fe9f-4759-8aae-7c62cf7d5eb1 div.sk-parallel-item:only-child::after {width: 0;}#sk-13e326eb-fe9f-4759-8aae-7c62cf7d5eb1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-13e326eb-fe9f-4759-8aae-7c62cf7d5eb1 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-13e326eb-fe9f-4759-8aae-7c62cf7d5eb1 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-13e326eb-fe9f-4759-8aae-7c62cf7d5eb1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-13e326eb-fe9f-4759-8aae-7c62cf7d5eb1 div.sk-text-repr-fallback {display: none;}</style><div id="sk-13e326eb-fe9f-4759-8aae-7c62cf7d5eb1" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a71f91c9-7bed-4474-9b8c-df85c2772fd1" type="checkbox" ><label for="a71f91c9-7bed-4474-9b8c-df85c2772fd1" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8c2d4a6f-da23-4ebd-9ecd-935470cbb740" type="checkbox" ><label for="8c2d4a6f-da23-4ebd-9ecd-935470cbb740" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6a9bea89-1833-42f0-82b7-d3f66b50a09f" type="checkbox" ><label for="6a9bea89-1833-42f0-82b7-d3f66b50a09f" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e4326665-d545-4978-bb50-96e24d83cd15" type="checkbox" ><label for="e4326665-d545-4978-bb50-96e24d83cd15" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="53f307a2-8d6f-4f54-a2e9-d60cbe013f98" type="checkbox" ><label for="53f307a2-8d6f-4f54-a2e9-d60cbe013f98" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bb220767-727b-4435-b71e-d677df3824a8" type="checkbox" ><label for="bb220767-727b-4435-b71e-d677df3824a8" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cc5b4055-1d60-4b5b-8482-9395cad66ad2" type="checkbox" ><label for="cc5b4055-1d60-4b5b-8482-9395cad66ad2" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8f79fc06-0a4f-43dd-8a32-61f1a5cda9d3" type="checkbox" ><label for="8f79fc06-0a4f-43dd-8a32-61f1a5cda9d3" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b206f7c2-c5e8-4f36-b28d-db54669aa1ea" type="checkbox" ><label for="b206f7c2-c5e8-4f36-b28d-db54669aa1ea" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.133 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
