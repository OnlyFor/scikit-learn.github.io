
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-0e4100a4-8845-40fe-bf7d-7a8b94af8579 {color: black;background-color: white;}#sk-0e4100a4-8845-40fe-bf7d-7a8b94af8579 pre{padding: 0;}#sk-0e4100a4-8845-40fe-bf7d-7a8b94af8579 div.sk-toggleable {background-color: white;}#sk-0e4100a4-8845-40fe-bf7d-7a8b94af8579 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-0e4100a4-8845-40fe-bf7d-7a8b94af8579 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-0e4100a4-8845-40fe-bf7d-7a8b94af8579 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-0e4100a4-8845-40fe-bf7d-7a8b94af8579 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-0e4100a4-8845-40fe-bf7d-7a8b94af8579 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-0e4100a4-8845-40fe-bf7d-7a8b94af8579 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-0e4100a4-8845-40fe-bf7d-7a8b94af8579 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-0e4100a4-8845-40fe-bf7d-7a8b94af8579 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-0e4100a4-8845-40fe-bf7d-7a8b94af8579 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-0e4100a4-8845-40fe-bf7d-7a8b94af8579 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-0e4100a4-8845-40fe-bf7d-7a8b94af8579 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-0e4100a4-8845-40fe-bf7d-7a8b94af8579 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-0e4100a4-8845-40fe-bf7d-7a8b94af8579 div.sk-estimator:hover {background-color: #d4ebff;}#sk-0e4100a4-8845-40fe-bf7d-7a8b94af8579 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-0e4100a4-8845-40fe-bf7d-7a8b94af8579 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-0e4100a4-8845-40fe-bf7d-7a8b94af8579 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-0e4100a4-8845-40fe-bf7d-7a8b94af8579 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-0e4100a4-8845-40fe-bf7d-7a8b94af8579 div.sk-item {z-index: 1;}#sk-0e4100a4-8845-40fe-bf7d-7a8b94af8579 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-0e4100a4-8845-40fe-bf7d-7a8b94af8579 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-0e4100a4-8845-40fe-bf7d-7a8b94af8579 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-0e4100a4-8845-40fe-bf7d-7a8b94af8579 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-0e4100a4-8845-40fe-bf7d-7a8b94af8579 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-0e4100a4-8845-40fe-bf7d-7a8b94af8579 div.sk-parallel-item:only-child::after {width: 0;}#sk-0e4100a4-8845-40fe-bf7d-7a8b94af8579 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-0e4100a4-8845-40fe-bf7d-7a8b94af8579 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-0e4100a4-8845-40fe-bf7d-7a8b94af8579 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-0e4100a4-8845-40fe-bf7d-7a8b94af8579 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-0e4100a4-8845-40fe-bf7d-7a8b94af8579 div.sk-text-repr-fallback {display: none;}</style><div id="sk-0e4100a4-8845-40fe-bf7d-7a8b94af8579" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c817ffcd-806a-4ec0-88a9-e1bf9d976bd7" type="checkbox" ><label for="c817ffcd-806a-4ec0-88a9-e1bf9d976bd7" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bb1d87c3-1026-4a35-9dd5-bee81944b56c" type="checkbox" ><label for="bb1d87c3-1026-4a35-9dd5-bee81944b56c" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="381f96ec-62f6-4783-9fa0-ac76cc338949" type="checkbox" ><label for="381f96ec-62f6-4783-9fa0-ac76cc338949" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-1239483e-34fd-43fc-b847-bbe88038efba {color: black;background-color: white;}#sk-1239483e-34fd-43fc-b847-bbe88038efba pre{padding: 0;}#sk-1239483e-34fd-43fc-b847-bbe88038efba div.sk-toggleable {background-color: white;}#sk-1239483e-34fd-43fc-b847-bbe88038efba label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-1239483e-34fd-43fc-b847-bbe88038efba label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-1239483e-34fd-43fc-b847-bbe88038efba label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-1239483e-34fd-43fc-b847-bbe88038efba div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-1239483e-34fd-43fc-b847-bbe88038efba div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-1239483e-34fd-43fc-b847-bbe88038efba div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-1239483e-34fd-43fc-b847-bbe88038efba input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-1239483e-34fd-43fc-b847-bbe88038efba input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-1239483e-34fd-43fc-b847-bbe88038efba div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-1239483e-34fd-43fc-b847-bbe88038efba div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-1239483e-34fd-43fc-b847-bbe88038efba input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-1239483e-34fd-43fc-b847-bbe88038efba div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-1239483e-34fd-43fc-b847-bbe88038efba div.sk-estimator:hover {background-color: #d4ebff;}#sk-1239483e-34fd-43fc-b847-bbe88038efba div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-1239483e-34fd-43fc-b847-bbe88038efba div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-1239483e-34fd-43fc-b847-bbe88038efba div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-1239483e-34fd-43fc-b847-bbe88038efba div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-1239483e-34fd-43fc-b847-bbe88038efba div.sk-item {z-index: 1;}#sk-1239483e-34fd-43fc-b847-bbe88038efba div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-1239483e-34fd-43fc-b847-bbe88038efba div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-1239483e-34fd-43fc-b847-bbe88038efba div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-1239483e-34fd-43fc-b847-bbe88038efba div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-1239483e-34fd-43fc-b847-bbe88038efba div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-1239483e-34fd-43fc-b847-bbe88038efba div.sk-parallel-item:only-child::after {width: 0;}#sk-1239483e-34fd-43fc-b847-bbe88038efba div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-1239483e-34fd-43fc-b847-bbe88038efba div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-1239483e-34fd-43fc-b847-bbe88038efba div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-1239483e-34fd-43fc-b847-bbe88038efba div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-1239483e-34fd-43fc-b847-bbe88038efba div.sk-text-repr-fallback {display: none;}</style><div id="sk-1239483e-34fd-43fc-b847-bbe88038efba" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1a54d373-257d-4ea8-b0a5-17bc4736d75b" type="checkbox" ><label for="1a54d373-257d-4ea8-b0a5-17bc4736d75b" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="09896daa-bc75-4243-b900-5552ae432c48" type="checkbox" ><label for="09896daa-bc75-4243-b900-5552ae432c48" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8e74296e-49e7-4704-80ea-b1c68ee76057" type="checkbox" ><label for="8e74296e-49e7-4704-80ea-b1c68ee76057" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="051f6d52-c216-48d8-8038-0af014ff694e" type="checkbox" ><label for="051f6d52-c216-48d8-8038-0af014ff694e" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-a58f4efa-e0f2-4a31-8aa4-c032cd5169a8 {color: black;background-color: white;}#sk-a58f4efa-e0f2-4a31-8aa4-c032cd5169a8 pre{padding: 0;}#sk-a58f4efa-e0f2-4a31-8aa4-c032cd5169a8 div.sk-toggleable {background-color: white;}#sk-a58f4efa-e0f2-4a31-8aa4-c032cd5169a8 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-a58f4efa-e0f2-4a31-8aa4-c032cd5169a8 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-a58f4efa-e0f2-4a31-8aa4-c032cd5169a8 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-a58f4efa-e0f2-4a31-8aa4-c032cd5169a8 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-a58f4efa-e0f2-4a31-8aa4-c032cd5169a8 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-a58f4efa-e0f2-4a31-8aa4-c032cd5169a8 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-a58f4efa-e0f2-4a31-8aa4-c032cd5169a8 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-a58f4efa-e0f2-4a31-8aa4-c032cd5169a8 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-a58f4efa-e0f2-4a31-8aa4-c032cd5169a8 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-a58f4efa-e0f2-4a31-8aa4-c032cd5169a8 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-a58f4efa-e0f2-4a31-8aa4-c032cd5169a8 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-a58f4efa-e0f2-4a31-8aa4-c032cd5169a8 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-a58f4efa-e0f2-4a31-8aa4-c032cd5169a8 div.sk-estimator:hover {background-color: #d4ebff;}#sk-a58f4efa-e0f2-4a31-8aa4-c032cd5169a8 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-a58f4efa-e0f2-4a31-8aa4-c032cd5169a8 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-a58f4efa-e0f2-4a31-8aa4-c032cd5169a8 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-a58f4efa-e0f2-4a31-8aa4-c032cd5169a8 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-a58f4efa-e0f2-4a31-8aa4-c032cd5169a8 div.sk-item {z-index: 1;}#sk-a58f4efa-e0f2-4a31-8aa4-c032cd5169a8 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-a58f4efa-e0f2-4a31-8aa4-c032cd5169a8 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-a58f4efa-e0f2-4a31-8aa4-c032cd5169a8 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-a58f4efa-e0f2-4a31-8aa4-c032cd5169a8 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-a58f4efa-e0f2-4a31-8aa4-c032cd5169a8 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-a58f4efa-e0f2-4a31-8aa4-c032cd5169a8 div.sk-parallel-item:only-child::after {width: 0;}#sk-a58f4efa-e0f2-4a31-8aa4-c032cd5169a8 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-a58f4efa-e0f2-4a31-8aa4-c032cd5169a8 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-a58f4efa-e0f2-4a31-8aa4-c032cd5169a8 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-a58f4efa-e0f2-4a31-8aa4-c032cd5169a8 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-a58f4efa-e0f2-4a31-8aa4-c032cd5169a8 div.sk-text-repr-fallback {display: none;}</style><div id="sk-a58f4efa-e0f2-4a31-8aa4-c032cd5169a8" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c009c66d-c358-4db7-bff5-c80a36f54fc4" type="checkbox" ><label for="c009c66d-c358-4db7-bff5-c80a36f54fc4" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cb16d967-8b21-4ab8-871c-4a5fad1446d5" type="checkbox" ><label for="cb16d967-8b21-4ab8-871c-4a5fad1446d5" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="af414808-d9d0-4872-94fe-93e54cc989f5" type="checkbox" ><label for="af414808-d9d0-4872-94fe-93e54cc989f5" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-63a8b1ce-c985-47b0-90d4-75d9c740f2ae {color: black;background-color: white;}#sk-63a8b1ce-c985-47b0-90d4-75d9c740f2ae pre{padding: 0;}#sk-63a8b1ce-c985-47b0-90d4-75d9c740f2ae div.sk-toggleable {background-color: white;}#sk-63a8b1ce-c985-47b0-90d4-75d9c740f2ae label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-63a8b1ce-c985-47b0-90d4-75d9c740f2ae label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-63a8b1ce-c985-47b0-90d4-75d9c740f2ae label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-63a8b1ce-c985-47b0-90d4-75d9c740f2ae div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-63a8b1ce-c985-47b0-90d4-75d9c740f2ae div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-63a8b1ce-c985-47b0-90d4-75d9c740f2ae div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-63a8b1ce-c985-47b0-90d4-75d9c740f2ae input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-63a8b1ce-c985-47b0-90d4-75d9c740f2ae input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-63a8b1ce-c985-47b0-90d4-75d9c740f2ae div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-63a8b1ce-c985-47b0-90d4-75d9c740f2ae div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-63a8b1ce-c985-47b0-90d4-75d9c740f2ae input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-63a8b1ce-c985-47b0-90d4-75d9c740f2ae div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-63a8b1ce-c985-47b0-90d4-75d9c740f2ae div.sk-estimator:hover {background-color: #d4ebff;}#sk-63a8b1ce-c985-47b0-90d4-75d9c740f2ae div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-63a8b1ce-c985-47b0-90d4-75d9c740f2ae div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-63a8b1ce-c985-47b0-90d4-75d9c740f2ae div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-63a8b1ce-c985-47b0-90d4-75d9c740f2ae div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-63a8b1ce-c985-47b0-90d4-75d9c740f2ae div.sk-item {z-index: 1;}#sk-63a8b1ce-c985-47b0-90d4-75d9c740f2ae div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-63a8b1ce-c985-47b0-90d4-75d9c740f2ae div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-63a8b1ce-c985-47b0-90d4-75d9c740f2ae div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-63a8b1ce-c985-47b0-90d4-75d9c740f2ae div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-63a8b1ce-c985-47b0-90d4-75d9c740f2ae div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-63a8b1ce-c985-47b0-90d4-75d9c740f2ae div.sk-parallel-item:only-child::after {width: 0;}#sk-63a8b1ce-c985-47b0-90d4-75d9c740f2ae div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-63a8b1ce-c985-47b0-90d4-75d9c740f2ae div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-63a8b1ce-c985-47b0-90d4-75d9c740f2ae div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-63a8b1ce-c985-47b0-90d4-75d9c740f2ae div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-63a8b1ce-c985-47b0-90d4-75d9c740f2ae div.sk-text-repr-fallback {display: none;}</style><div id="sk-63a8b1ce-c985-47b0-90d4-75d9c740f2ae" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="60b127c7-5a1f-48c9-a4d9-2a657e973ce5" type="checkbox" ><label for="60b127c7-5a1f-48c9-a4d9-2a657e973ce5" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f62c0054-2828-475b-bac7-d131f35ce85b" type="checkbox" ><label for="f62c0054-2828-475b-bac7-d131f35ce85b" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="736b6ec9-f53a-4c14-b27c-28da074351dc" type="checkbox" ><label for="736b6ec9-f53a-4c14-b27c-28da074351dc" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7e307cf5-ff25-4a18-bd0b-3c4ce6ce0620" type="checkbox" ><label for="7e307cf5-ff25-4a18-bd0b-3c4ce6ce0620" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a7d3bd72-4a7e-4c65-880e-6d9e3ca063e6" type="checkbox" ><label for="a7d3bd72-4a7e-4c65-880e-6d9e3ca063e6" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ae0ac3d4-6c13-4ddf-a448-0f453d025620" type="checkbox" ><label for="ae0ac3d4-6c13-4ddf-a448-0f453d025620" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8eee7e60-bd73-4954-8d2d-dca38b0872d7" type="checkbox" ><label for="8eee7e60-bd73-4954-8d2d-dca38b0872d7" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="12bd000b-ea97-4792-a369-46f3e56c060e" type="checkbox" ><label for="12bd000b-ea97-4792-a369-46f3e56c060e" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fd2a2572-52ed-4172-abce-170e71031a9a" type="checkbox" ><label for="fd2a2572-52ed-4172-abce-170e71031a9a" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-1e230253-e9d9-4e56-a2c9-27f478a8b144 {color: black;background-color: white;}#sk-1e230253-e9d9-4e56-a2c9-27f478a8b144 pre{padding: 0;}#sk-1e230253-e9d9-4e56-a2c9-27f478a8b144 div.sk-toggleable {background-color: white;}#sk-1e230253-e9d9-4e56-a2c9-27f478a8b144 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-1e230253-e9d9-4e56-a2c9-27f478a8b144 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-1e230253-e9d9-4e56-a2c9-27f478a8b144 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-1e230253-e9d9-4e56-a2c9-27f478a8b144 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-1e230253-e9d9-4e56-a2c9-27f478a8b144 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-1e230253-e9d9-4e56-a2c9-27f478a8b144 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-1e230253-e9d9-4e56-a2c9-27f478a8b144 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-1e230253-e9d9-4e56-a2c9-27f478a8b144 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-1e230253-e9d9-4e56-a2c9-27f478a8b144 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-1e230253-e9d9-4e56-a2c9-27f478a8b144 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-1e230253-e9d9-4e56-a2c9-27f478a8b144 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-1e230253-e9d9-4e56-a2c9-27f478a8b144 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-1e230253-e9d9-4e56-a2c9-27f478a8b144 div.sk-estimator:hover {background-color: #d4ebff;}#sk-1e230253-e9d9-4e56-a2c9-27f478a8b144 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-1e230253-e9d9-4e56-a2c9-27f478a8b144 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-1e230253-e9d9-4e56-a2c9-27f478a8b144 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-1e230253-e9d9-4e56-a2c9-27f478a8b144 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-1e230253-e9d9-4e56-a2c9-27f478a8b144 div.sk-item {z-index: 1;}#sk-1e230253-e9d9-4e56-a2c9-27f478a8b144 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-1e230253-e9d9-4e56-a2c9-27f478a8b144 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-1e230253-e9d9-4e56-a2c9-27f478a8b144 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-1e230253-e9d9-4e56-a2c9-27f478a8b144 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-1e230253-e9d9-4e56-a2c9-27f478a8b144 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-1e230253-e9d9-4e56-a2c9-27f478a8b144 div.sk-parallel-item:only-child::after {width: 0;}#sk-1e230253-e9d9-4e56-a2c9-27f478a8b144 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-1e230253-e9d9-4e56-a2c9-27f478a8b144 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-1e230253-e9d9-4e56-a2c9-27f478a8b144 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-1e230253-e9d9-4e56-a2c9-27f478a8b144 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-1e230253-e9d9-4e56-a2c9-27f478a8b144 div.sk-text-repr-fallback {display: none;}</style><div id="sk-1e230253-e9d9-4e56-a2c9-27f478a8b144" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bf93c4f7-7f92-4e75-b197-50c2c6147f57" type="checkbox" ><label for="bf93c4f7-7f92-4e75-b197-50c2c6147f57" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f832946d-9972-411c-8018-5c171198a516" type="checkbox" ><label for="f832946d-9972-411c-8018-5c171198a516" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ad9896c4-41dc-440a-9340-564e11ade495" type="checkbox" ><label for="ad9896c4-41dc-440a-9340-564e11ade495" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8db24166-0c87-402b-875b-dee74ea35ef9" type="checkbox" ><label for="8db24166-0c87-402b-875b-dee74ea35ef9" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2c868fad-f5f9-4979-978b-cd092d8ceacd" type="checkbox" ><label for="2c868fad-f5f9-4979-978b-cd092d8ceacd" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="76707215-2a16-42b6-8449-06b8d524d222" type="checkbox" ><label for="76707215-2a16-42b6-8449-06b8d524d222" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bac93a71-4034-4e0c-9fd7-b8669b7193e3" type="checkbox" ><label for="bac93a71-4034-4e0c-9fd7-b8669b7193e3" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="58d40e37-0c03-4b9d-acf5-4d0857400a0a" type="checkbox" ><label for="58d40e37-0c03-4b9d-acf5-4d0857400a0a" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9377237c-7758-4ddd-8a80-747d60dc13dd" type="checkbox" ><label for="9377237c-7758-4ddd-8a80-747d60dc13dd" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.074 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
