
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-e4d33f3c-41ad-4b9c-9053-f86823000cdb {color: black;background-color: white;}#sk-e4d33f3c-41ad-4b9c-9053-f86823000cdb pre{padding: 0;}#sk-e4d33f3c-41ad-4b9c-9053-f86823000cdb div.sk-toggleable {background-color: white;}#sk-e4d33f3c-41ad-4b9c-9053-f86823000cdb label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-e4d33f3c-41ad-4b9c-9053-f86823000cdb label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-e4d33f3c-41ad-4b9c-9053-f86823000cdb label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-e4d33f3c-41ad-4b9c-9053-f86823000cdb div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-e4d33f3c-41ad-4b9c-9053-f86823000cdb div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-e4d33f3c-41ad-4b9c-9053-f86823000cdb div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-e4d33f3c-41ad-4b9c-9053-f86823000cdb input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-e4d33f3c-41ad-4b9c-9053-f86823000cdb input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-e4d33f3c-41ad-4b9c-9053-f86823000cdb div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-e4d33f3c-41ad-4b9c-9053-f86823000cdb div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-e4d33f3c-41ad-4b9c-9053-f86823000cdb input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-e4d33f3c-41ad-4b9c-9053-f86823000cdb div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-e4d33f3c-41ad-4b9c-9053-f86823000cdb div.sk-estimator:hover {background-color: #d4ebff;}#sk-e4d33f3c-41ad-4b9c-9053-f86823000cdb div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-e4d33f3c-41ad-4b9c-9053-f86823000cdb div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-e4d33f3c-41ad-4b9c-9053-f86823000cdb div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-e4d33f3c-41ad-4b9c-9053-f86823000cdb div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-e4d33f3c-41ad-4b9c-9053-f86823000cdb div.sk-item {z-index: 1;}#sk-e4d33f3c-41ad-4b9c-9053-f86823000cdb div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-e4d33f3c-41ad-4b9c-9053-f86823000cdb div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-e4d33f3c-41ad-4b9c-9053-f86823000cdb div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-e4d33f3c-41ad-4b9c-9053-f86823000cdb div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-e4d33f3c-41ad-4b9c-9053-f86823000cdb div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-e4d33f3c-41ad-4b9c-9053-f86823000cdb div.sk-parallel-item:only-child::after {width: 0;}#sk-e4d33f3c-41ad-4b9c-9053-f86823000cdb div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-e4d33f3c-41ad-4b9c-9053-f86823000cdb div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-e4d33f3c-41ad-4b9c-9053-f86823000cdb div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-e4d33f3c-41ad-4b9c-9053-f86823000cdb div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-e4d33f3c-41ad-4b9c-9053-f86823000cdb div.sk-text-repr-fallback {display: none;}</style><div id="sk-e4d33f3c-41ad-4b9c-9053-f86823000cdb" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="97fd3b96-8857-445a-a5db-315f221390bc" type="checkbox" ><label for="97fd3b96-8857-445a-a5db-315f221390bc" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1f376cb0-606e-4f72-9a86-e59f82a978f9" type="checkbox" ><label for="1f376cb0-606e-4f72-9a86-e59f82a978f9" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="179bb1fe-e263-44b9-9b29-d79475e9027e" type="checkbox" ><label for="179bb1fe-e263-44b9-9b29-d79475e9027e" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-f7401149-e4e0-4283-b3f4-d30781f02df3 {color: black;background-color: white;}#sk-f7401149-e4e0-4283-b3f4-d30781f02df3 pre{padding: 0;}#sk-f7401149-e4e0-4283-b3f4-d30781f02df3 div.sk-toggleable {background-color: white;}#sk-f7401149-e4e0-4283-b3f4-d30781f02df3 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-f7401149-e4e0-4283-b3f4-d30781f02df3 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-f7401149-e4e0-4283-b3f4-d30781f02df3 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-f7401149-e4e0-4283-b3f4-d30781f02df3 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-f7401149-e4e0-4283-b3f4-d30781f02df3 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-f7401149-e4e0-4283-b3f4-d30781f02df3 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-f7401149-e4e0-4283-b3f4-d30781f02df3 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-f7401149-e4e0-4283-b3f4-d30781f02df3 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-f7401149-e4e0-4283-b3f4-d30781f02df3 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-f7401149-e4e0-4283-b3f4-d30781f02df3 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-f7401149-e4e0-4283-b3f4-d30781f02df3 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-f7401149-e4e0-4283-b3f4-d30781f02df3 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-f7401149-e4e0-4283-b3f4-d30781f02df3 div.sk-estimator:hover {background-color: #d4ebff;}#sk-f7401149-e4e0-4283-b3f4-d30781f02df3 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-f7401149-e4e0-4283-b3f4-d30781f02df3 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-f7401149-e4e0-4283-b3f4-d30781f02df3 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-f7401149-e4e0-4283-b3f4-d30781f02df3 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-f7401149-e4e0-4283-b3f4-d30781f02df3 div.sk-item {z-index: 1;}#sk-f7401149-e4e0-4283-b3f4-d30781f02df3 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-f7401149-e4e0-4283-b3f4-d30781f02df3 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-f7401149-e4e0-4283-b3f4-d30781f02df3 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-f7401149-e4e0-4283-b3f4-d30781f02df3 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-f7401149-e4e0-4283-b3f4-d30781f02df3 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-f7401149-e4e0-4283-b3f4-d30781f02df3 div.sk-parallel-item:only-child::after {width: 0;}#sk-f7401149-e4e0-4283-b3f4-d30781f02df3 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-f7401149-e4e0-4283-b3f4-d30781f02df3 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-f7401149-e4e0-4283-b3f4-d30781f02df3 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-f7401149-e4e0-4283-b3f4-d30781f02df3 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-f7401149-e4e0-4283-b3f4-d30781f02df3 div.sk-text-repr-fallback {display: none;}</style><div id="sk-f7401149-e4e0-4283-b3f4-d30781f02df3" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="dd82efa9-451a-4c5c-b829-d2e9ccbdc1a7" type="checkbox" ><label for="dd82efa9-451a-4c5c-b829-d2e9ccbdc1a7" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7033777d-ba48-482a-8877-e33e3d6da4b6" type="checkbox" ><label for="7033777d-ba48-482a-8877-e33e3d6da4b6" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="184213e4-aa82-423f-bb6d-48095af40221" type="checkbox" ><label for="184213e4-aa82-423f-bb6d-48095af40221" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0739de07-fd01-48da-8b42-9721c73582f4" type="checkbox" ><label for="0739de07-fd01-48da-8b42-9721c73582f4" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-cc782114-4aad-4049-b07c-ae6f16f6e45d {color: black;background-color: white;}#sk-cc782114-4aad-4049-b07c-ae6f16f6e45d pre{padding: 0;}#sk-cc782114-4aad-4049-b07c-ae6f16f6e45d div.sk-toggleable {background-color: white;}#sk-cc782114-4aad-4049-b07c-ae6f16f6e45d label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-cc782114-4aad-4049-b07c-ae6f16f6e45d label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-cc782114-4aad-4049-b07c-ae6f16f6e45d label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-cc782114-4aad-4049-b07c-ae6f16f6e45d div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-cc782114-4aad-4049-b07c-ae6f16f6e45d div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-cc782114-4aad-4049-b07c-ae6f16f6e45d div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-cc782114-4aad-4049-b07c-ae6f16f6e45d input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-cc782114-4aad-4049-b07c-ae6f16f6e45d input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-cc782114-4aad-4049-b07c-ae6f16f6e45d div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-cc782114-4aad-4049-b07c-ae6f16f6e45d div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-cc782114-4aad-4049-b07c-ae6f16f6e45d input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-cc782114-4aad-4049-b07c-ae6f16f6e45d div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-cc782114-4aad-4049-b07c-ae6f16f6e45d div.sk-estimator:hover {background-color: #d4ebff;}#sk-cc782114-4aad-4049-b07c-ae6f16f6e45d div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-cc782114-4aad-4049-b07c-ae6f16f6e45d div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-cc782114-4aad-4049-b07c-ae6f16f6e45d div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-cc782114-4aad-4049-b07c-ae6f16f6e45d div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-cc782114-4aad-4049-b07c-ae6f16f6e45d div.sk-item {z-index: 1;}#sk-cc782114-4aad-4049-b07c-ae6f16f6e45d div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-cc782114-4aad-4049-b07c-ae6f16f6e45d div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-cc782114-4aad-4049-b07c-ae6f16f6e45d div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-cc782114-4aad-4049-b07c-ae6f16f6e45d div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-cc782114-4aad-4049-b07c-ae6f16f6e45d div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-cc782114-4aad-4049-b07c-ae6f16f6e45d div.sk-parallel-item:only-child::after {width: 0;}#sk-cc782114-4aad-4049-b07c-ae6f16f6e45d div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-cc782114-4aad-4049-b07c-ae6f16f6e45d div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-cc782114-4aad-4049-b07c-ae6f16f6e45d div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-cc782114-4aad-4049-b07c-ae6f16f6e45d div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-cc782114-4aad-4049-b07c-ae6f16f6e45d div.sk-text-repr-fallback {display: none;}</style><div id="sk-cc782114-4aad-4049-b07c-ae6f16f6e45d" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="26bb1051-91a2-4c55-9267-3a468773879f" type="checkbox" ><label for="26bb1051-91a2-4c55-9267-3a468773879f" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="eebc4ddf-6f77-4a51-a69b-e4956e7f93a6" type="checkbox" ><label for="eebc4ddf-6f77-4a51-a69b-e4956e7f93a6" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d58a7054-0dad-4774-9b44-3e4ec0211ec1" type="checkbox" ><label for="d58a7054-0dad-4774-9b44-3e4ec0211ec1" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-d011d20a-eec2-4733-a766-c562a6d21e8f {color: black;background-color: white;}#sk-d011d20a-eec2-4733-a766-c562a6d21e8f pre{padding: 0;}#sk-d011d20a-eec2-4733-a766-c562a6d21e8f div.sk-toggleable {background-color: white;}#sk-d011d20a-eec2-4733-a766-c562a6d21e8f label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-d011d20a-eec2-4733-a766-c562a6d21e8f label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-d011d20a-eec2-4733-a766-c562a6d21e8f label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-d011d20a-eec2-4733-a766-c562a6d21e8f div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-d011d20a-eec2-4733-a766-c562a6d21e8f div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-d011d20a-eec2-4733-a766-c562a6d21e8f div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-d011d20a-eec2-4733-a766-c562a6d21e8f input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-d011d20a-eec2-4733-a766-c562a6d21e8f input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-d011d20a-eec2-4733-a766-c562a6d21e8f div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-d011d20a-eec2-4733-a766-c562a6d21e8f div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-d011d20a-eec2-4733-a766-c562a6d21e8f input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-d011d20a-eec2-4733-a766-c562a6d21e8f div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-d011d20a-eec2-4733-a766-c562a6d21e8f div.sk-estimator:hover {background-color: #d4ebff;}#sk-d011d20a-eec2-4733-a766-c562a6d21e8f div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-d011d20a-eec2-4733-a766-c562a6d21e8f div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-d011d20a-eec2-4733-a766-c562a6d21e8f div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-d011d20a-eec2-4733-a766-c562a6d21e8f div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-d011d20a-eec2-4733-a766-c562a6d21e8f div.sk-item {z-index: 1;}#sk-d011d20a-eec2-4733-a766-c562a6d21e8f div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-d011d20a-eec2-4733-a766-c562a6d21e8f div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-d011d20a-eec2-4733-a766-c562a6d21e8f div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-d011d20a-eec2-4733-a766-c562a6d21e8f div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-d011d20a-eec2-4733-a766-c562a6d21e8f div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-d011d20a-eec2-4733-a766-c562a6d21e8f div.sk-parallel-item:only-child::after {width: 0;}#sk-d011d20a-eec2-4733-a766-c562a6d21e8f div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-d011d20a-eec2-4733-a766-c562a6d21e8f div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-d011d20a-eec2-4733-a766-c562a6d21e8f div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-d011d20a-eec2-4733-a766-c562a6d21e8f div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-d011d20a-eec2-4733-a766-c562a6d21e8f div.sk-text-repr-fallback {display: none;}</style><div id="sk-d011d20a-eec2-4733-a766-c562a6d21e8f" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a5aa3dae-e4cb-4ad5-a06a-de2a2680ca64" type="checkbox" ><label for="a5aa3dae-e4cb-4ad5-a06a-de2a2680ca64" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="75fd9b7b-f1b4-49c4-b9c7-79fcef6b12d0" type="checkbox" ><label for="75fd9b7b-f1b4-49c4-b9c7-79fcef6b12d0" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b867d2dd-112c-43f7-98be-f6f3e1a38ddc" type="checkbox" ><label for="b867d2dd-112c-43f7-98be-f6f3e1a38ddc" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0f3dcfb0-f873-4347-ae81-9952c3279821" type="checkbox" ><label for="0f3dcfb0-f873-4347-ae81-9952c3279821" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0d2699ae-9ae8-41bc-8a2b-4fda3a681e3f" type="checkbox" ><label for="0d2699ae-9ae8-41bc-8a2b-4fda3a681e3f" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="20d5d9cb-939e-4b32-978e-1135d2c7a8c6" type="checkbox" ><label for="20d5d9cb-939e-4b32-978e-1135d2c7a8c6" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4948447c-0110-46c7-902d-2f8e7da1c714" type="checkbox" ><label for="4948447c-0110-46c7-902d-2f8e7da1c714" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9305d8c1-5d14-44ff-a20e-a2f12a4ee59c" type="checkbox" ><label for="9305d8c1-5d14-44ff-a20e-a2f12a4ee59c" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8abafdb6-3853-4375-8640-e0f36ff38969" type="checkbox" ><label for="8abafdb6-3853-4375-8640-e0f36ff38969" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-87c6c11d-125c-4460-a568-17a155961cd4 {color: black;background-color: white;}#sk-87c6c11d-125c-4460-a568-17a155961cd4 pre{padding: 0;}#sk-87c6c11d-125c-4460-a568-17a155961cd4 div.sk-toggleable {background-color: white;}#sk-87c6c11d-125c-4460-a568-17a155961cd4 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-87c6c11d-125c-4460-a568-17a155961cd4 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-87c6c11d-125c-4460-a568-17a155961cd4 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-87c6c11d-125c-4460-a568-17a155961cd4 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-87c6c11d-125c-4460-a568-17a155961cd4 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-87c6c11d-125c-4460-a568-17a155961cd4 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-87c6c11d-125c-4460-a568-17a155961cd4 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-87c6c11d-125c-4460-a568-17a155961cd4 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-87c6c11d-125c-4460-a568-17a155961cd4 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-87c6c11d-125c-4460-a568-17a155961cd4 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-87c6c11d-125c-4460-a568-17a155961cd4 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-87c6c11d-125c-4460-a568-17a155961cd4 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-87c6c11d-125c-4460-a568-17a155961cd4 div.sk-estimator:hover {background-color: #d4ebff;}#sk-87c6c11d-125c-4460-a568-17a155961cd4 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-87c6c11d-125c-4460-a568-17a155961cd4 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-87c6c11d-125c-4460-a568-17a155961cd4 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-87c6c11d-125c-4460-a568-17a155961cd4 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-87c6c11d-125c-4460-a568-17a155961cd4 div.sk-item {z-index: 1;}#sk-87c6c11d-125c-4460-a568-17a155961cd4 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-87c6c11d-125c-4460-a568-17a155961cd4 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-87c6c11d-125c-4460-a568-17a155961cd4 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-87c6c11d-125c-4460-a568-17a155961cd4 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-87c6c11d-125c-4460-a568-17a155961cd4 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-87c6c11d-125c-4460-a568-17a155961cd4 div.sk-parallel-item:only-child::after {width: 0;}#sk-87c6c11d-125c-4460-a568-17a155961cd4 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-87c6c11d-125c-4460-a568-17a155961cd4 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-87c6c11d-125c-4460-a568-17a155961cd4 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-87c6c11d-125c-4460-a568-17a155961cd4 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-87c6c11d-125c-4460-a568-17a155961cd4 div.sk-text-repr-fallback {display: none;}</style><div id="sk-87c6c11d-125c-4460-a568-17a155961cd4" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ca878f6e-844c-4ca6-85bc-36902b463c31" type="checkbox" ><label for="ca878f6e-844c-4ca6-85bc-36902b463c31" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1368de0a-4470-4f99-9e23-26b019070cec" type="checkbox" ><label for="1368de0a-4470-4f99-9e23-26b019070cec" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="39eaaaaf-031c-451b-9061-14907a4acbad" type="checkbox" ><label for="39eaaaaf-031c-451b-9061-14907a4acbad" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1e2a0681-e4d8-4f18-9895-188f8c4c72a4" type="checkbox" ><label for="1e2a0681-e4d8-4f18-9895-188f8c4c72a4" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f9282921-e1a8-4a2f-8e46-ce10f77b3197" type="checkbox" ><label for="f9282921-e1a8-4a2f-8e46-ce10f77b3197" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="874de232-a9e6-41c0-9072-d51ecb49ed35" type="checkbox" ><label for="874de232-a9e6-41c0-9072-d51ecb49ed35" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9a74590c-bd0d-44da-8308-1034a658988a" type="checkbox" ><label for="9a74590c-bd0d-44da-8308-1034a658988a" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9885a558-4f57-4d16-8ae8-2f682108f1e5" type="checkbox" ><label for="9885a558-4f57-4d16-8ae8-2f682108f1e5" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bf429662-d51e-43ed-a880-13ed8435b0ca" type="checkbox" ><label for="bf429662-d51e-43ed-a880-13ed8435b0ca" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.098 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
