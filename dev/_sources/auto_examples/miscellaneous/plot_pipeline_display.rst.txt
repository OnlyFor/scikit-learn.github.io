
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-cc0b6a05-fa0c-4da2-bc55-558472df5e9e {color: black;background-color: white;}#sk-cc0b6a05-fa0c-4da2-bc55-558472df5e9e pre{padding: 0;}#sk-cc0b6a05-fa0c-4da2-bc55-558472df5e9e div.sk-toggleable {background-color: white;}#sk-cc0b6a05-fa0c-4da2-bc55-558472df5e9e label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-cc0b6a05-fa0c-4da2-bc55-558472df5e9e label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-cc0b6a05-fa0c-4da2-bc55-558472df5e9e label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-cc0b6a05-fa0c-4da2-bc55-558472df5e9e div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-cc0b6a05-fa0c-4da2-bc55-558472df5e9e div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-cc0b6a05-fa0c-4da2-bc55-558472df5e9e div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-cc0b6a05-fa0c-4da2-bc55-558472df5e9e input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-cc0b6a05-fa0c-4da2-bc55-558472df5e9e input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-cc0b6a05-fa0c-4da2-bc55-558472df5e9e div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-cc0b6a05-fa0c-4da2-bc55-558472df5e9e div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-cc0b6a05-fa0c-4da2-bc55-558472df5e9e input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-cc0b6a05-fa0c-4da2-bc55-558472df5e9e div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-cc0b6a05-fa0c-4da2-bc55-558472df5e9e div.sk-estimator:hover {background-color: #d4ebff;}#sk-cc0b6a05-fa0c-4da2-bc55-558472df5e9e div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-cc0b6a05-fa0c-4da2-bc55-558472df5e9e div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-cc0b6a05-fa0c-4da2-bc55-558472df5e9e div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-cc0b6a05-fa0c-4da2-bc55-558472df5e9e div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-cc0b6a05-fa0c-4da2-bc55-558472df5e9e div.sk-item {z-index: 1;}#sk-cc0b6a05-fa0c-4da2-bc55-558472df5e9e div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-cc0b6a05-fa0c-4da2-bc55-558472df5e9e div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-cc0b6a05-fa0c-4da2-bc55-558472df5e9e div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-cc0b6a05-fa0c-4da2-bc55-558472df5e9e div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-cc0b6a05-fa0c-4da2-bc55-558472df5e9e div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-cc0b6a05-fa0c-4da2-bc55-558472df5e9e div.sk-parallel-item:only-child::after {width: 0;}#sk-cc0b6a05-fa0c-4da2-bc55-558472df5e9e div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-cc0b6a05-fa0c-4da2-bc55-558472df5e9e div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-cc0b6a05-fa0c-4da2-bc55-558472df5e9e div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-cc0b6a05-fa0c-4da2-bc55-558472df5e9e div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-cc0b6a05-fa0c-4da2-bc55-558472df5e9e div.sk-text-repr-fallback {display: none;}</style><div id="sk-cc0b6a05-fa0c-4da2-bc55-558472df5e9e" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="78b3b827-ce32-4e13-8920-d72f53d4aba0" type="checkbox" ><label for="78b3b827-ce32-4e13-8920-d72f53d4aba0" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c415af62-3eff-44bb-92a9-d75df88c3a1c" type="checkbox" ><label for="c415af62-3eff-44bb-92a9-d75df88c3a1c" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="43cb38bb-0874-45c3-9357-97d7f80dce67" type="checkbox" ><label for="43cb38bb-0874-45c3-9357-97d7f80dce67" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-3ba747a2-54db-493d-9af4-fee7d273a0a9 {color: black;background-color: white;}#sk-3ba747a2-54db-493d-9af4-fee7d273a0a9 pre{padding: 0;}#sk-3ba747a2-54db-493d-9af4-fee7d273a0a9 div.sk-toggleable {background-color: white;}#sk-3ba747a2-54db-493d-9af4-fee7d273a0a9 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-3ba747a2-54db-493d-9af4-fee7d273a0a9 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-3ba747a2-54db-493d-9af4-fee7d273a0a9 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-3ba747a2-54db-493d-9af4-fee7d273a0a9 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-3ba747a2-54db-493d-9af4-fee7d273a0a9 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-3ba747a2-54db-493d-9af4-fee7d273a0a9 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-3ba747a2-54db-493d-9af4-fee7d273a0a9 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-3ba747a2-54db-493d-9af4-fee7d273a0a9 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-3ba747a2-54db-493d-9af4-fee7d273a0a9 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-3ba747a2-54db-493d-9af4-fee7d273a0a9 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-3ba747a2-54db-493d-9af4-fee7d273a0a9 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-3ba747a2-54db-493d-9af4-fee7d273a0a9 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-3ba747a2-54db-493d-9af4-fee7d273a0a9 div.sk-estimator:hover {background-color: #d4ebff;}#sk-3ba747a2-54db-493d-9af4-fee7d273a0a9 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-3ba747a2-54db-493d-9af4-fee7d273a0a9 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-3ba747a2-54db-493d-9af4-fee7d273a0a9 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-3ba747a2-54db-493d-9af4-fee7d273a0a9 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-3ba747a2-54db-493d-9af4-fee7d273a0a9 div.sk-item {z-index: 1;}#sk-3ba747a2-54db-493d-9af4-fee7d273a0a9 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-3ba747a2-54db-493d-9af4-fee7d273a0a9 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-3ba747a2-54db-493d-9af4-fee7d273a0a9 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-3ba747a2-54db-493d-9af4-fee7d273a0a9 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-3ba747a2-54db-493d-9af4-fee7d273a0a9 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-3ba747a2-54db-493d-9af4-fee7d273a0a9 div.sk-parallel-item:only-child::after {width: 0;}#sk-3ba747a2-54db-493d-9af4-fee7d273a0a9 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-3ba747a2-54db-493d-9af4-fee7d273a0a9 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-3ba747a2-54db-493d-9af4-fee7d273a0a9 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-3ba747a2-54db-493d-9af4-fee7d273a0a9 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-3ba747a2-54db-493d-9af4-fee7d273a0a9 div.sk-text-repr-fallback {display: none;}</style><div id="sk-3ba747a2-54db-493d-9af4-fee7d273a0a9" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="09aaa941-c493-4c3d-bb5a-5fd470ace4c0" type="checkbox" ><label for="09aaa941-c493-4c3d-bb5a-5fd470ace4c0" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="69c6d286-f982-4ffa-a4f3-6bb818b85d7c" type="checkbox" ><label for="69c6d286-f982-4ffa-a4f3-6bb818b85d7c" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="68610163-2f92-41b5-bfcd-edb2a800e508" type="checkbox" ><label for="68610163-2f92-41b5-bfcd-edb2a800e508" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f1b61780-5a68-43f0-88df-c3d6037efa31" type="checkbox" ><label for="f1b61780-5a68-43f0-88df-c3d6037efa31" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-a847190a-89d1-4475-813b-67fcc6b4e417 {color: black;background-color: white;}#sk-a847190a-89d1-4475-813b-67fcc6b4e417 pre{padding: 0;}#sk-a847190a-89d1-4475-813b-67fcc6b4e417 div.sk-toggleable {background-color: white;}#sk-a847190a-89d1-4475-813b-67fcc6b4e417 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-a847190a-89d1-4475-813b-67fcc6b4e417 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-a847190a-89d1-4475-813b-67fcc6b4e417 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-a847190a-89d1-4475-813b-67fcc6b4e417 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-a847190a-89d1-4475-813b-67fcc6b4e417 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-a847190a-89d1-4475-813b-67fcc6b4e417 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-a847190a-89d1-4475-813b-67fcc6b4e417 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-a847190a-89d1-4475-813b-67fcc6b4e417 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-a847190a-89d1-4475-813b-67fcc6b4e417 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-a847190a-89d1-4475-813b-67fcc6b4e417 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-a847190a-89d1-4475-813b-67fcc6b4e417 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-a847190a-89d1-4475-813b-67fcc6b4e417 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-a847190a-89d1-4475-813b-67fcc6b4e417 div.sk-estimator:hover {background-color: #d4ebff;}#sk-a847190a-89d1-4475-813b-67fcc6b4e417 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-a847190a-89d1-4475-813b-67fcc6b4e417 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-a847190a-89d1-4475-813b-67fcc6b4e417 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-a847190a-89d1-4475-813b-67fcc6b4e417 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-a847190a-89d1-4475-813b-67fcc6b4e417 div.sk-item {z-index: 1;}#sk-a847190a-89d1-4475-813b-67fcc6b4e417 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-a847190a-89d1-4475-813b-67fcc6b4e417 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-a847190a-89d1-4475-813b-67fcc6b4e417 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-a847190a-89d1-4475-813b-67fcc6b4e417 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-a847190a-89d1-4475-813b-67fcc6b4e417 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-a847190a-89d1-4475-813b-67fcc6b4e417 div.sk-parallel-item:only-child::after {width: 0;}#sk-a847190a-89d1-4475-813b-67fcc6b4e417 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-a847190a-89d1-4475-813b-67fcc6b4e417 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-a847190a-89d1-4475-813b-67fcc6b4e417 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-a847190a-89d1-4475-813b-67fcc6b4e417 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-a847190a-89d1-4475-813b-67fcc6b4e417 div.sk-text-repr-fallback {display: none;}</style><div id="sk-a847190a-89d1-4475-813b-67fcc6b4e417" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="485928c0-a1c1-4144-aaf9-61ea2c5a1b5d" type="checkbox" ><label for="485928c0-a1c1-4144-aaf9-61ea2c5a1b5d" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="eccaa0f4-5a01-433c-b0d7-74665678c6bc" type="checkbox" ><label for="eccaa0f4-5a01-433c-b0d7-74665678c6bc" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="937886d4-28e9-465c-ac9e-f14afecae391" type="checkbox" ><label for="937886d4-28e9-465c-ac9e-f14afecae391" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-b5a4de5c-b4b5-4454-9e04-791212160e1e {color: black;background-color: white;}#sk-b5a4de5c-b4b5-4454-9e04-791212160e1e pre{padding: 0;}#sk-b5a4de5c-b4b5-4454-9e04-791212160e1e div.sk-toggleable {background-color: white;}#sk-b5a4de5c-b4b5-4454-9e04-791212160e1e label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-b5a4de5c-b4b5-4454-9e04-791212160e1e label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-b5a4de5c-b4b5-4454-9e04-791212160e1e label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-b5a4de5c-b4b5-4454-9e04-791212160e1e div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-b5a4de5c-b4b5-4454-9e04-791212160e1e div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-b5a4de5c-b4b5-4454-9e04-791212160e1e div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-b5a4de5c-b4b5-4454-9e04-791212160e1e input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-b5a4de5c-b4b5-4454-9e04-791212160e1e input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-b5a4de5c-b4b5-4454-9e04-791212160e1e div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b5a4de5c-b4b5-4454-9e04-791212160e1e div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b5a4de5c-b4b5-4454-9e04-791212160e1e input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-b5a4de5c-b4b5-4454-9e04-791212160e1e div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-b5a4de5c-b4b5-4454-9e04-791212160e1e div.sk-estimator:hover {background-color: #d4ebff;}#sk-b5a4de5c-b4b5-4454-9e04-791212160e1e div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-b5a4de5c-b4b5-4454-9e04-791212160e1e div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-b5a4de5c-b4b5-4454-9e04-791212160e1e div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b5a4de5c-b4b5-4454-9e04-791212160e1e div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-b5a4de5c-b4b5-4454-9e04-791212160e1e div.sk-item {z-index: 1;}#sk-b5a4de5c-b4b5-4454-9e04-791212160e1e div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-b5a4de5c-b4b5-4454-9e04-791212160e1e div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b5a4de5c-b4b5-4454-9e04-791212160e1e div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-b5a4de5c-b4b5-4454-9e04-791212160e1e div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-b5a4de5c-b4b5-4454-9e04-791212160e1e div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-b5a4de5c-b4b5-4454-9e04-791212160e1e div.sk-parallel-item:only-child::after {width: 0;}#sk-b5a4de5c-b4b5-4454-9e04-791212160e1e div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-b5a4de5c-b4b5-4454-9e04-791212160e1e div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-b5a4de5c-b4b5-4454-9e04-791212160e1e div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-b5a4de5c-b4b5-4454-9e04-791212160e1e div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-b5a4de5c-b4b5-4454-9e04-791212160e1e div.sk-text-repr-fallback {display: none;}</style><div id="sk-b5a4de5c-b4b5-4454-9e04-791212160e1e" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ea32f1b6-f82d-4225-9812-e6e0c5b1539d" type="checkbox" ><label for="ea32f1b6-f82d-4225-9812-e6e0c5b1539d" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="285037e3-2fdf-41fe-9f98-b1ba77726500" type="checkbox" ><label for="285037e3-2fdf-41fe-9f98-b1ba77726500" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0f61628b-f3bd-489b-8303-da9e34c032b1" type="checkbox" ><label for="0f61628b-f3bd-489b-8303-da9e34c032b1" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c4b57079-1770-4c0c-94e2-cfce5c7c4844" type="checkbox" ><label for="c4b57079-1770-4c0c-94e2-cfce5c7c4844" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ce7c565e-8a89-41f7-93bc-c71cee1086a8" type="checkbox" ><label for="ce7c565e-8a89-41f7-93bc-c71cee1086a8" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a748c451-4174-40a6-9e5e-50f372cbca8a" type="checkbox" ><label for="a748c451-4174-40a6-9e5e-50f372cbca8a" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4b5d89c1-de89-4aaa-ae24-3a0cdfea5e33" type="checkbox" ><label for="4b5d89c1-de89-4aaa-ae24-3a0cdfea5e33" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d5a55bd7-92b6-473a-8716-5b1bcf56ef1e" type="checkbox" ><label for="d5a55bd7-92b6-473a-8716-5b1bcf56ef1e" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9b23ae60-5e14-4ee4-a2dd-79f930601fc7" type="checkbox" ><label for="9b23ae60-5e14-4ee4-a2dd-79f930601fc7" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-81fb9c20-29b1-459a-84ee-d1066e903d35 {color: black;background-color: white;}#sk-81fb9c20-29b1-459a-84ee-d1066e903d35 pre{padding: 0;}#sk-81fb9c20-29b1-459a-84ee-d1066e903d35 div.sk-toggleable {background-color: white;}#sk-81fb9c20-29b1-459a-84ee-d1066e903d35 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-81fb9c20-29b1-459a-84ee-d1066e903d35 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-81fb9c20-29b1-459a-84ee-d1066e903d35 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-81fb9c20-29b1-459a-84ee-d1066e903d35 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-81fb9c20-29b1-459a-84ee-d1066e903d35 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-81fb9c20-29b1-459a-84ee-d1066e903d35 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-81fb9c20-29b1-459a-84ee-d1066e903d35 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-81fb9c20-29b1-459a-84ee-d1066e903d35 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-81fb9c20-29b1-459a-84ee-d1066e903d35 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-81fb9c20-29b1-459a-84ee-d1066e903d35 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-81fb9c20-29b1-459a-84ee-d1066e903d35 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-81fb9c20-29b1-459a-84ee-d1066e903d35 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-81fb9c20-29b1-459a-84ee-d1066e903d35 div.sk-estimator:hover {background-color: #d4ebff;}#sk-81fb9c20-29b1-459a-84ee-d1066e903d35 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-81fb9c20-29b1-459a-84ee-d1066e903d35 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-81fb9c20-29b1-459a-84ee-d1066e903d35 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-81fb9c20-29b1-459a-84ee-d1066e903d35 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-81fb9c20-29b1-459a-84ee-d1066e903d35 div.sk-item {z-index: 1;}#sk-81fb9c20-29b1-459a-84ee-d1066e903d35 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-81fb9c20-29b1-459a-84ee-d1066e903d35 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-81fb9c20-29b1-459a-84ee-d1066e903d35 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-81fb9c20-29b1-459a-84ee-d1066e903d35 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-81fb9c20-29b1-459a-84ee-d1066e903d35 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-81fb9c20-29b1-459a-84ee-d1066e903d35 div.sk-parallel-item:only-child::after {width: 0;}#sk-81fb9c20-29b1-459a-84ee-d1066e903d35 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-81fb9c20-29b1-459a-84ee-d1066e903d35 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-81fb9c20-29b1-459a-84ee-d1066e903d35 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-81fb9c20-29b1-459a-84ee-d1066e903d35 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-81fb9c20-29b1-459a-84ee-d1066e903d35 div.sk-text-repr-fallback {display: none;}</style><div id="sk-81fb9c20-29b1-459a-84ee-d1066e903d35" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="503fbf9d-5c6b-4e70-82a9-1e66a26c128e" type="checkbox" ><label for="503fbf9d-5c6b-4e70-82a9-1e66a26c128e" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="51483a57-163d-44ce-b6f4-f09e02265bce" type="checkbox" ><label for="51483a57-163d-44ce-b6f4-f09e02265bce" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="775ca1f8-950c-49ab-8f31-69f372c85bbb" type="checkbox" ><label for="775ca1f8-950c-49ab-8f31-69f372c85bbb" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="19fe8b50-f0a4-4b17-af62-9e83f5d76bf4" type="checkbox" ><label for="19fe8b50-f0a4-4b17-af62-9e83f5d76bf4" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ae53d025-980e-495d-98d9-56a0f47ee988" type="checkbox" ><label for="ae53d025-980e-495d-98d9-56a0f47ee988" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="69256700-b09f-4e07-86c5-8c0deb0ff152" type="checkbox" ><label for="69256700-b09f-4e07-86c5-8c0deb0ff152" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="eadbf523-87a7-4b9b-9d07-11f50fa75239" type="checkbox" ><label for="eadbf523-87a7-4b9b-9d07-11f50fa75239" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a288af69-820c-49be-817b-009f0d01ca91" type="checkbox" ><label for="a288af69-820c-49be-817b-009f0d01ca91" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b30ba2c6-f3f4-4636-b7ee-09f07ef896bb" type="checkbox" ><label for="b30ba2c6-f3f4-4636-b7ee-09f07ef896bb" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.103 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
