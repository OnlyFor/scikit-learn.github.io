
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-86eefc33-8bdd-4b1f-95f1-91c7ce7f261f {color: black;background-color: white;}#sk-86eefc33-8bdd-4b1f-95f1-91c7ce7f261f pre{padding: 0;}#sk-86eefc33-8bdd-4b1f-95f1-91c7ce7f261f div.sk-toggleable {background-color: white;}#sk-86eefc33-8bdd-4b1f-95f1-91c7ce7f261f label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-86eefc33-8bdd-4b1f-95f1-91c7ce7f261f label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-86eefc33-8bdd-4b1f-95f1-91c7ce7f261f label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-86eefc33-8bdd-4b1f-95f1-91c7ce7f261f div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-86eefc33-8bdd-4b1f-95f1-91c7ce7f261f div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-86eefc33-8bdd-4b1f-95f1-91c7ce7f261f div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-86eefc33-8bdd-4b1f-95f1-91c7ce7f261f input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-86eefc33-8bdd-4b1f-95f1-91c7ce7f261f input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-86eefc33-8bdd-4b1f-95f1-91c7ce7f261f div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-86eefc33-8bdd-4b1f-95f1-91c7ce7f261f div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-86eefc33-8bdd-4b1f-95f1-91c7ce7f261f input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-86eefc33-8bdd-4b1f-95f1-91c7ce7f261f div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-86eefc33-8bdd-4b1f-95f1-91c7ce7f261f div.sk-estimator:hover {background-color: #d4ebff;}#sk-86eefc33-8bdd-4b1f-95f1-91c7ce7f261f div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-86eefc33-8bdd-4b1f-95f1-91c7ce7f261f div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-86eefc33-8bdd-4b1f-95f1-91c7ce7f261f div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-86eefc33-8bdd-4b1f-95f1-91c7ce7f261f div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-86eefc33-8bdd-4b1f-95f1-91c7ce7f261f div.sk-item {z-index: 1;}#sk-86eefc33-8bdd-4b1f-95f1-91c7ce7f261f div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-86eefc33-8bdd-4b1f-95f1-91c7ce7f261f div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-86eefc33-8bdd-4b1f-95f1-91c7ce7f261f div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-86eefc33-8bdd-4b1f-95f1-91c7ce7f261f div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-86eefc33-8bdd-4b1f-95f1-91c7ce7f261f div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-86eefc33-8bdd-4b1f-95f1-91c7ce7f261f div.sk-parallel-item:only-child::after {width: 0;}#sk-86eefc33-8bdd-4b1f-95f1-91c7ce7f261f div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-86eefc33-8bdd-4b1f-95f1-91c7ce7f261f div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-86eefc33-8bdd-4b1f-95f1-91c7ce7f261f div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-86eefc33-8bdd-4b1f-95f1-91c7ce7f261f div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-86eefc33-8bdd-4b1f-95f1-91c7ce7f261f div.sk-text-repr-fallback {display: none;}</style><div id="sk-86eefc33-8bdd-4b1f-95f1-91c7ce7f261f" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a84ab363-9201-4b4d-9fd7-64a1576f62db" type="checkbox" ><label for="a84ab363-9201-4b4d-9fd7-64a1576f62db" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="80697047-c1fe-4955-aecd-cafbf231e304" type="checkbox" ><label for="80697047-c1fe-4955-aecd-cafbf231e304" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="af894f19-6f51-41f2-b73e-f3ce05d9f65b" type="checkbox" ><label for="af894f19-6f51-41f2-b73e-f3ce05d9f65b" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-144e5604-cd14-47e9-8560-b8bc88833a0d {color: black;background-color: white;}#sk-144e5604-cd14-47e9-8560-b8bc88833a0d pre{padding: 0;}#sk-144e5604-cd14-47e9-8560-b8bc88833a0d div.sk-toggleable {background-color: white;}#sk-144e5604-cd14-47e9-8560-b8bc88833a0d label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-144e5604-cd14-47e9-8560-b8bc88833a0d label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-144e5604-cd14-47e9-8560-b8bc88833a0d label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-144e5604-cd14-47e9-8560-b8bc88833a0d div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-144e5604-cd14-47e9-8560-b8bc88833a0d div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-144e5604-cd14-47e9-8560-b8bc88833a0d div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-144e5604-cd14-47e9-8560-b8bc88833a0d input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-144e5604-cd14-47e9-8560-b8bc88833a0d input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-144e5604-cd14-47e9-8560-b8bc88833a0d div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-144e5604-cd14-47e9-8560-b8bc88833a0d div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-144e5604-cd14-47e9-8560-b8bc88833a0d input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-144e5604-cd14-47e9-8560-b8bc88833a0d div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-144e5604-cd14-47e9-8560-b8bc88833a0d div.sk-estimator:hover {background-color: #d4ebff;}#sk-144e5604-cd14-47e9-8560-b8bc88833a0d div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-144e5604-cd14-47e9-8560-b8bc88833a0d div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-144e5604-cd14-47e9-8560-b8bc88833a0d div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-144e5604-cd14-47e9-8560-b8bc88833a0d div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-144e5604-cd14-47e9-8560-b8bc88833a0d div.sk-item {z-index: 1;}#sk-144e5604-cd14-47e9-8560-b8bc88833a0d div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-144e5604-cd14-47e9-8560-b8bc88833a0d div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-144e5604-cd14-47e9-8560-b8bc88833a0d div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-144e5604-cd14-47e9-8560-b8bc88833a0d div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-144e5604-cd14-47e9-8560-b8bc88833a0d div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-144e5604-cd14-47e9-8560-b8bc88833a0d div.sk-parallel-item:only-child::after {width: 0;}#sk-144e5604-cd14-47e9-8560-b8bc88833a0d div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-144e5604-cd14-47e9-8560-b8bc88833a0d div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-144e5604-cd14-47e9-8560-b8bc88833a0d div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-144e5604-cd14-47e9-8560-b8bc88833a0d div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-144e5604-cd14-47e9-8560-b8bc88833a0d div.sk-text-repr-fallback {display: none;}</style><div id="sk-144e5604-cd14-47e9-8560-b8bc88833a0d" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="813cdab1-33d2-42f0-93a9-7228791b1fab" type="checkbox" ><label for="813cdab1-33d2-42f0-93a9-7228791b1fab" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fc34490e-7080-461d-abeb-e61a84a79599" type="checkbox" ><label for="fc34490e-7080-461d-abeb-e61a84a79599" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6aaf8abe-a205-4668-a248-8dc01e29dc11" type="checkbox" ><label for="6aaf8abe-a205-4668-a248-8dc01e29dc11" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="30c115d7-96e2-4b88-89bf-c2776944cf24" type="checkbox" ><label for="30c115d7-96e2-4b88-89bf-c2776944cf24" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-d044a0a9-a5e9-4f42-8712-cb33bdf892c2 {color: black;background-color: white;}#sk-d044a0a9-a5e9-4f42-8712-cb33bdf892c2 pre{padding: 0;}#sk-d044a0a9-a5e9-4f42-8712-cb33bdf892c2 div.sk-toggleable {background-color: white;}#sk-d044a0a9-a5e9-4f42-8712-cb33bdf892c2 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-d044a0a9-a5e9-4f42-8712-cb33bdf892c2 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-d044a0a9-a5e9-4f42-8712-cb33bdf892c2 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-d044a0a9-a5e9-4f42-8712-cb33bdf892c2 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-d044a0a9-a5e9-4f42-8712-cb33bdf892c2 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-d044a0a9-a5e9-4f42-8712-cb33bdf892c2 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-d044a0a9-a5e9-4f42-8712-cb33bdf892c2 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-d044a0a9-a5e9-4f42-8712-cb33bdf892c2 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-d044a0a9-a5e9-4f42-8712-cb33bdf892c2 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-d044a0a9-a5e9-4f42-8712-cb33bdf892c2 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-d044a0a9-a5e9-4f42-8712-cb33bdf892c2 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-d044a0a9-a5e9-4f42-8712-cb33bdf892c2 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-d044a0a9-a5e9-4f42-8712-cb33bdf892c2 div.sk-estimator:hover {background-color: #d4ebff;}#sk-d044a0a9-a5e9-4f42-8712-cb33bdf892c2 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-d044a0a9-a5e9-4f42-8712-cb33bdf892c2 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-d044a0a9-a5e9-4f42-8712-cb33bdf892c2 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-d044a0a9-a5e9-4f42-8712-cb33bdf892c2 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-d044a0a9-a5e9-4f42-8712-cb33bdf892c2 div.sk-item {z-index: 1;}#sk-d044a0a9-a5e9-4f42-8712-cb33bdf892c2 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-d044a0a9-a5e9-4f42-8712-cb33bdf892c2 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-d044a0a9-a5e9-4f42-8712-cb33bdf892c2 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-d044a0a9-a5e9-4f42-8712-cb33bdf892c2 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-d044a0a9-a5e9-4f42-8712-cb33bdf892c2 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-d044a0a9-a5e9-4f42-8712-cb33bdf892c2 div.sk-parallel-item:only-child::after {width: 0;}#sk-d044a0a9-a5e9-4f42-8712-cb33bdf892c2 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-d044a0a9-a5e9-4f42-8712-cb33bdf892c2 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-d044a0a9-a5e9-4f42-8712-cb33bdf892c2 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-d044a0a9-a5e9-4f42-8712-cb33bdf892c2 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-d044a0a9-a5e9-4f42-8712-cb33bdf892c2 div.sk-text-repr-fallback {display: none;}</style><div id="sk-d044a0a9-a5e9-4f42-8712-cb33bdf892c2" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fa2b978b-585c-4ccf-9d0e-23d416da3d35" type="checkbox" ><label for="fa2b978b-585c-4ccf-9d0e-23d416da3d35" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="178c73f6-57b7-4e67-ace9-cf55d70dbe57" type="checkbox" ><label for="178c73f6-57b7-4e67-ace9-cf55d70dbe57" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bd311ccd-a8ef-4e8e-a3dc-257b57dadd65" type="checkbox" ><label for="bd311ccd-a8ef-4e8e-a3dc-257b57dadd65" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-d69c18b3-03d1-4b69-a0d9-01a6c5152904 {color: black;background-color: white;}#sk-d69c18b3-03d1-4b69-a0d9-01a6c5152904 pre{padding: 0;}#sk-d69c18b3-03d1-4b69-a0d9-01a6c5152904 div.sk-toggleable {background-color: white;}#sk-d69c18b3-03d1-4b69-a0d9-01a6c5152904 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-d69c18b3-03d1-4b69-a0d9-01a6c5152904 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-d69c18b3-03d1-4b69-a0d9-01a6c5152904 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-d69c18b3-03d1-4b69-a0d9-01a6c5152904 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-d69c18b3-03d1-4b69-a0d9-01a6c5152904 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-d69c18b3-03d1-4b69-a0d9-01a6c5152904 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-d69c18b3-03d1-4b69-a0d9-01a6c5152904 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-d69c18b3-03d1-4b69-a0d9-01a6c5152904 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-d69c18b3-03d1-4b69-a0d9-01a6c5152904 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-d69c18b3-03d1-4b69-a0d9-01a6c5152904 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-d69c18b3-03d1-4b69-a0d9-01a6c5152904 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-d69c18b3-03d1-4b69-a0d9-01a6c5152904 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-d69c18b3-03d1-4b69-a0d9-01a6c5152904 div.sk-estimator:hover {background-color: #d4ebff;}#sk-d69c18b3-03d1-4b69-a0d9-01a6c5152904 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-d69c18b3-03d1-4b69-a0d9-01a6c5152904 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-d69c18b3-03d1-4b69-a0d9-01a6c5152904 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-d69c18b3-03d1-4b69-a0d9-01a6c5152904 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-d69c18b3-03d1-4b69-a0d9-01a6c5152904 div.sk-item {z-index: 1;}#sk-d69c18b3-03d1-4b69-a0d9-01a6c5152904 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-d69c18b3-03d1-4b69-a0d9-01a6c5152904 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-d69c18b3-03d1-4b69-a0d9-01a6c5152904 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-d69c18b3-03d1-4b69-a0d9-01a6c5152904 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-d69c18b3-03d1-4b69-a0d9-01a6c5152904 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-d69c18b3-03d1-4b69-a0d9-01a6c5152904 div.sk-parallel-item:only-child::after {width: 0;}#sk-d69c18b3-03d1-4b69-a0d9-01a6c5152904 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-d69c18b3-03d1-4b69-a0d9-01a6c5152904 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-d69c18b3-03d1-4b69-a0d9-01a6c5152904 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-d69c18b3-03d1-4b69-a0d9-01a6c5152904 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-d69c18b3-03d1-4b69-a0d9-01a6c5152904 div.sk-text-repr-fallback {display: none;}</style><div id="sk-d69c18b3-03d1-4b69-a0d9-01a6c5152904" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9a7e4b3f-aaa3-45e9-a066-4d196dea7cee" type="checkbox" ><label for="9a7e4b3f-aaa3-45e9-a066-4d196dea7cee" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="94b2dc18-df78-42c7-bd2a-4b70f4fd1305" type="checkbox" ><label for="94b2dc18-df78-42c7-bd2a-4b70f4fd1305" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="87444806-3c2a-4a2e-a896-11992e4f46d6" type="checkbox" ><label for="87444806-3c2a-4a2e-a896-11992e4f46d6" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c9e77485-4069-4f44-8bd2-b95c3ff87e01" type="checkbox" ><label for="c9e77485-4069-4f44-8bd2-b95c3ff87e01" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="70a2655a-3967-48a0-9faf-72fc667886ef" type="checkbox" ><label for="70a2655a-3967-48a0-9faf-72fc667886ef" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="347c09a8-01ce-4928-bed6-1e0cff079461" type="checkbox" ><label for="347c09a8-01ce-4928-bed6-1e0cff079461" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6566288d-3bab-4f0b-9670-97c46c134ce0" type="checkbox" ><label for="6566288d-3bab-4f0b-9670-97c46c134ce0" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="96722d12-b105-4df7-b73f-9d3504569555" type="checkbox" ><label for="96722d12-b105-4df7-b73f-9d3504569555" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f6590f8f-51dd-49e3-a178-4c57ada13fd2" type="checkbox" ><label for="f6590f8f-51dd-49e3-a178-4c57ada13fd2" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-2e9fade4-fa1d-40e4-b0dd-b1d01ccca69f {color: black;background-color: white;}#sk-2e9fade4-fa1d-40e4-b0dd-b1d01ccca69f pre{padding: 0;}#sk-2e9fade4-fa1d-40e4-b0dd-b1d01ccca69f div.sk-toggleable {background-color: white;}#sk-2e9fade4-fa1d-40e4-b0dd-b1d01ccca69f label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-2e9fade4-fa1d-40e4-b0dd-b1d01ccca69f label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-2e9fade4-fa1d-40e4-b0dd-b1d01ccca69f label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-2e9fade4-fa1d-40e4-b0dd-b1d01ccca69f div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-2e9fade4-fa1d-40e4-b0dd-b1d01ccca69f div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-2e9fade4-fa1d-40e4-b0dd-b1d01ccca69f div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-2e9fade4-fa1d-40e4-b0dd-b1d01ccca69f input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-2e9fade4-fa1d-40e4-b0dd-b1d01ccca69f input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-2e9fade4-fa1d-40e4-b0dd-b1d01ccca69f div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-2e9fade4-fa1d-40e4-b0dd-b1d01ccca69f div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-2e9fade4-fa1d-40e4-b0dd-b1d01ccca69f input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-2e9fade4-fa1d-40e4-b0dd-b1d01ccca69f div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-2e9fade4-fa1d-40e4-b0dd-b1d01ccca69f div.sk-estimator:hover {background-color: #d4ebff;}#sk-2e9fade4-fa1d-40e4-b0dd-b1d01ccca69f div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-2e9fade4-fa1d-40e4-b0dd-b1d01ccca69f div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-2e9fade4-fa1d-40e4-b0dd-b1d01ccca69f div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-2e9fade4-fa1d-40e4-b0dd-b1d01ccca69f div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-2e9fade4-fa1d-40e4-b0dd-b1d01ccca69f div.sk-item {z-index: 1;}#sk-2e9fade4-fa1d-40e4-b0dd-b1d01ccca69f div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-2e9fade4-fa1d-40e4-b0dd-b1d01ccca69f div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-2e9fade4-fa1d-40e4-b0dd-b1d01ccca69f div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-2e9fade4-fa1d-40e4-b0dd-b1d01ccca69f div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-2e9fade4-fa1d-40e4-b0dd-b1d01ccca69f div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-2e9fade4-fa1d-40e4-b0dd-b1d01ccca69f div.sk-parallel-item:only-child::after {width: 0;}#sk-2e9fade4-fa1d-40e4-b0dd-b1d01ccca69f div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-2e9fade4-fa1d-40e4-b0dd-b1d01ccca69f div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-2e9fade4-fa1d-40e4-b0dd-b1d01ccca69f div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-2e9fade4-fa1d-40e4-b0dd-b1d01ccca69f div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-2e9fade4-fa1d-40e4-b0dd-b1d01ccca69f div.sk-text-repr-fallback {display: none;}</style><div id="sk-2e9fade4-fa1d-40e4-b0dd-b1d01ccca69f" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3cfdea27-ec4b-48d3-aceb-74819829d190" type="checkbox" ><label for="3cfdea27-ec4b-48d3-aceb-74819829d190" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="09ce6844-fc72-4624-b50d-0d8adc51b5fa" type="checkbox" ><label for="09ce6844-fc72-4624-b50d-0d8adc51b5fa" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="881eb313-8dd3-4ece-b9af-4505600f3237" type="checkbox" ><label for="881eb313-8dd3-4ece-b9af-4505600f3237" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ebefd901-9920-4474-a29d-5a41215e0212" type="checkbox" ><label for="ebefd901-9920-4474-a29d-5a41215e0212" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ef7dbca1-74fb-4599-a09f-811ab1803bf3" type="checkbox" ><label for="ef7dbca1-74fb-4599-a09f-811ab1803bf3" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="64a453ca-da76-4042-bdcb-771bb905fa20" type="checkbox" ><label for="64a453ca-da76-4042-bdcb-771bb905fa20" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a21fd6fd-894d-420b-8070-03d924523ea2" type="checkbox" ><label for="a21fd6fd-894d-420b-8070-03d924523ea2" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0ee78ea0-187f-4c71-816e-2beb1c5f87d8" type="checkbox" ><label for="0ee78ea0-187f-4c71-816e-2beb1c5f87d8" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7f907dc2-602e-40e5-b361-2eaab5cc90ce" type="checkbox" ><label for="7f907dc2-602e-40e5-b361-2eaab5cc90ce" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.074 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
