
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-7dbfe503-6567-469c-bb44-7c8cd477314e {color: black;background-color: white;}#sk-7dbfe503-6567-469c-bb44-7c8cd477314e pre{padding: 0;}#sk-7dbfe503-6567-469c-bb44-7c8cd477314e div.sk-toggleable {background-color: white;}#sk-7dbfe503-6567-469c-bb44-7c8cd477314e label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-7dbfe503-6567-469c-bb44-7c8cd477314e label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-7dbfe503-6567-469c-bb44-7c8cd477314e label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-7dbfe503-6567-469c-bb44-7c8cd477314e div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-7dbfe503-6567-469c-bb44-7c8cd477314e div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-7dbfe503-6567-469c-bb44-7c8cd477314e div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-7dbfe503-6567-469c-bb44-7c8cd477314e input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-7dbfe503-6567-469c-bb44-7c8cd477314e input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-7dbfe503-6567-469c-bb44-7c8cd477314e div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-7dbfe503-6567-469c-bb44-7c8cd477314e div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-7dbfe503-6567-469c-bb44-7c8cd477314e input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-7dbfe503-6567-469c-bb44-7c8cd477314e div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-7dbfe503-6567-469c-bb44-7c8cd477314e div.sk-estimator:hover {background-color: #d4ebff;}#sk-7dbfe503-6567-469c-bb44-7c8cd477314e div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-7dbfe503-6567-469c-bb44-7c8cd477314e div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-7dbfe503-6567-469c-bb44-7c8cd477314e div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-7dbfe503-6567-469c-bb44-7c8cd477314e div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-7dbfe503-6567-469c-bb44-7c8cd477314e div.sk-item {z-index: 1;}#sk-7dbfe503-6567-469c-bb44-7c8cd477314e div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-7dbfe503-6567-469c-bb44-7c8cd477314e div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-7dbfe503-6567-469c-bb44-7c8cd477314e div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-7dbfe503-6567-469c-bb44-7c8cd477314e div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-7dbfe503-6567-469c-bb44-7c8cd477314e div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-7dbfe503-6567-469c-bb44-7c8cd477314e div.sk-parallel-item:only-child::after {width: 0;}#sk-7dbfe503-6567-469c-bb44-7c8cd477314e div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-7dbfe503-6567-469c-bb44-7c8cd477314e div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-7dbfe503-6567-469c-bb44-7c8cd477314e div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-7dbfe503-6567-469c-bb44-7c8cd477314e div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-7dbfe503-6567-469c-bb44-7c8cd477314e div.sk-text-repr-fallback {display: none;}</style><div id="sk-7dbfe503-6567-469c-bb44-7c8cd477314e" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6c18e5f0-d7f3-427c-8b8b-167d47b9876c" type="checkbox" ><label for="6c18e5f0-d7f3-427c-8b8b-167d47b9876c" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8a466ac3-7285-4029-8de5-184927d6db37" type="checkbox" ><label for="8a466ac3-7285-4029-8de5-184927d6db37" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6fd15f0c-f9c3-41ff-ad91-6b84a6a4b837" type="checkbox" ><label for="6fd15f0c-f9c3-41ff-ad91-6b84a6a4b837" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-8278b42a-ed59-473e-99d9-0de1f597f281 {color: black;background-color: white;}#sk-8278b42a-ed59-473e-99d9-0de1f597f281 pre{padding: 0;}#sk-8278b42a-ed59-473e-99d9-0de1f597f281 div.sk-toggleable {background-color: white;}#sk-8278b42a-ed59-473e-99d9-0de1f597f281 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-8278b42a-ed59-473e-99d9-0de1f597f281 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-8278b42a-ed59-473e-99d9-0de1f597f281 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-8278b42a-ed59-473e-99d9-0de1f597f281 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-8278b42a-ed59-473e-99d9-0de1f597f281 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-8278b42a-ed59-473e-99d9-0de1f597f281 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-8278b42a-ed59-473e-99d9-0de1f597f281 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-8278b42a-ed59-473e-99d9-0de1f597f281 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-8278b42a-ed59-473e-99d9-0de1f597f281 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-8278b42a-ed59-473e-99d9-0de1f597f281 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-8278b42a-ed59-473e-99d9-0de1f597f281 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-8278b42a-ed59-473e-99d9-0de1f597f281 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-8278b42a-ed59-473e-99d9-0de1f597f281 div.sk-estimator:hover {background-color: #d4ebff;}#sk-8278b42a-ed59-473e-99d9-0de1f597f281 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-8278b42a-ed59-473e-99d9-0de1f597f281 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-8278b42a-ed59-473e-99d9-0de1f597f281 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-8278b42a-ed59-473e-99d9-0de1f597f281 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-8278b42a-ed59-473e-99d9-0de1f597f281 div.sk-item {z-index: 1;}#sk-8278b42a-ed59-473e-99d9-0de1f597f281 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-8278b42a-ed59-473e-99d9-0de1f597f281 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-8278b42a-ed59-473e-99d9-0de1f597f281 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-8278b42a-ed59-473e-99d9-0de1f597f281 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-8278b42a-ed59-473e-99d9-0de1f597f281 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-8278b42a-ed59-473e-99d9-0de1f597f281 div.sk-parallel-item:only-child::after {width: 0;}#sk-8278b42a-ed59-473e-99d9-0de1f597f281 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-8278b42a-ed59-473e-99d9-0de1f597f281 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-8278b42a-ed59-473e-99d9-0de1f597f281 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-8278b42a-ed59-473e-99d9-0de1f597f281 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-8278b42a-ed59-473e-99d9-0de1f597f281 div.sk-text-repr-fallback {display: none;}</style><div id="sk-8278b42a-ed59-473e-99d9-0de1f597f281" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e4e1494e-44cd-42c4-9cad-082d72b9d15d" type="checkbox" ><label for="e4e1494e-44cd-42c4-9cad-082d72b9d15d" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e4810071-d427-4c95-b69f-254029102a88" type="checkbox" ><label for="e4810071-d427-4c95-b69f-254029102a88" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cd1a6bef-ee90-47a8-8535-f286687fe492" type="checkbox" ><label for="cd1a6bef-ee90-47a8-8535-f286687fe492" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="52554319-c9cc-42cd-8bfa-bb0298ef3583" type="checkbox" ><label for="52554319-c9cc-42cd-8bfa-bb0298ef3583" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-f85c95c2-5ebc-4931-9d41-036e3ed4b9ea {color: black;background-color: white;}#sk-f85c95c2-5ebc-4931-9d41-036e3ed4b9ea pre{padding: 0;}#sk-f85c95c2-5ebc-4931-9d41-036e3ed4b9ea div.sk-toggleable {background-color: white;}#sk-f85c95c2-5ebc-4931-9d41-036e3ed4b9ea label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-f85c95c2-5ebc-4931-9d41-036e3ed4b9ea label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-f85c95c2-5ebc-4931-9d41-036e3ed4b9ea label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-f85c95c2-5ebc-4931-9d41-036e3ed4b9ea div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-f85c95c2-5ebc-4931-9d41-036e3ed4b9ea div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-f85c95c2-5ebc-4931-9d41-036e3ed4b9ea div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-f85c95c2-5ebc-4931-9d41-036e3ed4b9ea input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-f85c95c2-5ebc-4931-9d41-036e3ed4b9ea input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-f85c95c2-5ebc-4931-9d41-036e3ed4b9ea div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-f85c95c2-5ebc-4931-9d41-036e3ed4b9ea div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-f85c95c2-5ebc-4931-9d41-036e3ed4b9ea input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-f85c95c2-5ebc-4931-9d41-036e3ed4b9ea div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-f85c95c2-5ebc-4931-9d41-036e3ed4b9ea div.sk-estimator:hover {background-color: #d4ebff;}#sk-f85c95c2-5ebc-4931-9d41-036e3ed4b9ea div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-f85c95c2-5ebc-4931-9d41-036e3ed4b9ea div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-f85c95c2-5ebc-4931-9d41-036e3ed4b9ea div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-f85c95c2-5ebc-4931-9d41-036e3ed4b9ea div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-f85c95c2-5ebc-4931-9d41-036e3ed4b9ea div.sk-item {z-index: 1;}#sk-f85c95c2-5ebc-4931-9d41-036e3ed4b9ea div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-f85c95c2-5ebc-4931-9d41-036e3ed4b9ea div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-f85c95c2-5ebc-4931-9d41-036e3ed4b9ea div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-f85c95c2-5ebc-4931-9d41-036e3ed4b9ea div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-f85c95c2-5ebc-4931-9d41-036e3ed4b9ea div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-f85c95c2-5ebc-4931-9d41-036e3ed4b9ea div.sk-parallel-item:only-child::after {width: 0;}#sk-f85c95c2-5ebc-4931-9d41-036e3ed4b9ea div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-f85c95c2-5ebc-4931-9d41-036e3ed4b9ea div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-f85c95c2-5ebc-4931-9d41-036e3ed4b9ea div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-f85c95c2-5ebc-4931-9d41-036e3ed4b9ea div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-f85c95c2-5ebc-4931-9d41-036e3ed4b9ea div.sk-text-repr-fallback {display: none;}</style><div id="sk-f85c95c2-5ebc-4931-9d41-036e3ed4b9ea" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f1165b77-1e60-456a-870b-96adc0ab5d00" type="checkbox" ><label for="f1165b77-1e60-456a-870b-96adc0ab5d00" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9c1c5968-6e35-41d6-8285-0c7171a1b51c" type="checkbox" ><label for="9c1c5968-6e35-41d6-8285-0c7171a1b51c" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="223205e2-9491-41f7-98ea-d735f117b384" type="checkbox" ><label for="223205e2-9491-41f7-98ea-d735f117b384" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-4061721d-8c70-4b8e-a1f8-025cc5743717 {color: black;background-color: white;}#sk-4061721d-8c70-4b8e-a1f8-025cc5743717 pre{padding: 0;}#sk-4061721d-8c70-4b8e-a1f8-025cc5743717 div.sk-toggleable {background-color: white;}#sk-4061721d-8c70-4b8e-a1f8-025cc5743717 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-4061721d-8c70-4b8e-a1f8-025cc5743717 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-4061721d-8c70-4b8e-a1f8-025cc5743717 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-4061721d-8c70-4b8e-a1f8-025cc5743717 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-4061721d-8c70-4b8e-a1f8-025cc5743717 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-4061721d-8c70-4b8e-a1f8-025cc5743717 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-4061721d-8c70-4b8e-a1f8-025cc5743717 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-4061721d-8c70-4b8e-a1f8-025cc5743717 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-4061721d-8c70-4b8e-a1f8-025cc5743717 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-4061721d-8c70-4b8e-a1f8-025cc5743717 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-4061721d-8c70-4b8e-a1f8-025cc5743717 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-4061721d-8c70-4b8e-a1f8-025cc5743717 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-4061721d-8c70-4b8e-a1f8-025cc5743717 div.sk-estimator:hover {background-color: #d4ebff;}#sk-4061721d-8c70-4b8e-a1f8-025cc5743717 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-4061721d-8c70-4b8e-a1f8-025cc5743717 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-4061721d-8c70-4b8e-a1f8-025cc5743717 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-4061721d-8c70-4b8e-a1f8-025cc5743717 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-4061721d-8c70-4b8e-a1f8-025cc5743717 div.sk-item {z-index: 1;}#sk-4061721d-8c70-4b8e-a1f8-025cc5743717 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-4061721d-8c70-4b8e-a1f8-025cc5743717 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-4061721d-8c70-4b8e-a1f8-025cc5743717 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-4061721d-8c70-4b8e-a1f8-025cc5743717 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-4061721d-8c70-4b8e-a1f8-025cc5743717 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-4061721d-8c70-4b8e-a1f8-025cc5743717 div.sk-parallel-item:only-child::after {width: 0;}#sk-4061721d-8c70-4b8e-a1f8-025cc5743717 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-4061721d-8c70-4b8e-a1f8-025cc5743717 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-4061721d-8c70-4b8e-a1f8-025cc5743717 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-4061721d-8c70-4b8e-a1f8-025cc5743717 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-4061721d-8c70-4b8e-a1f8-025cc5743717 div.sk-text-repr-fallback {display: none;}</style><div id="sk-4061721d-8c70-4b8e-a1f8-025cc5743717" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0dc738ec-e7cd-45d3-8abd-b49466184aee" type="checkbox" ><label for="0dc738ec-e7cd-45d3-8abd-b49466184aee" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c3bc8a45-f7ff-419d-a4b0-9e1b053c0df3" type="checkbox" ><label for="c3bc8a45-f7ff-419d-a4b0-9e1b053c0df3" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="41d7cd31-cd8e-47d2-bd31-3500854e82b4" type="checkbox" ><label for="41d7cd31-cd8e-47d2-bd31-3500854e82b4" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d94b3843-7381-4b94-8a57-f163ed716066" type="checkbox" ><label for="d94b3843-7381-4b94-8a57-f163ed716066" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d816e9b8-8338-4837-92e1-f8b5fbae0076" type="checkbox" ><label for="d816e9b8-8338-4837-92e1-f8b5fbae0076" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9db6dce3-9805-475d-ad1b-21de6475e162" type="checkbox" ><label for="9db6dce3-9805-475d-ad1b-21de6475e162" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e10d5508-a395-4494-be92-fe2cd4f21bcd" type="checkbox" ><label for="e10d5508-a395-4494-be92-fe2cd4f21bcd" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e4d017d4-5496-4c76-b724-d0682168a5c1" type="checkbox" ><label for="e4d017d4-5496-4c76-b724-d0682168a5c1" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="823a6cc9-473d-4b80-ad13-6ebdda104d9e" type="checkbox" ><label for="823a6cc9-473d-4b80-ad13-6ebdda104d9e" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-d17016ac-5dde-4ba6-815a-577709989586 {color: black;background-color: white;}#sk-d17016ac-5dde-4ba6-815a-577709989586 pre{padding: 0;}#sk-d17016ac-5dde-4ba6-815a-577709989586 div.sk-toggleable {background-color: white;}#sk-d17016ac-5dde-4ba6-815a-577709989586 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-d17016ac-5dde-4ba6-815a-577709989586 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-d17016ac-5dde-4ba6-815a-577709989586 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-d17016ac-5dde-4ba6-815a-577709989586 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-d17016ac-5dde-4ba6-815a-577709989586 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-d17016ac-5dde-4ba6-815a-577709989586 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-d17016ac-5dde-4ba6-815a-577709989586 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-d17016ac-5dde-4ba6-815a-577709989586 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-d17016ac-5dde-4ba6-815a-577709989586 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-d17016ac-5dde-4ba6-815a-577709989586 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-d17016ac-5dde-4ba6-815a-577709989586 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-d17016ac-5dde-4ba6-815a-577709989586 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-d17016ac-5dde-4ba6-815a-577709989586 div.sk-estimator:hover {background-color: #d4ebff;}#sk-d17016ac-5dde-4ba6-815a-577709989586 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-d17016ac-5dde-4ba6-815a-577709989586 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-d17016ac-5dde-4ba6-815a-577709989586 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-d17016ac-5dde-4ba6-815a-577709989586 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-d17016ac-5dde-4ba6-815a-577709989586 div.sk-item {z-index: 1;}#sk-d17016ac-5dde-4ba6-815a-577709989586 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-d17016ac-5dde-4ba6-815a-577709989586 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-d17016ac-5dde-4ba6-815a-577709989586 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-d17016ac-5dde-4ba6-815a-577709989586 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-d17016ac-5dde-4ba6-815a-577709989586 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-d17016ac-5dde-4ba6-815a-577709989586 div.sk-parallel-item:only-child::after {width: 0;}#sk-d17016ac-5dde-4ba6-815a-577709989586 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-d17016ac-5dde-4ba6-815a-577709989586 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-d17016ac-5dde-4ba6-815a-577709989586 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-d17016ac-5dde-4ba6-815a-577709989586 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-d17016ac-5dde-4ba6-815a-577709989586 div.sk-text-repr-fallback {display: none;}</style><div id="sk-d17016ac-5dde-4ba6-815a-577709989586" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3ee32802-29b7-49d2-aacc-b38af2cf3145" type="checkbox" ><label for="3ee32802-29b7-49d2-aacc-b38af2cf3145" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d2cc057b-e512-45f1-8a2b-7b9c3668c2e1" type="checkbox" ><label for="d2cc057b-e512-45f1-8a2b-7b9c3668c2e1" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="329a65dc-024a-4753-bb5e-132cc6721ab9" type="checkbox" ><label for="329a65dc-024a-4753-bb5e-132cc6721ab9" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6510603c-f38f-4da9-9a4a-ad30bc9da854" type="checkbox" ><label for="6510603c-f38f-4da9-9a4a-ad30bc9da854" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="623061b9-792b-4ef9-bd1e-b237d697d0b6" type="checkbox" ><label for="623061b9-792b-4ef9-bd1e-b237d697d0b6" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d420a6e0-7492-45ef-9211-852e8a793a60" type="checkbox" ><label for="d420a6e0-7492-45ef-9211-852e8a793a60" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ed400f44-b34d-4e19-92e9-67bdef9c9be9" type="checkbox" ><label for="ed400f44-b34d-4e19-92e9-67bdef9c9be9" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d22d6d4f-31f2-4c54-9efe-278c7bcfe3a9" type="checkbox" ><label for="d22d6d4f-31f2-4c54-9efe-278c7bcfe3a9" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="61155b5e-e3fb-48fa-8c63-e6b1c9668c50" type="checkbox" ><label for="61155b5e-e3fb-48fa-8c63-e6b1c9668c50" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.076 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
