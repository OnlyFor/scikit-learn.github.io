
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-3945b440-b6bf-48fc-a501-fdf5439be7bd {color: black;background-color: white;}#sk-3945b440-b6bf-48fc-a501-fdf5439be7bd pre{padding: 0;}#sk-3945b440-b6bf-48fc-a501-fdf5439be7bd div.sk-toggleable {background-color: white;}#sk-3945b440-b6bf-48fc-a501-fdf5439be7bd label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-3945b440-b6bf-48fc-a501-fdf5439be7bd label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-3945b440-b6bf-48fc-a501-fdf5439be7bd label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-3945b440-b6bf-48fc-a501-fdf5439be7bd div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-3945b440-b6bf-48fc-a501-fdf5439be7bd div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-3945b440-b6bf-48fc-a501-fdf5439be7bd div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-3945b440-b6bf-48fc-a501-fdf5439be7bd input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-3945b440-b6bf-48fc-a501-fdf5439be7bd input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-3945b440-b6bf-48fc-a501-fdf5439be7bd div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-3945b440-b6bf-48fc-a501-fdf5439be7bd div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-3945b440-b6bf-48fc-a501-fdf5439be7bd input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-3945b440-b6bf-48fc-a501-fdf5439be7bd div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-3945b440-b6bf-48fc-a501-fdf5439be7bd div.sk-estimator:hover {background-color: #d4ebff;}#sk-3945b440-b6bf-48fc-a501-fdf5439be7bd div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-3945b440-b6bf-48fc-a501-fdf5439be7bd div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-3945b440-b6bf-48fc-a501-fdf5439be7bd div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-3945b440-b6bf-48fc-a501-fdf5439be7bd div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-3945b440-b6bf-48fc-a501-fdf5439be7bd div.sk-item {z-index: 1;}#sk-3945b440-b6bf-48fc-a501-fdf5439be7bd div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-3945b440-b6bf-48fc-a501-fdf5439be7bd div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-3945b440-b6bf-48fc-a501-fdf5439be7bd div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-3945b440-b6bf-48fc-a501-fdf5439be7bd div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-3945b440-b6bf-48fc-a501-fdf5439be7bd div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-3945b440-b6bf-48fc-a501-fdf5439be7bd div.sk-parallel-item:only-child::after {width: 0;}#sk-3945b440-b6bf-48fc-a501-fdf5439be7bd div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-3945b440-b6bf-48fc-a501-fdf5439be7bd div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-3945b440-b6bf-48fc-a501-fdf5439be7bd div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-3945b440-b6bf-48fc-a501-fdf5439be7bd div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-3945b440-b6bf-48fc-a501-fdf5439be7bd div.sk-text-repr-fallback {display: none;}</style><div id="sk-3945b440-b6bf-48fc-a501-fdf5439be7bd" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fd246588-d892-4370-8846-af60055634b8" type="checkbox" ><label for="fd246588-d892-4370-8846-af60055634b8" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="834c6710-9d5e-42b3-857c-718b7b8cc4cb" type="checkbox" ><label for="834c6710-9d5e-42b3-857c-718b7b8cc4cb" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="293c0f40-3f1c-4894-9a9f-aa25672a126a" type="checkbox" ><label for="293c0f40-3f1c-4894-9a9f-aa25672a126a" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-4dc9d15d-97d6-4cd8-9e98-3ac33d45b7c7 {color: black;background-color: white;}#sk-4dc9d15d-97d6-4cd8-9e98-3ac33d45b7c7 pre{padding: 0;}#sk-4dc9d15d-97d6-4cd8-9e98-3ac33d45b7c7 div.sk-toggleable {background-color: white;}#sk-4dc9d15d-97d6-4cd8-9e98-3ac33d45b7c7 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-4dc9d15d-97d6-4cd8-9e98-3ac33d45b7c7 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-4dc9d15d-97d6-4cd8-9e98-3ac33d45b7c7 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-4dc9d15d-97d6-4cd8-9e98-3ac33d45b7c7 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-4dc9d15d-97d6-4cd8-9e98-3ac33d45b7c7 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-4dc9d15d-97d6-4cd8-9e98-3ac33d45b7c7 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-4dc9d15d-97d6-4cd8-9e98-3ac33d45b7c7 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-4dc9d15d-97d6-4cd8-9e98-3ac33d45b7c7 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-4dc9d15d-97d6-4cd8-9e98-3ac33d45b7c7 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-4dc9d15d-97d6-4cd8-9e98-3ac33d45b7c7 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-4dc9d15d-97d6-4cd8-9e98-3ac33d45b7c7 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-4dc9d15d-97d6-4cd8-9e98-3ac33d45b7c7 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-4dc9d15d-97d6-4cd8-9e98-3ac33d45b7c7 div.sk-estimator:hover {background-color: #d4ebff;}#sk-4dc9d15d-97d6-4cd8-9e98-3ac33d45b7c7 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-4dc9d15d-97d6-4cd8-9e98-3ac33d45b7c7 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-4dc9d15d-97d6-4cd8-9e98-3ac33d45b7c7 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-4dc9d15d-97d6-4cd8-9e98-3ac33d45b7c7 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-4dc9d15d-97d6-4cd8-9e98-3ac33d45b7c7 div.sk-item {z-index: 1;}#sk-4dc9d15d-97d6-4cd8-9e98-3ac33d45b7c7 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-4dc9d15d-97d6-4cd8-9e98-3ac33d45b7c7 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-4dc9d15d-97d6-4cd8-9e98-3ac33d45b7c7 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-4dc9d15d-97d6-4cd8-9e98-3ac33d45b7c7 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-4dc9d15d-97d6-4cd8-9e98-3ac33d45b7c7 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-4dc9d15d-97d6-4cd8-9e98-3ac33d45b7c7 div.sk-parallel-item:only-child::after {width: 0;}#sk-4dc9d15d-97d6-4cd8-9e98-3ac33d45b7c7 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-4dc9d15d-97d6-4cd8-9e98-3ac33d45b7c7 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-4dc9d15d-97d6-4cd8-9e98-3ac33d45b7c7 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-4dc9d15d-97d6-4cd8-9e98-3ac33d45b7c7 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-4dc9d15d-97d6-4cd8-9e98-3ac33d45b7c7 div.sk-text-repr-fallback {display: none;}</style><div id="sk-4dc9d15d-97d6-4cd8-9e98-3ac33d45b7c7" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cc0d4438-db83-4747-903c-35f52b7c4664" type="checkbox" ><label for="cc0d4438-db83-4747-903c-35f52b7c4664" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1a948bed-3b2a-4c35-98f6-64dc29b73585" type="checkbox" ><label for="1a948bed-3b2a-4c35-98f6-64dc29b73585" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6c27e25b-e5c8-4eb3-983d-3563f8748de4" type="checkbox" ><label for="6c27e25b-e5c8-4eb3-983d-3563f8748de4" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="85898d96-6c37-4688-acc7-3539054a93cc" type="checkbox" ><label for="85898d96-6c37-4688-acc7-3539054a93cc" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-2a6adf8c-f907-48c9-9bd2-6f8536648ac8 {color: black;background-color: white;}#sk-2a6adf8c-f907-48c9-9bd2-6f8536648ac8 pre{padding: 0;}#sk-2a6adf8c-f907-48c9-9bd2-6f8536648ac8 div.sk-toggleable {background-color: white;}#sk-2a6adf8c-f907-48c9-9bd2-6f8536648ac8 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-2a6adf8c-f907-48c9-9bd2-6f8536648ac8 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-2a6adf8c-f907-48c9-9bd2-6f8536648ac8 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-2a6adf8c-f907-48c9-9bd2-6f8536648ac8 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-2a6adf8c-f907-48c9-9bd2-6f8536648ac8 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-2a6adf8c-f907-48c9-9bd2-6f8536648ac8 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-2a6adf8c-f907-48c9-9bd2-6f8536648ac8 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-2a6adf8c-f907-48c9-9bd2-6f8536648ac8 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-2a6adf8c-f907-48c9-9bd2-6f8536648ac8 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-2a6adf8c-f907-48c9-9bd2-6f8536648ac8 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-2a6adf8c-f907-48c9-9bd2-6f8536648ac8 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-2a6adf8c-f907-48c9-9bd2-6f8536648ac8 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-2a6adf8c-f907-48c9-9bd2-6f8536648ac8 div.sk-estimator:hover {background-color: #d4ebff;}#sk-2a6adf8c-f907-48c9-9bd2-6f8536648ac8 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-2a6adf8c-f907-48c9-9bd2-6f8536648ac8 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-2a6adf8c-f907-48c9-9bd2-6f8536648ac8 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-2a6adf8c-f907-48c9-9bd2-6f8536648ac8 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-2a6adf8c-f907-48c9-9bd2-6f8536648ac8 div.sk-item {z-index: 1;}#sk-2a6adf8c-f907-48c9-9bd2-6f8536648ac8 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-2a6adf8c-f907-48c9-9bd2-6f8536648ac8 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-2a6adf8c-f907-48c9-9bd2-6f8536648ac8 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-2a6adf8c-f907-48c9-9bd2-6f8536648ac8 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-2a6adf8c-f907-48c9-9bd2-6f8536648ac8 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-2a6adf8c-f907-48c9-9bd2-6f8536648ac8 div.sk-parallel-item:only-child::after {width: 0;}#sk-2a6adf8c-f907-48c9-9bd2-6f8536648ac8 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-2a6adf8c-f907-48c9-9bd2-6f8536648ac8 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-2a6adf8c-f907-48c9-9bd2-6f8536648ac8 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-2a6adf8c-f907-48c9-9bd2-6f8536648ac8 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-2a6adf8c-f907-48c9-9bd2-6f8536648ac8 div.sk-text-repr-fallback {display: none;}</style><div id="sk-2a6adf8c-f907-48c9-9bd2-6f8536648ac8" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="63b1513d-07b7-4345-82ad-aed2da90deb6" type="checkbox" ><label for="63b1513d-07b7-4345-82ad-aed2da90deb6" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ec3bdaf9-c34b-453e-bcc6-5d0e2688e7ff" type="checkbox" ><label for="ec3bdaf9-c34b-453e-bcc6-5d0e2688e7ff" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cfc6025c-0c23-4b35-a742-3a391ce31928" type="checkbox" ><label for="cfc6025c-0c23-4b35-a742-3a391ce31928" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-f291b88c-16e0-4b69-97f5-3e7163a3f538 {color: black;background-color: white;}#sk-f291b88c-16e0-4b69-97f5-3e7163a3f538 pre{padding: 0;}#sk-f291b88c-16e0-4b69-97f5-3e7163a3f538 div.sk-toggleable {background-color: white;}#sk-f291b88c-16e0-4b69-97f5-3e7163a3f538 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-f291b88c-16e0-4b69-97f5-3e7163a3f538 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-f291b88c-16e0-4b69-97f5-3e7163a3f538 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-f291b88c-16e0-4b69-97f5-3e7163a3f538 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-f291b88c-16e0-4b69-97f5-3e7163a3f538 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-f291b88c-16e0-4b69-97f5-3e7163a3f538 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-f291b88c-16e0-4b69-97f5-3e7163a3f538 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-f291b88c-16e0-4b69-97f5-3e7163a3f538 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-f291b88c-16e0-4b69-97f5-3e7163a3f538 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-f291b88c-16e0-4b69-97f5-3e7163a3f538 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-f291b88c-16e0-4b69-97f5-3e7163a3f538 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-f291b88c-16e0-4b69-97f5-3e7163a3f538 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-f291b88c-16e0-4b69-97f5-3e7163a3f538 div.sk-estimator:hover {background-color: #d4ebff;}#sk-f291b88c-16e0-4b69-97f5-3e7163a3f538 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-f291b88c-16e0-4b69-97f5-3e7163a3f538 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-f291b88c-16e0-4b69-97f5-3e7163a3f538 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-f291b88c-16e0-4b69-97f5-3e7163a3f538 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-f291b88c-16e0-4b69-97f5-3e7163a3f538 div.sk-item {z-index: 1;}#sk-f291b88c-16e0-4b69-97f5-3e7163a3f538 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-f291b88c-16e0-4b69-97f5-3e7163a3f538 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-f291b88c-16e0-4b69-97f5-3e7163a3f538 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-f291b88c-16e0-4b69-97f5-3e7163a3f538 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-f291b88c-16e0-4b69-97f5-3e7163a3f538 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-f291b88c-16e0-4b69-97f5-3e7163a3f538 div.sk-parallel-item:only-child::after {width: 0;}#sk-f291b88c-16e0-4b69-97f5-3e7163a3f538 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-f291b88c-16e0-4b69-97f5-3e7163a3f538 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-f291b88c-16e0-4b69-97f5-3e7163a3f538 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-f291b88c-16e0-4b69-97f5-3e7163a3f538 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-f291b88c-16e0-4b69-97f5-3e7163a3f538 div.sk-text-repr-fallback {display: none;}</style><div id="sk-f291b88c-16e0-4b69-97f5-3e7163a3f538" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="59e8fd48-2b38-4c52-8bb1-95b4b93033eb" type="checkbox" ><label for="59e8fd48-2b38-4c52-8bb1-95b4b93033eb" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="70140fd4-f3df-4fc4-9e97-151e4d317421" type="checkbox" ><label for="70140fd4-f3df-4fc4-9e97-151e4d317421" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8567eb36-06ba-42bc-8b89-5411d10a0d07" type="checkbox" ><label for="8567eb36-06ba-42bc-8b89-5411d10a0d07" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b8fdd4bc-c794-41f3-b396-9335f22cf1b1" type="checkbox" ><label for="b8fdd4bc-c794-41f3-b396-9335f22cf1b1" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2cc6bd08-4c5b-47a8-80fb-8e09ea5c0eb4" type="checkbox" ><label for="2cc6bd08-4c5b-47a8-80fb-8e09ea5c0eb4" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4c371d73-233e-44a5-8b30-d9c1b4b4613d" type="checkbox" ><label for="4c371d73-233e-44a5-8b30-d9c1b4b4613d" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e36235e7-0328-4ab3-a317-78d2b33c9691" type="checkbox" ><label for="e36235e7-0328-4ab3-a317-78d2b33c9691" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="320e82c4-b922-46ae-b5c2-8cc3e87d51ca" type="checkbox" ><label for="320e82c4-b922-46ae-b5c2-8cc3e87d51ca" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="86867174-a02e-417e-9d89-6de1a7b66fcf" type="checkbox" ><label for="86867174-a02e-417e-9d89-6de1a7b66fcf" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-e12594fe-b67a-46f4-b502-0c857d7d51c3 {color: black;background-color: white;}#sk-e12594fe-b67a-46f4-b502-0c857d7d51c3 pre{padding: 0;}#sk-e12594fe-b67a-46f4-b502-0c857d7d51c3 div.sk-toggleable {background-color: white;}#sk-e12594fe-b67a-46f4-b502-0c857d7d51c3 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-e12594fe-b67a-46f4-b502-0c857d7d51c3 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-e12594fe-b67a-46f4-b502-0c857d7d51c3 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-e12594fe-b67a-46f4-b502-0c857d7d51c3 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-e12594fe-b67a-46f4-b502-0c857d7d51c3 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-e12594fe-b67a-46f4-b502-0c857d7d51c3 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-e12594fe-b67a-46f4-b502-0c857d7d51c3 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-e12594fe-b67a-46f4-b502-0c857d7d51c3 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-e12594fe-b67a-46f4-b502-0c857d7d51c3 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-e12594fe-b67a-46f4-b502-0c857d7d51c3 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-e12594fe-b67a-46f4-b502-0c857d7d51c3 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-e12594fe-b67a-46f4-b502-0c857d7d51c3 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-e12594fe-b67a-46f4-b502-0c857d7d51c3 div.sk-estimator:hover {background-color: #d4ebff;}#sk-e12594fe-b67a-46f4-b502-0c857d7d51c3 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-e12594fe-b67a-46f4-b502-0c857d7d51c3 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-e12594fe-b67a-46f4-b502-0c857d7d51c3 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-e12594fe-b67a-46f4-b502-0c857d7d51c3 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-e12594fe-b67a-46f4-b502-0c857d7d51c3 div.sk-item {z-index: 1;}#sk-e12594fe-b67a-46f4-b502-0c857d7d51c3 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-e12594fe-b67a-46f4-b502-0c857d7d51c3 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-e12594fe-b67a-46f4-b502-0c857d7d51c3 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-e12594fe-b67a-46f4-b502-0c857d7d51c3 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-e12594fe-b67a-46f4-b502-0c857d7d51c3 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-e12594fe-b67a-46f4-b502-0c857d7d51c3 div.sk-parallel-item:only-child::after {width: 0;}#sk-e12594fe-b67a-46f4-b502-0c857d7d51c3 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-e12594fe-b67a-46f4-b502-0c857d7d51c3 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-e12594fe-b67a-46f4-b502-0c857d7d51c3 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-e12594fe-b67a-46f4-b502-0c857d7d51c3 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-e12594fe-b67a-46f4-b502-0c857d7d51c3 div.sk-text-repr-fallback {display: none;}</style><div id="sk-e12594fe-b67a-46f4-b502-0c857d7d51c3" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5e694178-022a-4873-8d2e-a2091ad08f84" type="checkbox" ><label for="5e694178-022a-4873-8d2e-a2091ad08f84" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1591b8ea-5c8d-4a90-868f-5b72cef2919f" type="checkbox" ><label for="1591b8ea-5c8d-4a90-868f-5b72cef2919f" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5fefc759-7048-4a8c-9c2f-c024660346a6" type="checkbox" ><label for="5fefc759-7048-4a8c-9c2f-c024660346a6" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="93f56cd3-1611-4f00-ae4c-6b7a4a7df528" type="checkbox" ><label for="93f56cd3-1611-4f00-ae4c-6b7a4a7df528" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="56caec1a-85cf-4b99-8e09-206d089c3d3b" type="checkbox" ><label for="56caec1a-85cf-4b99-8e09-206d089c3d3b" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d722336d-2098-4afe-a323-77c23a560cd7" type="checkbox" ><label for="d722336d-2098-4afe-a323-77c23a560cd7" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1fb9070b-6aad-4edc-81e1-790605bc9170" type="checkbox" ><label for="1fb9070b-6aad-4edc-81e1-790605bc9170" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="35ae8ae8-49d6-4906-959a-21302b32b43b" type="checkbox" ><label for="35ae8ae8-49d6-4906-959a-21302b32b43b" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="598790fc-613d-4b0b-bbd2-d45bc647dcdb" type="checkbox" ><label for="598790fc-613d-4b0b-bbd2-d45bc647dcdb" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.070 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
