
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-20581a37-f888-4ece-bd74-a6a647fefef5 {color: black;background-color: white;}#sk-20581a37-f888-4ece-bd74-a6a647fefef5 pre{padding: 0;}#sk-20581a37-f888-4ece-bd74-a6a647fefef5 div.sk-toggleable {background-color: white;}#sk-20581a37-f888-4ece-bd74-a6a647fefef5 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-20581a37-f888-4ece-bd74-a6a647fefef5 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-20581a37-f888-4ece-bd74-a6a647fefef5 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-20581a37-f888-4ece-bd74-a6a647fefef5 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-20581a37-f888-4ece-bd74-a6a647fefef5 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-20581a37-f888-4ece-bd74-a6a647fefef5 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-20581a37-f888-4ece-bd74-a6a647fefef5 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-20581a37-f888-4ece-bd74-a6a647fefef5 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-20581a37-f888-4ece-bd74-a6a647fefef5 div.sk-estimator:hover {background-color: #d4ebff;}#sk-20581a37-f888-4ece-bd74-a6a647fefef5 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-20581a37-f888-4ece-bd74-a6a647fefef5 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-20581a37-f888-4ece-bd74-a6a647fefef5 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-20581a37-f888-4ece-bd74-a6a647fefef5 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-20581a37-f888-4ece-bd74-a6a647fefef5 div.sk-item {z-index: 1;}#sk-20581a37-f888-4ece-bd74-a6a647fefef5 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-20581a37-f888-4ece-bd74-a6a647fefef5 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-20581a37-f888-4ece-bd74-a6a647fefef5 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-20581a37-f888-4ece-bd74-a6a647fefef5 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-20581a37-f888-4ece-bd74-a6a647fefef5 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-20581a37-f888-4ece-bd74-a6a647fefef5 div.sk-parallel-item:only-child::after {width: 0;}#sk-20581a37-f888-4ece-bd74-a6a647fefef5 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-20581a37-f888-4ece-bd74-a6a647fefef5 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-20581a37-f888-4ece-bd74-a6a647fefef5 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-20581a37-f888-4ece-bd74-a6a647fefef5 div.sk-container {display: inline-block;position: relative;}#sk-20581a37-f888-4ece-bd74-a6a647fefef5 div.sk-text-repr-fallback {display: none;}</style><div id="sk-20581a37-f888-4ece-bd74-a6a647fefef5" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e01ee842-3ec1-4561-b86b-3d10d0bd68e3" type="checkbox" ><label class="sk-toggleable__label" for="e01ee842-3ec1-4561-b86b-3d10d0bd68e3">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d13fba78-ba9d-4499-8b99-0b8c808d9cae" type="checkbox" ><label class="sk-toggleable__label" for="d13fba78-ba9d-4499-8b99-0b8c808d9cae">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cf7ef330-d1af-448a-a445-cd0bb2aa521e" type="checkbox" ><label class="sk-toggleable__label" for="cf7ef330-d1af-448a-a445-cd0bb2aa521e">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-51c6cdf5-695a-4bf8-ad27-717ad76d83ca {color: black;background-color: white;}#sk-51c6cdf5-695a-4bf8-ad27-717ad76d83ca pre{padding: 0;}#sk-51c6cdf5-695a-4bf8-ad27-717ad76d83ca div.sk-toggleable {background-color: white;}#sk-51c6cdf5-695a-4bf8-ad27-717ad76d83ca label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-51c6cdf5-695a-4bf8-ad27-717ad76d83ca div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-51c6cdf5-695a-4bf8-ad27-717ad76d83ca div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-51c6cdf5-695a-4bf8-ad27-717ad76d83ca input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-51c6cdf5-695a-4bf8-ad27-717ad76d83ca div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-51c6cdf5-695a-4bf8-ad27-717ad76d83ca div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-51c6cdf5-695a-4bf8-ad27-717ad76d83ca input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-51c6cdf5-695a-4bf8-ad27-717ad76d83ca div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-51c6cdf5-695a-4bf8-ad27-717ad76d83ca div.sk-estimator:hover {background-color: #d4ebff;}#sk-51c6cdf5-695a-4bf8-ad27-717ad76d83ca div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-51c6cdf5-695a-4bf8-ad27-717ad76d83ca div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-51c6cdf5-695a-4bf8-ad27-717ad76d83ca div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-51c6cdf5-695a-4bf8-ad27-717ad76d83ca div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-51c6cdf5-695a-4bf8-ad27-717ad76d83ca div.sk-item {z-index: 1;}#sk-51c6cdf5-695a-4bf8-ad27-717ad76d83ca div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-51c6cdf5-695a-4bf8-ad27-717ad76d83ca div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-51c6cdf5-695a-4bf8-ad27-717ad76d83ca div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-51c6cdf5-695a-4bf8-ad27-717ad76d83ca div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-51c6cdf5-695a-4bf8-ad27-717ad76d83ca div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-51c6cdf5-695a-4bf8-ad27-717ad76d83ca div.sk-parallel-item:only-child::after {width: 0;}#sk-51c6cdf5-695a-4bf8-ad27-717ad76d83ca div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-51c6cdf5-695a-4bf8-ad27-717ad76d83ca div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-51c6cdf5-695a-4bf8-ad27-717ad76d83ca div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-51c6cdf5-695a-4bf8-ad27-717ad76d83ca div.sk-container {display: inline-block;position: relative;}#sk-51c6cdf5-695a-4bf8-ad27-717ad76d83ca div.sk-text-repr-fallback {display: none;}</style><div id="sk-51c6cdf5-695a-4bf8-ad27-717ad76d83ca" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e384c033-d859-46eb-9d47-6e8f93e205f6" type="checkbox" ><label class="sk-toggleable__label" for="e384c033-d859-46eb-9d47-6e8f93e205f6">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('standard_scaler', StandardScaler()),
                    ('polynomial', PolynomialFeatures(degree=3)),
                    ('classifier', LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f4c749c9-c343-4bcd-84d4-33a9e4738ef0" type="checkbox" ><label class="sk-toggleable__label" for="f4c749c9-c343-4bcd-84d4-33a9e4738ef0">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f50d1f31-0f7a-48ed-9111-a59883657d28" type="checkbox" ><label class="sk-toggleable__label" for="f50d1f31-0f7a-48ed-9111-a59883657d28">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d46f2bdb-4dce-4005-8785-e4778ab55093" type="checkbox" ><label class="sk-toggleable__label" for="d46f2bdb-4dce-4005-8785-e4778ab55093">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-ab49436d-e39f-4fdb-878f-f58bdca1a049 {color: black;background-color: white;}#sk-ab49436d-e39f-4fdb-878f-f58bdca1a049 pre{padding: 0;}#sk-ab49436d-e39f-4fdb-878f-f58bdca1a049 div.sk-toggleable {background-color: white;}#sk-ab49436d-e39f-4fdb-878f-f58bdca1a049 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-ab49436d-e39f-4fdb-878f-f58bdca1a049 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-ab49436d-e39f-4fdb-878f-f58bdca1a049 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-ab49436d-e39f-4fdb-878f-f58bdca1a049 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-ab49436d-e39f-4fdb-878f-f58bdca1a049 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ab49436d-e39f-4fdb-878f-f58bdca1a049 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ab49436d-e39f-4fdb-878f-f58bdca1a049 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-ab49436d-e39f-4fdb-878f-f58bdca1a049 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-ab49436d-e39f-4fdb-878f-f58bdca1a049 div.sk-estimator:hover {background-color: #d4ebff;}#sk-ab49436d-e39f-4fdb-878f-f58bdca1a049 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-ab49436d-e39f-4fdb-878f-f58bdca1a049 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-ab49436d-e39f-4fdb-878f-f58bdca1a049 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ab49436d-e39f-4fdb-878f-f58bdca1a049 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-ab49436d-e39f-4fdb-878f-f58bdca1a049 div.sk-item {z-index: 1;}#sk-ab49436d-e39f-4fdb-878f-f58bdca1a049 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-ab49436d-e39f-4fdb-878f-f58bdca1a049 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ab49436d-e39f-4fdb-878f-f58bdca1a049 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-ab49436d-e39f-4fdb-878f-f58bdca1a049 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-ab49436d-e39f-4fdb-878f-f58bdca1a049 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-ab49436d-e39f-4fdb-878f-f58bdca1a049 div.sk-parallel-item:only-child::after {width: 0;}#sk-ab49436d-e39f-4fdb-878f-f58bdca1a049 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-ab49436d-e39f-4fdb-878f-f58bdca1a049 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-ab49436d-e39f-4fdb-878f-f58bdca1a049 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-ab49436d-e39f-4fdb-878f-f58bdca1a049 div.sk-container {display: inline-block;position: relative;}#sk-ab49436d-e39f-4fdb-878f-f58bdca1a049 div.sk-text-repr-fallback {display: none;}</style><div id="sk-ab49436d-e39f-4fdb-878f-f58bdca1a049" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="dcd4e1aa-5649-40e0-84ed-a10298925b45" type="checkbox" ><label class="sk-toggleable__label" for="dcd4e1aa-5649-40e0-84ed-a10298925b45">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('reduce_dim', PCA(n_components=4)),
                    ('classifier', SVC(kernel='linear'))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="781273ce-0a64-45e7-8e44-3bfe2c74d089" type="checkbox" ><label class="sk-toggleable__label" for="781273ce-0a64-45e7-8e44-3bfe2c74d089">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7727b42e-9b23-4c58-8032-e838aaf42265" type="checkbox" ><label class="sk-toggleable__label" for="7727b42e-9b23-4c58-8032-e838aaf42265">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel='linear')</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-9a75961e-3990-4588-b89a-2b20305ce863 {color: black;background-color: white;}#sk-9a75961e-3990-4588-b89a-2b20305ce863 pre{padding: 0;}#sk-9a75961e-3990-4588-b89a-2b20305ce863 div.sk-toggleable {background-color: white;}#sk-9a75961e-3990-4588-b89a-2b20305ce863 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-9a75961e-3990-4588-b89a-2b20305ce863 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-9a75961e-3990-4588-b89a-2b20305ce863 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-9a75961e-3990-4588-b89a-2b20305ce863 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-9a75961e-3990-4588-b89a-2b20305ce863 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-9a75961e-3990-4588-b89a-2b20305ce863 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-9a75961e-3990-4588-b89a-2b20305ce863 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-9a75961e-3990-4588-b89a-2b20305ce863 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-9a75961e-3990-4588-b89a-2b20305ce863 div.sk-estimator:hover {background-color: #d4ebff;}#sk-9a75961e-3990-4588-b89a-2b20305ce863 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-9a75961e-3990-4588-b89a-2b20305ce863 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-9a75961e-3990-4588-b89a-2b20305ce863 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-9a75961e-3990-4588-b89a-2b20305ce863 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-9a75961e-3990-4588-b89a-2b20305ce863 div.sk-item {z-index: 1;}#sk-9a75961e-3990-4588-b89a-2b20305ce863 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-9a75961e-3990-4588-b89a-2b20305ce863 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-9a75961e-3990-4588-b89a-2b20305ce863 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-9a75961e-3990-4588-b89a-2b20305ce863 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-9a75961e-3990-4588-b89a-2b20305ce863 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-9a75961e-3990-4588-b89a-2b20305ce863 div.sk-parallel-item:only-child::after {width: 0;}#sk-9a75961e-3990-4588-b89a-2b20305ce863 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-9a75961e-3990-4588-b89a-2b20305ce863 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-9a75961e-3990-4588-b89a-2b20305ce863 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-9a75961e-3990-4588-b89a-2b20305ce863 div.sk-container {display: inline-block;position: relative;}#sk-9a75961e-3990-4588-b89a-2b20305ce863 div.sk-text-repr-fallback {display: none;}</style><div id="sk-9a75961e-3990-4588-b89a-2b20305ce863" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="383074f9-8f0d-436e-acd9-9dbe3b9d2882" type="checkbox" ><label class="sk-toggleable__label" for="383074f9-8f0d-436e-acd9-9dbe3b9d2882">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('columntransformer',
                     ColumnTransformer(transformers=[('categorical',
                                                      Pipeline(steps=[('imputation_constant',
                                                                       SimpleImputer(fill_value='missing',
                                                                                     strategy='constant')),
                                                                      ('onehot',
                                                                       OneHotEncoder(handle_unknown='ignore'))]),
                                                      ['state', 'gender']),
                                                     ('numerical',
                                                      Pipeline(steps=[('imputation_mean',
                                                                       SimpleImputer()),
                                                                      ('scaler',
                                                                       StandardScaler())]),
                                                      ['age', 'weight'])])),
                    ('logisticregression', LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b1957df0-1efa-441b-bf87-e415e530a070" type="checkbox" ><label class="sk-toggleable__label" for="b1957df0-1efa-441b-bf87-e415e530a070">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('categorical',
                                     Pipeline(steps=[('imputation_constant',
                                                      SimpleImputer(fill_value='missing',
                                                                    strategy='constant')),
                                                     ('onehot',
                                                      OneHotEncoder(handle_unknown='ignore'))]),
                                     ['state', 'gender']),
                                    ('numerical',
                                     Pipeline(steps=[('imputation_mean',
                                                      SimpleImputer()),
                                                     ('scaler', StandardScaler())]),
                                     ['age', 'weight'])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c72f25ec-0549-4e8d-a751-40737e3c5ae9" type="checkbox" ><label class="sk-toggleable__label" for="c72f25ec-0549-4e8d-a751-40737e3c5ae9">categorical</label><div class="sk-toggleable__content"><pre>['state', 'gender']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6ea06541-ade0-4378-afc3-eb24e668ae9f" type="checkbox" ><label class="sk-toggleable__label" for="6ea06541-ade0-4378-afc3-eb24e668ae9f">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value='missing', strategy='constant')</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1c883d29-ea5f-4d54-b5d5-6299783ee7e8" type="checkbox" ><label class="sk-toggleable__label" for="1c883d29-ea5f-4d54-b5d5-6299783ee7e8">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown='ignore')</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="af28b106-bea2-47f3-a912-ee63813f7286" type="checkbox" ><label class="sk-toggleable__label" for="af28b106-bea2-47f3-a912-ee63813f7286">numerical</label><div class="sk-toggleable__content"><pre>['age', 'weight']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ee29adab-7278-4c8f-ac1c-e0d3573408c8" type="checkbox" ><label class="sk-toggleable__label" for="ee29adab-7278-4c8f-ac1c-e0d3573408c8">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f629c2d0-54ae-4fcc-bfd1-02c1879eaf91" type="checkbox" ><label class="sk-toggleable__label" for="f629c2d0-54ae-4fcc-bfd1-02c1879eaf91">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="974104cc-5e4d-463b-8280-54bb909de7b1" type="checkbox" ><label class="sk-toggleable__label" for="974104cc-5e4d-463b-8280-54bb909de7b1">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-2ed765f3-e654-49af-9061-3ce810cc3dfa {color: black;background-color: white;}#sk-2ed765f3-e654-49af-9061-3ce810cc3dfa pre{padding: 0;}#sk-2ed765f3-e654-49af-9061-3ce810cc3dfa div.sk-toggleable {background-color: white;}#sk-2ed765f3-e654-49af-9061-3ce810cc3dfa label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-2ed765f3-e654-49af-9061-3ce810cc3dfa div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-2ed765f3-e654-49af-9061-3ce810cc3dfa div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-2ed765f3-e654-49af-9061-3ce810cc3dfa input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-2ed765f3-e654-49af-9061-3ce810cc3dfa div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-2ed765f3-e654-49af-9061-3ce810cc3dfa div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-2ed765f3-e654-49af-9061-3ce810cc3dfa input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-2ed765f3-e654-49af-9061-3ce810cc3dfa div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-2ed765f3-e654-49af-9061-3ce810cc3dfa div.sk-estimator:hover {background-color: #d4ebff;}#sk-2ed765f3-e654-49af-9061-3ce810cc3dfa div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-2ed765f3-e654-49af-9061-3ce810cc3dfa div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-2ed765f3-e654-49af-9061-3ce810cc3dfa div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-2ed765f3-e654-49af-9061-3ce810cc3dfa div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-2ed765f3-e654-49af-9061-3ce810cc3dfa div.sk-item {z-index: 1;}#sk-2ed765f3-e654-49af-9061-3ce810cc3dfa div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-2ed765f3-e654-49af-9061-3ce810cc3dfa div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-2ed765f3-e654-49af-9061-3ce810cc3dfa div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-2ed765f3-e654-49af-9061-3ce810cc3dfa div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-2ed765f3-e654-49af-9061-3ce810cc3dfa div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-2ed765f3-e654-49af-9061-3ce810cc3dfa div.sk-parallel-item:only-child::after {width: 0;}#sk-2ed765f3-e654-49af-9061-3ce810cc3dfa div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-2ed765f3-e654-49af-9061-3ce810cc3dfa div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-2ed765f3-e654-49af-9061-3ce810cc3dfa div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-2ed765f3-e654-49af-9061-3ce810cc3dfa div.sk-container {display: inline-block;position: relative;}#sk-2ed765f3-e654-49af-9061-3ce810cc3dfa div.sk-text-repr-fallback {display: none;}</style><div id="sk-2ed765f3-e654-49af-9061-3ce810cc3dfa" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ef94de30-138f-4c4a-aca7-a626149babcc" type="checkbox" ><label class="sk-toggleable__label" for="ef94de30-138f-4c4a-aca7-a626149babcc">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[('preprocessor',
                                            ColumnTransformer(transformers=[('categorical',
                                                                             Pipeline(steps=[('imputation_constant',
                                                                                              SimpleImputer(fill_value='missing',
                                                                                                            strategy='constant')),
                                                                                             ('onehot',
                                                                                              OneHotEncoder(handle_unknown='ignore'))]),
                                                                             ['state',
                                                                              'gender']),
                                                                            ('numerical',
                                                                             Pipeline(steps=[('imputation_mean',
                                                                                              SimpleImputer()),
                                                                                             ('scaler',
                                                                                              StandardScaler())]),
                                                                             ['age',
                                                                              'weight'])])),
                                           ('classifier',
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={'classifier__criterion': ['gini', 'entropy'],
                             'classifier__max_depth': [4, 5, 6, 7, 8],
                             'classifier__max_features': ['auto', 'sqrt', 'log2'],
                             'classifier__n_estimators': [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9067501c-56f6-4cc5-8f7f-146c411804f6" type="checkbox" ><label class="sk-toggleable__label" for="9067501c-56f6-4cc5-8f7f-146c411804f6">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('categorical',
                                     Pipeline(steps=[('imputation_constant',
                                                      SimpleImputer(fill_value='missing',
                                                                    strategy='constant')),
                                                     ('onehot',
                                                      OneHotEncoder(handle_unknown='ignore'))]),
                                     ['state', 'gender']),
                                    ('numerical',
                                     Pipeline(steps=[('imputation_mean',
                                                      SimpleImputer()),
                                                     ('scaler', StandardScaler())]),
                                     ['age', 'weight'])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2fd5094e-128b-42be-b010-b9b425977756" type="checkbox" ><label class="sk-toggleable__label" for="2fd5094e-128b-42be-b010-b9b425977756">categorical</label><div class="sk-toggleable__content"><pre>['state', 'gender']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c0bfbad9-f863-45fa-bcaf-470ed9489592" type="checkbox" ><label class="sk-toggleable__label" for="c0bfbad9-f863-45fa-bcaf-470ed9489592">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value='missing', strategy='constant')</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a6e214e6-8963-4dcf-a18c-cf290bd25ce0" type="checkbox" ><label class="sk-toggleable__label" for="a6e214e6-8963-4dcf-a18c-cf290bd25ce0">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown='ignore')</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cac95004-896d-489d-83ab-6b2befcb2514" type="checkbox" ><label class="sk-toggleable__label" for="cac95004-896d-489d-83ab-6b2befcb2514">numerical</label><div class="sk-toggleable__content"><pre>['age', 'weight']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0633680e-3a72-4337-b66f-6c84aeda5058" type="checkbox" ><label class="sk-toggleable__label" for="0633680e-3a72-4337-b66f-6c84aeda5058">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ebf39464-4e3a-4095-b802-1910e239b30a" type="checkbox" ><label class="sk-toggleable__label" for="ebf39464-4e3a-4095-b802-1910e239b30a">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bcc071c1-7769-44ae-b83c-1c8acd8f8b67" type="checkbox" ><label class="sk-toggleable__label" for="bcc071c1-7769-44ae-b83c-1c8acd8f8b67">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.111 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
