
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-634bf618-87eb-4ce7-8288-61f08a2d5bed {color: black;background-color: white;}#sk-634bf618-87eb-4ce7-8288-61f08a2d5bed pre{padding: 0;}#sk-634bf618-87eb-4ce7-8288-61f08a2d5bed div.sk-toggleable {background-color: white;}#sk-634bf618-87eb-4ce7-8288-61f08a2d5bed label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-634bf618-87eb-4ce7-8288-61f08a2d5bed label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-634bf618-87eb-4ce7-8288-61f08a2d5bed label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-634bf618-87eb-4ce7-8288-61f08a2d5bed div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-634bf618-87eb-4ce7-8288-61f08a2d5bed div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-634bf618-87eb-4ce7-8288-61f08a2d5bed div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-634bf618-87eb-4ce7-8288-61f08a2d5bed input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-634bf618-87eb-4ce7-8288-61f08a2d5bed input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-634bf618-87eb-4ce7-8288-61f08a2d5bed div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-634bf618-87eb-4ce7-8288-61f08a2d5bed div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-634bf618-87eb-4ce7-8288-61f08a2d5bed input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-634bf618-87eb-4ce7-8288-61f08a2d5bed div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-634bf618-87eb-4ce7-8288-61f08a2d5bed div.sk-estimator:hover {background-color: #d4ebff;}#sk-634bf618-87eb-4ce7-8288-61f08a2d5bed div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-634bf618-87eb-4ce7-8288-61f08a2d5bed div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-634bf618-87eb-4ce7-8288-61f08a2d5bed div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-634bf618-87eb-4ce7-8288-61f08a2d5bed div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-634bf618-87eb-4ce7-8288-61f08a2d5bed div.sk-item {z-index: 1;}#sk-634bf618-87eb-4ce7-8288-61f08a2d5bed div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-634bf618-87eb-4ce7-8288-61f08a2d5bed div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-634bf618-87eb-4ce7-8288-61f08a2d5bed div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-634bf618-87eb-4ce7-8288-61f08a2d5bed div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-634bf618-87eb-4ce7-8288-61f08a2d5bed div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-634bf618-87eb-4ce7-8288-61f08a2d5bed div.sk-parallel-item:only-child::after {width: 0;}#sk-634bf618-87eb-4ce7-8288-61f08a2d5bed div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-634bf618-87eb-4ce7-8288-61f08a2d5bed div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-634bf618-87eb-4ce7-8288-61f08a2d5bed div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-634bf618-87eb-4ce7-8288-61f08a2d5bed div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-634bf618-87eb-4ce7-8288-61f08a2d5bed div.sk-text-repr-fallback {display: none;}</style><div id="sk-634bf618-87eb-4ce7-8288-61f08a2d5bed" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="33725e25-4897-4ca0-a84f-26d7d728ab22" type="checkbox" ><label for="33725e25-4897-4ca0-a84f-26d7d728ab22" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="eb804306-83b6-4f85-9455-e4067f334a4c" type="checkbox" ><label for="eb804306-83b6-4f85-9455-e4067f334a4c" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ec38ac8a-7c4c-46fe-a332-50f806837e85" type="checkbox" ><label for="ec38ac8a-7c4c-46fe-a332-50f806837e85" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-b0dc25dd-69da-42ab-8f5d-bf3c69933623 {color: black;background-color: white;}#sk-b0dc25dd-69da-42ab-8f5d-bf3c69933623 pre{padding: 0;}#sk-b0dc25dd-69da-42ab-8f5d-bf3c69933623 div.sk-toggleable {background-color: white;}#sk-b0dc25dd-69da-42ab-8f5d-bf3c69933623 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-b0dc25dd-69da-42ab-8f5d-bf3c69933623 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-b0dc25dd-69da-42ab-8f5d-bf3c69933623 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-b0dc25dd-69da-42ab-8f5d-bf3c69933623 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-b0dc25dd-69da-42ab-8f5d-bf3c69933623 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-b0dc25dd-69da-42ab-8f5d-bf3c69933623 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-b0dc25dd-69da-42ab-8f5d-bf3c69933623 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-b0dc25dd-69da-42ab-8f5d-bf3c69933623 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-b0dc25dd-69da-42ab-8f5d-bf3c69933623 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b0dc25dd-69da-42ab-8f5d-bf3c69933623 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b0dc25dd-69da-42ab-8f5d-bf3c69933623 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-b0dc25dd-69da-42ab-8f5d-bf3c69933623 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-b0dc25dd-69da-42ab-8f5d-bf3c69933623 div.sk-estimator:hover {background-color: #d4ebff;}#sk-b0dc25dd-69da-42ab-8f5d-bf3c69933623 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-b0dc25dd-69da-42ab-8f5d-bf3c69933623 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-b0dc25dd-69da-42ab-8f5d-bf3c69933623 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b0dc25dd-69da-42ab-8f5d-bf3c69933623 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-b0dc25dd-69da-42ab-8f5d-bf3c69933623 div.sk-item {z-index: 1;}#sk-b0dc25dd-69da-42ab-8f5d-bf3c69933623 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-b0dc25dd-69da-42ab-8f5d-bf3c69933623 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b0dc25dd-69da-42ab-8f5d-bf3c69933623 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-b0dc25dd-69da-42ab-8f5d-bf3c69933623 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-b0dc25dd-69da-42ab-8f5d-bf3c69933623 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-b0dc25dd-69da-42ab-8f5d-bf3c69933623 div.sk-parallel-item:only-child::after {width: 0;}#sk-b0dc25dd-69da-42ab-8f5d-bf3c69933623 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-b0dc25dd-69da-42ab-8f5d-bf3c69933623 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-b0dc25dd-69da-42ab-8f5d-bf3c69933623 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-b0dc25dd-69da-42ab-8f5d-bf3c69933623 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-b0dc25dd-69da-42ab-8f5d-bf3c69933623 div.sk-text-repr-fallback {display: none;}</style><div id="sk-b0dc25dd-69da-42ab-8f5d-bf3c69933623" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7d029556-f0f0-4226-a97a-ee084758dcfd" type="checkbox" ><label for="7d029556-f0f0-4226-a97a-ee084758dcfd" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9bef4de9-844f-4b4e-84a3-4e5a401f079f" type="checkbox" ><label for="9bef4de9-844f-4b4e-84a3-4e5a401f079f" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="29fa94cf-e5cc-4cc9-8352-7647669dbd4d" type="checkbox" ><label for="29fa94cf-e5cc-4cc9-8352-7647669dbd4d" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2ae4652d-82e1-455c-b122-e63b26dcdfe8" type="checkbox" ><label for="2ae4652d-82e1-455c-b122-e63b26dcdfe8" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-51aa02dc-d84e-4fe4-a0f8-44f4fe3142cc {color: black;background-color: white;}#sk-51aa02dc-d84e-4fe4-a0f8-44f4fe3142cc pre{padding: 0;}#sk-51aa02dc-d84e-4fe4-a0f8-44f4fe3142cc div.sk-toggleable {background-color: white;}#sk-51aa02dc-d84e-4fe4-a0f8-44f4fe3142cc label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-51aa02dc-d84e-4fe4-a0f8-44f4fe3142cc label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-51aa02dc-d84e-4fe4-a0f8-44f4fe3142cc label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-51aa02dc-d84e-4fe4-a0f8-44f4fe3142cc div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-51aa02dc-d84e-4fe4-a0f8-44f4fe3142cc div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-51aa02dc-d84e-4fe4-a0f8-44f4fe3142cc div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-51aa02dc-d84e-4fe4-a0f8-44f4fe3142cc input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-51aa02dc-d84e-4fe4-a0f8-44f4fe3142cc input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-51aa02dc-d84e-4fe4-a0f8-44f4fe3142cc div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-51aa02dc-d84e-4fe4-a0f8-44f4fe3142cc div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-51aa02dc-d84e-4fe4-a0f8-44f4fe3142cc input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-51aa02dc-d84e-4fe4-a0f8-44f4fe3142cc div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-51aa02dc-d84e-4fe4-a0f8-44f4fe3142cc div.sk-estimator:hover {background-color: #d4ebff;}#sk-51aa02dc-d84e-4fe4-a0f8-44f4fe3142cc div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-51aa02dc-d84e-4fe4-a0f8-44f4fe3142cc div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-51aa02dc-d84e-4fe4-a0f8-44f4fe3142cc div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-51aa02dc-d84e-4fe4-a0f8-44f4fe3142cc div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-51aa02dc-d84e-4fe4-a0f8-44f4fe3142cc div.sk-item {z-index: 1;}#sk-51aa02dc-d84e-4fe4-a0f8-44f4fe3142cc div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-51aa02dc-d84e-4fe4-a0f8-44f4fe3142cc div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-51aa02dc-d84e-4fe4-a0f8-44f4fe3142cc div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-51aa02dc-d84e-4fe4-a0f8-44f4fe3142cc div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-51aa02dc-d84e-4fe4-a0f8-44f4fe3142cc div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-51aa02dc-d84e-4fe4-a0f8-44f4fe3142cc div.sk-parallel-item:only-child::after {width: 0;}#sk-51aa02dc-d84e-4fe4-a0f8-44f4fe3142cc div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-51aa02dc-d84e-4fe4-a0f8-44f4fe3142cc div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-51aa02dc-d84e-4fe4-a0f8-44f4fe3142cc div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-51aa02dc-d84e-4fe4-a0f8-44f4fe3142cc div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-51aa02dc-d84e-4fe4-a0f8-44f4fe3142cc div.sk-text-repr-fallback {display: none;}</style><div id="sk-51aa02dc-d84e-4fe4-a0f8-44f4fe3142cc" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="388027ce-692a-49a6-b05a-9c8d269e0edd" type="checkbox" ><label for="388027ce-692a-49a6-b05a-9c8d269e0edd" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="da50ce6c-5222-4379-b994-6caf173e9650" type="checkbox" ><label for="da50ce6c-5222-4379-b994-6caf173e9650" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f22622fa-dcf8-4e6c-b282-fea0d35a8dae" type="checkbox" ><label for="f22622fa-dcf8-4e6c-b282-fea0d35a8dae" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-9b8ae305-ad8b-4e60-adb4-3a1cb23a9551 {color: black;background-color: white;}#sk-9b8ae305-ad8b-4e60-adb4-3a1cb23a9551 pre{padding: 0;}#sk-9b8ae305-ad8b-4e60-adb4-3a1cb23a9551 div.sk-toggleable {background-color: white;}#sk-9b8ae305-ad8b-4e60-adb4-3a1cb23a9551 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-9b8ae305-ad8b-4e60-adb4-3a1cb23a9551 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-9b8ae305-ad8b-4e60-adb4-3a1cb23a9551 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-9b8ae305-ad8b-4e60-adb4-3a1cb23a9551 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-9b8ae305-ad8b-4e60-adb4-3a1cb23a9551 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-9b8ae305-ad8b-4e60-adb4-3a1cb23a9551 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-9b8ae305-ad8b-4e60-adb4-3a1cb23a9551 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-9b8ae305-ad8b-4e60-adb4-3a1cb23a9551 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-9b8ae305-ad8b-4e60-adb4-3a1cb23a9551 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-9b8ae305-ad8b-4e60-adb4-3a1cb23a9551 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-9b8ae305-ad8b-4e60-adb4-3a1cb23a9551 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-9b8ae305-ad8b-4e60-adb4-3a1cb23a9551 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-9b8ae305-ad8b-4e60-adb4-3a1cb23a9551 div.sk-estimator:hover {background-color: #d4ebff;}#sk-9b8ae305-ad8b-4e60-adb4-3a1cb23a9551 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-9b8ae305-ad8b-4e60-adb4-3a1cb23a9551 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-9b8ae305-ad8b-4e60-adb4-3a1cb23a9551 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-9b8ae305-ad8b-4e60-adb4-3a1cb23a9551 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-9b8ae305-ad8b-4e60-adb4-3a1cb23a9551 div.sk-item {z-index: 1;}#sk-9b8ae305-ad8b-4e60-adb4-3a1cb23a9551 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-9b8ae305-ad8b-4e60-adb4-3a1cb23a9551 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-9b8ae305-ad8b-4e60-adb4-3a1cb23a9551 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-9b8ae305-ad8b-4e60-adb4-3a1cb23a9551 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-9b8ae305-ad8b-4e60-adb4-3a1cb23a9551 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-9b8ae305-ad8b-4e60-adb4-3a1cb23a9551 div.sk-parallel-item:only-child::after {width: 0;}#sk-9b8ae305-ad8b-4e60-adb4-3a1cb23a9551 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-9b8ae305-ad8b-4e60-adb4-3a1cb23a9551 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-9b8ae305-ad8b-4e60-adb4-3a1cb23a9551 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-9b8ae305-ad8b-4e60-adb4-3a1cb23a9551 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-9b8ae305-ad8b-4e60-adb4-3a1cb23a9551 div.sk-text-repr-fallback {display: none;}</style><div id="sk-9b8ae305-ad8b-4e60-adb4-3a1cb23a9551" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4294a558-5203-4ab3-964a-3c1675a6815e" type="checkbox" ><label for="4294a558-5203-4ab3-964a-3c1675a6815e" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="71eb0fac-1b01-4bff-bd42-b7a0df8c2937" type="checkbox" ><label for="71eb0fac-1b01-4bff-bd42-b7a0df8c2937" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d2a9411d-6ebf-42cd-9bdc-0263223c82d5" type="checkbox" ><label for="d2a9411d-6ebf-42cd-9bdc-0263223c82d5" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fca65b15-644d-4cfb-8bb2-a929ffd4396d" type="checkbox" ><label for="fca65b15-644d-4cfb-8bb2-a929ffd4396d" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1143b828-d239-49ee-b805-210766cd3dd9" type="checkbox" ><label for="1143b828-d239-49ee-b805-210766cd3dd9" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b3328caf-1c1f-4da9-a683-e3bf7fa4f129" type="checkbox" ><label for="b3328caf-1c1f-4da9-a683-e3bf7fa4f129" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b4ced53a-1c51-4729-b05d-bb558afdafd1" type="checkbox" ><label for="b4ced53a-1c51-4729-b05d-bb558afdafd1" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="353ff7c3-ca13-44f3-a124-6fa68c659fdb" type="checkbox" ><label for="353ff7c3-ca13-44f3-a124-6fa68c659fdb" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="dd4bcc41-45dd-454e-b1aa-c17cfd3402df" type="checkbox" ><label for="dd4bcc41-45dd-454e-b1aa-c17cfd3402df" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-71fd3cd7-a163-4d07-b99b-32d04f10c8c3 {color: black;background-color: white;}#sk-71fd3cd7-a163-4d07-b99b-32d04f10c8c3 pre{padding: 0;}#sk-71fd3cd7-a163-4d07-b99b-32d04f10c8c3 div.sk-toggleable {background-color: white;}#sk-71fd3cd7-a163-4d07-b99b-32d04f10c8c3 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-71fd3cd7-a163-4d07-b99b-32d04f10c8c3 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-71fd3cd7-a163-4d07-b99b-32d04f10c8c3 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-71fd3cd7-a163-4d07-b99b-32d04f10c8c3 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-71fd3cd7-a163-4d07-b99b-32d04f10c8c3 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-71fd3cd7-a163-4d07-b99b-32d04f10c8c3 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-71fd3cd7-a163-4d07-b99b-32d04f10c8c3 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-71fd3cd7-a163-4d07-b99b-32d04f10c8c3 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-71fd3cd7-a163-4d07-b99b-32d04f10c8c3 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-71fd3cd7-a163-4d07-b99b-32d04f10c8c3 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-71fd3cd7-a163-4d07-b99b-32d04f10c8c3 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-71fd3cd7-a163-4d07-b99b-32d04f10c8c3 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-71fd3cd7-a163-4d07-b99b-32d04f10c8c3 div.sk-estimator:hover {background-color: #d4ebff;}#sk-71fd3cd7-a163-4d07-b99b-32d04f10c8c3 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-71fd3cd7-a163-4d07-b99b-32d04f10c8c3 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-71fd3cd7-a163-4d07-b99b-32d04f10c8c3 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-71fd3cd7-a163-4d07-b99b-32d04f10c8c3 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-71fd3cd7-a163-4d07-b99b-32d04f10c8c3 div.sk-item {z-index: 1;}#sk-71fd3cd7-a163-4d07-b99b-32d04f10c8c3 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-71fd3cd7-a163-4d07-b99b-32d04f10c8c3 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-71fd3cd7-a163-4d07-b99b-32d04f10c8c3 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-71fd3cd7-a163-4d07-b99b-32d04f10c8c3 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-71fd3cd7-a163-4d07-b99b-32d04f10c8c3 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-71fd3cd7-a163-4d07-b99b-32d04f10c8c3 div.sk-parallel-item:only-child::after {width: 0;}#sk-71fd3cd7-a163-4d07-b99b-32d04f10c8c3 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-71fd3cd7-a163-4d07-b99b-32d04f10c8c3 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-71fd3cd7-a163-4d07-b99b-32d04f10c8c3 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-71fd3cd7-a163-4d07-b99b-32d04f10c8c3 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-71fd3cd7-a163-4d07-b99b-32d04f10c8c3 div.sk-text-repr-fallback {display: none;}</style><div id="sk-71fd3cd7-a163-4d07-b99b-32d04f10c8c3" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d77a826e-0dcd-4953-8a0b-65083553f694" type="checkbox" ><label for="d77a826e-0dcd-4953-8a0b-65083553f694" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5cd90d33-0445-45af-96fb-04c70ec9a72b" type="checkbox" ><label for="5cd90d33-0445-45af-96fb-04c70ec9a72b" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="840f945b-0baa-42be-9eaa-9e6a05f11913" type="checkbox" ><label for="840f945b-0baa-42be-9eaa-9e6a05f11913" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d803af1c-1bea-466b-a01a-ad04bc62f1f1" type="checkbox" ><label for="d803af1c-1bea-466b-a01a-ad04bc62f1f1" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="364387ea-76c5-46f7-81f9-6ba1fc7e7e9b" type="checkbox" ><label for="364387ea-76c5-46f7-81f9-6ba1fc7e7e9b" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b2a369c6-b177-4ec4-862f-5036313de964" type="checkbox" ><label for="b2a369c6-b177-4ec4-862f-5036313de964" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="dfa5ea2d-23e7-4b99-b35c-bfb8059b96f2" type="checkbox" ><label for="dfa5ea2d-23e7-4b99-b35c-bfb8059b96f2" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="43ebe993-0fc3-4c7a-aaae-69dad0653d6c" type="checkbox" ><label for="43ebe993-0fc3-4c7a-aaae-69dad0653d6c" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="060077e0-b571-451c-b320-a948c79a85c3" type="checkbox" ><label for="060077e0-b571-451c-b320-a948c79a85c3" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.132 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
