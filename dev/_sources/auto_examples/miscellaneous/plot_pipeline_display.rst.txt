
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-f7bf390d-28cc-458a-8502-e6edd280a5ae {color: black;background-color: white;}#sk-f7bf390d-28cc-458a-8502-e6edd280a5ae pre{padding: 0;}#sk-f7bf390d-28cc-458a-8502-e6edd280a5ae div.sk-toggleable {background-color: white;}#sk-f7bf390d-28cc-458a-8502-e6edd280a5ae label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-f7bf390d-28cc-458a-8502-e6edd280a5ae label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-f7bf390d-28cc-458a-8502-e6edd280a5ae label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-f7bf390d-28cc-458a-8502-e6edd280a5ae div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-f7bf390d-28cc-458a-8502-e6edd280a5ae div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-f7bf390d-28cc-458a-8502-e6edd280a5ae div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-f7bf390d-28cc-458a-8502-e6edd280a5ae input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-f7bf390d-28cc-458a-8502-e6edd280a5ae input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-f7bf390d-28cc-458a-8502-e6edd280a5ae div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-f7bf390d-28cc-458a-8502-e6edd280a5ae div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-f7bf390d-28cc-458a-8502-e6edd280a5ae input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-f7bf390d-28cc-458a-8502-e6edd280a5ae div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-f7bf390d-28cc-458a-8502-e6edd280a5ae div.sk-estimator:hover {background-color: #d4ebff;}#sk-f7bf390d-28cc-458a-8502-e6edd280a5ae div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-f7bf390d-28cc-458a-8502-e6edd280a5ae div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-f7bf390d-28cc-458a-8502-e6edd280a5ae div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-f7bf390d-28cc-458a-8502-e6edd280a5ae div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-f7bf390d-28cc-458a-8502-e6edd280a5ae div.sk-item {z-index: 1;}#sk-f7bf390d-28cc-458a-8502-e6edd280a5ae div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-f7bf390d-28cc-458a-8502-e6edd280a5ae div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-f7bf390d-28cc-458a-8502-e6edd280a5ae div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-f7bf390d-28cc-458a-8502-e6edd280a5ae div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-f7bf390d-28cc-458a-8502-e6edd280a5ae div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-f7bf390d-28cc-458a-8502-e6edd280a5ae div.sk-parallel-item:only-child::after {width: 0;}#sk-f7bf390d-28cc-458a-8502-e6edd280a5ae div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-f7bf390d-28cc-458a-8502-e6edd280a5ae div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-f7bf390d-28cc-458a-8502-e6edd280a5ae div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-f7bf390d-28cc-458a-8502-e6edd280a5ae div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-f7bf390d-28cc-458a-8502-e6edd280a5ae div.sk-text-repr-fallback {display: none;}</style><div id="sk-f7bf390d-28cc-458a-8502-e6edd280a5ae" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b195ef0c-fdba-4afe-af74-4858e34a4bab" type="checkbox" ><label for="b195ef0c-fdba-4afe-af74-4858e34a4bab" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="83da25f6-6d21-4136-a573-f344edf9ffb5" type="checkbox" ><label for="83da25f6-6d21-4136-a573-f344edf9ffb5" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="765a38fb-4e95-475f-a1b3-2689fd3dd2b0" type="checkbox" ><label for="765a38fb-4e95-475f-a1b3-2689fd3dd2b0" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-bc149119-66f6-46d2-8d5b-66688e9a8b12 {color: black;background-color: white;}#sk-bc149119-66f6-46d2-8d5b-66688e9a8b12 pre{padding: 0;}#sk-bc149119-66f6-46d2-8d5b-66688e9a8b12 div.sk-toggleable {background-color: white;}#sk-bc149119-66f6-46d2-8d5b-66688e9a8b12 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-bc149119-66f6-46d2-8d5b-66688e9a8b12 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-bc149119-66f6-46d2-8d5b-66688e9a8b12 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-bc149119-66f6-46d2-8d5b-66688e9a8b12 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-bc149119-66f6-46d2-8d5b-66688e9a8b12 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-bc149119-66f6-46d2-8d5b-66688e9a8b12 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-bc149119-66f6-46d2-8d5b-66688e9a8b12 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-bc149119-66f6-46d2-8d5b-66688e9a8b12 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-bc149119-66f6-46d2-8d5b-66688e9a8b12 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-bc149119-66f6-46d2-8d5b-66688e9a8b12 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-bc149119-66f6-46d2-8d5b-66688e9a8b12 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-bc149119-66f6-46d2-8d5b-66688e9a8b12 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-bc149119-66f6-46d2-8d5b-66688e9a8b12 div.sk-estimator:hover {background-color: #d4ebff;}#sk-bc149119-66f6-46d2-8d5b-66688e9a8b12 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-bc149119-66f6-46d2-8d5b-66688e9a8b12 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-bc149119-66f6-46d2-8d5b-66688e9a8b12 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-bc149119-66f6-46d2-8d5b-66688e9a8b12 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-bc149119-66f6-46d2-8d5b-66688e9a8b12 div.sk-item {z-index: 1;}#sk-bc149119-66f6-46d2-8d5b-66688e9a8b12 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-bc149119-66f6-46d2-8d5b-66688e9a8b12 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-bc149119-66f6-46d2-8d5b-66688e9a8b12 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-bc149119-66f6-46d2-8d5b-66688e9a8b12 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-bc149119-66f6-46d2-8d5b-66688e9a8b12 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-bc149119-66f6-46d2-8d5b-66688e9a8b12 div.sk-parallel-item:only-child::after {width: 0;}#sk-bc149119-66f6-46d2-8d5b-66688e9a8b12 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-bc149119-66f6-46d2-8d5b-66688e9a8b12 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-bc149119-66f6-46d2-8d5b-66688e9a8b12 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-bc149119-66f6-46d2-8d5b-66688e9a8b12 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-bc149119-66f6-46d2-8d5b-66688e9a8b12 div.sk-text-repr-fallback {display: none;}</style><div id="sk-bc149119-66f6-46d2-8d5b-66688e9a8b12" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3a3d51f4-2b7f-4d25-ade8-6bf083e09f90" type="checkbox" ><label for="3a3d51f4-2b7f-4d25-ade8-6bf083e09f90" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="aeed0379-8c53-4fb0-bb14-11082a66dedb" type="checkbox" ><label for="aeed0379-8c53-4fb0-bb14-11082a66dedb" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="19eaebed-b4f9-43cd-a425-c0cc8b033dff" type="checkbox" ><label for="19eaebed-b4f9-43cd-a425-c0cc8b033dff" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3fa7dfec-21c7-4fe2-8990-5d5036a7e1e2" type="checkbox" ><label for="3fa7dfec-21c7-4fe2-8990-5d5036a7e1e2" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-9f7a2186-cfda-4db8-999a-b7a21b1f79b2 {color: black;background-color: white;}#sk-9f7a2186-cfda-4db8-999a-b7a21b1f79b2 pre{padding: 0;}#sk-9f7a2186-cfda-4db8-999a-b7a21b1f79b2 div.sk-toggleable {background-color: white;}#sk-9f7a2186-cfda-4db8-999a-b7a21b1f79b2 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-9f7a2186-cfda-4db8-999a-b7a21b1f79b2 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-9f7a2186-cfda-4db8-999a-b7a21b1f79b2 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-9f7a2186-cfda-4db8-999a-b7a21b1f79b2 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-9f7a2186-cfda-4db8-999a-b7a21b1f79b2 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-9f7a2186-cfda-4db8-999a-b7a21b1f79b2 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-9f7a2186-cfda-4db8-999a-b7a21b1f79b2 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-9f7a2186-cfda-4db8-999a-b7a21b1f79b2 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-9f7a2186-cfda-4db8-999a-b7a21b1f79b2 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-9f7a2186-cfda-4db8-999a-b7a21b1f79b2 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-9f7a2186-cfda-4db8-999a-b7a21b1f79b2 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-9f7a2186-cfda-4db8-999a-b7a21b1f79b2 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-9f7a2186-cfda-4db8-999a-b7a21b1f79b2 div.sk-estimator:hover {background-color: #d4ebff;}#sk-9f7a2186-cfda-4db8-999a-b7a21b1f79b2 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-9f7a2186-cfda-4db8-999a-b7a21b1f79b2 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-9f7a2186-cfda-4db8-999a-b7a21b1f79b2 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-9f7a2186-cfda-4db8-999a-b7a21b1f79b2 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-9f7a2186-cfda-4db8-999a-b7a21b1f79b2 div.sk-item {z-index: 1;}#sk-9f7a2186-cfda-4db8-999a-b7a21b1f79b2 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-9f7a2186-cfda-4db8-999a-b7a21b1f79b2 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-9f7a2186-cfda-4db8-999a-b7a21b1f79b2 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-9f7a2186-cfda-4db8-999a-b7a21b1f79b2 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-9f7a2186-cfda-4db8-999a-b7a21b1f79b2 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-9f7a2186-cfda-4db8-999a-b7a21b1f79b2 div.sk-parallel-item:only-child::after {width: 0;}#sk-9f7a2186-cfda-4db8-999a-b7a21b1f79b2 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-9f7a2186-cfda-4db8-999a-b7a21b1f79b2 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-9f7a2186-cfda-4db8-999a-b7a21b1f79b2 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-9f7a2186-cfda-4db8-999a-b7a21b1f79b2 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-9f7a2186-cfda-4db8-999a-b7a21b1f79b2 div.sk-text-repr-fallback {display: none;}</style><div id="sk-9f7a2186-cfda-4db8-999a-b7a21b1f79b2" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5a8736b9-e458-4bac-a32a-624bd999e3d7" type="checkbox" ><label for="5a8736b9-e458-4bac-a32a-624bd999e3d7" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b7f9617f-cea2-46ef-8c36-40bec4542b9f" type="checkbox" ><label for="b7f9617f-cea2-46ef-8c36-40bec4542b9f" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5fadcb1b-44ec-4bc0-bd35-7dfe2bd3c620" type="checkbox" ><label for="5fadcb1b-44ec-4bc0-bd35-7dfe2bd3c620" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-8ac83fe7-364e-437f-b86d-9c2f2a307fff {color: black;background-color: white;}#sk-8ac83fe7-364e-437f-b86d-9c2f2a307fff pre{padding: 0;}#sk-8ac83fe7-364e-437f-b86d-9c2f2a307fff div.sk-toggleable {background-color: white;}#sk-8ac83fe7-364e-437f-b86d-9c2f2a307fff label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-8ac83fe7-364e-437f-b86d-9c2f2a307fff label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-8ac83fe7-364e-437f-b86d-9c2f2a307fff label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-8ac83fe7-364e-437f-b86d-9c2f2a307fff div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-8ac83fe7-364e-437f-b86d-9c2f2a307fff div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-8ac83fe7-364e-437f-b86d-9c2f2a307fff div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-8ac83fe7-364e-437f-b86d-9c2f2a307fff input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-8ac83fe7-364e-437f-b86d-9c2f2a307fff input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-8ac83fe7-364e-437f-b86d-9c2f2a307fff div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-8ac83fe7-364e-437f-b86d-9c2f2a307fff div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-8ac83fe7-364e-437f-b86d-9c2f2a307fff input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-8ac83fe7-364e-437f-b86d-9c2f2a307fff div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-8ac83fe7-364e-437f-b86d-9c2f2a307fff div.sk-estimator:hover {background-color: #d4ebff;}#sk-8ac83fe7-364e-437f-b86d-9c2f2a307fff div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-8ac83fe7-364e-437f-b86d-9c2f2a307fff div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-8ac83fe7-364e-437f-b86d-9c2f2a307fff div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-8ac83fe7-364e-437f-b86d-9c2f2a307fff div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-8ac83fe7-364e-437f-b86d-9c2f2a307fff div.sk-item {z-index: 1;}#sk-8ac83fe7-364e-437f-b86d-9c2f2a307fff div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-8ac83fe7-364e-437f-b86d-9c2f2a307fff div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-8ac83fe7-364e-437f-b86d-9c2f2a307fff div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-8ac83fe7-364e-437f-b86d-9c2f2a307fff div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-8ac83fe7-364e-437f-b86d-9c2f2a307fff div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-8ac83fe7-364e-437f-b86d-9c2f2a307fff div.sk-parallel-item:only-child::after {width: 0;}#sk-8ac83fe7-364e-437f-b86d-9c2f2a307fff div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-8ac83fe7-364e-437f-b86d-9c2f2a307fff div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-8ac83fe7-364e-437f-b86d-9c2f2a307fff div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-8ac83fe7-364e-437f-b86d-9c2f2a307fff div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-8ac83fe7-364e-437f-b86d-9c2f2a307fff div.sk-text-repr-fallback {display: none;}</style><div id="sk-8ac83fe7-364e-437f-b86d-9c2f2a307fff" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3a79ab5e-8b1d-4543-812b-371fa51f58f9" type="checkbox" ><label for="3a79ab5e-8b1d-4543-812b-371fa51f58f9" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="39a685d8-f5a1-4baa-9aa9-fb4b07cf2c08" type="checkbox" ><label for="39a685d8-f5a1-4baa-9aa9-fb4b07cf2c08" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9175c7b0-f2f1-4d79-a452-8215e98334a3" type="checkbox" ><label for="9175c7b0-f2f1-4d79-a452-8215e98334a3" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="67816db3-7981-42cb-8395-ea5fc203387b" type="checkbox" ><label for="67816db3-7981-42cb-8395-ea5fc203387b" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f8b463ba-bc86-4197-83f8-2aaca87df110" type="checkbox" ><label for="f8b463ba-bc86-4197-83f8-2aaca87df110" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fc061b6c-9b9d-4f68-88a9-0558e7d42596" type="checkbox" ><label for="fc061b6c-9b9d-4f68-88a9-0558e7d42596" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9de96412-4e44-4a50-9650-5686bcc9da74" type="checkbox" ><label for="9de96412-4e44-4a50-9650-5686bcc9da74" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="58f7300b-0898-4756-95f3-01e6a285c0ba" type="checkbox" ><label for="58f7300b-0898-4756-95f3-01e6a285c0ba" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3fd56d38-ef09-4cda-8d28-c297f4098766" type="checkbox" ><label for="3fd56d38-ef09-4cda-8d28-c297f4098766" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-4e24868f-da31-4421-b1ce-64a21704ae74 {color: black;background-color: white;}#sk-4e24868f-da31-4421-b1ce-64a21704ae74 pre{padding: 0;}#sk-4e24868f-da31-4421-b1ce-64a21704ae74 div.sk-toggleable {background-color: white;}#sk-4e24868f-da31-4421-b1ce-64a21704ae74 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-4e24868f-da31-4421-b1ce-64a21704ae74 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-4e24868f-da31-4421-b1ce-64a21704ae74 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-4e24868f-da31-4421-b1ce-64a21704ae74 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-4e24868f-da31-4421-b1ce-64a21704ae74 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-4e24868f-da31-4421-b1ce-64a21704ae74 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-4e24868f-da31-4421-b1ce-64a21704ae74 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-4e24868f-da31-4421-b1ce-64a21704ae74 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-4e24868f-da31-4421-b1ce-64a21704ae74 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-4e24868f-da31-4421-b1ce-64a21704ae74 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-4e24868f-da31-4421-b1ce-64a21704ae74 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-4e24868f-da31-4421-b1ce-64a21704ae74 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-4e24868f-da31-4421-b1ce-64a21704ae74 div.sk-estimator:hover {background-color: #d4ebff;}#sk-4e24868f-da31-4421-b1ce-64a21704ae74 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-4e24868f-da31-4421-b1ce-64a21704ae74 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-4e24868f-da31-4421-b1ce-64a21704ae74 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-4e24868f-da31-4421-b1ce-64a21704ae74 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-4e24868f-da31-4421-b1ce-64a21704ae74 div.sk-item {z-index: 1;}#sk-4e24868f-da31-4421-b1ce-64a21704ae74 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-4e24868f-da31-4421-b1ce-64a21704ae74 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-4e24868f-da31-4421-b1ce-64a21704ae74 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-4e24868f-da31-4421-b1ce-64a21704ae74 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-4e24868f-da31-4421-b1ce-64a21704ae74 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-4e24868f-da31-4421-b1ce-64a21704ae74 div.sk-parallel-item:only-child::after {width: 0;}#sk-4e24868f-da31-4421-b1ce-64a21704ae74 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-4e24868f-da31-4421-b1ce-64a21704ae74 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-4e24868f-da31-4421-b1ce-64a21704ae74 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-4e24868f-da31-4421-b1ce-64a21704ae74 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-4e24868f-da31-4421-b1ce-64a21704ae74 div.sk-text-repr-fallback {display: none;}</style><div id="sk-4e24868f-da31-4421-b1ce-64a21704ae74" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d3279621-4b57-4f74-8ac3-713c4606966c" type="checkbox" ><label for="d3279621-4b57-4f74-8ac3-713c4606966c" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="08c5ecdf-9246-4a88-b123-87e989b7d300" type="checkbox" ><label for="08c5ecdf-9246-4a88-b123-87e989b7d300" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9b011f46-5eea-43c1-afa0-fbcda7d8de98" type="checkbox" ><label for="9b011f46-5eea-43c1-afa0-fbcda7d8de98" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1ab05b1d-7fc9-4a63-9b11-bbc538c84d05" type="checkbox" ><label for="1ab05b1d-7fc9-4a63-9b11-bbc538c84d05" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7d4a0886-7ebe-43bc-929a-0437f1b16882" type="checkbox" ><label for="7d4a0886-7ebe-43bc-929a-0437f1b16882" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7d3b296a-e06e-4627-bbb6-853e37916740" type="checkbox" ><label for="7d3b296a-e06e-4627-bbb6-853e37916740" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2730e413-3721-4d3e-9bfe-60b275fe6e77" type="checkbox" ><label for="2730e413-3721-4d3e-9bfe-60b275fe6e77" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0fd0c07c-978d-4900-a6f7-c7cd4299ff51" type="checkbox" ><label for="0fd0c07c-978d-4900-a6f7-c7cd4299ff51" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="862ecbb8-8095-4c72-b884-7fa145c86d10" type="checkbox" ><label for="862ecbb8-8095-4c72-b884-7fa145c86d10" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.072 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
