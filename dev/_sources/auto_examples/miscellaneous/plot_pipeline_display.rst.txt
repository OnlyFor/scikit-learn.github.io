
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-a242962f-25fe-4b0f-970a-490e8283a569 {color: black;background-color: white;}#sk-a242962f-25fe-4b0f-970a-490e8283a569 pre{padding: 0;}#sk-a242962f-25fe-4b0f-970a-490e8283a569 div.sk-toggleable {background-color: white;}#sk-a242962f-25fe-4b0f-970a-490e8283a569 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-a242962f-25fe-4b0f-970a-490e8283a569 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-a242962f-25fe-4b0f-970a-490e8283a569 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-a242962f-25fe-4b0f-970a-490e8283a569 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-a242962f-25fe-4b0f-970a-490e8283a569 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-a242962f-25fe-4b0f-970a-490e8283a569 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-a242962f-25fe-4b0f-970a-490e8283a569 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-a242962f-25fe-4b0f-970a-490e8283a569 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-a242962f-25fe-4b0f-970a-490e8283a569 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-a242962f-25fe-4b0f-970a-490e8283a569 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-a242962f-25fe-4b0f-970a-490e8283a569 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-a242962f-25fe-4b0f-970a-490e8283a569 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-a242962f-25fe-4b0f-970a-490e8283a569 div.sk-estimator:hover {background-color: #d4ebff;}#sk-a242962f-25fe-4b0f-970a-490e8283a569 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-a242962f-25fe-4b0f-970a-490e8283a569 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-a242962f-25fe-4b0f-970a-490e8283a569 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-a242962f-25fe-4b0f-970a-490e8283a569 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-a242962f-25fe-4b0f-970a-490e8283a569 div.sk-item {z-index: 1;}#sk-a242962f-25fe-4b0f-970a-490e8283a569 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-a242962f-25fe-4b0f-970a-490e8283a569 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-a242962f-25fe-4b0f-970a-490e8283a569 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-a242962f-25fe-4b0f-970a-490e8283a569 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-a242962f-25fe-4b0f-970a-490e8283a569 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-a242962f-25fe-4b0f-970a-490e8283a569 div.sk-parallel-item:only-child::after {width: 0;}#sk-a242962f-25fe-4b0f-970a-490e8283a569 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-a242962f-25fe-4b0f-970a-490e8283a569 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-a242962f-25fe-4b0f-970a-490e8283a569 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-a242962f-25fe-4b0f-970a-490e8283a569 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-a242962f-25fe-4b0f-970a-490e8283a569 div.sk-text-repr-fallback {display: none;}</style><div id="sk-a242962f-25fe-4b0f-970a-490e8283a569" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="06eb1265-d92e-4c78-87c8-8754950629dc" type="checkbox" ><label for="06eb1265-d92e-4c78-87c8-8754950629dc" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4688fff9-0dc6-4a85-a20c-3746a27bebe3" type="checkbox" ><label for="4688fff9-0dc6-4a85-a20c-3746a27bebe3" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="dfa82096-3ea3-470e-b332-6baf77f0c8ea" type="checkbox" ><label for="dfa82096-3ea3-470e-b332-6baf77f0c8ea" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-32335b5d-ca6f-435e-a1ee-7530ae915217 {color: black;background-color: white;}#sk-32335b5d-ca6f-435e-a1ee-7530ae915217 pre{padding: 0;}#sk-32335b5d-ca6f-435e-a1ee-7530ae915217 div.sk-toggleable {background-color: white;}#sk-32335b5d-ca6f-435e-a1ee-7530ae915217 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-32335b5d-ca6f-435e-a1ee-7530ae915217 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-32335b5d-ca6f-435e-a1ee-7530ae915217 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-32335b5d-ca6f-435e-a1ee-7530ae915217 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-32335b5d-ca6f-435e-a1ee-7530ae915217 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-32335b5d-ca6f-435e-a1ee-7530ae915217 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-32335b5d-ca6f-435e-a1ee-7530ae915217 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-32335b5d-ca6f-435e-a1ee-7530ae915217 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-32335b5d-ca6f-435e-a1ee-7530ae915217 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-32335b5d-ca6f-435e-a1ee-7530ae915217 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-32335b5d-ca6f-435e-a1ee-7530ae915217 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-32335b5d-ca6f-435e-a1ee-7530ae915217 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-32335b5d-ca6f-435e-a1ee-7530ae915217 div.sk-estimator:hover {background-color: #d4ebff;}#sk-32335b5d-ca6f-435e-a1ee-7530ae915217 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-32335b5d-ca6f-435e-a1ee-7530ae915217 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-32335b5d-ca6f-435e-a1ee-7530ae915217 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-32335b5d-ca6f-435e-a1ee-7530ae915217 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-32335b5d-ca6f-435e-a1ee-7530ae915217 div.sk-item {z-index: 1;}#sk-32335b5d-ca6f-435e-a1ee-7530ae915217 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-32335b5d-ca6f-435e-a1ee-7530ae915217 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-32335b5d-ca6f-435e-a1ee-7530ae915217 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-32335b5d-ca6f-435e-a1ee-7530ae915217 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-32335b5d-ca6f-435e-a1ee-7530ae915217 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-32335b5d-ca6f-435e-a1ee-7530ae915217 div.sk-parallel-item:only-child::after {width: 0;}#sk-32335b5d-ca6f-435e-a1ee-7530ae915217 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-32335b5d-ca6f-435e-a1ee-7530ae915217 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-32335b5d-ca6f-435e-a1ee-7530ae915217 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-32335b5d-ca6f-435e-a1ee-7530ae915217 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-32335b5d-ca6f-435e-a1ee-7530ae915217 div.sk-text-repr-fallback {display: none;}</style><div id="sk-32335b5d-ca6f-435e-a1ee-7530ae915217" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b374b0f0-b069-4423-8859-0a6e94c49a7f" type="checkbox" ><label for="b374b0f0-b069-4423-8859-0a6e94c49a7f" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c1b9a738-3a8b-4c9d-8664-a2c541e83a9b" type="checkbox" ><label for="c1b9a738-3a8b-4c9d-8664-a2c541e83a9b" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="23061acd-2cf5-457b-be61-a8feba192e15" type="checkbox" ><label for="23061acd-2cf5-457b-be61-a8feba192e15" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c0d02395-f52d-4c2e-ad62-7357439b5ee8" type="checkbox" ><label for="c0d02395-f52d-4c2e-ad62-7357439b5ee8" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-d15aed9d-5640-4a9d-9f2a-da73e836294c {color: black;background-color: white;}#sk-d15aed9d-5640-4a9d-9f2a-da73e836294c pre{padding: 0;}#sk-d15aed9d-5640-4a9d-9f2a-da73e836294c div.sk-toggleable {background-color: white;}#sk-d15aed9d-5640-4a9d-9f2a-da73e836294c label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-d15aed9d-5640-4a9d-9f2a-da73e836294c label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-d15aed9d-5640-4a9d-9f2a-da73e836294c label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-d15aed9d-5640-4a9d-9f2a-da73e836294c div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-d15aed9d-5640-4a9d-9f2a-da73e836294c div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-d15aed9d-5640-4a9d-9f2a-da73e836294c div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-d15aed9d-5640-4a9d-9f2a-da73e836294c input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-d15aed9d-5640-4a9d-9f2a-da73e836294c input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-d15aed9d-5640-4a9d-9f2a-da73e836294c div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-d15aed9d-5640-4a9d-9f2a-da73e836294c div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-d15aed9d-5640-4a9d-9f2a-da73e836294c input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-d15aed9d-5640-4a9d-9f2a-da73e836294c div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-d15aed9d-5640-4a9d-9f2a-da73e836294c div.sk-estimator:hover {background-color: #d4ebff;}#sk-d15aed9d-5640-4a9d-9f2a-da73e836294c div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-d15aed9d-5640-4a9d-9f2a-da73e836294c div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-d15aed9d-5640-4a9d-9f2a-da73e836294c div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-d15aed9d-5640-4a9d-9f2a-da73e836294c div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-d15aed9d-5640-4a9d-9f2a-da73e836294c div.sk-item {z-index: 1;}#sk-d15aed9d-5640-4a9d-9f2a-da73e836294c div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-d15aed9d-5640-4a9d-9f2a-da73e836294c div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-d15aed9d-5640-4a9d-9f2a-da73e836294c div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-d15aed9d-5640-4a9d-9f2a-da73e836294c div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-d15aed9d-5640-4a9d-9f2a-da73e836294c div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-d15aed9d-5640-4a9d-9f2a-da73e836294c div.sk-parallel-item:only-child::after {width: 0;}#sk-d15aed9d-5640-4a9d-9f2a-da73e836294c div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-d15aed9d-5640-4a9d-9f2a-da73e836294c div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-d15aed9d-5640-4a9d-9f2a-da73e836294c div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-d15aed9d-5640-4a9d-9f2a-da73e836294c div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-d15aed9d-5640-4a9d-9f2a-da73e836294c div.sk-text-repr-fallback {display: none;}</style><div id="sk-d15aed9d-5640-4a9d-9f2a-da73e836294c" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0d6d4d17-73d1-44e3-a120-124f556aa51b" type="checkbox" ><label for="0d6d4d17-73d1-44e3-a120-124f556aa51b" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="06a8f738-fa48-4fe8-a74e-d4604b59e89f" type="checkbox" ><label for="06a8f738-fa48-4fe8-a74e-d4604b59e89f" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="66680d1b-2f10-48d7-bd90-51ef4fe454d6" type="checkbox" ><label for="66680d1b-2f10-48d7-bd90-51ef4fe454d6" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-47f285be-4c8a-4435-9051-d9ef0750b64c {color: black;background-color: white;}#sk-47f285be-4c8a-4435-9051-d9ef0750b64c pre{padding: 0;}#sk-47f285be-4c8a-4435-9051-d9ef0750b64c div.sk-toggleable {background-color: white;}#sk-47f285be-4c8a-4435-9051-d9ef0750b64c label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-47f285be-4c8a-4435-9051-d9ef0750b64c label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-47f285be-4c8a-4435-9051-d9ef0750b64c label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-47f285be-4c8a-4435-9051-d9ef0750b64c div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-47f285be-4c8a-4435-9051-d9ef0750b64c div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-47f285be-4c8a-4435-9051-d9ef0750b64c div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-47f285be-4c8a-4435-9051-d9ef0750b64c input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-47f285be-4c8a-4435-9051-d9ef0750b64c input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-47f285be-4c8a-4435-9051-d9ef0750b64c div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-47f285be-4c8a-4435-9051-d9ef0750b64c div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-47f285be-4c8a-4435-9051-d9ef0750b64c input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-47f285be-4c8a-4435-9051-d9ef0750b64c div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-47f285be-4c8a-4435-9051-d9ef0750b64c div.sk-estimator:hover {background-color: #d4ebff;}#sk-47f285be-4c8a-4435-9051-d9ef0750b64c div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-47f285be-4c8a-4435-9051-d9ef0750b64c div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-47f285be-4c8a-4435-9051-d9ef0750b64c div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-47f285be-4c8a-4435-9051-d9ef0750b64c div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-47f285be-4c8a-4435-9051-d9ef0750b64c div.sk-item {z-index: 1;}#sk-47f285be-4c8a-4435-9051-d9ef0750b64c div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-47f285be-4c8a-4435-9051-d9ef0750b64c div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-47f285be-4c8a-4435-9051-d9ef0750b64c div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-47f285be-4c8a-4435-9051-d9ef0750b64c div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-47f285be-4c8a-4435-9051-d9ef0750b64c div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-47f285be-4c8a-4435-9051-d9ef0750b64c div.sk-parallel-item:only-child::after {width: 0;}#sk-47f285be-4c8a-4435-9051-d9ef0750b64c div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-47f285be-4c8a-4435-9051-d9ef0750b64c div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-47f285be-4c8a-4435-9051-d9ef0750b64c div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-47f285be-4c8a-4435-9051-d9ef0750b64c div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-47f285be-4c8a-4435-9051-d9ef0750b64c div.sk-text-repr-fallback {display: none;}</style><div id="sk-47f285be-4c8a-4435-9051-d9ef0750b64c" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="aef3e2a0-6d36-4332-9b05-2b619b15735c" type="checkbox" ><label for="aef3e2a0-6d36-4332-9b05-2b619b15735c" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c91c01ce-7c57-493e-a5b1-0002aa13cd22" type="checkbox" ><label for="c91c01ce-7c57-493e-a5b1-0002aa13cd22" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="41565f64-4925-4252-a85f-16f93f5d2d68" type="checkbox" ><label for="41565f64-4925-4252-a85f-16f93f5d2d68" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="45df7a47-adcc-4b50-bb26-3f5657c204ec" type="checkbox" ><label for="45df7a47-adcc-4b50-bb26-3f5657c204ec" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e281bee4-1eff-4c98-b47c-8c061f34d2a3" type="checkbox" ><label for="e281bee4-1eff-4c98-b47c-8c061f34d2a3" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6d3ad0f1-8493-4799-832c-29d4f7656929" type="checkbox" ><label for="6d3ad0f1-8493-4799-832c-29d4f7656929" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0f8b2e3d-b4bb-4013-818a-4fa7164b7c53" type="checkbox" ><label for="0f8b2e3d-b4bb-4013-818a-4fa7164b7c53" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="dbb0f16d-8511-4751-b295-9b49261e7e7c" type="checkbox" ><label for="dbb0f16d-8511-4751-b295-9b49261e7e7c" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a402706b-544d-49bf-8d9f-18d93f334922" type="checkbox" ><label for="a402706b-544d-49bf-8d9f-18d93f334922" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-ab98cd6b-6027-42e0-90f1-c4840b9c2de1 {color: black;background-color: white;}#sk-ab98cd6b-6027-42e0-90f1-c4840b9c2de1 pre{padding: 0;}#sk-ab98cd6b-6027-42e0-90f1-c4840b9c2de1 div.sk-toggleable {background-color: white;}#sk-ab98cd6b-6027-42e0-90f1-c4840b9c2de1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-ab98cd6b-6027-42e0-90f1-c4840b9c2de1 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-ab98cd6b-6027-42e0-90f1-c4840b9c2de1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-ab98cd6b-6027-42e0-90f1-c4840b9c2de1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-ab98cd6b-6027-42e0-90f1-c4840b9c2de1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-ab98cd6b-6027-42e0-90f1-c4840b9c2de1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-ab98cd6b-6027-42e0-90f1-c4840b9c2de1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-ab98cd6b-6027-42e0-90f1-c4840b9c2de1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-ab98cd6b-6027-42e0-90f1-c4840b9c2de1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ab98cd6b-6027-42e0-90f1-c4840b9c2de1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ab98cd6b-6027-42e0-90f1-c4840b9c2de1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-ab98cd6b-6027-42e0-90f1-c4840b9c2de1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-ab98cd6b-6027-42e0-90f1-c4840b9c2de1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-ab98cd6b-6027-42e0-90f1-c4840b9c2de1 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-ab98cd6b-6027-42e0-90f1-c4840b9c2de1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-ab98cd6b-6027-42e0-90f1-c4840b9c2de1 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ab98cd6b-6027-42e0-90f1-c4840b9c2de1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-ab98cd6b-6027-42e0-90f1-c4840b9c2de1 div.sk-item {z-index: 1;}#sk-ab98cd6b-6027-42e0-90f1-c4840b9c2de1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-ab98cd6b-6027-42e0-90f1-c4840b9c2de1 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ab98cd6b-6027-42e0-90f1-c4840b9c2de1 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-ab98cd6b-6027-42e0-90f1-c4840b9c2de1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-ab98cd6b-6027-42e0-90f1-c4840b9c2de1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-ab98cd6b-6027-42e0-90f1-c4840b9c2de1 div.sk-parallel-item:only-child::after {width: 0;}#sk-ab98cd6b-6027-42e0-90f1-c4840b9c2de1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-ab98cd6b-6027-42e0-90f1-c4840b9c2de1 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-ab98cd6b-6027-42e0-90f1-c4840b9c2de1 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-ab98cd6b-6027-42e0-90f1-c4840b9c2de1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-ab98cd6b-6027-42e0-90f1-c4840b9c2de1 div.sk-text-repr-fallback {display: none;}</style><div id="sk-ab98cd6b-6027-42e0-90f1-c4840b9c2de1" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="08653571-db15-4a3a-8f70-dcb28880a88b" type="checkbox" ><label for="08653571-db15-4a3a-8f70-dcb28880a88b" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7883e590-c6b3-4b00-8941-46ff58cfb745" type="checkbox" ><label for="7883e590-c6b3-4b00-8941-46ff58cfb745" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7f839b88-28fb-4d4c-a35d-d1b761da67f9" type="checkbox" ><label for="7f839b88-28fb-4d4c-a35d-d1b761da67f9" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="48202555-be46-4824-9e2e-a605b7305322" type="checkbox" ><label for="48202555-be46-4824-9e2e-a605b7305322" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a66f3c8c-d7dd-4e71-8c65-0bb445cfaddd" type="checkbox" ><label for="a66f3c8c-d7dd-4e71-8c65-0bb445cfaddd" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4383a850-e6e4-4ee9-8614-98ae5fc196e1" type="checkbox" ><label for="4383a850-e6e4-4ee9-8614-98ae5fc196e1" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f139b25a-b988-4822-9575-fb14532125d3" type="checkbox" ><label for="f139b25a-b988-4822-9575-fb14532125d3" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2a2168a4-54a3-4ed3-b6d2-30dda7dc992a" type="checkbox" ><label for="2a2168a4-54a3-4ed3-b6d2-30dda7dc992a" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bcfba50c-ffbb-46e6-ba63-d5e28a73e5d7" type="checkbox" ><label for="bcfba50c-ffbb-46e6-ba63-d5e28a73e5d7" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.130 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
