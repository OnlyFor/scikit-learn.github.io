
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-a76104f1-d7a5-4a7b-982b-2b6644d39a12 {color: black;background-color: white;}#sk-a76104f1-d7a5-4a7b-982b-2b6644d39a12 pre{padding: 0;}#sk-a76104f1-d7a5-4a7b-982b-2b6644d39a12 div.sk-toggleable {background-color: white;}#sk-a76104f1-d7a5-4a7b-982b-2b6644d39a12 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-a76104f1-d7a5-4a7b-982b-2b6644d39a12 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-a76104f1-d7a5-4a7b-982b-2b6644d39a12 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-a76104f1-d7a5-4a7b-982b-2b6644d39a12 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-a76104f1-d7a5-4a7b-982b-2b6644d39a12 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-a76104f1-d7a5-4a7b-982b-2b6644d39a12 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-a76104f1-d7a5-4a7b-982b-2b6644d39a12 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-a76104f1-d7a5-4a7b-982b-2b6644d39a12 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-a76104f1-d7a5-4a7b-982b-2b6644d39a12 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-a76104f1-d7a5-4a7b-982b-2b6644d39a12 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-a76104f1-d7a5-4a7b-982b-2b6644d39a12 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-a76104f1-d7a5-4a7b-982b-2b6644d39a12 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-a76104f1-d7a5-4a7b-982b-2b6644d39a12 div.sk-estimator:hover {background-color: #d4ebff;}#sk-a76104f1-d7a5-4a7b-982b-2b6644d39a12 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-a76104f1-d7a5-4a7b-982b-2b6644d39a12 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-a76104f1-d7a5-4a7b-982b-2b6644d39a12 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-a76104f1-d7a5-4a7b-982b-2b6644d39a12 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-a76104f1-d7a5-4a7b-982b-2b6644d39a12 div.sk-item {z-index: 1;}#sk-a76104f1-d7a5-4a7b-982b-2b6644d39a12 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-a76104f1-d7a5-4a7b-982b-2b6644d39a12 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-a76104f1-d7a5-4a7b-982b-2b6644d39a12 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-a76104f1-d7a5-4a7b-982b-2b6644d39a12 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-a76104f1-d7a5-4a7b-982b-2b6644d39a12 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-a76104f1-d7a5-4a7b-982b-2b6644d39a12 div.sk-parallel-item:only-child::after {width: 0;}#sk-a76104f1-d7a5-4a7b-982b-2b6644d39a12 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-a76104f1-d7a5-4a7b-982b-2b6644d39a12 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-a76104f1-d7a5-4a7b-982b-2b6644d39a12 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-a76104f1-d7a5-4a7b-982b-2b6644d39a12 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-a76104f1-d7a5-4a7b-982b-2b6644d39a12 div.sk-text-repr-fallback {display: none;}</style><div id="sk-a76104f1-d7a5-4a7b-982b-2b6644d39a12" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f2e40474-5b30-436f-9276-bc53d30136a9" type="checkbox" ><label for="f2e40474-5b30-436f-9276-bc53d30136a9" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0eb4e769-b803-4e39-bb40-9ed05a45dfc3" type="checkbox" ><label for="0eb4e769-b803-4e39-bb40-9ed05a45dfc3" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b0ea7056-f619-413c-8284-2c66787109c9" type="checkbox" ><label for="b0ea7056-f619-413c-8284-2c66787109c9" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-e09b219c-da1e-4cd2-84bc-acdd690956d7 {color: black;background-color: white;}#sk-e09b219c-da1e-4cd2-84bc-acdd690956d7 pre{padding: 0;}#sk-e09b219c-da1e-4cd2-84bc-acdd690956d7 div.sk-toggleable {background-color: white;}#sk-e09b219c-da1e-4cd2-84bc-acdd690956d7 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-e09b219c-da1e-4cd2-84bc-acdd690956d7 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-e09b219c-da1e-4cd2-84bc-acdd690956d7 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-e09b219c-da1e-4cd2-84bc-acdd690956d7 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-e09b219c-da1e-4cd2-84bc-acdd690956d7 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-e09b219c-da1e-4cd2-84bc-acdd690956d7 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-e09b219c-da1e-4cd2-84bc-acdd690956d7 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-e09b219c-da1e-4cd2-84bc-acdd690956d7 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-e09b219c-da1e-4cd2-84bc-acdd690956d7 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-e09b219c-da1e-4cd2-84bc-acdd690956d7 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-e09b219c-da1e-4cd2-84bc-acdd690956d7 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-e09b219c-da1e-4cd2-84bc-acdd690956d7 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-e09b219c-da1e-4cd2-84bc-acdd690956d7 div.sk-estimator:hover {background-color: #d4ebff;}#sk-e09b219c-da1e-4cd2-84bc-acdd690956d7 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-e09b219c-da1e-4cd2-84bc-acdd690956d7 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-e09b219c-da1e-4cd2-84bc-acdd690956d7 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-e09b219c-da1e-4cd2-84bc-acdd690956d7 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-e09b219c-da1e-4cd2-84bc-acdd690956d7 div.sk-item {z-index: 1;}#sk-e09b219c-da1e-4cd2-84bc-acdd690956d7 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-e09b219c-da1e-4cd2-84bc-acdd690956d7 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-e09b219c-da1e-4cd2-84bc-acdd690956d7 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-e09b219c-da1e-4cd2-84bc-acdd690956d7 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-e09b219c-da1e-4cd2-84bc-acdd690956d7 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-e09b219c-da1e-4cd2-84bc-acdd690956d7 div.sk-parallel-item:only-child::after {width: 0;}#sk-e09b219c-da1e-4cd2-84bc-acdd690956d7 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-e09b219c-da1e-4cd2-84bc-acdd690956d7 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-e09b219c-da1e-4cd2-84bc-acdd690956d7 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-e09b219c-da1e-4cd2-84bc-acdd690956d7 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-e09b219c-da1e-4cd2-84bc-acdd690956d7 div.sk-text-repr-fallback {display: none;}</style><div id="sk-e09b219c-da1e-4cd2-84bc-acdd690956d7" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c513a730-7e1e-40d0-b3a9-dde04736ac4b" type="checkbox" ><label for="c513a730-7e1e-40d0-b3a9-dde04736ac4b" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8b7eb325-754f-451e-b1e6-d2225df6aa34" type="checkbox" ><label for="8b7eb325-754f-451e-b1e6-d2225df6aa34" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9c429199-a740-47d4-b04f-7795c60b2990" type="checkbox" ><label for="9c429199-a740-47d4-b04f-7795c60b2990" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a18386cd-c48c-4d82-aeb3-92ec6e264c0a" type="checkbox" ><label for="a18386cd-c48c-4d82-aeb3-92ec6e264c0a" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-f113e600-9533-42a5-8c39-e933258d5ae3 {color: black;background-color: white;}#sk-f113e600-9533-42a5-8c39-e933258d5ae3 pre{padding: 0;}#sk-f113e600-9533-42a5-8c39-e933258d5ae3 div.sk-toggleable {background-color: white;}#sk-f113e600-9533-42a5-8c39-e933258d5ae3 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-f113e600-9533-42a5-8c39-e933258d5ae3 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-f113e600-9533-42a5-8c39-e933258d5ae3 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-f113e600-9533-42a5-8c39-e933258d5ae3 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-f113e600-9533-42a5-8c39-e933258d5ae3 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-f113e600-9533-42a5-8c39-e933258d5ae3 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-f113e600-9533-42a5-8c39-e933258d5ae3 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-f113e600-9533-42a5-8c39-e933258d5ae3 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-f113e600-9533-42a5-8c39-e933258d5ae3 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-f113e600-9533-42a5-8c39-e933258d5ae3 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-f113e600-9533-42a5-8c39-e933258d5ae3 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-f113e600-9533-42a5-8c39-e933258d5ae3 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-f113e600-9533-42a5-8c39-e933258d5ae3 div.sk-estimator:hover {background-color: #d4ebff;}#sk-f113e600-9533-42a5-8c39-e933258d5ae3 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-f113e600-9533-42a5-8c39-e933258d5ae3 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-f113e600-9533-42a5-8c39-e933258d5ae3 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-f113e600-9533-42a5-8c39-e933258d5ae3 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-f113e600-9533-42a5-8c39-e933258d5ae3 div.sk-item {z-index: 1;}#sk-f113e600-9533-42a5-8c39-e933258d5ae3 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-f113e600-9533-42a5-8c39-e933258d5ae3 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-f113e600-9533-42a5-8c39-e933258d5ae3 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-f113e600-9533-42a5-8c39-e933258d5ae3 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-f113e600-9533-42a5-8c39-e933258d5ae3 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-f113e600-9533-42a5-8c39-e933258d5ae3 div.sk-parallel-item:only-child::after {width: 0;}#sk-f113e600-9533-42a5-8c39-e933258d5ae3 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-f113e600-9533-42a5-8c39-e933258d5ae3 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-f113e600-9533-42a5-8c39-e933258d5ae3 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-f113e600-9533-42a5-8c39-e933258d5ae3 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-f113e600-9533-42a5-8c39-e933258d5ae3 div.sk-text-repr-fallback {display: none;}</style><div id="sk-f113e600-9533-42a5-8c39-e933258d5ae3" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f7d8cb0c-d3f9-4c99-b260-779ef4db74ad" type="checkbox" ><label for="f7d8cb0c-d3f9-4c99-b260-779ef4db74ad" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="44593c32-cf39-45ef-80ff-aa35c55a9a8a" type="checkbox" ><label for="44593c32-cf39-45ef-80ff-aa35c55a9a8a" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c5837eca-0f6d-49be-b326-86bc6d335623" type="checkbox" ><label for="c5837eca-0f6d-49be-b326-86bc6d335623" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-c327e703-2158-4d6d-9564-6c2d0a377967 {color: black;background-color: white;}#sk-c327e703-2158-4d6d-9564-6c2d0a377967 pre{padding: 0;}#sk-c327e703-2158-4d6d-9564-6c2d0a377967 div.sk-toggleable {background-color: white;}#sk-c327e703-2158-4d6d-9564-6c2d0a377967 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-c327e703-2158-4d6d-9564-6c2d0a377967 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-c327e703-2158-4d6d-9564-6c2d0a377967 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-c327e703-2158-4d6d-9564-6c2d0a377967 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-c327e703-2158-4d6d-9564-6c2d0a377967 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-c327e703-2158-4d6d-9564-6c2d0a377967 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-c327e703-2158-4d6d-9564-6c2d0a377967 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-c327e703-2158-4d6d-9564-6c2d0a377967 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-c327e703-2158-4d6d-9564-6c2d0a377967 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-c327e703-2158-4d6d-9564-6c2d0a377967 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-c327e703-2158-4d6d-9564-6c2d0a377967 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-c327e703-2158-4d6d-9564-6c2d0a377967 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-c327e703-2158-4d6d-9564-6c2d0a377967 div.sk-estimator:hover {background-color: #d4ebff;}#sk-c327e703-2158-4d6d-9564-6c2d0a377967 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-c327e703-2158-4d6d-9564-6c2d0a377967 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-c327e703-2158-4d6d-9564-6c2d0a377967 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-c327e703-2158-4d6d-9564-6c2d0a377967 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-c327e703-2158-4d6d-9564-6c2d0a377967 div.sk-item {z-index: 1;}#sk-c327e703-2158-4d6d-9564-6c2d0a377967 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-c327e703-2158-4d6d-9564-6c2d0a377967 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-c327e703-2158-4d6d-9564-6c2d0a377967 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-c327e703-2158-4d6d-9564-6c2d0a377967 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-c327e703-2158-4d6d-9564-6c2d0a377967 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-c327e703-2158-4d6d-9564-6c2d0a377967 div.sk-parallel-item:only-child::after {width: 0;}#sk-c327e703-2158-4d6d-9564-6c2d0a377967 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-c327e703-2158-4d6d-9564-6c2d0a377967 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-c327e703-2158-4d6d-9564-6c2d0a377967 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-c327e703-2158-4d6d-9564-6c2d0a377967 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-c327e703-2158-4d6d-9564-6c2d0a377967 div.sk-text-repr-fallback {display: none;}</style><div id="sk-c327e703-2158-4d6d-9564-6c2d0a377967" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e86f2b18-8e7c-48b9-ab6d-9b975dec5564" type="checkbox" ><label for="e86f2b18-8e7c-48b9-ab6d-9b975dec5564" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6e236e74-073f-45c0-9a26-fe09b1b45a0e" type="checkbox" ><label for="6e236e74-073f-45c0-9a26-fe09b1b45a0e" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="83521a1c-3e78-4c5c-9395-da2fc7fd0007" type="checkbox" ><label for="83521a1c-3e78-4c5c-9395-da2fc7fd0007" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2ae2b498-dcfd-459e-b802-9855e61b466b" type="checkbox" ><label for="2ae2b498-dcfd-459e-b802-9855e61b466b" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8fd8ca02-ddca-4282-9050-31fc72c12621" type="checkbox" ><label for="8fd8ca02-ddca-4282-9050-31fc72c12621" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="23a0d23a-f501-4a13-aa5c-ebf53038f91d" type="checkbox" ><label for="23a0d23a-f501-4a13-aa5c-ebf53038f91d" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ac7036d6-7c0d-46bb-9f31-8caf57bae2f7" type="checkbox" ><label for="ac7036d6-7c0d-46bb-9f31-8caf57bae2f7" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ccaca49b-d92d-4c54-9931-d4b83368fe58" type="checkbox" ><label for="ccaca49b-d92d-4c54-9931-d4b83368fe58" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b7fefda4-be89-4d8e-9473-024c50370d9a" type="checkbox" ><label for="b7fefda4-be89-4d8e-9473-024c50370d9a" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-7f98e6d2-8548-40f8-8c38-b8c60ff3c105 {color: black;background-color: white;}#sk-7f98e6d2-8548-40f8-8c38-b8c60ff3c105 pre{padding: 0;}#sk-7f98e6d2-8548-40f8-8c38-b8c60ff3c105 div.sk-toggleable {background-color: white;}#sk-7f98e6d2-8548-40f8-8c38-b8c60ff3c105 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-7f98e6d2-8548-40f8-8c38-b8c60ff3c105 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-7f98e6d2-8548-40f8-8c38-b8c60ff3c105 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-7f98e6d2-8548-40f8-8c38-b8c60ff3c105 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-7f98e6d2-8548-40f8-8c38-b8c60ff3c105 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-7f98e6d2-8548-40f8-8c38-b8c60ff3c105 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-7f98e6d2-8548-40f8-8c38-b8c60ff3c105 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-7f98e6d2-8548-40f8-8c38-b8c60ff3c105 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-7f98e6d2-8548-40f8-8c38-b8c60ff3c105 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-7f98e6d2-8548-40f8-8c38-b8c60ff3c105 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-7f98e6d2-8548-40f8-8c38-b8c60ff3c105 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-7f98e6d2-8548-40f8-8c38-b8c60ff3c105 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-7f98e6d2-8548-40f8-8c38-b8c60ff3c105 div.sk-estimator:hover {background-color: #d4ebff;}#sk-7f98e6d2-8548-40f8-8c38-b8c60ff3c105 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-7f98e6d2-8548-40f8-8c38-b8c60ff3c105 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-7f98e6d2-8548-40f8-8c38-b8c60ff3c105 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-7f98e6d2-8548-40f8-8c38-b8c60ff3c105 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-7f98e6d2-8548-40f8-8c38-b8c60ff3c105 div.sk-item {z-index: 1;}#sk-7f98e6d2-8548-40f8-8c38-b8c60ff3c105 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-7f98e6d2-8548-40f8-8c38-b8c60ff3c105 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-7f98e6d2-8548-40f8-8c38-b8c60ff3c105 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-7f98e6d2-8548-40f8-8c38-b8c60ff3c105 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-7f98e6d2-8548-40f8-8c38-b8c60ff3c105 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-7f98e6d2-8548-40f8-8c38-b8c60ff3c105 div.sk-parallel-item:only-child::after {width: 0;}#sk-7f98e6d2-8548-40f8-8c38-b8c60ff3c105 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-7f98e6d2-8548-40f8-8c38-b8c60ff3c105 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-7f98e6d2-8548-40f8-8c38-b8c60ff3c105 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-7f98e6d2-8548-40f8-8c38-b8c60ff3c105 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-7f98e6d2-8548-40f8-8c38-b8c60ff3c105 div.sk-text-repr-fallback {display: none;}</style><div id="sk-7f98e6d2-8548-40f8-8c38-b8c60ff3c105" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="94356c0e-7ee3-42be-9bb8-39114fb9dbbf" type="checkbox" ><label for="94356c0e-7ee3-42be-9bb8-39114fb9dbbf" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0d153efd-52fc-4bb4-b6ca-ebea77cdac7d" type="checkbox" ><label for="0d153efd-52fc-4bb4-b6ca-ebea77cdac7d" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7705ed7a-bdce-44bf-9892-80bd3addc2d4" type="checkbox" ><label for="7705ed7a-bdce-44bf-9892-80bd3addc2d4" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="df67adc6-f611-4dd1-96ea-1073095d7db2" type="checkbox" ><label for="df67adc6-f611-4dd1-96ea-1073095d7db2" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cb96c4a4-e87e-4ca5-a8ec-1db7b76f9719" type="checkbox" ><label for="cb96c4a4-e87e-4ca5-a8ec-1db7b76f9719" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="04deae34-3ff9-4428-952c-7592337058a5" type="checkbox" ><label for="04deae34-3ff9-4428-952c-7592337058a5" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1c7fcf4b-5889-415a-a7ed-b60e24bf7788" type="checkbox" ><label for="1c7fcf4b-5889-415a-a7ed-b60e24bf7788" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="21a030d7-f588-4bc2-b200-008f20746802" type="checkbox" ><label for="21a030d7-f588-4bc2-b200-008f20746802" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="afd5790e-0cf1-4eb1-b01c-1ce1642df459" type="checkbox" ><label for="afd5790e-0cf1-4eb1-b01c-1ce1642df459" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.076 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
