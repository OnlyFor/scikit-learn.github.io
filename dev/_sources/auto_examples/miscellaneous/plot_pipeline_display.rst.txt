
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-9569f60d-d5be-4bd2-83d8-525aaa3860ea {color: black;background-color: white;}#sk-9569f60d-d5be-4bd2-83d8-525aaa3860ea pre{padding: 0;}#sk-9569f60d-d5be-4bd2-83d8-525aaa3860ea div.sk-toggleable {background-color: white;}#sk-9569f60d-d5be-4bd2-83d8-525aaa3860ea label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-9569f60d-d5be-4bd2-83d8-525aaa3860ea label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-9569f60d-d5be-4bd2-83d8-525aaa3860ea label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-9569f60d-d5be-4bd2-83d8-525aaa3860ea div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-9569f60d-d5be-4bd2-83d8-525aaa3860ea div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-9569f60d-d5be-4bd2-83d8-525aaa3860ea div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-9569f60d-d5be-4bd2-83d8-525aaa3860ea input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-9569f60d-d5be-4bd2-83d8-525aaa3860ea input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-9569f60d-d5be-4bd2-83d8-525aaa3860ea div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-9569f60d-d5be-4bd2-83d8-525aaa3860ea div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-9569f60d-d5be-4bd2-83d8-525aaa3860ea input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-9569f60d-d5be-4bd2-83d8-525aaa3860ea div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-9569f60d-d5be-4bd2-83d8-525aaa3860ea div.sk-estimator:hover {background-color: #d4ebff;}#sk-9569f60d-d5be-4bd2-83d8-525aaa3860ea div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-9569f60d-d5be-4bd2-83d8-525aaa3860ea div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-9569f60d-d5be-4bd2-83d8-525aaa3860ea div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-9569f60d-d5be-4bd2-83d8-525aaa3860ea div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-9569f60d-d5be-4bd2-83d8-525aaa3860ea div.sk-item {z-index: 1;}#sk-9569f60d-d5be-4bd2-83d8-525aaa3860ea div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-9569f60d-d5be-4bd2-83d8-525aaa3860ea div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-9569f60d-d5be-4bd2-83d8-525aaa3860ea div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-9569f60d-d5be-4bd2-83d8-525aaa3860ea div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-9569f60d-d5be-4bd2-83d8-525aaa3860ea div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-9569f60d-d5be-4bd2-83d8-525aaa3860ea div.sk-parallel-item:only-child::after {width: 0;}#sk-9569f60d-d5be-4bd2-83d8-525aaa3860ea div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-9569f60d-d5be-4bd2-83d8-525aaa3860ea div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-9569f60d-d5be-4bd2-83d8-525aaa3860ea div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-9569f60d-d5be-4bd2-83d8-525aaa3860ea div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-9569f60d-d5be-4bd2-83d8-525aaa3860ea div.sk-text-repr-fallback {display: none;}</style><div id="sk-9569f60d-d5be-4bd2-83d8-525aaa3860ea" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a265bed4-22df-4f04-b9a8-773c8d2ca095" type="checkbox" ><label for="a265bed4-22df-4f04-b9a8-773c8d2ca095" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="011c6366-4c3e-4d4e-89f4-02134617a392" type="checkbox" ><label for="011c6366-4c3e-4d4e-89f4-02134617a392" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="09480b35-ac49-4905-9c1f-16afc7ff0784" type="checkbox" ><label for="09480b35-ac49-4905-9c1f-16afc7ff0784" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-7ea58fcb-1517-4f4d-9ff0-a1b809d5d4be {color: black;background-color: white;}#sk-7ea58fcb-1517-4f4d-9ff0-a1b809d5d4be pre{padding: 0;}#sk-7ea58fcb-1517-4f4d-9ff0-a1b809d5d4be div.sk-toggleable {background-color: white;}#sk-7ea58fcb-1517-4f4d-9ff0-a1b809d5d4be label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-7ea58fcb-1517-4f4d-9ff0-a1b809d5d4be label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-7ea58fcb-1517-4f4d-9ff0-a1b809d5d4be label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-7ea58fcb-1517-4f4d-9ff0-a1b809d5d4be div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-7ea58fcb-1517-4f4d-9ff0-a1b809d5d4be div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-7ea58fcb-1517-4f4d-9ff0-a1b809d5d4be div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-7ea58fcb-1517-4f4d-9ff0-a1b809d5d4be input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-7ea58fcb-1517-4f4d-9ff0-a1b809d5d4be input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-7ea58fcb-1517-4f4d-9ff0-a1b809d5d4be div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-7ea58fcb-1517-4f4d-9ff0-a1b809d5d4be div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-7ea58fcb-1517-4f4d-9ff0-a1b809d5d4be input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-7ea58fcb-1517-4f4d-9ff0-a1b809d5d4be div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-7ea58fcb-1517-4f4d-9ff0-a1b809d5d4be div.sk-estimator:hover {background-color: #d4ebff;}#sk-7ea58fcb-1517-4f4d-9ff0-a1b809d5d4be div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-7ea58fcb-1517-4f4d-9ff0-a1b809d5d4be div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-7ea58fcb-1517-4f4d-9ff0-a1b809d5d4be div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-7ea58fcb-1517-4f4d-9ff0-a1b809d5d4be div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-7ea58fcb-1517-4f4d-9ff0-a1b809d5d4be div.sk-item {z-index: 1;}#sk-7ea58fcb-1517-4f4d-9ff0-a1b809d5d4be div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-7ea58fcb-1517-4f4d-9ff0-a1b809d5d4be div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-7ea58fcb-1517-4f4d-9ff0-a1b809d5d4be div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-7ea58fcb-1517-4f4d-9ff0-a1b809d5d4be div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-7ea58fcb-1517-4f4d-9ff0-a1b809d5d4be div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-7ea58fcb-1517-4f4d-9ff0-a1b809d5d4be div.sk-parallel-item:only-child::after {width: 0;}#sk-7ea58fcb-1517-4f4d-9ff0-a1b809d5d4be div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-7ea58fcb-1517-4f4d-9ff0-a1b809d5d4be div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-7ea58fcb-1517-4f4d-9ff0-a1b809d5d4be div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-7ea58fcb-1517-4f4d-9ff0-a1b809d5d4be div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-7ea58fcb-1517-4f4d-9ff0-a1b809d5d4be div.sk-text-repr-fallback {display: none;}</style><div id="sk-7ea58fcb-1517-4f4d-9ff0-a1b809d5d4be" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f4269d85-febc-4c07-8345-250c52549a77" type="checkbox" ><label for="f4269d85-febc-4c07-8345-250c52549a77" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c2854825-baa8-4d35-a8de-c6f34d1a5aa4" type="checkbox" ><label for="c2854825-baa8-4d35-a8de-c6f34d1a5aa4" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="967c7ac5-3dd0-4fa3-98a4-a8269778b8eb" type="checkbox" ><label for="967c7ac5-3dd0-4fa3-98a4-a8269778b8eb" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d0c8062a-205c-49bb-8f70-e82b50bc668f" type="checkbox" ><label for="d0c8062a-205c-49bb-8f70-e82b50bc668f" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-92ddb830-678e-4108-91c0-92c5a2191f8d {color: black;background-color: white;}#sk-92ddb830-678e-4108-91c0-92c5a2191f8d pre{padding: 0;}#sk-92ddb830-678e-4108-91c0-92c5a2191f8d div.sk-toggleable {background-color: white;}#sk-92ddb830-678e-4108-91c0-92c5a2191f8d label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-92ddb830-678e-4108-91c0-92c5a2191f8d label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-92ddb830-678e-4108-91c0-92c5a2191f8d label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-92ddb830-678e-4108-91c0-92c5a2191f8d div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-92ddb830-678e-4108-91c0-92c5a2191f8d div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-92ddb830-678e-4108-91c0-92c5a2191f8d div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-92ddb830-678e-4108-91c0-92c5a2191f8d input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-92ddb830-678e-4108-91c0-92c5a2191f8d input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-92ddb830-678e-4108-91c0-92c5a2191f8d div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-92ddb830-678e-4108-91c0-92c5a2191f8d div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-92ddb830-678e-4108-91c0-92c5a2191f8d input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-92ddb830-678e-4108-91c0-92c5a2191f8d div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-92ddb830-678e-4108-91c0-92c5a2191f8d div.sk-estimator:hover {background-color: #d4ebff;}#sk-92ddb830-678e-4108-91c0-92c5a2191f8d div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-92ddb830-678e-4108-91c0-92c5a2191f8d div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-92ddb830-678e-4108-91c0-92c5a2191f8d div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-92ddb830-678e-4108-91c0-92c5a2191f8d div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-92ddb830-678e-4108-91c0-92c5a2191f8d div.sk-item {z-index: 1;}#sk-92ddb830-678e-4108-91c0-92c5a2191f8d div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-92ddb830-678e-4108-91c0-92c5a2191f8d div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-92ddb830-678e-4108-91c0-92c5a2191f8d div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-92ddb830-678e-4108-91c0-92c5a2191f8d div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-92ddb830-678e-4108-91c0-92c5a2191f8d div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-92ddb830-678e-4108-91c0-92c5a2191f8d div.sk-parallel-item:only-child::after {width: 0;}#sk-92ddb830-678e-4108-91c0-92c5a2191f8d div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-92ddb830-678e-4108-91c0-92c5a2191f8d div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-92ddb830-678e-4108-91c0-92c5a2191f8d div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-92ddb830-678e-4108-91c0-92c5a2191f8d div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-92ddb830-678e-4108-91c0-92c5a2191f8d div.sk-text-repr-fallback {display: none;}</style><div id="sk-92ddb830-678e-4108-91c0-92c5a2191f8d" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9cee2bab-5351-4a98-b987-0291f464b821" type="checkbox" ><label for="9cee2bab-5351-4a98-b987-0291f464b821" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="183cc5db-d824-4275-9e42-0da90aab09a8" type="checkbox" ><label for="183cc5db-d824-4275-9e42-0da90aab09a8" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="86a0f90b-587e-41e2-9a3a-372fe5de162d" type="checkbox" ><label for="86a0f90b-587e-41e2-9a3a-372fe5de162d" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-e2210861-0e3c-46b7-8176-49bf98d51512 {color: black;background-color: white;}#sk-e2210861-0e3c-46b7-8176-49bf98d51512 pre{padding: 0;}#sk-e2210861-0e3c-46b7-8176-49bf98d51512 div.sk-toggleable {background-color: white;}#sk-e2210861-0e3c-46b7-8176-49bf98d51512 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-e2210861-0e3c-46b7-8176-49bf98d51512 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-e2210861-0e3c-46b7-8176-49bf98d51512 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-e2210861-0e3c-46b7-8176-49bf98d51512 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-e2210861-0e3c-46b7-8176-49bf98d51512 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-e2210861-0e3c-46b7-8176-49bf98d51512 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-e2210861-0e3c-46b7-8176-49bf98d51512 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-e2210861-0e3c-46b7-8176-49bf98d51512 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-e2210861-0e3c-46b7-8176-49bf98d51512 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-e2210861-0e3c-46b7-8176-49bf98d51512 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-e2210861-0e3c-46b7-8176-49bf98d51512 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-e2210861-0e3c-46b7-8176-49bf98d51512 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-e2210861-0e3c-46b7-8176-49bf98d51512 div.sk-estimator:hover {background-color: #d4ebff;}#sk-e2210861-0e3c-46b7-8176-49bf98d51512 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-e2210861-0e3c-46b7-8176-49bf98d51512 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-e2210861-0e3c-46b7-8176-49bf98d51512 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-e2210861-0e3c-46b7-8176-49bf98d51512 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-e2210861-0e3c-46b7-8176-49bf98d51512 div.sk-item {z-index: 1;}#sk-e2210861-0e3c-46b7-8176-49bf98d51512 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-e2210861-0e3c-46b7-8176-49bf98d51512 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-e2210861-0e3c-46b7-8176-49bf98d51512 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-e2210861-0e3c-46b7-8176-49bf98d51512 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-e2210861-0e3c-46b7-8176-49bf98d51512 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-e2210861-0e3c-46b7-8176-49bf98d51512 div.sk-parallel-item:only-child::after {width: 0;}#sk-e2210861-0e3c-46b7-8176-49bf98d51512 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-e2210861-0e3c-46b7-8176-49bf98d51512 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-e2210861-0e3c-46b7-8176-49bf98d51512 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-e2210861-0e3c-46b7-8176-49bf98d51512 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-e2210861-0e3c-46b7-8176-49bf98d51512 div.sk-text-repr-fallback {display: none;}</style><div id="sk-e2210861-0e3c-46b7-8176-49bf98d51512" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bb878c6b-ba38-488c-a8cf-f67923582717" type="checkbox" ><label for="bb878c6b-ba38-488c-a8cf-f67923582717" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cc744274-dd58-4e29-91fc-c71272308898" type="checkbox" ><label for="cc744274-dd58-4e29-91fc-c71272308898" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="465d55d3-2cee-4000-b352-303f8aeace6e" type="checkbox" ><label for="465d55d3-2cee-4000-b352-303f8aeace6e" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3c07d226-1290-4cda-ad75-16f0aaff4197" type="checkbox" ><label for="3c07d226-1290-4cda-ad75-16f0aaff4197" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fc212b7a-46df-447c-a57e-e193ba32c322" type="checkbox" ><label for="fc212b7a-46df-447c-a57e-e193ba32c322" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5156fc9f-15ae-4219-ad6e-bec4bc02ff6d" type="checkbox" ><label for="5156fc9f-15ae-4219-ad6e-bec4bc02ff6d" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="efb7c8ff-f3e8-4f62-bc7e-1bb93243a684" type="checkbox" ><label for="efb7c8ff-f3e8-4f62-bc7e-1bb93243a684" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="06fdb795-3409-48d6-8655-94d591b36a38" type="checkbox" ><label for="06fdb795-3409-48d6-8655-94d591b36a38" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e4a76505-1c1b-4111-967b-ac4e37cce73d" type="checkbox" ><label for="e4a76505-1c1b-4111-967b-ac4e37cce73d" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-103b23b1-7f67-4e2f-b37d-f80b7a7bffd8 {color: black;background-color: white;}#sk-103b23b1-7f67-4e2f-b37d-f80b7a7bffd8 pre{padding: 0;}#sk-103b23b1-7f67-4e2f-b37d-f80b7a7bffd8 div.sk-toggleable {background-color: white;}#sk-103b23b1-7f67-4e2f-b37d-f80b7a7bffd8 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-103b23b1-7f67-4e2f-b37d-f80b7a7bffd8 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-103b23b1-7f67-4e2f-b37d-f80b7a7bffd8 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-103b23b1-7f67-4e2f-b37d-f80b7a7bffd8 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-103b23b1-7f67-4e2f-b37d-f80b7a7bffd8 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-103b23b1-7f67-4e2f-b37d-f80b7a7bffd8 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-103b23b1-7f67-4e2f-b37d-f80b7a7bffd8 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-103b23b1-7f67-4e2f-b37d-f80b7a7bffd8 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-103b23b1-7f67-4e2f-b37d-f80b7a7bffd8 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-103b23b1-7f67-4e2f-b37d-f80b7a7bffd8 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-103b23b1-7f67-4e2f-b37d-f80b7a7bffd8 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-103b23b1-7f67-4e2f-b37d-f80b7a7bffd8 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-103b23b1-7f67-4e2f-b37d-f80b7a7bffd8 div.sk-estimator:hover {background-color: #d4ebff;}#sk-103b23b1-7f67-4e2f-b37d-f80b7a7bffd8 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-103b23b1-7f67-4e2f-b37d-f80b7a7bffd8 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-103b23b1-7f67-4e2f-b37d-f80b7a7bffd8 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-103b23b1-7f67-4e2f-b37d-f80b7a7bffd8 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-103b23b1-7f67-4e2f-b37d-f80b7a7bffd8 div.sk-item {z-index: 1;}#sk-103b23b1-7f67-4e2f-b37d-f80b7a7bffd8 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-103b23b1-7f67-4e2f-b37d-f80b7a7bffd8 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-103b23b1-7f67-4e2f-b37d-f80b7a7bffd8 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-103b23b1-7f67-4e2f-b37d-f80b7a7bffd8 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-103b23b1-7f67-4e2f-b37d-f80b7a7bffd8 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-103b23b1-7f67-4e2f-b37d-f80b7a7bffd8 div.sk-parallel-item:only-child::after {width: 0;}#sk-103b23b1-7f67-4e2f-b37d-f80b7a7bffd8 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-103b23b1-7f67-4e2f-b37d-f80b7a7bffd8 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-103b23b1-7f67-4e2f-b37d-f80b7a7bffd8 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-103b23b1-7f67-4e2f-b37d-f80b7a7bffd8 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-103b23b1-7f67-4e2f-b37d-f80b7a7bffd8 div.sk-text-repr-fallback {display: none;}</style><div id="sk-103b23b1-7f67-4e2f-b37d-f80b7a7bffd8" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c5d50b76-4493-4ec1-a311-9142b6dceee9" type="checkbox" ><label for="c5d50b76-4493-4ec1-a311-9142b6dceee9" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2f0656d4-406b-4785-b7cd-43e4f6b8af0e" type="checkbox" ><label for="2f0656d4-406b-4785-b7cd-43e4f6b8af0e" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b45ca669-3c6a-4d9b-bcb0-9ecd4b965418" type="checkbox" ><label for="b45ca669-3c6a-4d9b-bcb0-9ecd4b965418" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1ec13f5e-f782-42f4-bb5c-f4972d8f7abf" type="checkbox" ><label for="1ec13f5e-f782-42f4-bb5c-f4972d8f7abf" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a76d9209-518c-44e6-af07-877d3ee9e7b1" type="checkbox" ><label for="a76d9209-518c-44e6-af07-877d3ee9e7b1" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f649085b-2a07-409b-ba55-ff87361c8633" type="checkbox" ><label for="f649085b-2a07-409b-ba55-ff87361c8633" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="efadd39d-ae88-4c5f-b818-e8c3c539cb5a" type="checkbox" ><label for="efadd39d-ae88-4c5f-b818-e8c3c539cb5a" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f29bb862-ba94-4173-8546-2f94cb215826" type="checkbox" ><label for="f29bb862-ba94-4173-8546-2f94cb215826" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="22702750-f5aa-4131-a92f-c2a161e3b666" type="checkbox" ><label for="22702750-f5aa-4131-a92f-c2a161e3b666" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.070 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
