
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-b041d3e0-3627-4a67-bc96-4cb71368ad9c {color: black;background-color: white;}#sk-b041d3e0-3627-4a67-bc96-4cb71368ad9c pre{padding: 0;}#sk-b041d3e0-3627-4a67-bc96-4cb71368ad9c div.sk-toggleable {background-color: white;}#sk-b041d3e0-3627-4a67-bc96-4cb71368ad9c label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-b041d3e0-3627-4a67-bc96-4cb71368ad9c label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-b041d3e0-3627-4a67-bc96-4cb71368ad9c label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-b041d3e0-3627-4a67-bc96-4cb71368ad9c div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-b041d3e0-3627-4a67-bc96-4cb71368ad9c div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-b041d3e0-3627-4a67-bc96-4cb71368ad9c div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-b041d3e0-3627-4a67-bc96-4cb71368ad9c input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-b041d3e0-3627-4a67-bc96-4cb71368ad9c input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-b041d3e0-3627-4a67-bc96-4cb71368ad9c div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b041d3e0-3627-4a67-bc96-4cb71368ad9c div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b041d3e0-3627-4a67-bc96-4cb71368ad9c input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-b041d3e0-3627-4a67-bc96-4cb71368ad9c div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-b041d3e0-3627-4a67-bc96-4cb71368ad9c div.sk-estimator:hover {background-color: #d4ebff;}#sk-b041d3e0-3627-4a67-bc96-4cb71368ad9c div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-b041d3e0-3627-4a67-bc96-4cb71368ad9c div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-b041d3e0-3627-4a67-bc96-4cb71368ad9c div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b041d3e0-3627-4a67-bc96-4cb71368ad9c div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-b041d3e0-3627-4a67-bc96-4cb71368ad9c div.sk-item {z-index: 1;}#sk-b041d3e0-3627-4a67-bc96-4cb71368ad9c div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-b041d3e0-3627-4a67-bc96-4cb71368ad9c div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b041d3e0-3627-4a67-bc96-4cb71368ad9c div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-b041d3e0-3627-4a67-bc96-4cb71368ad9c div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-b041d3e0-3627-4a67-bc96-4cb71368ad9c div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-b041d3e0-3627-4a67-bc96-4cb71368ad9c div.sk-parallel-item:only-child::after {width: 0;}#sk-b041d3e0-3627-4a67-bc96-4cb71368ad9c div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-b041d3e0-3627-4a67-bc96-4cb71368ad9c div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-b041d3e0-3627-4a67-bc96-4cb71368ad9c div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-b041d3e0-3627-4a67-bc96-4cb71368ad9c div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-b041d3e0-3627-4a67-bc96-4cb71368ad9c div.sk-text-repr-fallback {display: none;}</style><div id="sk-b041d3e0-3627-4a67-bc96-4cb71368ad9c" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a05bd742-0b53-4c45-9439-115dc33eda64" type="checkbox" ><label for="a05bd742-0b53-4c45-9439-115dc33eda64" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ebc4e361-8139-41b5-bbb6-f561e2087068" type="checkbox" ><label for="ebc4e361-8139-41b5-bbb6-f561e2087068" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="398c4b08-e5a5-4e9f-9a24-e4780e6b8732" type="checkbox" ><label for="398c4b08-e5a5-4e9f-9a24-e4780e6b8732" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-380e38c8-bf10-4a72-a994-601e24f97de8 {color: black;background-color: white;}#sk-380e38c8-bf10-4a72-a994-601e24f97de8 pre{padding: 0;}#sk-380e38c8-bf10-4a72-a994-601e24f97de8 div.sk-toggleable {background-color: white;}#sk-380e38c8-bf10-4a72-a994-601e24f97de8 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-380e38c8-bf10-4a72-a994-601e24f97de8 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-380e38c8-bf10-4a72-a994-601e24f97de8 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-380e38c8-bf10-4a72-a994-601e24f97de8 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-380e38c8-bf10-4a72-a994-601e24f97de8 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-380e38c8-bf10-4a72-a994-601e24f97de8 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-380e38c8-bf10-4a72-a994-601e24f97de8 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-380e38c8-bf10-4a72-a994-601e24f97de8 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-380e38c8-bf10-4a72-a994-601e24f97de8 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-380e38c8-bf10-4a72-a994-601e24f97de8 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-380e38c8-bf10-4a72-a994-601e24f97de8 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-380e38c8-bf10-4a72-a994-601e24f97de8 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-380e38c8-bf10-4a72-a994-601e24f97de8 div.sk-estimator:hover {background-color: #d4ebff;}#sk-380e38c8-bf10-4a72-a994-601e24f97de8 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-380e38c8-bf10-4a72-a994-601e24f97de8 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-380e38c8-bf10-4a72-a994-601e24f97de8 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-380e38c8-bf10-4a72-a994-601e24f97de8 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-380e38c8-bf10-4a72-a994-601e24f97de8 div.sk-item {z-index: 1;}#sk-380e38c8-bf10-4a72-a994-601e24f97de8 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-380e38c8-bf10-4a72-a994-601e24f97de8 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-380e38c8-bf10-4a72-a994-601e24f97de8 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-380e38c8-bf10-4a72-a994-601e24f97de8 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-380e38c8-bf10-4a72-a994-601e24f97de8 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-380e38c8-bf10-4a72-a994-601e24f97de8 div.sk-parallel-item:only-child::after {width: 0;}#sk-380e38c8-bf10-4a72-a994-601e24f97de8 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-380e38c8-bf10-4a72-a994-601e24f97de8 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-380e38c8-bf10-4a72-a994-601e24f97de8 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-380e38c8-bf10-4a72-a994-601e24f97de8 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-380e38c8-bf10-4a72-a994-601e24f97de8 div.sk-text-repr-fallback {display: none;}</style><div id="sk-380e38c8-bf10-4a72-a994-601e24f97de8" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ed497ba8-2d7f-41c5-a66f-3751e162a859" type="checkbox" ><label for="ed497ba8-2d7f-41c5-a66f-3751e162a859" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a98cc63c-22f4-43fd-b72b-063a17c9b5b5" type="checkbox" ><label for="a98cc63c-22f4-43fd-b72b-063a17c9b5b5" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="44d8651e-2165-4522-8e5b-e12147ffe392" type="checkbox" ><label for="44d8651e-2165-4522-8e5b-e12147ffe392" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="88725f95-b9a7-4f0f-a919-1d4de46d9e9a" type="checkbox" ><label for="88725f95-b9a7-4f0f-a919-1d4de46d9e9a" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-9a867df7-ace0-4e3e-bff7-a2235dc3df06 {color: black;background-color: white;}#sk-9a867df7-ace0-4e3e-bff7-a2235dc3df06 pre{padding: 0;}#sk-9a867df7-ace0-4e3e-bff7-a2235dc3df06 div.sk-toggleable {background-color: white;}#sk-9a867df7-ace0-4e3e-bff7-a2235dc3df06 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-9a867df7-ace0-4e3e-bff7-a2235dc3df06 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-9a867df7-ace0-4e3e-bff7-a2235dc3df06 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-9a867df7-ace0-4e3e-bff7-a2235dc3df06 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-9a867df7-ace0-4e3e-bff7-a2235dc3df06 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-9a867df7-ace0-4e3e-bff7-a2235dc3df06 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-9a867df7-ace0-4e3e-bff7-a2235dc3df06 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-9a867df7-ace0-4e3e-bff7-a2235dc3df06 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-9a867df7-ace0-4e3e-bff7-a2235dc3df06 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-9a867df7-ace0-4e3e-bff7-a2235dc3df06 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-9a867df7-ace0-4e3e-bff7-a2235dc3df06 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-9a867df7-ace0-4e3e-bff7-a2235dc3df06 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-9a867df7-ace0-4e3e-bff7-a2235dc3df06 div.sk-estimator:hover {background-color: #d4ebff;}#sk-9a867df7-ace0-4e3e-bff7-a2235dc3df06 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-9a867df7-ace0-4e3e-bff7-a2235dc3df06 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-9a867df7-ace0-4e3e-bff7-a2235dc3df06 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-9a867df7-ace0-4e3e-bff7-a2235dc3df06 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-9a867df7-ace0-4e3e-bff7-a2235dc3df06 div.sk-item {z-index: 1;}#sk-9a867df7-ace0-4e3e-bff7-a2235dc3df06 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-9a867df7-ace0-4e3e-bff7-a2235dc3df06 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-9a867df7-ace0-4e3e-bff7-a2235dc3df06 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-9a867df7-ace0-4e3e-bff7-a2235dc3df06 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-9a867df7-ace0-4e3e-bff7-a2235dc3df06 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-9a867df7-ace0-4e3e-bff7-a2235dc3df06 div.sk-parallel-item:only-child::after {width: 0;}#sk-9a867df7-ace0-4e3e-bff7-a2235dc3df06 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-9a867df7-ace0-4e3e-bff7-a2235dc3df06 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-9a867df7-ace0-4e3e-bff7-a2235dc3df06 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-9a867df7-ace0-4e3e-bff7-a2235dc3df06 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-9a867df7-ace0-4e3e-bff7-a2235dc3df06 div.sk-text-repr-fallback {display: none;}</style><div id="sk-9a867df7-ace0-4e3e-bff7-a2235dc3df06" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6b11b8bb-8ce0-4537-9d39-7f674327f8f6" type="checkbox" ><label for="6b11b8bb-8ce0-4537-9d39-7f674327f8f6" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="180e7c83-f24d-491d-acc4-65ff9c2ce326" type="checkbox" ><label for="180e7c83-f24d-491d-acc4-65ff9c2ce326" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1b54f7a9-7f8c-41a2-92c9-7dc46bb65ab6" type="checkbox" ><label for="1b54f7a9-7f8c-41a2-92c9-7dc46bb65ab6" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-fb251cc8-ae72-407c-9de4-74dd538a90a7 {color: black;background-color: white;}#sk-fb251cc8-ae72-407c-9de4-74dd538a90a7 pre{padding: 0;}#sk-fb251cc8-ae72-407c-9de4-74dd538a90a7 div.sk-toggleable {background-color: white;}#sk-fb251cc8-ae72-407c-9de4-74dd538a90a7 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-fb251cc8-ae72-407c-9de4-74dd538a90a7 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-fb251cc8-ae72-407c-9de4-74dd538a90a7 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-fb251cc8-ae72-407c-9de4-74dd538a90a7 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-fb251cc8-ae72-407c-9de4-74dd538a90a7 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-fb251cc8-ae72-407c-9de4-74dd538a90a7 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-fb251cc8-ae72-407c-9de4-74dd538a90a7 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-fb251cc8-ae72-407c-9de4-74dd538a90a7 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-fb251cc8-ae72-407c-9de4-74dd538a90a7 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-fb251cc8-ae72-407c-9de4-74dd538a90a7 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-fb251cc8-ae72-407c-9de4-74dd538a90a7 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-fb251cc8-ae72-407c-9de4-74dd538a90a7 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-fb251cc8-ae72-407c-9de4-74dd538a90a7 div.sk-estimator:hover {background-color: #d4ebff;}#sk-fb251cc8-ae72-407c-9de4-74dd538a90a7 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-fb251cc8-ae72-407c-9de4-74dd538a90a7 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-fb251cc8-ae72-407c-9de4-74dd538a90a7 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-fb251cc8-ae72-407c-9de4-74dd538a90a7 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-fb251cc8-ae72-407c-9de4-74dd538a90a7 div.sk-item {z-index: 1;}#sk-fb251cc8-ae72-407c-9de4-74dd538a90a7 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-fb251cc8-ae72-407c-9de4-74dd538a90a7 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-fb251cc8-ae72-407c-9de4-74dd538a90a7 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-fb251cc8-ae72-407c-9de4-74dd538a90a7 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-fb251cc8-ae72-407c-9de4-74dd538a90a7 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-fb251cc8-ae72-407c-9de4-74dd538a90a7 div.sk-parallel-item:only-child::after {width: 0;}#sk-fb251cc8-ae72-407c-9de4-74dd538a90a7 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-fb251cc8-ae72-407c-9de4-74dd538a90a7 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-fb251cc8-ae72-407c-9de4-74dd538a90a7 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-fb251cc8-ae72-407c-9de4-74dd538a90a7 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-fb251cc8-ae72-407c-9de4-74dd538a90a7 div.sk-text-repr-fallback {display: none;}</style><div id="sk-fb251cc8-ae72-407c-9de4-74dd538a90a7" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9c11e46e-8da0-4489-850f-33469fb17fc0" type="checkbox" ><label for="9c11e46e-8da0-4489-850f-33469fb17fc0" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c916fedf-9cc8-46eb-803b-1c582f3ffa2e" type="checkbox" ><label for="c916fedf-9cc8-46eb-803b-1c582f3ffa2e" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="105d27e4-38dd-472b-8c4e-339c1de99004" type="checkbox" ><label for="105d27e4-38dd-472b-8c4e-339c1de99004" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="21178e8e-6172-4ccb-9b5a-b06ad6aa4d9f" type="checkbox" ><label for="21178e8e-6172-4ccb-9b5a-b06ad6aa4d9f" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c55ed966-2fdf-4113-b214-b97578d6315c" type="checkbox" ><label for="c55ed966-2fdf-4113-b214-b97578d6315c" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1c76d3af-9e5a-40c4-9c52-6d72fd69b8c0" type="checkbox" ><label for="1c76d3af-9e5a-40c4-9c52-6d72fd69b8c0" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="36c0263a-6a92-4d5a-887d-1737ac676453" type="checkbox" ><label for="36c0263a-6a92-4d5a-887d-1737ac676453" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2759fb03-e01d-471f-9ef0-d7a802d2f9a7" type="checkbox" ><label for="2759fb03-e01d-471f-9ef0-d7a802d2f9a7" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="59cfac08-0f1f-4b28-813b-88f96a954d8b" type="checkbox" ><label for="59cfac08-0f1f-4b28-813b-88f96a954d8b" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-369f1e20-675b-4f96-8ed0-735025ef6397 {color: black;background-color: white;}#sk-369f1e20-675b-4f96-8ed0-735025ef6397 pre{padding: 0;}#sk-369f1e20-675b-4f96-8ed0-735025ef6397 div.sk-toggleable {background-color: white;}#sk-369f1e20-675b-4f96-8ed0-735025ef6397 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-369f1e20-675b-4f96-8ed0-735025ef6397 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-369f1e20-675b-4f96-8ed0-735025ef6397 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-369f1e20-675b-4f96-8ed0-735025ef6397 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-369f1e20-675b-4f96-8ed0-735025ef6397 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-369f1e20-675b-4f96-8ed0-735025ef6397 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-369f1e20-675b-4f96-8ed0-735025ef6397 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-369f1e20-675b-4f96-8ed0-735025ef6397 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-369f1e20-675b-4f96-8ed0-735025ef6397 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-369f1e20-675b-4f96-8ed0-735025ef6397 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-369f1e20-675b-4f96-8ed0-735025ef6397 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-369f1e20-675b-4f96-8ed0-735025ef6397 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-369f1e20-675b-4f96-8ed0-735025ef6397 div.sk-estimator:hover {background-color: #d4ebff;}#sk-369f1e20-675b-4f96-8ed0-735025ef6397 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-369f1e20-675b-4f96-8ed0-735025ef6397 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-369f1e20-675b-4f96-8ed0-735025ef6397 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-369f1e20-675b-4f96-8ed0-735025ef6397 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-369f1e20-675b-4f96-8ed0-735025ef6397 div.sk-item {z-index: 1;}#sk-369f1e20-675b-4f96-8ed0-735025ef6397 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-369f1e20-675b-4f96-8ed0-735025ef6397 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-369f1e20-675b-4f96-8ed0-735025ef6397 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-369f1e20-675b-4f96-8ed0-735025ef6397 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-369f1e20-675b-4f96-8ed0-735025ef6397 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-369f1e20-675b-4f96-8ed0-735025ef6397 div.sk-parallel-item:only-child::after {width: 0;}#sk-369f1e20-675b-4f96-8ed0-735025ef6397 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-369f1e20-675b-4f96-8ed0-735025ef6397 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-369f1e20-675b-4f96-8ed0-735025ef6397 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-369f1e20-675b-4f96-8ed0-735025ef6397 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-369f1e20-675b-4f96-8ed0-735025ef6397 div.sk-text-repr-fallback {display: none;}</style><div id="sk-369f1e20-675b-4f96-8ed0-735025ef6397" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cc491eea-21ad-4cc1-a255-ce91088fb429" type="checkbox" ><label for="cc491eea-21ad-4cc1-a255-ce91088fb429" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4962f7fb-557b-4e65-b655-efb63e4bd215" type="checkbox" ><label for="4962f7fb-557b-4e65-b655-efb63e4bd215" class="sk-toggleable__label sk-toggleable__label-arrow">estimator: Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessor&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;classifier&#x27;, RandomForestClassifier())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="63ee86b1-3e31-45da-a67d-a3c23811bf4e" type="checkbox" ><label for="63ee86b1-3e31-45da-a67d-a3c23811bf4e" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0370ce80-b060-4325-b034-0e49e726abd2" type="checkbox" ><label for="0370ce80-b060-4325-b034-0e49e726abd2" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2909c1a5-3271-4264-b03c-2ce0c22aba5e" type="checkbox" ><label for="2909c1a5-3271-4264-b03c-2ce0c22aba5e" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8f697fda-ab1e-4e48-b0e9-e359c71967c7" type="checkbox" ><label for="8f697fda-ab1e-4e48-b0e9-e359c71967c7" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c9bc51fd-6659-4e69-93e1-b2724314440d" type="checkbox" ><label for="c9bc51fd-6659-4e69-93e1-b2724314440d" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8cc65c1c-96f6-4624-bf49-d091a99b14e3" type="checkbox" ><label for="8cc65c1c-96f6-4624-bf49-d091a99b14e3" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="92b1901d-9c0a-450a-a60c-98b3dceadb58" type="checkbox" ><label for="92b1901d-9c0a-450a-a60c-98b3dceadb58" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="671bd24a-6a42-4e88-b8f4-1506de538469" type="checkbox" ><label for="671bd24a-6a42-4e88-b8f4-1506de538469" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.088 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
