
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-95a2f391-131e-45d5-a067-ce03cab61bfe {color: black;background-color: white;}#sk-95a2f391-131e-45d5-a067-ce03cab61bfe pre{padding: 0;}#sk-95a2f391-131e-45d5-a067-ce03cab61bfe div.sk-toggleable {background-color: white;}#sk-95a2f391-131e-45d5-a067-ce03cab61bfe label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-95a2f391-131e-45d5-a067-ce03cab61bfe label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-95a2f391-131e-45d5-a067-ce03cab61bfe label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-95a2f391-131e-45d5-a067-ce03cab61bfe div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-95a2f391-131e-45d5-a067-ce03cab61bfe div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-95a2f391-131e-45d5-a067-ce03cab61bfe div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-95a2f391-131e-45d5-a067-ce03cab61bfe input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-95a2f391-131e-45d5-a067-ce03cab61bfe input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-95a2f391-131e-45d5-a067-ce03cab61bfe div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-95a2f391-131e-45d5-a067-ce03cab61bfe div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-95a2f391-131e-45d5-a067-ce03cab61bfe input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-95a2f391-131e-45d5-a067-ce03cab61bfe div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-95a2f391-131e-45d5-a067-ce03cab61bfe div.sk-estimator:hover {background-color: #d4ebff;}#sk-95a2f391-131e-45d5-a067-ce03cab61bfe div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-95a2f391-131e-45d5-a067-ce03cab61bfe div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-95a2f391-131e-45d5-a067-ce03cab61bfe div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-95a2f391-131e-45d5-a067-ce03cab61bfe div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-95a2f391-131e-45d5-a067-ce03cab61bfe div.sk-item {z-index: 1;}#sk-95a2f391-131e-45d5-a067-ce03cab61bfe div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-95a2f391-131e-45d5-a067-ce03cab61bfe div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-95a2f391-131e-45d5-a067-ce03cab61bfe div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-95a2f391-131e-45d5-a067-ce03cab61bfe div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-95a2f391-131e-45d5-a067-ce03cab61bfe div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-95a2f391-131e-45d5-a067-ce03cab61bfe div.sk-parallel-item:only-child::after {width: 0;}#sk-95a2f391-131e-45d5-a067-ce03cab61bfe div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-95a2f391-131e-45d5-a067-ce03cab61bfe div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-95a2f391-131e-45d5-a067-ce03cab61bfe div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-95a2f391-131e-45d5-a067-ce03cab61bfe div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-95a2f391-131e-45d5-a067-ce03cab61bfe div.sk-text-repr-fallback {display: none;}</style><div id="sk-95a2f391-131e-45d5-a067-ce03cab61bfe" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d6900056-324f-42c8-bedb-b11679991251" type="checkbox" ><label for="d6900056-324f-42c8-bedb-b11679991251" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c55df4a5-5685-43ec-bfc4-f01b6ef5e684" type="checkbox" ><label for="c55df4a5-5685-43ec-bfc4-f01b6ef5e684" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cbbec3f6-5dac-4143-bcb1-a346e1736cb0" type="checkbox" ><label for="cbbec3f6-5dac-4143-bcb1-a346e1736cb0" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-5b28026e-4fe5-4050-b458-b9e86ec10dda {color: black;background-color: white;}#sk-5b28026e-4fe5-4050-b458-b9e86ec10dda pre{padding: 0;}#sk-5b28026e-4fe5-4050-b458-b9e86ec10dda div.sk-toggleable {background-color: white;}#sk-5b28026e-4fe5-4050-b458-b9e86ec10dda label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-5b28026e-4fe5-4050-b458-b9e86ec10dda label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-5b28026e-4fe5-4050-b458-b9e86ec10dda label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-5b28026e-4fe5-4050-b458-b9e86ec10dda div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-5b28026e-4fe5-4050-b458-b9e86ec10dda div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-5b28026e-4fe5-4050-b458-b9e86ec10dda div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-5b28026e-4fe5-4050-b458-b9e86ec10dda input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-5b28026e-4fe5-4050-b458-b9e86ec10dda input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-5b28026e-4fe5-4050-b458-b9e86ec10dda div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-5b28026e-4fe5-4050-b458-b9e86ec10dda div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-5b28026e-4fe5-4050-b458-b9e86ec10dda input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-5b28026e-4fe5-4050-b458-b9e86ec10dda div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-5b28026e-4fe5-4050-b458-b9e86ec10dda div.sk-estimator:hover {background-color: #d4ebff;}#sk-5b28026e-4fe5-4050-b458-b9e86ec10dda div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-5b28026e-4fe5-4050-b458-b9e86ec10dda div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-5b28026e-4fe5-4050-b458-b9e86ec10dda div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-5b28026e-4fe5-4050-b458-b9e86ec10dda div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-5b28026e-4fe5-4050-b458-b9e86ec10dda div.sk-item {z-index: 1;}#sk-5b28026e-4fe5-4050-b458-b9e86ec10dda div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-5b28026e-4fe5-4050-b458-b9e86ec10dda div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-5b28026e-4fe5-4050-b458-b9e86ec10dda div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-5b28026e-4fe5-4050-b458-b9e86ec10dda div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-5b28026e-4fe5-4050-b458-b9e86ec10dda div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-5b28026e-4fe5-4050-b458-b9e86ec10dda div.sk-parallel-item:only-child::after {width: 0;}#sk-5b28026e-4fe5-4050-b458-b9e86ec10dda div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-5b28026e-4fe5-4050-b458-b9e86ec10dda div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-5b28026e-4fe5-4050-b458-b9e86ec10dda div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-5b28026e-4fe5-4050-b458-b9e86ec10dda div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-5b28026e-4fe5-4050-b458-b9e86ec10dda div.sk-text-repr-fallback {display: none;}</style><div id="sk-5b28026e-4fe5-4050-b458-b9e86ec10dda" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5eade4d4-69db-4af3-99f5-57ce646c533c" type="checkbox" ><label for="5eade4d4-69db-4af3-99f5-57ce646c533c" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3169ad4c-80f4-4a43-86e1-42330c8a87b1" type="checkbox" ><label for="3169ad4c-80f4-4a43-86e1-42330c8a87b1" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ba88933e-501f-4535-95dd-d1a916b1bbc9" type="checkbox" ><label for="ba88933e-501f-4535-95dd-d1a916b1bbc9" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="eec495fc-1f41-494c-b6fe-e6cf45c457e8" type="checkbox" ><label for="eec495fc-1f41-494c-b6fe-e6cf45c457e8" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-030ddb5d-f92e-4bcf-8592-8211eb6b54a3 {color: black;background-color: white;}#sk-030ddb5d-f92e-4bcf-8592-8211eb6b54a3 pre{padding: 0;}#sk-030ddb5d-f92e-4bcf-8592-8211eb6b54a3 div.sk-toggleable {background-color: white;}#sk-030ddb5d-f92e-4bcf-8592-8211eb6b54a3 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-030ddb5d-f92e-4bcf-8592-8211eb6b54a3 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-030ddb5d-f92e-4bcf-8592-8211eb6b54a3 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-030ddb5d-f92e-4bcf-8592-8211eb6b54a3 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-030ddb5d-f92e-4bcf-8592-8211eb6b54a3 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-030ddb5d-f92e-4bcf-8592-8211eb6b54a3 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-030ddb5d-f92e-4bcf-8592-8211eb6b54a3 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-030ddb5d-f92e-4bcf-8592-8211eb6b54a3 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-030ddb5d-f92e-4bcf-8592-8211eb6b54a3 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-030ddb5d-f92e-4bcf-8592-8211eb6b54a3 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-030ddb5d-f92e-4bcf-8592-8211eb6b54a3 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-030ddb5d-f92e-4bcf-8592-8211eb6b54a3 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-030ddb5d-f92e-4bcf-8592-8211eb6b54a3 div.sk-estimator:hover {background-color: #d4ebff;}#sk-030ddb5d-f92e-4bcf-8592-8211eb6b54a3 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-030ddb5d-f92e-4bcf-8592-8211eb6b54a3 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-030ddb5d-f92e-4bcf-8592-8211eb6b54a3 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-030ddb5d-f92e-4bcf-8592-8211eb6b54a3 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-030ddb5d-f92e-4bcf-8592-8211eb6b54a3 div.sk-item {z-index: 1;}#sk-030ddb5d-f92e-4bcf-8592-8211eb6b54a3 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-030ddb5d-f92e-4bcf-8592-8211eb6b54a3 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-030ddb5d-f92e-4bcf-8592-8211eb6b54a3 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-030ddb5d-f92e-4bcf-8592-8211eb6b54a3 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-030ddb5d-f92e-4bcf-8592-8211eb6b54a3 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-030ddb5d-f92e-4bcf-8592-8211eb6b54a3 div.sk-parallel-item:only-child::after {width: 0;}#sk-030ddb5d-f92e-4bcf-8592-8211eb6b54a3 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-030ddb5d-f92e-4bcf-8592-8211eb6b54a3 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-030ddb5d-f92e-4bcf-8592-8211eb6b54a3 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-030ddb5d-f92e-4bcf-8592-8211eb6b54a3 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-030ddb5d-f92e-4bcf-8592-8211eb6b54a3 div.sk-text-repr-fallback {display: none;}</style><div id="sk-030ddb5d-f92e-4bcf-8592-8211eb6b54a3" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="aa9d5f2a-ce06-4648-a1e2-5772fe349b75" type="checkbox" ><label for="aa9d5f2a-ce06-4648-a1e2-5772fe349b75" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e9d05126-595b-4321-9fca-1a537ffbd4ff" type="checkbox" ><label for="e9d05126-595b-4321-9fca-1a537ffbd4ff" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0da8f055-881f-441e-b0ea-702437d34009" type="checkbox" ><label for="0da8f055-881f-441e-b0ea-702437d34009" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-fd620245-eeec-4c7e-8924-a7c3c27abc8b {color: black;background-color: white;}#sk-fd620245-eeec-4c7e-8924-a7c3c27abc8b pre{padding: 0;}#sk-fd620245-eeec-4c7e-8924-a7c3c27abc8b div.sk-toggleable {background-color: white;}#sk-fd620245-eeec-4c7e-8924-a7c3c27abc8b label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-fd620245-eeec-4c7e-8924-a7c3c27abc8b label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-fd620245-eeec-4c7e-8924-a7c3c27abc8b label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-fd620245-eeec-4c7e-8924-a7c3c27abc8b div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-fd620245-eeec-4c7e-8924-a7c3c27abc8b div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-fd620245-eeec-4c7e-8924-a7c3c27abc8b div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-fd620245-eeec-4c7e-8924-a7c3c27abc8b input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-fd620245-eeec-4c7e-8924-a7c3c27abc8b input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-fd620245-eeec-4c7e-8924-a7c3c27abc8b div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-fd620245-eeec-4c7e-8924-a7c3c27abc8b div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-fd620245-eeec-4c7e-8924-a7c3c27abc8b input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-fd620245-eeec-4c7e-8924-a7c3c27abc8b div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-fd620245-eeec-4c7e-8924-a7c3c27abc8b div.sk-estimator:hover {background-color: #d4ebff;}#sk-fd620245-eeec-4c7e-8924-a7c3c27abc8b div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-fd620245-eeec-4c7e-8924-a7c3c27abc8b div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-fd620245-eeec-4c7e-8924-a7c3c27abc8b div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-fd620245-eeec-4c7e-8924-a7c3c27abc8b div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-fd620245-eeec-4c7e-8924-a7c3c27abc8b div.sk-item {z-index: 1;}#sk-fd620245-eeec-4c7e-8924-a7c3c27abc8b div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-fd620245-eeec-4c7e-8924-a7c3c27abc8b div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-fd620245-eeec-4c7e-8924-a7c3c27abc8b div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-fd620245-eeec-4c7e-8924-a7c3c27abc8b div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-fd620245-eeec-4c7e-8924-a7c3c27abc8b div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-fd620245-eeec-4c7e-8924-a7c3c27abc8b div.sk-parallel-item:only-child::after {width: 0;}#sk-fd620245-eeec-4c7e-8924-a7c3c27abc8b div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-fd620245-eeec-4c7e-8924-a7c3c27abc8b div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-fd620245-eeec-4c7e-8924-a7c3c27abc8b div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-fd620245-eeec-4c7e-8924-a7c3c27abc8b div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-fd620245-eeec-4c7e-8924-a7c3c27abc8b div.sk-text-repr-fallback {display: none;}</style><div id="sk-fd620245-eeec-4c7e-8924-a7c3c27abc8b" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7c9e46c4-f73e-4bc7-94d1-135e7d3fdb3b" type="checkbox" ><label for="7c9e46c4-f73e-4bc7-94d1-135e7d3fdb3b" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cff78ecd-55bb-405e-b001-f91b36608b6d" type="checkbox" ><label for="cff78ecd-55bb-405e-b001-f91b36608b6d" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0833f2e2-a400-4f83-be7b-8c661183f7c0" type="checkbox" ><label for="0833f2e2-a400-4f83-be7b-8c661183f7c0" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6718838e-7b97-4b47-9d87-ae91a00cf3c5" type="checkbox" ><label for="6718838e-7b97-4b47-9d87-ae91a00cf3c5" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a5692c29-67ca-43c3-b0bf-5345702fbdbb" type="checkbox" ><label for="a5692c29-67ca-43c3-b0bf-5345702fbdbb" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="eb13737f-2c9e-4587-879b-eaa86f1f5732" type="checkbox" ><label for="eb13737f-2c9e-4587-879b-eaa86f1f5732" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fea324e1-b35d-4794-b207-aaa54291f600" type="checkbox" ><label for="fea324e1-b35d-4794-b207-aaa54291f600" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="14ce1f68-25c2-4ea5-8ff0-a7b6f0ef88c8" type="checkbox" ><label for="14ce1f68-25c2-4ea5-8ff0-a7b6f0ef88c8" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f80a9be1-4d90-4ee7-a5da-01a94c58b1dc" type="checkbox" ><label for="f80a9be1-4d90-4ee7-a5da-01a94c58b1dc" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-a6c5ecc1-d208-4e67-a9ef-39fc7a1abff6 {color: black;background-color: white;}#sk-a6c5ecc1-d208-4e67-a9ef-39fc7a1abff6 pre{padding: 0;}#sk-a6c5ecc1-d208-4e67-a9ef-39fc7a1abff6 div.sk-toggleable {background-color: white;}#sk-a6c5ecc1-d208-4e67-a9ef-39fc7a1abff6 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-a6c5ecc1-d208-4e67-a9ef-39fc7a1abff6 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-a6c5ecc1-d208-4e67-a9ef-39fc7a1abff6 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-a6c5ecc1-d208-4e67-a9ef-39fc7a1abff6 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-a6c5ecc1-d208-4e67-a9ef-39fc7a1abff6 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-a6c5ecc1-d208-4e67-a9ef-39fc7a1abff6 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-a6c5ecc1-d208-4e67-a9ef-39fc7a1abff6 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-a6c5ecc1-d208-4e67-a9ef-39fc7a1abff6 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-a6c5ecc1-d208-4e67-a9ef-39fc7a1abff6 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-a6c5ecc1-d208-4e67-a9ef-39fc7a1abff6 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-a6c5ecc1-d208-4e67-a9ef-39fc7a1abff6 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-a6c5ecc1-d208-4e67-a9ef-39fc7a1abff6 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-a6c5ecc1-d208-4e67-a9ef-39fc7a1abff6 div.sk-estimator:hover {background-color: #d4ebff;}#sk-a6c5ecc1-d208-4e67-a9ef-39fc7a1abff6 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-a6c5ecc1-d208-4e67-a9ef-39fc7a1abff6 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-a6c5ecc1-d208-4e67-a9ef-39fc7a1abff6 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-a6c5ecc1-d208-4e67-a9ef-39fc7a1abff6 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-a6c5ecc1-d208-4e67-a9ef-39fc7a1abff6 div.sk-item {z-index: 1;}#sk-a6c5ecc1-d208-4e67-a9ef-39fc7a1abff6 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-a6c5ecc1-d208-4e67-a9ef-39fc7a1abff6 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-a6c5ecc1-d208-4e67-a9ef-39fc7a1abff6 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-a6c5ecc1-d208-4e67-a9ef-39fc7a1abff6 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-a6c5ecc1-d208-4e67-a9ef-39fc7a1abff6 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-a6c5ecc1-d208-4e67-a9ef-39fc7a1abff6 div.sk-parallel-item:only-child::after {width: 0;}#sk-a6c5ecc1-d208-4e67-a9ef-39fc7a1abff6 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-a6c5ecc1-d208-4e67-a9ef-39fc7a1abff6 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-a6c5ecc1-d208-4e67-a9ef-39fc7a1abff6 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-a6c5ecc1-d208-4e67-a9ef-39fc7a1abff6 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-a6c5ecc1-d208-4e67-a9ef-39fc7a1abff6 div.sk-text-repr-fallback {display: none;}</style><div id="sk-a6c5ecc1-d208-4e67-a9ef-39fc7a1abff6" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5baa1cac-8f2e-4c29-bff0-ec6ce8030d1b" type="checkbox" ><label for="5baa1cac-8f2e-4c29-bff0-ec6ce8030d1b" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="71efb766-9d95-4730-9aba-bf77d7a1baec" type="checkbox" ><label for="71efb766-9d95-4730-9aba-bf77d7a1baec" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9d03d8a6-6076-49c5-afbe-11dc6058c171" type="checkbox" ><label for="9d03d8a6-6076-49c5-afbe-11dc6058c171" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ce1e33ee-813a-4f70-8bb5-2016ee23f7aa" type="checkbox" ><label for="ce1e33ee-813a-4f70-8bb5-2016ee23f7aa" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cf3a399a-d511-4140-ab67-58cbdfbb4531" type="checkbox" ><label for="cf3a399a-d511-4140-ab67-58cbdfbb4531" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="50e783af-fb28-4656-9912-b75feb153e48" type="checkbox" ><label for="50e783af-fb28-4656-9912-b75feb153e48" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d9395a25-76cc-435d-ae2e-99cf204fb75b" type="checkbox" ><label for="d9395a25-76cc-435d-ae2e-99cf204fb75b" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bb451af5-4040-47fb-bcad-e17ef1d2e900" type="checkbox" ><label for="bb451af5-4040-47fb-bcad-e17ef1d2e900" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="db0e67c1-d4e7-43f5-8107-937e3e2e87e9" type="checkbox" ><label for="db0e67c1-d4e7-43f5-8107-937e3e2e87e9" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.096 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
