
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-cd97e9f0-54ac-4b37-9805-e22e1bce2a60 {color: black;background-color: white;}#sk-cd97e9f0-54ac-4b37-9805-e22e1bce2a60 pre{padding: 0;}#sk-cd97e9f0-54ac-4b37-9805-e22e1bce2a60 div.sk-toggleable {background-color: white;}#sk-cd97e9f0-54ac-4b37-9805-e22e1bce2a60 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-cd97e9f0-54ac-4b37-9805-e22e1bce2a60 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-cd97e9f0-54ac-4b37-9805-e22e1bce2a60 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-cd97e9f0-54ac-4b37-9805-e22e1bce2a60 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-cd97e9f0-54ac-4b37-9805-e22e1bce2a60 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-cd97e9f0-54ac-4b37-9805-e22e1bce2a60 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-cd97e9f0-54ac-4b37-9805-e22e1bce2a60 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-cd97e9f0-54ac-4b37-9805-e22e1bce2a60 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-cd97e9f0-54ac-4b37-9805-e22e1bce2a60 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-cd97e9f0-54ac-4b37-9805-e22e1bce2a60 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-cd97e9f0-54ac-4b37-9805-e22e1bce2a60 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-cd97e9f0-54ac-4b37-9805-e22e1bce2a60 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-cd97e9f0-54ac-4b37-9805-e22e1bce2a60 div.sk-estimator:hover {background-color: #d4ebff;}#sk-cd97e9f0-54ac-4b37-9805-e22e1bce2a60 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-cd97e9f0-54ac-4b37-9805-e22e1bce2a60 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-cd97e9f0-54ac-4b37-9805-e22e1bce2a60 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-cd97e9f0-54ac-4b37-9805-e22e1bce2a60 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-cd97e9f0-54ac-4b37-9805-e22e1bce2a60 div.sk-item {z-index: 1;}#sk-cd97e9f0-54ac-4b37-9805-e22e1bce2a60 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-cd97e9f0-54ac-4b37-9805-e22e1bce2a60 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-cd97e9f0-54ac-4b37-9805-e22e1bce2a60 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-cd97e9f0-54ac-4b37-9805-e22e1bce2a60 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-cd97e9f0-54ac-4b37-9805-e22e1bce2a60 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-cd97e9f0-54ac-4b37-9805-e22e1bce2a60 div.sk-parallel-item:only-child::after {width: 0;}#sk-cd97e9f0-54ac-4b37-9805-e22e1bce2a60 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-cd97e9f0-54ac-4b37-9805-e22e1bce2a60 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-cd97e9f0-54ac-4b37-9805-e22e1bce2a60 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-cd97e9f0-54ac-4b37-9805-e22e1bce2a60 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-cd97e9f0-54ac-4b37-9805-e22e1bce2a60 div.sk-text-repr-fallback {display: none;}</style><div id="sk-cd97e9f0-54ac-4b37-9805-e22e1bce2a60" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3b95f0e5-a1c6-4b54-a2fa-df89f7684db2" type="checkbox" ><label for="3b95f0e5-a1c6-4b54-a2fa-df89f7684db2" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a0f8efab-8b58-47f1-bcff-640f5b484747" type="checkbox" ><label for="a0f8efab-8b58-47f1-bcff-640f5b484747" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4f184d08-a53d-4f09-90af-c0f844f310fb" type="checkbox" ><label for="4f184d08-a53d-4f09-90af-c0f844f310fb" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-797d607c-2f56-40e4-928b-b74701e52d9b {color: black;background-color: white;}#sk-797d607c-2f56-40e4-928b-b74701e52d9b pre{padding: 0;}#sk-797d607c-2f56-40e4-928b-b74701e52d9b div.sk-toggleable {background-color: white;}#sk-797d607c-2f56-40e4-928b-b74701e52d9b label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-797d607c-2f56-40e4-928b-b74701e52d9b label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-797d607c-2f56-40e4-928b-b74701e52d9b label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-797d607c-2f56-40e4-928b-b74701e52d9b div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-797d607c-2f56-40e4-928b-b74701e52d9b div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-797d607c-2f56-40e4-928b-b74701e52d9b div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-797d607c-2f56-40e4-928b-b74701e52d9b input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-797d607c-2f56-40e4-928b-b74701e52d9b input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-797d607c-2f56-40e4-928b-b74701e52d9b div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-797d607c-2f56-40e4-928b-b74701e52d9b div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-797d607c-2f56-40e4-928b-b74701e52d9b input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-797d607c-2f56-40e4-928b-b74701e52d9b div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-797d607c-2f56-40e4-928b-b74701e52d9b div.sk-estimator:hover {background-color: #d4ebff;}#sk-797d607c-2f56-40e4-928b-b74701e52d9b div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-797d607c-2f56-40e4-928b-b74701e52d9b div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-797d607c-2f56-40e4-928b-b74701e52d9b div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-797d607c-2f56-40e4-928b-b74701e52d9b div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-797d607c-2f56-40e4-928b-b74701e52d9b div.sk-item {z-index: 1;}#sk-797d607c-2f56-40e4-928b-b74701e52d9b div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-797d607c-2f56-40e4-928b-b74701e52d9b div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-797d607c-2f56-40e4-928b-b74701e52d9b div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-797d607c-2f56-40e4-928b-b74701e52d9b div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-797d607c-2f56-40e4-928b-b74701e52d9b div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-797d607c-2f56-40e4-928b-b74701e52d9b div.sk-parallel-item:only-child::after {width: 0;}#sk-797d607c-2f56-40e4-928b-b74701e52d9b div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-797d607c-2f56-40e4-928b-b74701e52d9b div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-797d607c-2f56-40e4-928b-b74701e52d9b div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-797d607c-2f56-40e4-928b-b74701e52d9b div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-797d607c-2f56-40e4-928b-b74701e52d9b div.sk-text-repr-fallback {display: none;}</style><div id="sk-797d607c-2f56-40e4-928b-b74701e52d9b" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2a05b89c-1330-4c52-8c32-e8659d21bfb1" type="checkbox" ><label for="2a05b89c-1330-4c52-8c32-e8659d21bfb1" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="26f1d83d-c013-432f-9fac-cca803f4fdd7" type="checkbox" ><label for="26f1d83d-c013-432f-9fac-cca803f4fdd7" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="08864dce-35cf-400e-a618-1b748caa9a0c" type="checkbox" ><label for="08864dce-35cf-400e-a618-1b748caa9a0c" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3a5b5b7c-a036-42a0-a8f6-2a83ba34422e" type="checkbox" ><label for="3a5b5b7c-a036-42a0-a8f6-2a83ba34422e" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-eedf68f2-1d7c-4df0-ae0a-3efa33277715 {color: black;background-color: white;}#sk-eedf68f2-1d7c-4df0-ae0a-3efa33277715 pre{padding: 0;}#sk-eedf68f2-1d7c-4df0-ae0a-3efa33277715 div.sk-toggleable {background-color: white;}#sk-eedf68f2-1d7c-4df0-ae0a-3efa33277715 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-eedf68f2-1d7c-4df0-ae0a-3efa33277715 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-eedf68f2-1d7c-4df0-ae0a-3efa33277715 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-eedf68f2-1d7c-4df0-ae0a-3efa33277715 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-eedf68f2-1d7c-4df0-ae0a-3efa33277715 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-eedf68f2-1d7c-4df0-ae0a-3efa33277715 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-eedf68f2-1d7c-4df0-ae0a-3efa33277715 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-eedf68f2-1d7c-4df0-ae0a-3efa33277715 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-eedf68f2-1d7c-4df0-ae0a-3efa33277715 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-eedf68f2-1d7c-4df0-ae0a-3efa33277715 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-eedf68f2-1d7c-4df0-ae0a-3efa33277715 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-eedf68f2-1d7c-4df0-ae0a-3efa33277715 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-eedf68f2-1d7c-4df0-ae0a-3efa33277715 div.sk-estimator:hover {background-color: #d4ebff;}#sk-eedf68f2-1d7c-4df0-ae0a-3efa33277715 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-eedf68f2-1d7c-4df0-ae0a-3efa33277715 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-eedf68f2-1d7c-4df0-ae0a-3efa33277715 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-eedf68f2-1d7c-4df0-ae0a-3efa33277715 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-eedf68f2-1d7c-4df0-ae0a-3efa33277715 div.sk-item {z-index: 1;}#sk-eedf68f2-1d7c-4df0-ae0a-3efa33277715 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-eedf68f2-1d7c-4df0-ae0a-3efa33277715 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-eedf68f2-1d7c-4df0-ae0a-3efa33277715 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-eedf68f2-1d7c-4df0-ae0a-3efa33277715 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-eedf68f2-1d7c-4df0-ae0a-3efa33277715 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-eedf68f2-1d7c-4df0-ae0a-3efa33277715 div.sk-parallel-item:only-child::after {width: 0;}#sk-eedf68f2-1d7c-4df0-ae0a-3efa33277715 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-eedf68f2-1d7c-4df0-ae0a-3efa33277715 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-eedf68f2-1d7c-4df0-ae0a-3efa33277715 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-eedf68f2-1d7c-4df0-ae0a-3efa33277715 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-eedf68f2-1d7c-4df0-ae0a-3efa33277715 div.sk-text-repr-fallback {display: none;}</style><div id="sk-eedf68f2-1d7c-4df0-ae0a-3efa33277715" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fb86dc45-abc0-4449-ad8c-0b39ab805076" type="checkbox" ><label for="fb86dc45-abc0-4449-ad8c-0b39ab805076" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0dbfc079-10ff-4f2b-aa61-c253929b975e" type="checkbox" ><label for="0dbfc079-10ff-4f2b-aa61-c253929b975e" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="891f4615-feda-441a-833b-9af38bcb7de6" type="checkbox" ><label for="891f4615-feda-441a-833b-9af38bcb7de6" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-21de7a22-38dd-4919-a29c-60662319ec27 {color: black;background-color: white;}#sk-21de7a22-38dd-4919-a29c-60662319ec27 pre{padding: 0;}#sk-21de7a22-38dd-4919-a29c-60662319ec27 div.sk-toggleable {background-color: white;}#sk-21de7a22-38dd-4919-a29c-60662319ec27 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-21de7a22-38dd-4919-a29c-60662319ec27 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-21de7a22-38dd-4919-a29c-60662319ec27 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-21de7a22-38dd-4919-a29c-60662319ec27 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-21de7a22-38dd-4919-a29c-60662319ec27 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-21de7a22-38dd-4919-a29c-60662319ec27 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-21de7a22-38dd-4919-a29c-60662319ec27 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-21de7a22-38dd-4919-a29c-60662319ec27 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-21de7a22-38dd-4919-a29c-60662319ec27 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-21de7a22-38dd-4919-a29c-60662319ec27 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-21de7a22-38dd-4919-a29c-60662319ec27 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-21de7a22-38dd-4919-a29c-60662319ec27 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-21de7a22-38dd-4919-a29c-60662319ec27 div.sk-estimator:hover {background-color: #d4ebff;}#sk-21de7a22-38dd-4919-a29c-60662319ec27 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-21de7a22-38dd-4919-a29c-60662319ec27 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-21de7a22-38dd-4919-a29c-60662319ec27 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-21de7a22-38dd-4919-a29c-60662319ec27 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-21de7a22-38dd-4919-a29c-60662319ec27 div.sk-item {z-index: 1;}#sk-21de7a22-38dd-4919-a29c-60662319ec27 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-21de7a22-38dd-4919-a29c-60662319ec27 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-21de7a22-38dd-4919-a29c-60662319ec27 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-21de7a22-38dd-4919-a29c-60662319ec27 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-21de7a22-38dd-4919-a29c-60662319ec27 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-21de7a22-38dd-4919-a29c-60662319ec27 div.sk-parallel-item:only-child::after {width: 0;}#sk-21de7a22-38dd-4919-a29c-60662319ec27 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-21de7a22-38dd-4919-a29c-60662319ec27 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-21de7a22-38dd-4919-a29c-60662319ec27 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-21de7a22-38dd-4919-a29c-60662319ec27 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-21de7a22-38dd-4919-a29c-60662319ec27 div.sk-text-repr-fallback {display: none;}</style><div id="sk-21de7a22-38dd-4919-a29c-60662319ec27" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8b1b1914-cdbf-4b3f-80a8-3d0df097b621" type="checkbox" ><label for="8b1b1914-cdbf-4b3f-80a8-3d0df097b621" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="064e65f7-430a-442a-a8a7-d77480c5c321" type="checkbox" ><label for="064e65f7-430a-442a-a8a7-d77480c5c321" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="657f7125-0659-48f9-ba1e-397b982b6ebb" type="checkbox" ><label for="657f7125-0659-48f9-ba1e-397b982b6ebb" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2c04bbb2-3c24-4fac-b367-e612603a9a83" type="checkbox" ><label for="2c04bbb2-3c24-4fac-b367-e612603a9a83" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a8240891-2efc-44a2-ac34-96314cd9edcb" type="checkbox" ><label for="a8240891-2efc-44a2-ac34-96314cd9edcb" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a90f5cb9-688b-427d-91c0-70136c229007" type="checkbox" ><label for="a90f5cb9-688b-427d-91c0-70136c229007" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2edd6602-c057-4c4b-a42a-00d17d2a207b" type="checkbox" ><label for="2edd6602-c057-4c4b-a42a-00d17d2a207b" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e23f8940-70b3-41e2-a03a-e68898e8208a" type="checkbox" ><label for="e23f8940-70b3-41e2-a03a-e68898e8208a" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8e112a3b-5693-4059-b14d-95277171048b" type="checkbox" ><label for="8e112a3b-5693-4059-b14d-95277171048b" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-ff7d9642-91ae-4b6b-8b22-8cabe4ab730f {color: black;background-color: white;}#sk-ff7d9642-91ae-4b6b-8b22-8cabe4ab730f pre{padding: 0;}#sk-ff7d9642-91ae-4b6b-8b22-8cabe4ab730f div.sk-toggleable {background-color: white;}#sk-ff7d9642-91ae-4b6b-8b22-8cabe4ab730f label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-ff7d9642-91ae-4b6b-8b22-8cabe4ab730f label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-ff7d9642-91ae-4b6b-8b22-8cabe4ab730f label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-ff7d9642-91ae-4b6b-8b22-8cabe4ab730f div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-ff7d9642-91ae-4b6b-8b22-8cabe4ab730f div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-ff7d9642-91ae-4b6b-8b22-8cabe4ab730f div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-ff7d9642-91ae-4b6b-8b22-8cabe4ab730f input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-ff7d9642-91ae-4b6b-8b22-8cabe4ab730f input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-ff7d9642-91ae-4b6b-8b22-8cabe4ab730f div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ff7d9642-91ae-4b6b-8b22-8cabe4ab730f div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ff7d9642-91ae-4b6b-8b22-8cabe4ab730f input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-ff7d9642-91ae-4b6b-8b22-8cabe4ab730f div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-ff7d9642-91ae-4b6b-8b22-8cabe4ab730f div.sk-estimator:hover {background-color: #d4ebff;}#sk-ff7d9642-91ae-4b6b-8b22-8cabe4ab730f div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-ff7d9642-91ae-4b6b-8b22-8cabe4ab730f div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-ff7d9642-91ae-4b6b-8b22-8cabe4ab730f div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ff7d9642-91ae-4b6b-8b22-8cabe4ab730f div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-ff7d9642-91ae-4b6b-8b22-8cabe4ab730f div.sk-item {z-index: 1;}#sk-ff7d9642-91ae-4b6b-8b22-8cabe4ab730f div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-ff7d9642-91ae-4b6b-8b22-8cabe4ab730f div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ff7d9642-91ae-4b6b-8b22-8cabe4ab730f div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-ff7d9642-91ae-4b6b-8b22-8cabe4ab730f div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-ff7d9642-91ae-4b6b-8b22-8cabe4ab730f div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-ff7d9642-91ae-4b6b-8b22-8cabe4ab730f div.sk-parallel-item:only-child::after {width: 0;}#sk-ff7d9642-91ae-4b6b-8b22-8cabe4ab730f div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-ff7d9642-91ae-4b6b-8b22-8cabe4ab730f div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-ff7d9642-91ae-4b6b-8b22-8cabe4ab730f div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-ff7d9642-91ae-4b6b-8b22-8cabe4ab730f div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-ff7d9642-91ae-4b6b-8b22-8cabe4ab730f div.sk-text-repr-fallback {display: none;}</style><div id="sk-ff7d9642-91ae-4b6b-8b22-8cabe4ab730f" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6579dd56-6fb2-4d6a-9179-437a0bd96f5b" type="checkbox" ><label for="6579dd56-6fb2-4d6a-9179-437a0bd96f5b" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="92fead9b-abd0-4f87-abdb-2894b0d61821" type="checkbox" ><label for="92fead9b-abd0-4f87-abdb-2894b0d61821" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7473dd74-4c3a-41fb-b24a-79a069ed33c7" type="checkbox" ><label for="7473dd74-4c3a-41fb-b24a-79a069ed33c7" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4d6852c7-ee16-4bb2-8cd0-486f49b89147" type="checkbox" ><label for="4d6852c7-ee16-4bb2-8cd0-486f49b89147" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f1a46fe4-86c5-4360-b4da-5d8011b6c6ac" type="checkbox" ><label for="f1a46fe4-86c5-4360-b4da-5d8011b6c6ac" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="02817af6-22c8-4662-9108-f4d2ada5c16f" type="checkbox" ><label for="02817af6-22c8-4662-9108-f4d2ada5c16f" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ead55837-10c1-438f-bd24-dc366aa3e41e" type="checkbox" ><label for="ead55837-10c1-438f-bd24-dc366aa3e41e" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="76236dea-244d-4e2c-9423-6fb284ca0578" type="checkbox" ><label for="76236dea-244d-4e2c-9423-6fb284ca0578" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8fd695ff-6e17-4b37-a84d-5aa98c2139bc" type="checkbox" ><label for="8fd695ff-6e17-4b37-a84d-5aa98c2139bc" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.073 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
