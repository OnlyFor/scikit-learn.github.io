
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-ca67b08d-dc4e-49c1-bdfa-ab1121f63300 {color: black;background-color: white;}#sk-ca67b08d-dc4e-49c1-bdfa-ab1121f63300 pre{padding: 0;}#sk-ca67b08d-dc4e-49c1-bdfa-ab1121f63300 div.sk-toggleable {background-color: white;}#sk-ca67b08d-dc4e-49c1-bdfa-ab1121f63300 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-ca67b08d-dc4e-49c1-bdfa-ab1121f63300 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-ca67b08d-dc4e-49c1-bdfa-ab1121f63300 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-ca67b08d-dc4e-49c1-bdfa-ab1121f63300 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-ca67b08d-dc4e-49c1-bdfa-ab1121f63300 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-ca67b08d-dc4e-49c1-bdfa-ab1121f63300 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-ca67b08d-dc4e-49c1-bdfa-ab1121f63300 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-ca67b08d-dc4e-49c1-bdfa-ab1121f63300 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-ca67b08d-dc4e-49c1-bdfa-ab1121f63300 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ca67b08d-dc4e-49c1-bdfa-ab1121f63300 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ca67b08d-dc4e-49c1-bdfa-ab1121f63300 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-ca67b08d-dc4e-49c1-bdfa-ab1121f63300 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-ca67b08d-dc4e-49c1-bdfa-ab1121f63300 div.sk-estimator:hover {background-color: #d4ebff;}#sk-ca67b08d-dc4e-49c1-bdfa-ab1121f63300 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-ca67b08d-dc4e-49c1-bdfa-ab1121f63300 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-ca67b08d-dc4e-49c1-bdfa-ab1121f63300 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ca67b08d-dc4e-49c1-bdfa-ab1121f63300 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-ca67b08d-dc4e-49c1-bdfa-ab1121f63300 div.sk-item {z-index: 1;}#sk-ca67b08d-dc4e-49c1-bdfa-ab1121f63300 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-ca67b08d-dc4e-49c1-bdfa-ab1121f63300 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ca67b08d-dc4e-49c1-bdfa-ab1121f63300 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-ca67b08d-dc4e-49c1-bdfa-ab1121f63300 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-ca67b08d-dc4e-49c1-bdfa-ab1121f63300 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-ca67b08d-dc4e-49c1-bdfa-ab1121f63300 div.sk-parallel-item:only-child::after {width: 0;}#sk-ca67b08d-dc4e-49c1-bdfa-ab1121f63300 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-ca67b08d-dc4e-49c1-bdfa-ab1121f63300 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-ca67b08d-dc4e-49c1-bdfa-ab1121f63300 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-ca67b08d-dc4e-49c1-bdfa-ab1121f63300 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-ca67b08d-dc4e-49c1-bdfa-ab1121f63300 div.sk-text-repr-fallback {display: none;}</style><div id="sk-ca67b08d-dc4e-49c1-bdfa-ab1121f63300" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d5386b50-0a98-4f2e-9187-737fff8a49f1" type="checkbox" ><label for="d5386b50-0a98-4f2e-9187-737fff8a49f1" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2e85408e-82ec-4d99-9385-ede8f1acdea7" type="checkbox" ><label for="2e85408e-82ec-4d99-9385-ede8f1acdea7" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c16ff29f-b163-4fec-b973-92b17aa6bf7e" type="checkbox" ><label for="c16ff29f-b163-4fec-b973-92b17aa6bf7e" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-4c38681d-5a74-4559-a242-46a2affc0834 {color: black;background-color: white;}#sk-4c38681d-5a74-4559-a242-46a2affc0834 pre{padding: 0;}#sk-4c38681d-5a74-4559-a242-46a2affc0834 div.sk-toggleable {background-color: white;}#sk-4c38681d-5a74-4559-a242-46a2affc0834 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-4c38681d-5a74-4559-a242-46a2affc0834 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-4c38681d-5a74-4559-a242-46a2affc0834 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-4c38681d-5a74-4559-a242-46a2affc0834 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-4c38681d-5a74-4559-a242-46a2affc0834 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-4c38681d-5a74-4559-a242-46a2affc0834 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-4c38681d-5a74-4559-a242-46a2affc0834 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-4c38681d-5a74-4559-a242-46a2affc0834 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-4c38681d-5a74-4559-a242-46a2affc0834 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-4c38681d-5a74-4559-a242-46a2affc0834 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-4c38681d-5a74-4559-a242-46a2affc0834 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-4c38681d-5a74-4559-a242-46a2affc0834 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-4c38681d-5a74-4559-a242-46a2affc0834 div.sk-estimator:hover {background-color: #d4ebff;}#sk-4c38681d-5a74-4559-a242-46a2affc0834 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-4c38681d-5a74-4559-a242-46a2affc0834 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-4c38681d-5a74-4559-a242-46a2affc0834 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-4c38681d-5a74-4559-a242-46a2affc0834 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-4c38681d-5a74-4559-a242-46a2affc0834 div.sk-item {z-index: 1;}#sk-4c38681d-5a74-4559-a242-46a2affc0834 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-4c38681d-5a74-4559-a242-46a2affc0834 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-4c38681d-5a74-4559-a242-46a2affc0834 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-4c38681d-5a74-4559-a242-46a2affc0834 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-4c38681d-5a74-4559-a242-46a2affc0834 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-4c38681d-5a74-4559-a242-46a2affc0834 div.sk-parallel-item:only-child::after {width: 0;}#sk-4c38681d-5a74-4559-a242-46a2affc0834 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-4c38681d-5a74-4559-a242-46a2affc0834 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-4c38681d-5a74-4559-a242-46a2affc0834 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-4c38681d-5a74-4559-a242-46a2affc0834 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-4c38681d-5a74-4559-a242-46a2affc0834 div.sk-text-repr-fallback {display: none;}</style><div id="sk-4c38681d-5a74-4559-a242-46a2affc0834" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="42ffe011-a64a-41ef-acc0-1d68bda2512b" type="checkbox" ><label for="42ffe011-a64a-41ef-acc0-1d68bda2512b" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d4eb77a1-34f4-43e3-a574-c3ed6d51158a" type="checkbox" ><label for="d4eb77a1-34f4-43e3-a574-c3ed6d51158a" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a11e617f-01b6-4c14-a2df-9a7fad2fb8a5" type="checkbox" ><label for="a11e617f-01b6-4c14-a2df-9a7fad2fb8a5" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d6017a68-61cc-4465-a9ea-12c65c6214a9" type="checkbox" ><label for="d6017a68-61cc-4465-a9ea-12c65c6214a9" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-822d1ad6-c5a1-429e-84c3-77bbcbb78078 {color: black;background-color: white;}#sk-822d1ad6-c5a1-429e-84c3-77bbcbb78078 pre{padding: 0;}#sk-822d1ad6-c5a1-429e-84c3-77bbcbb78078 div.sk-toggleable {background-color: white;}#sk-822d1ad6-c5a1-429e-84c3-77bbcbb78078 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-822d1ad6-c5a1-429e-84c3-77bbcbb78078 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-822d1ad6-c5a1-429e-84c3-77bbcbb78078 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-822d1ad6-c5a1-429e-84c3-77bbcbb78078 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-822d1ad6-c5a1-429e-84c3-77bbcbb78078 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-822d1ad6-c5a1-429e-84c3-77bbcbb78078 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-822d1ad6-c5a1-429e-84c3-77bbcbb78078 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-822d1ad6-c5a1-429e-84c3-77bbcbb78078 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-822d1ad6-c5a1-429e-84c3-77bbcbb78078 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-822d1ad6-c5a1-429e-84c3-77bbcbb78078 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-822d1ad6-c5a1-429e-84c3-77bbcbb78078 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-822d1ad6-c5a1-429e-84c3-77bbcbb78078 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-822d1ad6-c5a1-429e-84c3-77bbcbb78078 div.sk-estimator:hover {background-color: #d4ebff;}#sk-822d1ad6-c5a1-429e-84c3-77bbcbb78078 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-822d1ad6-c5a1-429e-84c3-77bbcbb78078 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-822d1ad6-c5a1-429e-84c3-77bbcbb78078 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-822d1ad6-c5a1-429e-84c3-77bbcbb78078 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-822d1ad6-c5a1-429e-84c3-77bbcbb78078 div.sk-item {z-index: 1;}#sk-822d1ad6-c5a1-429e-84c3-77bbcbb78078 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-822d1ad6-c5a1-429e-84c3-77bbcbb78078 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-822d1ad6-c5a1-429e-84c3-77bbcbb78078 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-822d1ad6-c5a1-429e-84c3-77bbcbb78078 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-822d1ad6-c5a1-429e-84c3-77bbcbb78078 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-822d1ad6-c5a1-429e-84c3-77bbcbb78078 div.sk-parallel-item:only-child::after {width: 0;}#sk-822d1ad6-c5a1-429e-84c3-77bbcbb78078 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-822d1ad6-c5a1-429e-84c3-77bbcbb78078 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-822d1ad6-c5a1-429e-84c3-77bbcbb78078 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-822d1ad6-c5a1-429e-84c3-77bbcbb78078 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-822d1ad6-c5a1-429e-84c3-77bbcbb78078 div.sk-text-repr-fallback {display: none;}</style><div id="sk-822d1ad6-c5a1-429e-84c3-77bbcbb78078" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6768926e-19ae-40b7-9586-1433659599d2" type="checkbox" ><label for="6768926e-19ae-40b7-9586-1433659599d2" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="76b38fca-0c78-4bdb-9174-0ed8ff385ecd" type="checkbox" ><label for="76b38fca-0c78-4bdb-9174-0ed8ff385ecd" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1c302c17-919e-4ed4-8297-4ac4e76976ec" type="checkbox" ><label for="1c302c17-919e-4ed4-8297-4ac4e76976ec" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-033b7d61-e320-4ac4-80fb-ce034ad64cd2 {color: black;background-color: white;}#sk-033b7d61-e320-4ac4-80fb-ce034ad64cd2 pre{padding: 0;}#sk-033b7d61-e320-4ac4-80fb-ce034ad64cd2 div.sk-toggleable {background-color: white;}#sk-033b7d61-e320-4ac4-80fb-ce034ad64cd2 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-033b7d61-e320-4ac4-80fb-ce034ad64cd2 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-033b7d61-e320-4ac4-80fb-ce034ad64cd2 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-033b7d61-e320-4ac4-80fb-ce034ad64cd2 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-033b7d61-e320-4ac4-80fb-ce034ad64cd2 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-033b7d61-e320-4ac4-80fb-ce034ad64cd2 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-033b7d61-e320-4ac4-80fb-ce034ad64cd2 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-033b7d61-e320-4ac4-80fb-ce034ad64cd2 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-033b7d61-e320-4ac4-80fb-ce034ad64cd2 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-033b7d61-e320-4ac4-80fb-ce034ad64cd2 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-033b7d61-e320-4ac4-80fb-ce034ad64cd2 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-033b7d61-e320-4ac4-80fb-ce034ad64cd2 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-033b7d61-e320-4ac4-80fb-ce034ad64cd2 div.sk-estimator:hover {background-color: #d4ebff;}#sk-033b7d61-e320-4ac4-80fb-ce034ad64cd2 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-033b7d61-e320-4ac4-80fb-ce034ad64cd2 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-033b7d61-e320-4ac4-80fb-ce034ad64cd2 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-033b7d61-e320-4ac4-80fb-ce034ad64cd2 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-033b7d61-e320-4ac4-80fb-ce034ad64cd2 div.sk-item {z-index: 1;}#sk-033b7d61-e320-4ac4-80fb-ce034ad64cd2 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-033b7d61-e320-4ac4-80fb-ce034ad64cd2 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-033b7d61-e320-4ac4-80fb-ce034ad64cd2 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-033b7d61-e320-4ac4-80fb-ce034ad64cd2 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-033b7d61-e320-4ac4-80fb-ce034ad64cd2 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-033b7d61-e320-4ac4-80fb-ce034ad64cd2 div.sk-parallel-item:only-child::after {width: 0;}#sk-033b7d61-e320-4ac4-80fb-ce034ad64cd2 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-033b7d61-e320-4ac4-80fb-ce034ad64cd2 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-033b7d61-e320-4ac4-80fb-ce034ad64cd2 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-033b7d61-e320-4ac4-80fb-ce034ad64cd2 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-033b7d61-e320-4ac4-80fb-ce034ad64cd2 div.sk-text-repr-fallback {display: none;}</style><div id="sk-033b7d61-e320-4ac4-80fb-ce034ad64cd2" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5cbec446-c2ac-4295-bc55-cbfaab15048d" type="checkbox" ><label for="5cbec446-c2ac-4295-bc55-cbfaab15048d" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6b7edb66-7557-492c-8d8e-af9b3eee0074" type="checkbox" ><label for="6b7edb66-7557-492c-8d8e-af9b3eee0074" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5ae8f644-6058-43dd-bf9c-f614942d33a6" type="checkbox" ><label for="5ae8f644-6058-43dd-bf9c-f614942d33a6" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cdb45007-1a3d-4742-a4d3-5ec673ec2f1c" type="checkbox" ><label for="cdb45007-1a3d-4742-a4d3-5ec673ec2f1c" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e72be346-e32c-448a-8c8e-98d423e3dd82" type="checkbox" ><label for="e72be346-e32c-448a-8c8e-98d423e3dd82" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="83133f85-e95e-44a4-8e9b-d1c2505b2055" type="checkbox" ><label for="83133f85-e95e-44a4-8e9b-d1c2505b2055" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2be9d6cc-7fc1-4dac-86b5-f0d12ac89c9c" type="checkbox" ><label for="2be9d6cc-7fc1-4dac-86b5-f0d12ac89c9c" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4b884358-b30b-487e-8654-55c8dc94c3c4" type="checkbox" ><label for="4b884358-b30b-487e-8654-55c8dc94c3c4" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="dd5cf909-5267-4eeb-91c1-31e32d40ef85" type="checkbox" ><label for="dd5cf909-5267-4eeb-91c1-31e32d40ef85" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-fd3b8d7f-0767-49fa-b8da-d5b2df5ee55c {color: black;background-color: white;}#sk-fd3b8d7f-0767-49fa-b8da-d5b2df5ee55c pre{padding: 0;}#sk-fd3b8d7f-0767-49fa-b8da-d5b2df5ee55c div.sk-toggleable {background-color: white;}#sk-fd3b8d7f-0767-49fa-b8da-d5b2df5ee55c label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-fd3b8d7f-0767-49fa-b8da-d5b2df5ee55c label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-fd3b8d7f-0767-49fa-b8da-d5b2df5ee55c label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-fd3b8d7f-0767-49fa-b8da-d5b2df5ee55c div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-fd3b8d7f-0767-49fa-b8da-d5b2df5ee55c div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-fd3b8d7f-0767-49fa-b8da-d5b2df5ee55c div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-fd3b8d7f-0767-49fa-b8da-d5b2df5ee55c input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-fd3b8d7f-0767-49fa-b8da-d5b2df5ee55c input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-fd3b8d7f-0767-49fa-b8da-d5b2df5ee55c div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-fd3b8d7f-0767-49fa-b8da-d5b2df5ee55c div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-fd3b8d7f-0767-49fa-b8da-d5b2df5ee55c input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-fd3b8d7f-0767-49fa-b8da-d5b2df5ee55c div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-fd3b8d7f-0767-49fa-b8da-d5b2df5ee55c div.sk-estimator:hover {background-color: #d4ebff;}#sk-fd3b8d7f-0767-49fa-b8da-d5b2df5ee55c div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-fd3b8d7f-0767-49fa-b8da-d5b2df5ee55c div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-fd3b8d7f-0767-49fa-b8da-d5b2df5ee55c div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-fd3b8d7f-0767-49fa-b8da-d5b2df5ee55c div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-fd3b8d7f-0767-49fa-b8da-d5b2df5ee55c div.sk-item {z-index: 1;}#sk-fd3b8d7f-0767-49fa-b8da-d5b2df5ee55c div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-fd3b8d7f-0767-49fa-b8da-d5b2df5ee55c div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-fd3b8d7f-0767-49fa-b8da-d5b2df5ee55c div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-fd3b8d7f-0767-49fa-b8da-d5b2df5ee55c div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-fd3b8d7f-0767-49fa-b8da-d5b2df5ee55c div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-fd3b8d7f-0767-49fa-b8da-d5b2df5ee55c div.sk-parallel-item:only-child::after {width: 0;}#sk-fd3b8d7f-0767-49fa-b8da-d5b2df5ee55c div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-fd3b8d7f-0767-49fa-b8da-d5b2df5ee55c div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-fd3b8d7f-0767-49fa-b8da-d5b2df5ee55c div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-fd3b8d7f-0767-49fa-b8da-d5b2df5ee55c div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-fd3b8d7f-0767-49fa-b8da-d5b2df5ee55c div.sk-text-repr-fallback {display: none;}</style><div id="sk-fd3b8d7f-0767-49fa-b8da-d5b2df5ee55c" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5fcb0ac3-c715-48f2-b9bf-53402e4d283c" type="checkbox" ><label for="5fcb0ac3-c715-48f2-b9bf-53402e4d283c" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4886834c-b6df-4a09-9661-3b2fc3d14b57" type="checkbox" ><label for="4886834c-b6df-4a09-9661-3b2fc3d14b57" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bddecce3-d733-45c8-bed3-a100b82a0270" type="checkbox" ><label for="bddecce3-d733-45c8-bed3-a100b82a0270" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1e845c52-bf36-4415-8a54-dbe76e28bf82" type="checkbox" ><label for="1e845c52-bf36-4415-8a54-dbe76e28bf82" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c6d88c94-db02-4e34-aea8-0e650300f2df" type="checkbox" ><label for="c6d88c94-db02-4e34-aea8-0e650300f2df" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0b1a235c-0a1e-41aa-be9b-0d4c94e2daf5" type="checkbox" ><label for="0b1a235c-0a1e-41aa-be9b-0d4c94e2daf5" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="aad8b4a8-ef0b-4204-9c1a-ee40db8f4e22" type="checkbox" ><label for="aad8b4a8-ef0b-4204-9c1a-ee40db8f4e22" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="57a916f2-305a-4024-b16f-543dc399f4a6" type="checkbox" ><label for="57a916f2-305a-4024-b16f-543dc399f4a6" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9902619a-3159-4ca9-b801-706635f5bf06" type="checkbox" ><label for="9902619a-3159-4ca9-b801-706635f5bf06" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.071 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
