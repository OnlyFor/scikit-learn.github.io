
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-b15ff497-fb5c-4ddb-98bd-55a9c2721e79 {color: black;background-color: white;}#sk-b15ff497-fb5c-4ddb-98bd-55a9c2721e79 pre{padding: 0;}#sk-b15ff497-fb5c-4ddb-98bd-55a9c2721e79 div.sk-toggleable {background-color: white;}#sk-b15ff497-fb5c-4ddb-98bd-55a9c2721e79 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-b15ff497-fb5c-4ddb-98bd-55a9c2721e79 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-b15ff497-fb5c-4ddb-98bd-55a9c2721e79 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-b15ff497-fb5c-4ddb-98bd-55a9c2721e79 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-b15ff497-fb5c-4ddb-98bd-55a9c2721e79 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-b15ff497-fb5c-4ddb-98bd-55a9c2721e79 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-b15ff497-fb5c-4ddb-98bd-55a9c2721e79 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-b15ff497-fb5c-4ddb-98bd-55a9c2721e79 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-b15ff497-fb5c-4ddb-98bd-55a9c2721e79 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b15ff497-fb5c-4ddb-98bd-55a9c2721e79 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b15ff497-fb5c-4ddb-98bd-55a9c2721e79 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-b15ff497-fb5c-4ddb-98bd-55a9c2721e79 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-b15ff497-fb5c-4ddb-98bd-55a9c2721e79 div.sk-estimator:hover {background-color: #d4ebff;}#sk-b15ff497-fb5c-4ddb-98bd-55a9c2721e79 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-b15ff497-fb5c-4ddb-98bd-55a9c2721e79 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-b15ff497-fb5c-4ddb-98bd-55a9c2721e79 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b15ff497-fb5c-4ddb-98bd-55a9c2721e79 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-b15ff497-fb5c-4ddb-98bd-55a9c2721e79 div.sk-item {z-index: 1;}#sk-b15ff497-fb5c-4ddb-98bd-55a9c2721e79 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-b15ff497-fb5c-4ddb-98bd-55a9c2721e79 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b15ff497-fb5c-4ddb-98bd-55a9c2721e79 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-b15ff497-fb5c-4ddb-98bd-55a9c2721e79 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-b15ff497-fb5c-4ddb-98bd-55a9c2721e79 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-b15ff497-fb5c-4ddb-98bd-55a9c2721e79 div.sk-parallel-item:only-child::after {width: 0;}#sk-b15ff497-fb5c-4ddb-98bd-55a9c2721e79 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-b15ff497-fb5c-4ddb-98bd-55a9c2721e79 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-b15ff497-fb5c-4ddb-98bd-55a9c2721e79 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-b15ff497-fb5c-4ddb-98bd-55a9c2721e79 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-b15ff497-fb5c-4ddb-98bd-55a9c2721e79 div.sk-text-repr-fallback {display: none;}</style><div id="sk-b15ff497-fb5c-4ddb-98bd-55a9c2721e79" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b2a7e47a-6ba1-4bef-b2b8-d4325078b93f" type="checkbox" ><label for="b2a7e47a-6ba1-4bef-b2b8-d4325078b93f" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0ed1c803-b5fa-4b5f-8bbf-de864c1dc2a4" type="checkbox" ><label for="0ed1c803-b5fa-4b5f-8bbf-de864c1dc2a4" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3d8ba6cc-a5b5-412d-ab4f-d4dec1d26afc" type="checkbox" ><label for="3d8ba6cc-a5b5-412d-ab4f-d4dec1d26afc" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-fec4e6cc-6719-4a4d-b642-4beb149b4d8a {color: black;background-color: white;}#sk-fec4e6cc-6719-4a4d-b642-4beb149b4d8a pre{padding: 0;}#sk-fec4e6cc-6719-4a4d-b642-4beb149b4d8a div.sk-toggleable {background-color: white;}#sk-fec4e6cc-6719-4a4d-b642-4beb149b4d8a label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-fec4e6cc-6719-4a4d-b642-4beb149b4d8a label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-fec4e6cc-6719-4a4d-b642-4beb149b4d8a label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-fec4e6cc-6719-4a4d-b642-4beb149b4d8a div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-fec4e6cc-6719-4a4d-b642-4beb149b4d8a div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-fec4e6cc-6719-4a4d-b642-4beb149b4d8a div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-fec4e6cc-6719-4a4d-b642-4beb149b4d8a input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-fec4e6cc-6719-4a4d-b642-4beb149b4d8a input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-fec4e6cc-6719-4a4d-b642-4beb149b4d8a div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-fec4e6cc-6719-4a4d-b642-4beb149b4d8a div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-fec4e6cc-6719-4a4d-b642-4beb149b4d8a input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-fec4e6cc-6719-4a4d-b642-4beb149b4d8a div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-fec4e6cc-6719-4a4d-b642-4beb149b4d8a div.sk-estimator:hover {background-color: #d4ebff;}#sk-fec4e6cc-6719-4a4d-b642-4beb149b4d8a div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-fec4e6cc-6719-4a4d-b642-4beb149b4d8a div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-fec4e6cc-6719-4a4d-b642-4beb149b4d8a div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-fec4e6cc-6719-4a4d-b642-4beb149b4d8a div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-fec4e6cc-6719-4a4d-b642-4beb149b4d8a div.sk-item {z-index: 1;}#sk-fec4e6cc-6719-4a4d-b642-4beb149b4d8a div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-fec4e6cc-6719-4a4d-b642-4beb149b4d8a div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-fec4e6cc-6719-4a4d-b642-4beb149b4d8a div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-fec4e6cc-6719-4a4d-b642-4beb149b4d8a div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-fec4e6cc-6719-4a4d-b642-4beb149b4d8a div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-fec4e6cc-6719-4a4d-b642-4beb149b4d8a div.sk-parallel-item:only-child::after {width: 0;}#sk-fec4e6cc-6719-4a4d-b642-4beb149b4d8a div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-fec4e6cc-6719-4a4d-b642-4beb149b4d8a div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-fec4e6cc-6719-4a4d-b642-4beb149b4d8a div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-fec4e6cc-6719-4a4d-b642-4beb149b4d8a div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-fec4e6cc-6719-4a4d-b642-4beb149b4d8a div.sk-text-repr-fallback {display: none;}</style><div id="sk-fec4e6cc-6719-4a4d-b642-4beb149b4d8a" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d5b5769e-d5b8-47a9-b678-f4c02a34ddf0" type="checkbox" ><label for="d5b5769e-d5b8-47a9-b678-f4c02a34ddf0" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3937f870-91af-4bf2-96f7-93032f486401" type="checkbox" ><label for="3937f870-91af-4bf2-96f7-93032f486401" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d3cf5739-e8b4-412e-add9-850b05356e0a" type="checkbox" ><label for="d3cf5739-e8b4-412e-add9-850b05356e0a" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fcb697b6-e122-49ee-b814-1f3e2cf7116f" type="checkbox" ><label for="fcb697b6-e122-49ee-b814-1f3e2cf7116f" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-d37ef9e7-62fc-40c0-b1ef-92f16c1ade14 {color: black;background-color: white;}#sk-d37ef9e7-62fc-40c0-b1ef-92f16c1ade14 pre{padding: 0;}#sk-d37ef9e7-62fc-40c0-b1ef-92f16c1ade14 div.sk-toggleable {background-color: white;}#sk-d37ef9e7-62fc-40c0-b1ef-92f16c1ade14 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-d37ef9e7-62fc-40c0-b1ef-92f16c1ade14 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-d37ef9e7-62fc-40c0-b1ef-92f16c1ade14 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-d37ef9e7-62fc-40c0-b1ef-92f16c1ade14 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-d37ef9e7-62fc-40c0-b1ef-92f16c1ade14 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-d37ef9e7-62fc-40c0-b1ef-92f16c1ade14 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-d37ef9e7-62fc-40c0-b1ef-92f16c1ade14 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-d37ef9e7-62fc-40c0-b1ef-92f16c1ade14 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-d37ef9e7-62fc-40c0-b1ef-92f16c1ade14 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-d37ef9e7-62fc-40c0-b1ef-92f16c1ade14 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-d37ef9e7-62fc-40c0-b1ef-92f16c1ade14 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-d37ef9e7-62fc-40c0-b1ef-92f16c1ade14 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-d37ef9e7-62fc-40c0-b1ef-92f16c1ade14 div.sk-estimator:hover {background-color: #d4ebff;}#sk-d37ef9e7-62fc-40c0-b1ef-92f16c1ade14 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-d37ef9e7-62fc-40c0-b1ef-92f16c1ade14 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-d37ef9e7-62fc-40c0-b1ef-92f16c1ade14 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-d37ef9e7-62fc-40c0-b1ef-92f16c1ade14 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-d37ef9e7-62fc-40c0-b1ef-92f16c1ade14 div.sk-item {z-index: 1;}#sk-d37ef9e7-62fc-40c0-b1ef-92f16c1ade14 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-d37ef9e7-62fc-40c0-b1ef-92f16c1ade14 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-d37ef9e7-62fc-40c0-b1ef-92f16c1ade14 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-d37ef9e7-62fc-40c0-b1ef-92f16c1ade14 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-d37ef9e7-62fc-40c0-b1ef-92f16c1ade14 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-d37ef9e7-62fc-40c0-b1ef-92f16c1ade14 div.sk-parallel-item:only-child::after {width: 0;}#sk-d37ef9e7-62fc-40c0-b1ef-92f16c1ade14 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-d37ef9e7-62fc-40c0-b1ef-92f16c1ade14 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-d37ef9e7-62fc-40c0-b1ef-92f16c1ade14 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-d37ef9e7-62fc-40c0-b1ef-92f16c1ade14 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-d37ef9e7-62fc-40c0-b1ef-92f16c1ade14 div.sk-text-repr-fallback {display: none;}</style><div id="sk-d37ef9e7-62fc-40c0-b1ef-92f16c1ade14" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="334d473c-7bc3-4d27-8e5b-01f648867a90" type="checkbox" ><label for="334d473c-7bc3-4d27-8e5b-01f648867a90" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="60d4a628-2cc2-4bb3-883a-b9a3036fdd02" type="checkbox" ><label for="60d4a628-2cc2-4bb3-883a-b9a3036fdd02" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5b1c4a8c-0a45-4276-b7a0-23e1f29fa821" type="checkbox" ><label for="5b1c4a8c-0a45-4276-b7a0-23e1f29fa821" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-8a9a728f-c862-4a31-98a7-c0d673b1052a {color: black;background-color: white;}#sk-8a9a728f-c862-4a31-98a7-c0d673b1052a pre{padding: 0;}#sk-8a9a728f-c862-4a31-98a7-c0d673b1052a div.sk-toggleable {background-color: white;}#sk-8a9a728f-c862-4a31-98a7-c0d673b1052a label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-8a9a728f-c862-4a31-98a7-c0d673b1052a label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-8a9a728f-c862-4a31-98a7-c0d673b1052a label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-8a9a728f-c862-4a31-98a7-c0d673b1052a div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-8a9a728f-c862-4a31-98a7-c0d673b1052a div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-8a9a728f-c862-4a31-98a7-c0d673b1052a div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-8a9a728f-c862-4a31-98a7-c0d673b1052a input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-8a9a728f-c862-4a31-98a7-c0d673b1052a input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-8a9a728f-c862-4a31-98a7-c0d673b1052a div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-8a9a728f-c862-4a31-98a7-c0d673b1052a div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-8a9a728f-c862-4a31-98a7-c0d673b1052a input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-8a9a728f-c862-4a31-98a7-c0d673b1052a div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-8a9a728f-c862-4a31-98a7-c0d673b1052a div.sk-estimator:hover {background-color: #d4ebff;}#sk-8a9a728f-c862-4a31-98a7-c0d673b1052a div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-8a9a728f-c862-4a31-98a7-c0d673b1052a div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-8a9a728f-c862-4a31-98a7-c0d673b1052a div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-8a9a728f-c862-4a31-98a7-c0d673b1052a div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-8a9a728f-c862-4a31-98a7-c0d673b1052a div.sk-item {z-index: 1;}#sk-8a9a728f-c862-4a31-98a7-c0d673b1052a div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-8a9a728f-c862-4a31-98a7-c0d673b1052a div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-8a9a728f-c862-4a31-98a7-c0d673b1052a div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-8a9a728f-c862-4a31-98a7-c0d673b1052a div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-8a9a728f-c862-4a31-98a7-c0d673b1052a div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-8a9a728f-c862-4a31-98a7-c0d673b1052a div.sk-parallel-item:only-child::after {width: 0;}#sk-8a9a728f-c862-4a31-98a7-c0d673b1052a div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-8a9a728f-c862-4a31-98a7-c0d673b1052a div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-8a9a728f-c862-4a31-98a7-c0d673b1052a div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-8a9a728f-c862-4a31-98a7-c0d673b1052a div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-8a9a728f-c862-4a31-98a7-c0d673b1052a div.sk-text-repr-fallback {display: none;}</style><div id="sk-8a9a728f-c862-4a31-98a7-c0d673b1052a" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9f85d8f1-784d-4b46-aa84-3277aba381a3" type="checkbox" ><label for="9f85d8f1-784d-4b46-aa84-3277aba381a3" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="be299ba8-0694-4007-9645-cb14cdaf3e28" type="checkbox" ><label for="be299ba8-0694-4007-9645-cb14cdaf3e28" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4c96c5be-eb5e-417c-8e91-78a2ef6096bf" type="checkbox" ><label for="4c96c5be-eb5e-417c-8e91-78a2ef6096bf" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="70d98fb7-5d9b-4fdb-9110-c4c32b458627" type="checkbox" ><label for="70d98fb7-5d9b-4fdb-9110-c4c32b458627" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="66f5fb1a-ce8f-4638-aef5-c7e975ed5fe0" type="checkbox" ><label for="66f5fb1a-ce8f-4638-aef5-c7e975ed5fe0" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a73dc933-764b-4cbf-90c2-9480bf4aea20" type="checkbox" ><label for="a73dc933-764b-4cbf-90c2-9480bf4aea20" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c41c5e25-5f86-4079-a13d-32288c80c1db" type="checkbox" ><label for="c41c5e25-5f86-4079-a13d-32288c80c1db" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ca0e6dc2-8e1f-4160-b0a3-aafce9275d66" type="checkbox" ><label for="ca0e6dc2-8e1f-4160-b0a3-aafce9275d66" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9c2308b7-c2fb-4fdf-8a1b-02b93ecfccf8" type="checkbox" ><label for="9c2308b7-c2fb-4fdf-8a1b-02b93ecfccf8" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-d51e6e6a-b4d8-4589-9867-b754ee70e251 {color: black;background-color: white;}#sk-d51e6e6a-b4d8-4589-9867-b754ee70e251 pre{padding: 0;}#sk-d51e6e6a-b4d8-4589-9867-b754ee70e251 div.sk-toggleable {background-color: white;}#sk-d51e6e6a-b4d8-4589-9867-b754ee70e251 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-d51e6e6a-b4d8-4589-9867-b754ee70e251 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-d51e6e6a-b4d8-4589-9867-b754ee70e251 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-d51e6e6a-b4d8-4589-9867-b754ee70e251 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-d51e6e6a-b4d8-4589-9867-b754ee70e251 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-d51e6e6a-b4d8-4589-9867-b754ee70e251 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-d51e6e6a-b4d8-4589-9867-b754ee70e251 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-d51e6e6a-b4d8-4589-9867-b754ee70e251 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-d51e6e6a-b4d8-4589-9867-b754ee70e251 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-d51e6e6a-b4d8-4589-9867-b754ee70e251 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-d51e6e6a-b4d8-4589-9867-b754ee70e251 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-d51e6e6a-b4d8-4589-9867-b754ee70e251 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-d51e6e6a-b4d8-4589-9867-b754ee70e251 div.sk-estimator:hover {background-color: #d4ebff;}#sk-d51e6e6a-b4d8-4589-9867-b754ee70e251 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-d51e6e6a-b4d8-4589-9867-b754ee70e251 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-d51e6e6a-b4d8-4589-9867-b754ee70e251 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-d51e6e6a-b4d8-4589-9867-b754ee70e251 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-d51e6e6a-b4d8-4589-9867-b754ee70e251 div.sk-item {z-index: 1;}#sk-d51e6e6a-b4d8-4589-9867-b754ee70e251 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-d51e6e6a-b4d8-4589-9867-b754ee70e251 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-d51e6e6a-b4d8-4589-9867-b754ee70e251 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-d51e6e6a-b4d8-4589-9867-b754ee70e251 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-d51e6e6a-b4d8-4589-9867-b754ee70e251 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-d51e6e6a-b4d8-4589-9867-b754ee70e251 div.sk-parallel-item:only-child::after {width: 0;}#sk-d51e6e6a-b4d8-4589-9867-b754ee70e251 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-d51e6e6a-b4d8-4589-9867-b754ee70e251 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-d51e6e6a-b4d8-4589-9867-b754ee70e251 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-d51e6e6a-b4d8-4589-9867-b754ee70e251 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-d51e6e6a-b4d8-4589-9867-b754ee70e251 div.sk-text-repr-fallback {display: none;}</style><div id="sk-d51e6e6a-b4d8-4589-9867-b754ee70e251" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fb807dda-f758-456e-8dae-d58aec051b91" type="checkbox" ><label for="fb807dda-f758-456e-8dae-d58aec051b91" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b35c5581-118f-442e-8e21-0b1bfde80c46" type="checkbox" ><label for="b35c5581-118f-442e-8e21-0b1bfde80c46" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5819663d-8d15-4390-be2b-2968fbb35ec8" type="checkbox" ><label for="5819663d-8d15-4390-be2b-2968fbb35ec8" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="61f6a9f7-11cd-4f34-a8e4-c6d3970f8ccf" type="checkbox" ><label for="61f6a9f7-11cd-4f34-a8e4-c6d3970f8ccf" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0fb54376-a132-467c-ac5d-f00275acb608" type="checkbox" ><label for="0fb54376-a132-467c-ac5d-f00275acb608" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c5223e70-6b79-43ad-bd14-6332dd1402fc" type="checkbox" ><label for="c5223e70-6b79-43ad-bd14-6332dd1402fc" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1b2d58a1-fa1d-45d6-a4e8-45b1ac7aafb1" type="checkbox" ><label for="1b2d58a1-fa1d-45d6-a4e8-45b1ac7aafb1" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7583a4a4-740b-4ec1-936c-26fba75a9496" type="checkbox" ><label for="7583a4a4-740b-4ec1-936c-26fba75a9496" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="545476be-8ee1-41cb-baf7-7f81da9d2d47" type="checkbox" ><label for="545476be-8ee1-41cb-baf7-7f81da9d2d47" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.072 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
