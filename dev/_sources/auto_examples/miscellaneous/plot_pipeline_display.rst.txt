
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-2e6006b3-69e4-4dec-b23a-d6f981481d56 {color: black;background-color: white;}#sk-2e6006b3-69e4-4dec-b23a-d6f981481d56 pre{padding: 0;}#sk-2e6006b3-69e4-4dec-b23a-d6f981481d56 div.sk-toggleable {background-color: white;}#sk-2e6006b3-69e4-4dec-b23a-d6f981481d56 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-2e6006b3-69e4-4dec-b23a-d6f981481d56 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-2e6006b3-69e4-4dec-b23a-d6f981481d56 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-2e6006b3-69e4-4dec-b23a-d6f981481d56 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-2e6006b3-69e4-4dec-b23a-d6f981481d56 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-2e6006b3-69e4-4dec-b23a-d6f981481d56 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-2e6006b3-69e4-4dec-b23a-d6f981481d56 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-2e6006b3-69e4-4dec-b23a-d6f981481d56 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-2e6006b3-69e4-4dec-b23a-d6f981481d56 div.sk-estimator:hover {background-color: #d4ebff;}#sk-2e6006b3-69e4-4dec-b23a-d6f981481d56 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-2e6006b3-69e4-4dec-b23a-d6f981481d56 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-2e6006b3-69e4-4dec-b23a-d6f981481d56 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-2e6006b3-69e4-4dec-b23a-d6f981481d56 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-2e6006b3-69e4-4dec-b23a-d6f981481d56 div.sk-item {z-index: 1;}#sk-2e6006b3-69e4-4dec-b23a-d6f981481d56 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-2e6006b3-69e4-4dec-b23a-d6f981481d56 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-2e6006b3-69e4-4dec-b23a-d6f981481d56 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-2e6006b3-69e4-4dec-b23a-d6f981481d56 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-2e6006b3-69e4-4dec-b23a-d6f981481d56 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-2e6006b3-69e4-4dec-b23a-d6f981481d56 div.sk-parallel-item:only-child::after {width: 0;}#sk-2e6006b3-69e4-4dec-b23a-d6f981481d56 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-2e6006b3-69e4-4dec-b23a-d6f981481d56 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-2e6006b3-69e4-4dec-b23a-d6f981481d56 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-2e6006b3-69e4-4dec-b23a-d6f981481d56 div.sk-container {display: inline-block;position: relative;}#sk-2e6006b3-69e4-4dec-b23a-d6f981481d56 div.sk-text-repr-fallback {display: none;}</style><div id="sk-2e6006b3-69e4-4dec-b23a-d6f981481d56" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="86cf682b-1312-47d0-99ad-2ef7242eac32" type="checkbox" ><label class="sk-toggleable__label" for="86cf682b-1312-47d0-99ad-2ef7242eac32">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a7d1b67f-cb63-4e14-9639-877b468aabcb" type="checkbox" ><label class="sk-toggleable__label" for="a7d1b67f-cb63-4e14-9639-877b468aabcb">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9e61e02f-5c5d-44fc-b5d4-44918071bdbf" type="checkbox" ><label class="sk-toggleable__label" for="9e61e02f-5c5d-44fc-b5d4-44918071bdbf">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-718e0f87-cd29-4a09-bcda-3dd5ed7f8018 {color: black;background-color: white;}#sk-718e0f87-cd29-4a09-bcda-3dd5ed7f8018 pre{padding: 0;}#sk-718e0f87-cd29-4a09-bcda-3dd5ed7f8018 div.sk-toggleable {background-color: white;}#sk-718e0f87-cd29-4a09-bcda-3dd5ed7f8018 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-718e0f87-cd29-4a09-bcda-3dd5ed7f8018 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-718e0f87-cd29-4a09-bcda-3dd5ed7f8018 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-718e0f87-cd29-4a09-bcda-3dd5ed7f8018 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-718e0f87-cd29-4a09-bcda-3dd5ed7f8018 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-718e0f87-cd29-4a09-bcda-3dd5ed7f8018 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-718e0f87-cd29-4a09-bcda-3dd5ed7f8018 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-718e0f87-cd29-4a09-bcda-3dd5ed7f8018 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-718e0f87-cd29-4a09-bcda-3dd5ed7f8018 div.sk-estimator:hover {background-color: #d4ebff;}#sk-718e0f87-cd29-4a09-bcda-3dd5ed7f8018 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-718e0f87-cd29-4a09-bcda-3dd5ed7f8018 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-718e0f87-cd29-4a09-bcda-3dd5ed7f8018 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-718e0f87-cd29-4a09-bcda-3dd5ed7f8018 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-718e0f87-cd29-4a09-bcda-3dd5ed7f8018 div.sk-item {z-index: 1;}#sk-718e0f87-cd29-4a09-bcda-3dd5ed7f8018 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-718e0f87-cd29-4a09-bcda-3dd5ed7f8018 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-718e0f87-cd29-4a09-bcda-3dd5ed7f8018 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-718e0f87-cd29-4a09-bcda-3dd5ed7f8018 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-718e0f87-cd29-4a09-bcda-3dd5ed7f8018 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-718e0f87-cd29-4a09-bcda-3dd5ed7f8018 div.sk-parallel-item:only-child::after {width: 0;}#sk-718e0f87-cd29-4a09-bcda-3dd5ed7f8018 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-718e0f87-cd29-4a09-bcda-3dd5ed7f8018 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-718e0f87-cd29-4a09-bcda-3dd5ed7f8018 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-718e0f87-cd29-4a09-bcda-3dd5ed7f8018 div.sk-container {display: inline-block;position: relative;}#sk-718e0f87-cd29-4a09-bcda-3dd5ed7f8018 div.sk-text-repr-fallback {display: none;}</style><div id="sk-718e0f87-cd29-4a09-bcda-3dd5ed7f8018" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1e76ba98-ef43-41a9-b50e-815401af9bad" type="checkbox" ><label class="sk-toggleable__label" for="1e76ba98-ef43-41a9-b50e-815401af9bad">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('standard_scaler', StandardScaler()),
                    ('polynomial', PolynomialFeatures(degree=3)),
                    ('classifier', LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c0743019-a811-4ac3-9515-7cc26c4a87be" type="checkbox" ><label class="sk-toggleable__label" for="c0743019-a811-4ac3-9515-7cc26c4a87be">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d024a37a-9678-4e35-a2ba-f0427ceff8f0" type="checkbox" ><label class="sk-toggleable__label" for="d024a37a-9678-4e35-a2ba-f0427ceff8f0">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6e32d665-7b19-43e7-b71b-6900fd977e5c" type="checkbox" ><label class="sk-toggleable__label" for="6e32d665-7b19-43e7-b71b-6900fd977e5c">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-0dd48114-877f-4c64-829a-71acdca98785 {color: black;background-color: white;}#sk-0dd48114-877f-4c64-829a-71acdca98785 pre{padding: 0;}#sk-0dd48114-877f-4c64-829a-71acdca98785 div.sk-toggleable {background-color: white;}#sk-0dd48114-877f-4c64-829a-71acdca98785 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-0dd48114-877f-4c64-829a-71acdca98785 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-0dd48114-877f-4c64-829a-71acdca98785 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-0dd48114-877f-4c64-829a-71acdca98785 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-0dd48114-877f-4c64-829a-71acdca98785 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-0dd48114-877f-4c64-829a-71acdca98785 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-0dd48114-877f-4c64-829a-71acdca98785 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-0dd48114-877f-4c64-829a-71acdca98785 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-0dd48114-877f-4c64-829a-71acdca98785 div.sk-estimator:hover {background-color: #d4ebff;}#sk-0dd48114-877f-4c64-829a-71acdca98785 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-0dd48114-877f-4c64-829a-71acdca98785 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-0dd48114-877f-4c64-829a-71acdca98785 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-0dd48114-877f-4c64-829a-71acdca98785 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-0dd48114-877f-4c64-829a-71acdca98785 div.sk-item {z-index: 1;}#sk-0dd48114-877f-4c64-829a-71acdca98785 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-0dd48114-877f-4c64-829a-71acdca98785 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-0dd48114-877f-4c64-829a-71acdca98785 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-0dd48114-877f-4c64-829a-71acdca98785 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-0dd48114-877f-4c64-829a-71acdca98785 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-0dd48114-877f-4c64-829a-71acdca98785 div.sk-parallel-item:only-child::after {width: 0;}#sk-0dd48114-877f-4c64-829a-71acdca98785 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-0dd48114-877f-4c64-829a-71acdca98785 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-0dd48114-877f-4c64-829a-71acdca98785 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-0dd48114-877f-4c64-829a-71acdca98785 div.sk-container {display: inline-block;position: relative;}#sk-0dd48114-877f-4c64-829a-71acdca98785 div.sk-text-repr-fallback {display: none;}</style><div id="sk-0dd48114-877f-4c64-829a-71acdca98785" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b7b40fc4-cd73-4bc0-b5f4-bcc7f40f1723" type="checkbox" ><label class="sk-toggleable__label" for="b7b40fc4-cd73-4bc0-b5f4-bcc7f40f1723">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('reduce_dim', PCA(n_components=4)),
                    ('classifier', SVC(kernel='linear'))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a7c691ab-477b-4d1e-bce6-4ea9f63fa9fa" type="checkbox" ><label class="sk-toggleable__label" for="a7c691ab-477b-4d1e-bce6-4ea9f63fa9fa">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="307258c4-37b5-4d1d-8747-95e4d982e0f4" type="checkbox" ><label class="sk-toggleable__label" for="307258c4-37b5-4d1d-8747-95e4d982e0f4">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel='linear')</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-b6103666-5b66-45c6-867a-38fa01c4cdd6 {color: black;background-color: white;}#sk-b6103666-5b66-45c6-867a-38fa01c4cdd6 pre{padding: 0;}#sk-b6103666-5b66-45c6-867a-38fa01c4cdd6 div.sk-toggleable {background-color: white;}#sk-b6103666-5b66-45c6-867a-38fa01c4cdd6 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-b6103666-5b66-45c6-867a-38fa01c4cdd6 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-b6103666-5b66-45c6-867a-38fa01c4cdd6 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-b6103666-5b66-45c6-867a-38fa01c4cdd6 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-b6103666-5b66-45c6-867a-38fa01c4cdd6 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b6103666-5b66-45c6-867a-38fa01c4cdd6 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b6103666-5b66-45c6-867a-38fa01c4cdd6 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-b6103666-5b66-45c6-867a-38fa01c4cdd6 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-b6103666-5b66-45c6-867a-38fa01c4cdd6 div.sk-estimator:hover {background-color: #d4ebff;}#sk-b6103666-5b66-45c6-867a-38fa01c4cdd6 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-b6103666-5b66-45c6-867a-38fa01c4cdd6 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-b6103666-5b66-45c6-867a-38fa01c4cdd6 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b6103666-5b66-45c6-867a-38fa01c4cdd6 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-b6103666-5b66-45c6-867a-38fa01c4cdd6 div.sk-item {z-index: 1;}#sk-b6103666-5b66-45c6-867a-38fa01c4cdd6 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-b6103666-5b66-45c6-867a-38fa01c4cdd6 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b6103666-5b66-45c6-867a-38fa01c4cdd6 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-b6103666-5b66-45c6-867a-38fa01c4cdd6 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-b6103666-5b66-45c6-867a-38fa01c4cdd6 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-b6103666-5b66-45c6-867a-38fa01c4cdd6 div.sk-parallel-item:only-child::after {width: 0;}#sk-b6103666-5b66-45c6-867a-38fa01c4cdd6 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-b6103666-5b66-45c6-867a-38fa01c4cdd6 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-b6103666-5b66-45c6-867a-38fa01c4cdd6 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-b6103666-5b66-45c6-867a-38fa01c4cdd6 div.sk-container {display: inline-block;position: relative;}#sk-b6103666-5b66-45c6-867a-38fa01c4cdd6 div.sk-text-repr-fallback {display: none;}</style><div id="sk-b6103666-5b66-45c6-867a-38fa01c4cdd6" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="918a0184-c387-4d82-8d5b-24f5e1141a9f" type="checkbox" ><label class="sk-toggleable__label" for="918a0184-c387-4d82-8d5b-24f5e1141a9f">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('columntransformer',
                     ColumnTransformer(transformers=[('categorical',
                                                      Pipeline(steps=[('imputation_constant',
                                                                       SimpleImputer(fill_value='missing',
                                                                                     strategy='constant')),
                                                                      ('onehot',
                                                                       OneHotEncoder(handle_unknown='ignore'))]),
                                                      ['state', 'gender']),
                                                     ('numerical',
                                                      Pipeline(steps=[('imputation_mean',
                                                                       SimpleImputer()),
                                                                      ('scaler',
                                                                       StandardScaler())]),
                                                      ['age', 'weight'])])),
                    ('logisticregression', LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9a26ab2a-0549-47e7-bbb2-752a94377596" type="checkbox" ><label class="sk-toggleable__label" for="9a26ab2a-0549-47e7-bbb2-752a94377596">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('categorical',
                                     Pipeline(steps=[('imputation_constant',
                                                      SimpleImputer(fill_value='missing',
                                                                    strategy='constant')),
                                                     ('onehot',
                                                      OneHotEncoder(handle_unknown='ignore'))]),
                                     ['state', 'gender']),
                                    ('numerical',
                                     Pipeline(steps=[('imputation_mean',
                                                      SimpleImputer()),
                                                     ('scaler', StandardScaler())]),
                                     ['age', 'weight'])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fec0a95e-e16d-4b7d-a185-15793b5e3f09" type="checkbox" ><label class="sk-toggleable__label" for="fec0a95e-e16d-4b7d-a185-15793b5e3f09">categorical</label><div class="sk-toggleable__content"><pre>['state', 'gender']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b8e450b5-d0f7-48c9-9abf-b7cf4e1ab579" type="checkbox" ><label class="sk-toggleable__label" for="b8e450b5-d0f7-48c9-9abf-b7cf4e1ab579">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value='missing', strategy='constant')</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="401d1696-54e7-489d-8f20-5c2306dbad51" type="checkbox" ><label class="sk-toggleable__label" for="401d1696-54e7-489d-8f20-5c2306dbad51">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown='ignore')</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e3c12511-689d-4e87-84c3-76c8dc33a926" type="checkbox" ><label class="sk-toggleable__label" for="e3c12511-689d-4e87-84c3-76c8dc33a926">numerical</label><div class="sk-toggleable__content"><pre>['age', 'weight']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e231780c-74d5-48a2-b836-fda145736628" type="checkbox" ><label class="sk-toggleable__label" for="e231780c-74d5-48a2-b836-fda145736628">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1c08d34c-cb78-445f-9ffa-4bb8f2ddcff9" type="checkbox" ><label class="sk-toggleable__label" for="1c08d34c-cb78-445f-9ffa-4bb8f2ddcff9">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8b087af1-17e2-49b5-b739-0328c067373a" type="checkbox" ><label class="sk-toggleable__label" for="8b087af1-17e2-49b5-b739-0328c067373a">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-721a20a7-403b-40c0-adf4-c1065cf01ce4 {color: black;background-color: white;}#sk-721a20a7-403b-40c0-adf4-c1065cf01ce4 pre{padding: 0;}#sk-721a20a7-403b-40c0-adf4-c1065cf01ce4 div.sk-toggleable {background-color: white;}#sk-721a20a7-403b-40c0-adf4-c1065cf01ce4 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-721a20a7-403b-40c0-adf4-c1065cf01ce4 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-721a20a7-403b-40c0-adf4-c1065cf01ce4 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-721a20a7-403b-40c0-adf4-c1065cf01ce4 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-721a20a7-403b-40c0-adf4-c1065cf01ce4 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-721a20a7-403b-40c0-adf4-c1065cf01ce4 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-721a20a7-403b-40c0-adf4-c1065cf01ce4 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-721a20a7-403b-40c0-adf4-c1065cf01ce4 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-721a20a7-403b-40c0-adf4-c1065cf01ce4 div.sk-estimator:hover {background-color: #d4ebff;}#sk-721a20a7-403b-40c0-adf4-c1065cf01ce4 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-721a20a7-403b-40c0-adf4-c1065cf01ce4 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-721a20a7-403b-40c0-adf4-c1065cf01ce4 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-721a20a7-403b-40c0-adf4-c1065cf01ce4 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-721a20a7-403b-40c0-adf4-c1065cf01ce4 div.sk-item {z-index: 1;}#sk-721a20a7-403b-40c0-adf4-c1065cf01ce4 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-721a20a7-403b-40c0-adf4-c1065cf01ce4 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-721a20a7-403b-40c0-adf4-c1065cf01ce4 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-721a20a7-403b-40c0-adf4-c1065cf01ce4 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-721a20a7-403b-40c0-adf4-c1065cf01ce4 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-721a20a7-403b-40c0-adf4-c1065cf01ce4 div.sk-parallel-item:only-child::after {width: 0;}#sk-721a20a7-403b-40c0-adf4-c1065cf01ce4 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-721a20a7-403b-40c0-adf4-c1065cf01ce4 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-721a20a7-403b-40c0-adf4-c1065cf01ce4 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-721a20a7-403b-40c0-adf4-c1065cf01ce4 div.sk-container {display: inline-block;position: relative;}#sk-721a20a7-403b-40c0-adf4-c1065cf01ce4 div.sk-text-repr-fallback {display: none;}</style><div id="sk-721a20a7-403b-40c0-adf4-c1065cf01ce4" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="df1af307-ca7f-4c52-aacf-3c2c4478efc4" type="checkbox" ><label class="sk-toggleable__label" for="df1af307-ca7f-4c52-aacf-3c2c4478efc4">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[('preprocessor',
                                            ColumnTransformer(transformers=[('categorical',
                                                                             Pipeline(steps=[('imputation_constant',
                                                                                              SimpleImputer(fill_value='missing',
                                                                                                            strategy='constant')),
                                                                                             ('onehot',
                                                                                              OneHotEncoder(handle_unknown='ignore'))]),
                                                                             ['state',
                                                                              'gender']),
                                                                            ('numerical',
                                                                             Pipeline(steps=[('imputation_mean',
                                                                                              SimpleImputer()),
                                                                                             ('scaler',
                                                                                              StandardScaler())]),
                                                                             ['age',
                                                                              'weight'])])),
                                           ('classifier',
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={'classifier__criterion': ['gini', 'entropy'],
                             'classifier__max_depth': [4, 5, 6, 7, 8],
                             'classifier__max_features': ['auto', 'sqrt', 'log2'],
                             'classifier__n_estimators': [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0b955edf-dba5-486a-8c1d-4aa75bd475aa" type="checkbox" ><label class="sk-toggleable__label" for="0b955edf-dba5-486a-8c1d-4aa75bd475aa">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('categorical',
                                     Pipeline(steps=[('imputation_constant',
                                                      SimpleImputer(fill_value='missing',
                                                                    strategy='constant')),
                                                     ('onehot',
                                                      OneHotEncoder(handle_unknown='ignore'))]),
                                     ['state', 'gender']),
                                    ('numerical',
                                     Pipeline(steps=[('imputation_mean',
                                                      SimpleImputer()),
                                                     ('scaler', StandardScaler())]),
                                     ['age', 'weight'])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="524a4450-6bc2-4402-ba88-a2a15a8d8822" type="checkbox" ><label class="sk-toggleable__label" for="524a4450-6bc2-4402-ba88-a2a15a8d8822">categorical</label><div class="sk-toggleable__content"><pre>['state', 'gender']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e7decef4-69be-4ca2-a401-079b8ec9d363" type="checkbox" ><label class="sk-toggleable__label" for="e7decef4-69be-4ca2-a401-079b8ec9d363">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value='missing', strategy='constant')</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a158724c-d588-4f75-a360-a4ac6866277f" type="checkbox" ><label class="sk-toggleable__label" for="a158724c-d588-4f75-a360-a4ac6866277f">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown='ignore')</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e9b2d0f9-9a90-4503-8487-4c802e037ada" type="checkbox" ><label class="sk-toggleable__label" for="e9b2d0f9-9a90-4503-8487-4c802e037ada">numerical</label><div class="sk-toggleable__content"><pre>['age', 'weight']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="09a6c14f-2966-4a5f-b136-1a79d06112ea" type="checkbox" ><label class="sk-toggleable__label" for="09a6c14f-2966-4a5f-b136-1a79d06112ea">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9cf9e29b-d4b1-4466-b934-f55b9efdc8c6" type="checkbox" ><label class="sk-toggleable__label" for="9cf9e29b-d4b1-4466-b934-f55b9efdc8c6">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6dbd04eb-0bfc-465b-89a6-76616350d8e9" type="checkbox" ><label class="sk-toggleable__label" for="6dbd04eb-0bfc-465b-89a6-76616350d8e9">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.078 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
