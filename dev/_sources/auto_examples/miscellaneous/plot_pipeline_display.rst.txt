
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-b078b47e-1c52-4805-b359-a4c06b060255 {color: black;background-color: white;}#sk-b078b47e-1c52-4805-b359-a4c06b060255 pre{padding: 0;}#sk-b078b47e-1c52-4805-b359-a4c06b060255 div.sk-toggleable {background-color: white;}#sk-b078b47e-1c52-4805-b359-a4c06b060255 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-b078b47e-1c52-4805-b359-a4c06b060255 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-b078b47e-1c52-4805-b359-a4c06b060255 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-b078b47e-1c52-4805-b359-a4c06b060255 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-b078b47e-1c52-4805-b359-a4c06b060255 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b078b47e-1c52-4805-b359-a4c06b060255 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b078b47e-1c52-4805-b359-a4c06b060255 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-b078b47e-1c52-4805-b359-a4c06b060255 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-b078b47e-1c52-4805-b359-a4c06b060255 div.sk-estimator:hover {background-color: #d4ebff;}#sk-b078b47e-1c52-4805-b359-a4c06b060255 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-b078b47e-1c52-4805-b359-a4c06b060255 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-b078b47e-1c52-4805-b359-a4c06b060255 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b078b47e-1c52-4805-b359-a4c06b060255 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-b078b47e-1c52-4805-b359-a4c06b060255 div.sk-item {z-index: 1;}#sk-b078b47e-1c52-4805-b359-a4c06b060255 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-b078b47e-1c52-4805-b359-a4c06b060255 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b078b47e-1c52-4805-b359-a4c06b060255 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-b078b47e-1c52-4805-b359-a4c06b060255 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-b078b47e-1c52-4805-b359-a4c06b060255 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-b078b47e-1c52-4805-b359-a4c06b060255 div.sk-parallel-item:only-child::after {width: 0;}#sk-b078b47e-1c52-4805-b359-a4c06b060255 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-b078b47e-1c52-4805-b359-a4c06b060255 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-b078b47e-1c52-4805-b359-a4c06b060255 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-b078b47e-1c52-4805-b359-a4c06b060255 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org.  See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-b078b47e-1c52-4805-b359-a4c06b060255 div.sk-text-repr-fallback {display: none;}</style><div id="sk-b078b47e-1c52-4805-b359-a4c06b060255" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="59a77606-02c0-456d-a277-3788c2d267b3" type="checkbox" ><label class="sk-toggleable__label" for="59a77606-02c0-456d-a277-3788c2d267b3">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e9abf321-e989-4566-b2df-9ccf3e052b5b" type="checkbox" ><label class="sk-toggleable__label" for="e9abf321-e989-4566-b2df-9ccf3e052b5b">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="07aa8a19-6f2e-44b9-b7da-69808dafdf90" type="checkbox" ><label class="sk-toggleable__label" for="07aa8a19-6f2e-44b9-b7da-69808dafdf90">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-a5c4c3b5-9da6-477a-847b-f8642d6324a9 {color: black;background-color: white;}#sk-a5c4c3b5-9da6-477a-847b-f8642d6324a9 pre{padding: 0;}#sk-a5c4c3b5-9da6-477a-847b-f8642d6324a9 div.sk-toggleable {background-color: white;}#sk-a5c4c3b5-9da6-477a-847b-f8642d6324a9 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-a5c4c3b5-9da6-477a-847b-f8642d6324a9 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-a5c4c3b5-9da6-477a-847b-f8642d6324a9 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-a5c4c3b5-9da6-477a-847b-f8642d6324a9 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-a5c4c3b5-9da6-477a-847b-f8642d6324a9 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-a5c4c3b5-9da6-477a-847b-f8642d6324a9 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-a5c4c3b5-9da6-477a-847b-f8642d6324a9 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-a5c4c3b5-9da6-477a-847b-f8642d6324a9 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-a5c4c3b5-9da6-477a-847b-f8642d6324a9 div.sk-estimator:hover {background-color: #d4ebff;}#sk-a5c4c3b5-9da6-477a-847b-f8642d6324a9 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-a5c4c3b5-9da6-477a-847b-f8642d6324a9 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-a5c4c3b5-9da6-477a-847b-f8642d6324a9 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-a5c4c3b5-9da6-477a-847b-f8642d6324a9 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-a5c4c3b5-9da6-477a-847b-f8642d6324a9 div.sk-item {z-index: 1;}#sk-a5c4c3b5-9da6-477a-847b-f8642d6324a9 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-a5c4c3b5-9da6-477a-847b-f8642d6324a9 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-a5c4c3b5-9da6-477a-847b-f8642d6324a9 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-a5c4c3b5-9da6-477a-847b-f8642d6324a9 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-a5c4c3b5-9da6-477a-847b-f8642d6324a9 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-a5c4c3b5-9da6-477a-847b-f8642d6324a9 div.sk-parallel-item:only-child::after {width: 0;}#sk-a5c4c3b5-9da6-477a-847b-f8642d6324a9 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-a5c4c3b5-9da6-477a-847b-f8642d6324a9 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-a5c4c3b5-9da6-477a-847b-f8642d6324a9 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-a5c4c3b5-9da6-477a-847b-f8642d6324a9 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org.  See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-a5c4c3b5-9da6-477a-847b-f8642d6324a9 div.sk-text-repr-fallback {display: none;}</style><div id="sk-a5c4c3b5-9da6-477a-847b-f8642d6324a9" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a78d0980-0d83-488d-a8c2-558d2723d771" type="checkbox" ><label class="sk-toggleable__label" for="a78d0980-0d83-488d-a8c2-558d2723d771">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="04e84202-c6f2-4e3c-9cb6-1dc0c563338c" type="checkbox" ><label class="sk-toggleable__label" for="04e84202-c6f2-4e3c-9cb6-1dc0c563338c">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="88a40fe3-4c65-4d1a-91ba-23b745d89bd5" type="checkbox" ><label class="sk-toggleable__label" for="88a40fe3-4c65-4d1a-91ba-23b745d89bd5">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9f1f7675-dce9-4aaa-9e8e-956dc28ba292" type="checkbox" ><label class="sk-toggleable__label" for="9f1f7675-dce9-4aaa-9e8e-956dc28ba292">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-3a10b27b-c476-4fc1-98f7-aae5aeb92ce5 {color: black;background-color: white;}#sk-3a10b27b-c476-4fc1-98f7-aae5aeb92ce5 pre{padding: 0;}#sk-3a10b27b-c476-4fc1-98f7-aae5aeb92ce5 div.sk-toggleable {background-color: white;}#sk-3a10b27b-c476-4fc1-98f7-aae5aeb92ce5 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-3a10b27b-c476-4fc1-98f7-aae5aeb92ce5 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-3a10b27b-c476-4fc1-98f7-aae5aeb92ce5 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-3a10b27b-c476-4fc1-98f7-aae5aeb92ce5 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-3a10b27b-c476-4fc1-98f7-aae5aeb92ce5 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-3a10b27b-c476-4fc1-98f7-aae5aeb92ce5 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-3a10b27b-c476-4fc1-98f7-aae5aeb92ce5 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-3a10b27b-c476-4fc1-98f7-aae5aeb92ce5 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-3a10b27b-c476-4fc1-98f7-aae5aeb92ce5 div.sk-estimator:hover {background-color: #d4ebff;}#sk-3a10b27b-c476-4fc1-98f7-aae5aeb92ce5 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-3a10b27b-c476-4fc1-98f7-aae5aeb92ce5 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-3a10b27b-c476-4fc1-98f7-aae5aeb92ce5 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-3a10b27b-c476-4fc1-98f7-aae5aeb92ce5 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-3a10b27b-c476-4fc1-98f7-aae5aeb92ce5 div.sk-item {z-index: 1;}#sk-3a10b27b-c476-4fc1-98f7-aae5aeb92ce5 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-3a10b27b-c476-4fc1-98f7-aae5aeb92ce5 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-3a10b27b-c476-4fc1-98f7-aae5aeb92ce5 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-3a10b27b-c476-4fc1-98f7-aae5aeb92ce5 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-3a10b27b-c476-4fc1-98f7-aae5aeb92ce5 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-3a10b27b-c476-4fc1-98f7-aae5aeb92ce5 div.sk-parallel-item:only-child::after {width: 0;}#sk-3a10b27b-c476-4fc1-98f7-aae5aeb92ce5 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-3a10b27b-c476-4fc1-98f7-aae5aeb92ce5 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-3a10b27b-c476-4fc1-98f7-aae5aeb92ce5 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-3a10b27b-c476-4fc1-98f7-aae5aeb92ce5 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org.  See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-3a10b27b-c476-4fc1-98f7-aae5aeb92ce5 div.sk-text-repr-fallback {display: none;}</style><div id="sk-3a10b27b-c476-4fc1-98f7-aae5aeb92ce5" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2a7e28f2-a6da-47fb-bee3-d626a49eabec" type="checkbox" ><label class="sk-toggleable__label" for="2a7e28f2-a6da-47fb-bee3-d626a49eabec">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3523f393-8ef6-457a-a6fd-f57b727f790f" type="checkbox" ><label class="sk-toggleable__label" for="3523f393-8ef6-457a-a6fd-f57b727f790f">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="15f932e3-71dd-43d7-b0ee-f0c391a2ec26" type="checkbox" ><label class="sk-toggleable__label" for="15f932e3-71dd-43d7-b0ee-f0c391a2ec26">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-864fbf41-4533-4887-910f-35cf89bd6320 {color: black;background-color: white;}#sk-864fbf41-4533-4887-910f-35cf89bd6320 pre{padding: 0;}#sk-864fbf41-4533-4887-910f-35cf89bd6320 div.sk-toggleable {background-color: white;}#sk-864fbf41-4533-4887-910f-35cf89bd6320 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-864fbf41-4533-4887-910f-35cf89bd6320 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-864fbf41-4533-4887-910f-35cf89bd6320 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-864fbf41-4533-4887-910f-35cf89bd6320 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-864fbf41-4533-4887-910f-35cf89bd6320 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-864fbf41-4533-4887-910f-35cf89bd6320 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-864fbf41-4533-4887-910f-35cf89bd6320 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-864fbf41-4533-4887-910f-35cf89bd6320 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-864fbf41-4533-4887-910f-35cf89bd6320 div.sk-estimator:hover {background-color: #d4ebff;}#sk-864fbf41-4533-4887-910f-35cf89bd6320 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-864fbf41-4533-4887-910f-35cf89bd6320 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-864fbf41-4533-4887-910f-35cf89bd6320 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-864fbf41-4533-4887-910f-35cf89bd6320 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-864fbf41-4533-4887-910f-35cf89bd6320 div.sk-item {z-index: 1;}#sk-864fbf41-4533-4887-910f-35cf89bd6320 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-864fbf41-4533-4887-910f-35cf89bd6320 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-864fbf41-4533-4887-910f-35cf89bd6320 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-864fbf41-4533-4887-910f-35cf89bd6320 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-864fbf41-4533-4887-910f-35cf89bd6320 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-864fbf41-4533-4887-910f-35cf89bd6320 div.sk-parallel-item:only-child::after {width: 0;}#sk-864fbf41-4533-4887-910f-35cf89bd6320 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-864fbf41-4533-4887-910f-35cf89bd6320 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-864fbf41-4533-4887-910f-35cf89bd6320 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-864fbf41-4533-4887-910f-35cf89bd6320 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org.  See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-864fbf41-4533-4887-910f-35cf89bd6320 div.sk-text-repr-fallback {display: none;}</style><div id="sk-864fbf41-4533-4887-910f-35cf89bd6320" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1eed1f36-a50a-4d6e-8d22-b317d5e5c020" type="checkbox" ><label class="sk-toggleable__label" for="1eed1f36-a50a-4d6e-8d22-b317d5e5c020">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="801a2863-ba88-4d62-9e6f-6d0293bf2292" type="checkbox" ><label class="sk-toggleable__label" for="801a2863-ba88-4d62-9e6f-6d0293bf2292">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cbb567c0-3937-4037-b7db-b6abb33cd124" type="checkbox" ><label class="sk-toggleable__label" for="cbb567c0-3937-4037-b7db-b6abb33cd124">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7970910e-1e2b-418c-a2c9-998dfd54c436" type="checkbox" ><label class="sk-toggleable__label" for="7970910e-1e2b-418c-a2c9-998dfd54c436">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4a0e9032-c080-4024-9724-cf373b82d10d" type="checkbox" ><label class="sk-toggleable__label" for="4a0e9032-c080-4024-9724-cf373b82d10d">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="99aa0ed8-49be-4599-b299-83e10dca0ef3" type="checkbox" ><label class="sk-toggleable__label" for="99aa0ed8-49be-4599-b299-83e10dca0ef3">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="62d1cd91-7fa1-4ad7-847c-8c423f2af29a" type="checkbox" ><label class="sk-toggleable__label" for="62d1cd91-7fa1-4ad7-847c-8c423f2af29a">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bfb6cb07-af15-4279-aa8b-ac7ffcacb4ca" type="checkbox" ><label class="sk-toggleable__label" for="bfb6cb07-af15-4279-aa8b-ac7ffcacb4ca">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="60c7e74d-c0fc-4174-a562-1a445b64e62c" type="checkbox" ><label class="sk-toggleable__label" for="60c7e74d-c0fc-4174-a562-1a445b64e62c">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-0f105b86-9ddd-4014-bc64-dc29d735e525 {color: black;background-color: white;}#sk-0f105b86-9ddd-4014-bc64-dc29d735e525 pre{padding: 0;}#sk-0f105b86-9ddd-4014-bc64-dc29d735e525 div.sk-toggleable {background-color: white;}#sk-0f105b86-9ddd-4014-bc64-dc29d735e525 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-0f105b86-9ddd-4014-bc64-dc29d735e525 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-0f105b86-9ddd-4014-bc64-dc29d735e525 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-0f105b86-9ddd-4014-bc64-dc29d735e525 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-0f105b86-9ddd-4014-bc64-dc29d735e525 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-0f105b86-9ddd-4014-bc64-dc29d735e525 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-0f105b86-9ddd-4014-bc64-dc29d735e525 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-0f105b86-9ddd-4014-bc64-dc29d735e525 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-0f105b86-9ddd-4014-bc64-dc29d735e525 div.sk-estimator:hover {background-color: #d4ebff;}#sk-0f105b86-9ddd-4014-bc64-dc29d735e525 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-0f105b86-9ddd-4014-bc64-dc29d735e525 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-0f105b86-9ddd-4014-bc64-dc29d735e525 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-0f105b86-9ddd-4014-bc64-dc29d735e525 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-0f105b86-9ddd-4014-bc64-dc29d735e525 div.sk-item {z-index: 1;}#sk-0f105b86-9ddd-4014-bc64-dc29d735e525 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-0f105b86-9ddd-4014-bc64-dc29d735e525 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-0f105b86-9ddd-4014-bc64-dc29d735e525 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-0f105b86-9ddd-4014-bc64-dc29d735e525 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-0f105b86-9ddd-4014-bc64-dc29d735e525 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-0f105b86-9ddd-4014-bc64-dc29d735e525 div.sk-parallel-item:only-child::after {width: 0;}#sk-0f105b86-9ddd-4014-bc64-dc29d735e525 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-0f105b86-9ddd-4014-bc64-dc29d735e525 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-0f105b86-9ddd-4014-bc64-dc29d735e525 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-0f105b86-9ddd-4014-bc64-dc29d735e525 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org.  See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-0f105b86-9ddd-4014-bc64-dc29d735e525 div.sk-text-repr-fallback {display: none;}</style><div id="sk-0f105b86-9ddd-4014-bc64-dc29d735e525" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ce678603-f3bc-43b9-9aea-52772cca7a15" type="checkbox" ><label class="sk-toggleable__label" for="ce678603-f3bc-43b9-9aea-52772cca7a15">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ae847a36-ace7-4b69-967a-8279f9945ada" type="checkbox" ><label class="sk-toggleable__label" for="ae847a36-ace7-4b69-967a-8279f9945ada">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0e7b56b8-bd47-4cfd-bffc-b610b75cea7f" type="checkbox" ><label class="sk-toggleable__label" for="0e7b56b8-bd47-4cfd-bffc-b610b75cea7f">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4f3b9aef-5e20-4f56-98fd-cac93f574dbe" type="checkbox" ><label class="sk-toggleable__label" for="4f3b9aef-5e20-4f56-98fd-cac93f574dbe">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c0ca06ad-4032-424d-a739-900a230a7cc6" type="checkbox" ><label class="sk-toggleable__label" for="c0ca06ad-4032-424d-a739-900a230a7cc6">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8833eba9-f972-4223-9819-c6f5a31e619a" type="checkbox" ><label class="sk-toggleable__label" for="8833eba9-f972-4223-9819-c6f5a31e619a">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="753e5010-18b5-4fac-a6ef-1d274e459165" type="checkbox" ><label class="sk-toggleable__label" for="753e5010-18b5-4fac-a6ef-1d274e459165">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bae1308e-4c50-4ae0-ba5d-952c3e874daf" type="checkbox" ><label class="sk-toggleable__label" for="bae1308e-4c50-4ae0-ba5d-952c3e874daf">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="adfb69fc-850b-4ac5-bd69-fb3f4d67256c" type="checkbox" ><label class="sk-toggleable__label" for="adfb69fc-850b-4ac5-bd69-fb3f4d67256c">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.079 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
