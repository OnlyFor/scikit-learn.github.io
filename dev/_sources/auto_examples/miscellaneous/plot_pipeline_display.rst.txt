
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-fa9844f0-e55d-48d0-b167-19e95ee58f46 {color: black;background-color: white;}#sk-fa9844f0-e55d-48d0-b167-19e95ee58f46 pre{padding: 0;}#sk-fa9844f0-e55d-48d0-b167-19e95ee58f46 div.sk-toggleable {background-color: white;}#sk-fa9844f0-e55d-48d0-b167-19e95ee58f46 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-fa9844f0-e55d-48d0-b167-19e95ee58f46 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-fa9844f0-e55d-48d0-b167-19e95ee58f46 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-fa9844f0-e55d-48d0-b167-19e95ee58f46 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-fa9844f0-e55d-48d0-b167-19e95ee58f46 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-fa9844f0-e55d-48d0-b167-19e95ee58f46 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-fa9844f0-e55d-48d0-b167-19e95ee58f46 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-fa9844f0-e55d-48d0-b167-19e95ee58f46 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-fa9844f0-e55d-48d0-b167-19e95ee58f46 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-fa9844f0-e55d-48d0-b167-19e95ee58f46 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-fa9844f0-e55d-48d0-b167-19e95ee58f46 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-fa9844f0-e55d-48d0-b167-19e95ee58f46 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-fa9844f0-e55d-48d0-b167-19e95ee58f46 div.sk-estimator:hover {background-color: #d4ebff;}#sk-fa9844f0-e55d-48d0-b167-19e95ee58f46 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-fa9844f0-e55d-48d0-b167-19e95ee58f46 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-fa9844f0-e55d-48d0-b167-19e95ee58f46 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-fa9844f0-e55d-48d0-b167-19e95ee58f46 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-fa9844f0-e55d-48d0-b167-19e95ee58f46 div.sk-item {z-index: 1;}#sk-fa9844f0-e55d-48d0-b167-19e95ee58f46 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-fa9844f0-e55d-48d0-b167-19e95ee58f46 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-fa9844f0-e55d-48d0-b167-19e95ee58f46 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-fa9844f0-e55d-48d0-b167-19e95ee58f46 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-fa9844f0-e55d-48d0-b167-19e95ee58f46 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-fa9844f0-e55d-48d0-b167-19e95ee58f46 div.sk-parallel-item:only-child::after {width: 0;}#sk-fa9844f0-e55d-48d0-b167-19e95ee58f46 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-fa9844f0-e55d-48d0-b167-19e95ee58f46 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-fa9844f0-e55d-48d0-b167-19e95ee58f46 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-fa9844f0-e55d-48d0-b167-19e95ee58f46 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-fa9844f0-e55d-48d0-b167-19e95ee58f46 div.sk-text-repr-fallback {display: none;}</style><div id="sk-fa9844f0-e55d-48d0-b167-19e95ee58f46" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="adea7356-d08e-4f4c-a20b-e169a83f24ab" type="checkbox" ><label for="adea7356-d08e-4f4c-a20b-e169a83f24ab" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8a4321b7-8973-4d4c-bd29-ad778ebdb0bc" type="checkbox" ><label for="8a4321b7-8973-4d4c-bd29-ad778ebdb0bc" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="91d74093-5dfb-4144-ae7b-b0258437d1b1" type="checkbox" ><label for="91d74093-5dfb-4144-ae7b-b0258437d1b1" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-01b6c2f7-8747-4a39-a07c-7589560b788a {color: black;background-color: white;}#sk-01b6c2f7-8747-4a39-a07c-7589560b788a pre{padding: 0;}#sk-01b6c2f7-8747-4a39-a07c-7589560b788a div.sk-toggleable {background-color: white;}#sk-01b6c2f7-8747-4a39-a07c-7589560b788a label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-01b6c2f7-8747-4a39-a07c-7589560b788a label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-01b6c2f7-8747-4a39-a07c-7589560b788a label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-01b6c2f7-8747-4a39-a07c-7589560b788a div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-01b6c2f7-8747-4a39-a07c-7589560b788a div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-01b6c2f7-8747-4a39-a07c-7589560b788a div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-01b6c2f7-8747-4a39-a07c-7589560b788a input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-01b6c2f7-8747-4a39-a07c-7589560b788a input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-01b6c2f7-8747-4a39-a07c-7589560b788a div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-01b6c2f7-8747-4a39-a07c-7589560b788a div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-01b6c2f7-8747-4a39-a07c-7589560b788a input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-01b6c2f7-8747-4a39-a07c-7589560b788a div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-01b6c2f7-8747-4a39-a07c-7589560b788a div.sk-estimator:hover {background-color: #d4ebff;}#sk-01b6c2f7-8747-4a39-a07c-7589560b788a div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-01b6c2f7-8747-4a39-a07c-7589560b788a div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-01b6c2f7-8747-4a39-a07c-7589560b788a div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-01b6c2f7-8747-4a39-a07c-7589560b788a div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-01b6c2f7-8747-4a39-a07c-7589560b788a div.sk-item {z-index: 1;}#sk-01b6c2f7-8747-4a39-a07c-7589560b788a div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-01b6c2f7-8747-4a39-a07c-7589560b788a div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-01b6c2f7-8747-4a39-a07c-7589560b788a div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-01b6c2f7-8747-4a39-a07c-7589560b788a div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-01b6c2f7-8747-4a39-a07c-7589560b788a div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-01b6c2f7-8747-4a39-a07c-7589560b788a div.sk-parallel-item:only-child::after {width: 0;}#sk-01b6c2f7-8747-4a39-a07c-7589560b788a div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-01b6c2f7-8747-4a39-a07c-7589560b788a div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-01b6c2f7-8747-4a39-a07c-7589560b788a div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-01b6c2f7-8747-4a39-a07c-7589560b788a div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-01b6c2f7-8747-4a39-a07c-7589560b788a div.sk-text-repr-fallback {display: none;}</style><div id="sk-01b6c2f7-8747-4a39-a07c-7589560b788a" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b956b28c-2eb3-4b1c-872b-029f48ad0af7" type="checkbox" ><label for="b956b28c-2eb3-4b1c-872b-029f48ad0af7" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ef2b7d9f-edcf-4bf0-83f0-33accc210da1" type="checkbox" ><label for="ef2b7d9f-edcf-4bf0-83f0-33accc210da1" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d3116f3d-a4f3-4943-9a5f-11a2d1e2f308" type="checkbox" ><label for="d3116f3d-a4f3-4943-9a5f-11a2d1e2f308" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="97ea47e1-60d1-4e10-a3a3-8aeecf20b4dd" type="checkbox" ><label for="97ea47e1-60d1-4e10-a3a3-8aeecf20b4dd" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-ddcafe1a-a9e5-420d-80fd-486fa925fb08 {color: black;background-color: white;}#sk-ddcafe1a-a9e5-420d-80fd-486fa925fb08 pre{padding: 0;}#sk-ddcafe1a-a9e5-420d-80fd-486fa925fb08 div.sk-toggleable {background-color: white;}#sk-ddcafe1a-a9e5-420d-80fd-486fa925fb08 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-ddcafe1a-a9e5-420d-80fd-486fa925fb08 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-ddcafe1a-a9e5-420d-80fd-486fa925fb08 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-ddcafe1a-a9e5-420d-80fd-486fa925fb08 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-ddcafe1a-a9e5-420d-80fd-486fa925fb08 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-ddcafe1a-a9e5-420d-80fd-486fa925fb08 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-ddcafe1a-a9e5-420d-80fd-486fa925fb08 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-ddcafe1a-a9e5-420d-80fd-486fa925fb08 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-ddcafe1a-a9e5-420d-80fd-486fa925fb08 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ddcafe1a-a9e5-420d-80fd-486fa925fb08 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ddcafe1a-a9e5-420d-80fd-486fa925fb08 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-ddcafe1a-a9e5-420d-80fd-486fa925fb08 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-ddcafe1a-a9e5-420d-80fd-486fa925fb08 div.sk-estimator:hover {background-color: #d4ebff;}#sk-ddcafe1a-a9e5-420d-80fd-486fa925fb08 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-ddcafe1a-a9e5-420d-80fd-486fa925fb08 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-ddcafe1a-a9e5-420d-80fd-486fa925fb08 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ddcafe1a-a9e5-420d-80fd-486fa925fb08 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-ddcafe1a-a9e5-420d-80fd-486fa925fb08 div.sk-item {z-index: 1;}#sk-ddcafe1a-a9e5-420d-80fd-486fa925fb08 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-ddcafe1a-a9e5-420d-80fd-486fa925fb08 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ddcafe1a-a9e5-420d-80fd-486fa925fb08 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-ddcafe1a-a9e5-420d-80fd-486fa925fb08 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-ddcafe1a-a9e5-420d-80fd-486fa925fb08 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-ddcafe1a-a9e5-420d-80fd-486fa925fb08 div.sk-parallel-item:only-child::after {width: 0;}#sk-ddcafe1a-a9e5-420d-80fd-486fa925fb08 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-ddcafe1a-a9e5-420d-80fd-486fa925fb08 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-ddcafe1a-a9e5-420d-80fd-486fa925fb08 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-ddcafe1a-a9e5-420d-80fd-486fa925fb08 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-ddcafe1a-a9e5-420d-80fd-486fa925fb08 div.sk-text-repr-fallback {display: none;}</style><div id="sk-ddcafe1a-a9e5-420d-80fd-486fa925fb08" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4ba75cdd-5c23-4948-950d-6b5237d85dc3" type="checkbox" ><label for="4ba75cdd-5c23-4948-950d-6b5237d85dc3" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d848f92c-82dc-4d65-af99-0a7f39c41c8c" type="checkbox" ><label for="d848f92c-82dc-4d65-af99-0a7f39c41c8c" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="57922aa6-91e7-4eab-8eb6-5f4d155bec5d" type="checkbox" ><label for="57922aa6-91e7-4eab-8eb6-5f4d155bec5d" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-1d8545d2-143f-4e5b-a681-f7170bf51b7a {color: black;background-color: white;}#sk-1d8545d2-143f-4e5b-a681-f7170bf51b7a pre{padding: 0;}#sk-1d8545d2-143f-4e5b-a681-f7170bf51b7a div.sk-toggleable {background-color: white;}#sk-1d8545d2-143f-4e5b-a681-f7170bf51b7a label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-1d8545d2-143f-4e5b-a681-f7170bf51b7a label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-1d8545d2-143f-4e5b-a681-f7170bf51b7a label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-1d8545d2-143f-4e5b-a681-f7170bf51b7a div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-1d8545d2-143f-4e5b-a681-f7170bf51b7a div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-1d8545d2-143f-4e5b-a681-f7170bf51b7a div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-1d8545d2-143f-4e5b-a681-f7170bf51b7a input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-1d8545d2-143f-4e5b-a681-f7170bf51b7a input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-1d8545d2-143f-4e5b-a681-f7170bf51b7a div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-1d8545d2-143f-4e5b-a681-f7170bf51b7a div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-1d8545d2-143f-4e5b-a681-f7170bf51b7a input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-1d8545d2-143f-4e5b-a681-f7170bf51b7a div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-1d8545d2-143f-4e5b-a681-f7170bf51b7a div.sk-estimator:hover {background-color: #d4ebff;}#sk-1d8545d2-143f-4e5b-a681-f7170bf51b7a div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-1d8545d2-143f-4e5b-a681-f7170bf51b7a div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-1d8545d2-143f-4e5b-a681-f7170bf51b7a div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-1d8545d2-143f-4e5b-a681-f7170bf51b7a div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-1d8545d2-143f-4e5b-a681-f7170bf51b7a div.sk-item {z-index: 1;}#sk-1d8545d2-143f-4e5b-a681-f7170bf51b7a div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-1d8545d2-143f-4e5b-a681-f7170bf51b7a div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-1d8545d2-143f-4e5b-a681-f7170bf51b7a div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-1d8545d2-143f-4e5b-a681-f7170bf51b7a div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-1d8545d2-143f-4e5b-a681-f7170bf51b7a div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-1d8545d2-143f-4e5b-a681-f7170bf51b7a div.sk-parallel-item:only-child::after {width: 0;}#sk-1d8545d2-143f-4e5b-a681-f7170bf51b7a div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-1d8545d2-143f-4e5b-a681-f7170bf51b7a div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-1d8545d2-143f-4e5b-a681-f7170bf51b7a div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-1d8545d2-143f-4e5b-a681-f7170bf51b7a div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-1d8545d2-143f-4e5b-a681-f7170bf51b7a div.sk-text-repr-fallback {display: none;}</style><div id="sk-1d8545d2-143f-4e5b-a681-f7170bf51b7a" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4abf315e-5820-4f1b-ae16-99f7aab53a24" type="checkbox" ><label for="4abf315e-5820-4f1b-ae16-99f7aab53a24" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e7c538b9-f7f2-4d52-b374-4c6eca90807a" type="checkbox" ><label for="e7c538b9-f7f2-4d52-b374-4c6eca90807a" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5a268854-ac37-45fe-86d8-efff1d3dbfed" type="checkbox" ><label for="5a268854-ac37-45fe-86d8-efff1d3dbfed" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b2beb1d4-f48b-429c-906c-6947c0b6800c" type="checkbox" ><label for="b2beb1d4-f48b-429c-906c-6947c0b6800c" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5fb1594e-8783-41db-9ef5-f84f839fb616" type="checkbox" ><label for="5fb1594e-8783-41db-9ef5-f84f839fb616" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="733e88ff-8cc7-48a8-8afb-481cfb40562b" type="checkbox" ><label for="733e88ff-8cc7-48a8-8afb-481cfb40562b" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ca715ef1-e9f0-40ef-8f2f-992d7e1f40a2" type="checkbox" ><label for="ca715ef1-e9f0-40ef-8f2f-992d7e1f40a2" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d8268894-70d5-4445-b581-fb5b35a2c939" type="checkbox" ><label for="d8268894-70d5-4445-b581-fb5b35a2c939" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="54eece4f-b5ef-4680-b36f-47825b2b1b0c" type="checkbox" ><label for="54eece4f-b5ef-4680-b36f-47825b2b1b0c" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-0653a3ea-ee6a-408e-b387-03c71c194912 {color: black;background-color: white;}#sk-0653a3ea-ee6a-408e-b387-03c71c194912 pre{padding: 0;}#sk-0653a3ea-ee6a-408e-b387-03c71c194912 div.sk-toggleable {background-color: white;}#sk-0653a3ea-ee6a-408e-b387-03c71c194912 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-0653a3ea-ee6a-408e-b387-03c71c194912 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-0653a3ea-ee6a-408e-b387-03c71c194912 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-0653a3ea-ee6a-408e-b387-03c71c194912 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-0653a3ea-ee6a-408e-b387-03c71c194912 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-0653a3ea-ee6a-408e-b387-03c71c194912 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-0653a3ea-ee6a-408e-b387-03c71c194912 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-0653a3ea-ee6a-408e-b387-03c71c194912 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-0653a3ea-ee6a-408e-b387-03c71c194912 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-0653a3ea-ee6a-408e-b387-03c71c194912 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-0653a3ea-ee6a-408e-b387-03c71c194912 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-0653a3ea-ee6a-408e-b387-03c71c194912 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-0653a3ea-ee6a-408e-b387-03c71c194912 div.sk-estimator:hover {background-color: #d4ebff;}#sk-0653a3ea-ee6a-408e-b387-03c71c194912 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-0653a3ea-ee6a-408e-b387-03c71c194912 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-0653a3ea-ee6a-408e-b387-03c71c194912 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-0653a3ea-ee6a-408e-b387-03c71c194912 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-0653a3ea-ee6a-408e-b387-03c71c194912 div.sk-item {z-index: 1;}#sk-0653a3ea-ee6a-408e-b387-03c71c194912 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-0653a3ea-ee6a-408e-b387-03c71c194912 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-0653a3ea-ee6a-408e-b387-03c71c194912 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-0653a3ea-ee6a-408e-b387-03c71c194912 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-0653a3ea-ee6a-408e-b387-03c71c194912 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-0653a3ea-ee6a-408e-b387-03c71c194912 div.sk-parallel-item:only-child::after {width: 0;}#sk-0653a3ea-ee6a-408e-b387-03c71c194912 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-0653a3ea-ee6a-408e-b387-03c71c194912 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-0653a3ea-ee6a-408e-b387-03c71c194912 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-0653a3ea-ee6a-408e-b387-03c71c194912 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-0653a3ea-ee6a-408e-b387-03c71c194912 div.sk-text-repr-fallback {display: none;}</style><div id="sk-0653a3ea-ee6a-408e-b387-03c71c194912" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="742ca2bf-549a-4278-a4b7-fbfed77faa4c" type="checkbox" ><label for="742ca2bf-549a-4278-a4b7-fbfed77faa4c" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d8ed36da-15bf-41b3-b971-3d7daf7ae71c" type="checkbox" ><label for="d8ed36da-15bf-41b3-b971-3d7daf7ae71c" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="70927f09-0b2d-4895-a164-63e4ed514f1a" type="checkbox" ><label for="70927f09-0b2d-4895-a164-63e4ed514f1a" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5f619564-21c8-4ae9-9927-7956b7e5ae64" type="checkbox" ><label for="5f619564-21c8-4ae9-9927-7956b7e5ae64" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ba2da978-1e37-47fe-83dc-7744e5a97890" type="checkbox" ><label for="ba2da978-1e37-47fe-83dc-7744e5a97890" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f8d73c0c-2d73-457b-aa64-4a95145c19ef" type="checkbox" ><label for="f8d73c0c-2d73-457b-aa64-4a95145c19ef" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2e8fb40d-d109-4175-943a-d4f5a27fdb86" type="checkbox" ><label for="2e8fb40d-d109-4175-943a-d4f5a27fdb86" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b193b31e-74e0-4e06-9b36-4eb8fb8ef653" type="checkbox" ><label for="b193b31e-74e0-4e06-9b36-4eb8fb8ef653" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="08ffe2dc-7edd-4866-8e8a-585ab59cd580" type="checkbox" ><label for="08ffe2dc-7edd-4866-8e8a-585ab59cd580" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.071 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
