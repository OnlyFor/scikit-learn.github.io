
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-b36e7a25-9a9e-4e59-871e-8ce52233e103 {color: black;background-color: white;}#sk-b36e7a25-9a9e-4e59-871e-8ce52233e103 pre{padding: 0;}#sk-b36e7a25-9a9e-4e59-871e-8ce52233e103 div.sk-toggleable {background-color: white;}#sk-b36e7a25-9a9e-4e59-871e-8ce52233e103 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-b36e7a25-9a9e-4e59-871e-8ce52233e103 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-b36e7a25-9a9e-4e59-871e-8ce52233e103 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-b36e7a25-9a9e-4e59-871e-8ce52233e103 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-b36e7a25-9a9e-4e59-871e-8ce52233e103 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-b36e7a25-9a9e-4e59-871e-8ce52233e103 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-b36e7a25-9a9e-4e59-871e-8ce52233e103 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-b36e7a25-9a9e-4e59-871e-8ce52233e103 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-b36e7a25-9a9e-4e59-871e-8ce52233e103 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b36e7a25-9a9e-4e59-871e-8ce52233e103 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b36e7a25-9a9e-4e59-871e-8ce52233e103 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-b36e7a25-9a9e-4e59-871e-8ce52233e103 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-b36e7a25-9a9e-4e59-871e-8ce52233e103 div.sk-estimator:hover {background-color: #d4ebff;}#sk-b36e7a25-9a9e-4e59-871e-8ce52233e103 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-b36e7a25-9a9e-4e59-871e-8ce52233e103 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-b36e7a25-9a9e-4e59-871e-8ce52233e103 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b36e7a25-9a9e-4e59-871e-8ce52233e103 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-b36e7a25-9a9e-4e59-871e-8ce52233e103 div.sk-item {z-index: 1;}#sk-b36e7a25-9a9e-4e59-871e-8ce52233e103 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-b36e7a25-9a9e-4e59-871e-8ce52233e103 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b36e7a25-9a9e-4e59-871e-8ce52233e103 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-b36e7a25-9a9e-4e59-871e-8ce52233e103 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-b36e7a25-9a9e-4e59-871e-8ce52233e103 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-b36e7a25-9a9e-4e59-871e-8ce52233e103 div.sk-parallel-item:only-child::after {width: 0;}#sk-b36e7a25-9a9e-4e59-871e-8ce52233e103 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-b36e7a25-9a9e-4e59-871e-8ce52233e103 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-b36e7a25-9a9e-4e59-871e-8ce52233e103 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-b36e7a25-9a9e-4e59-871e-8ce52233e103 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-b36e7a25-9a9e-4e59-871e-8ce52233e103 div.sk-text-repr-fallback {display: none;}</style><div id="sk-b36e7a25-9a9e-4e59-871e-8ce52233e103" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3e3003db-a2cb-4244-a2f5-0484230cc62f" type="checkbox" ><label for="3e3003db-a2cb-4244-a2f5-0484230cc62f" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1d3201fc-4fb6-4822-b5c5-128b37c793e2" type="checkbox" ><label for="1d3201fc-4fb6-4822-b5c5-128b37c793e2" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3336af3c-c234-4bc2-9ed3-ecd640737c1b" type="checkbox" ><label for="3336af3c-c234-4bc2-9ed3-ecd640737c1b" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-971743e7-0472-4967-81b4-20c56911760d {color: black;background-color: white;}#sk-971743e7-0472-4967-81b4-20c56911760d pre{padding: 0;}#sk-971743e7-0472-4967-81b4-20c56911760d div.sk-toggleable {background-color: white;}#sk-971743e7-0472-4967-81b4-20c56911760d label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-971743e7-0472-4967-81b4-20c56911760d label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-971743e7-0472-4967-81b4-20c56911760d label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-971743e7-0472-4967-81b4-20c56911760d div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-971743e7-0472-4967-81b4-20c56911760d div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-971743e7-0472-4967-81b4-20c56911760d div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-971743e7-0472-4967-81b4-20c56911760d input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-971743e7-0472-4967-81b4-20c56911760d input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-971743e7-0472-4967-81b4-20c56911760d div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-971743e7-0472-4967-81b4-20c56911760d div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-971743e7-0472-4967-81b4-20c56911760d input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-971743e7-0472-4967-81b4-20c56911760d div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-971743e7-0472-4967-81b4-20c56911760d div.sk-estimator:hover {background-color: #d4ebff;}#sk-971743e7-0472-4967-81b4-20c56911760d div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-971743e7-0472-4967-81b4-20c56911760d div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-971743e7-0472-4967-81b4-20c56911760d div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-971743e7-0472-4967-81b4-20c56911760d div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-971743e7-0472-4967-81b4-20c56911760d div.sk-item {z-index: 1;}#sk-971743e7-0472-4967-81b4-20c56911760d div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-971743e7-0472-4967-81b4-20c56911760d div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-971743e7-0472-4967-81b4-20c56911760d div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-971743e7-0472-4967-81b4-20c56911760d div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-971743e7-0472-4967-81b4-20c56911760d div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-971743e7-0472-4967-81b4-20c56911760d div.sk-parallel-item:only-child::after {width: 0;}#sk-971743e7-0472-4967-81b4-20c56911760d div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-971743e7-0472-4967-81b4-20c56911760d div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-971743e7-0472-4967-81b4-20c56911760d div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-971743e7-0472-4967-81b4-20c56911760d div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-971743e7-0472-4967-81b4-20c56911760d div.sk-text-repr-fallback {display: none;}</style><div id="sk-971743e7-0472-4967-81b4-20c56911760d" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e0e3a2a4-76ba-4570-8fcd-2391148605ac" type="checkbox" ><label for="e0e3a2a4-76ba-4570-8fcd-2391148605ac" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="110d9881-05f7-47b6-99c6-a44a5e11bdaf" type="checkbox" ><label for="110d9881-05f7-47b6-99c6-a44a5e11bdaf" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8ba050be-4d05-4b5a-9a72-7de505707404" type="checkbox" ><label for="8ba050be-4d05-4b5a-9a72-7de505707404" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="71206841-c921-450b-b40f-2ebb61b732f3" type="checkbox" ><label for="71206841-c921-450b-b40f-2ebb61b732f3" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-63907cc2-7a1d-4b7f-9292-7a58f75e8c56 {color: black;background-color: white;}#sk-63907cc2-7a1d-4b7f-9292-7a58f75e8c56 pre{padding: 0;}#sk-63907cc2-7a1d-4b7f-9292-7a58f75e8c56 div.sk-toggleable {background-color: white;}#sk-63907cc2-7a1d-4b7f-9292-7a58f75e8c56 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-63907cc2-7a1d-4b7f-9292-7a58f75e8c56 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-63907cc2-7a1d-4b7f-9292-7a58f75e8c56 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-63907cc2-7a1d-4b7f-9292-7a58f75e8c56 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-63907cc2-7a1d-4b7f-9292-7a58f75e8c56 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-63907cc2-7a1d-4b7f-9292-7a58f75e8c56 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-63907cc2-7a1d-4b7f-9292-7a58f75e8c56 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-63907cc2-7a1d-4b7f-9292-7a58f75e8c56 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-63907cc2-7a1d-4b7f-9292-7a58f75e8c56 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-63907cc2-7a1d-4b7f-9292-7a58f75e8c56 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-63907cc2-7a1d-4b7f-9292-7a58f75e8c56 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-63907cc2-7a1d-4b7f-9292-7a58f75e8c56 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-63907cc2-7a1d-4b7f-9292-7a58f75e8c56 div.sk-estimator:hover {background-color: #d4ebff;}#sk-63907cc2-7a1d-4b7f-9292-7a58f75e8c56 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-63907cc2-7a1d-4b7f-9292-7a58f75e8c56 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-63907cc2-7a1d-4b7f-9292-7a58f75e8c56 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-63907cc2-7a1d-4b7f-9292-7a58f75e8c56 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-63907cc2-7a1d-4b7f-9292-7a58f75e8c56 div.sk-item {z-index: 1;}#sk-63907cc2-7a1d-4b7f-9292-7a58f75e8c56 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-63907cc2-7a1d-4b7f-9292-7a58f75e8c56 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-63907cc2-7a1d-4b7f-9292-7a58f75e8c56 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-63907cc2-7a1d-4b7f-9292-7a58f75e8c56 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-63907cc2-7a1d-4b7f-9292-7a58f75e8c56 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-63907cc2-7a1d-4b7f-9292-7a58f75e8c56 div.sk-parallel-item:only-child::after {width: 0;}#sk-63907cc2-7a1d-4b7f-9292-7a58f75e8c56 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-63907cc2-7a1d-4b7f-9292-7a58f75e8c56 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-63907cc2-7a1d-4b7f-9292-7a58f75e8c56 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-63907cc2-7a1d-4b7f-9292-7a58f75e8c56 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-63907cc2-7a1d-4b7f-9292-7a58f75e8c56 div.sk-text-repr-fallback {display: none;}</style><div id="sk-63907cc2-7a1d-4b7f-9292-7a58f75e8c56" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ed979493-cbca-4a53-81d1-c5fbad0be088" type="checkbox" ><label for="ed979493-cbca-4a53-81d1-c5fbad0be088" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="27d87f32-3e6a-4c28-a23d-3ebf11af5e62" type="checkbox" ><label for="27d87f32-3e6a-4c28-a23d-3ebf11af5e62" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="02fdff8d-fe5c-4a15-86be-a77a9e2d1b71" type="checkbox" ><label for="02fdff8d-fe5c-4a15-86be-a77a9e2d1b71" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-3d665723-20ba-4033-bc91-538be629628a {color: black;background-color: white;}#sk-3d665723-20ba-4033-bc91-538be629628a pre{padding: 0;}#sk-3d665723-20ba-4033-bc91-538be629628a div.sk-toggleable {background-color: white;}#sk-3d665723-20ba-4033-bc91-538be629628a label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-3d665723-20ba-4033-bc91-538be629628a label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-3d665723-20ba-4033-bc91-538be629628a label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-3d665723-20ba-4033-bc91-538be629628a div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-3d665723-20ba-4033-bc91-538be629628a div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-3d665723-20ba-4033-bc91-538be629628a div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-3d665723-20ba-4033-bc91-538be629628a input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-3d665723-20ba-4033-bc91-538be629628a input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-3d665723-20ba-4033-bc91-538be629628a div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-3d665723-20ba-4033-bc91-538be629628a div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-3d665723-20ba-4033-bc91-538be629628a input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-3d665723-20ba-4033-bc91-538be629628a div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-3d665723-20ba-4033-bc91-538be629628a div.sk-estimator:hover {background-color: #d4ebff;}#sk-3d665723-20ba-4033-bc91-538be629628a div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-3d665723-20ba-4033-bc91-538be629628a div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-3d665723-20ba-4033-bc91-538be629628a div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-3d665723-20ba-4033-bc91-538be629628a div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-3d665723-20ba-4033-bc91-538be629628a div.sk-item {z-index: 1;}#sk-3d665723-20ba-4033-bc91-538be629628a div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-3d665723-20ba-4033-bc91-538be629628a div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-3d665723-20ba-4033-bc91-538be629628a div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-3d665723-20ba-4033-bc91-538be629628a div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-3d665723-20ba-4033-bc91-538be629628a div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-3d665723-20ba-4033-bc91-538be629628a div.sk-parallel-item:only-child::after {width: 0;}#sk-3d665723-20ba-4033-bc91-538be629628a div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-3d665723-20ba-4033-bc91-538be629628a div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-3d665723-20ba-4033-bc91-538be629628a div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-3d665723-20ba-4033-bc91-538be629628a div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-3d665723-20ba-4033-bc91-538be629628a div.sk-text-repr-fallback {display: none;}</style><div id="sk-3d665723-20ba-4033-bc91-538be629628a" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="17da650b-3dc8-468c-b7d6-8ab3c14899c4" type="checkbox" ><label for="17da650b-3dc8-468c-b7d6-8ab3c14899c4" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6784a781-e76a-4a1e-8028-e3f25e2c38f3" type="checkbox" ><label for="6784a781-e76a-4a1e-8028-e3f25e2c38f3" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8f5a9def-c360-49e2-bcbb-2dbf03a578bc" type="checkbox" ><label for="8f5a9def-c360-49e2-bcbb-2dbf03a578bc" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8d5319a4-0ad7-441e-afbe-bf123d64f5e8" type="checkbox" ><label for="8d5319a4-0ad7-441e-afbe-bf123d64f5e8" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="32d48573-acdd-4474-83fa-17f60c9a587e" type="checkbox" ><label for="32d48573-acdd-4474-83fa-17f60c9a587e" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8f453617-1442-4884-b48f-3759c9847cb2" type="checkbox" ><label for="8f453617-1442-4884-b48f-3759c9847cb2" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bea4b10e-6333-4d05-ba23-fa9d798cf7f5" type="checkbox" ><label for="bea4b10e-6333-4d05-ba23-fa9d798cf7f5" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2cdb519e-d93f-41fc-9433-0081014593cf" type="checkbox" ><label for="2cdb519e-d93f-41fc-9433-0081014593cf" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="91ab13da-68f0-45c3-8e52-ca26d92628d1" type="checkbox" ><label for="91ab13da-68f0-45c3-8e52-ca26d92628d1" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-52a6d190-6621-4377-a7e4-91de847de4e9 {color: black;background-color: white;}#sk-52a6d190-6621-4377-a7e4-91de847de4e9 pre{padding: 0;}#sk-52a6d190-6621-4377-a7e4-91de847de4e9 div.sk-toggleable {background-color: white;}#sk-52a6d190-6621-4377-a7e4-91de847de4e9 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-52a6d190-6621-4377-a7e4-91de847de4e9 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-52a6d190-6621-4377-a7e4-91de847de4e9 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-52a6d190-6621-4377-a7e4-91de847de4e9 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-52a6d190-6621-4377-a7e4-91de847de4e9 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-52a6d190-6621-4377-a7e4-91de847de4e9 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-52a6d190-6621-4377-a7e4-91de847de4e9 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-52a6d190-6621-4377-a7e4-91de847de4e9 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-52a6d190-6621-4377-a7e4-91de847de4e9 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-52a6d190-6621-4377-a7e4-91de847de4e9 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-52a6d190-6621-4377-a7e4-91de847de4e9 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-52a6d190-6621-4377-a7e4-91de847de4e9 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-52a6d190-6621-4377-a7e4-91de847de4e9 div.sk-estimator:hover {background-color: #d4ebff;}#sk-52a6d190-6621-4377-a7e4-91de847de4e9 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-52a6d190-6621-4377-a7e4-91de847de4e9 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-52a6d190-6621-4377-a7e4-91de847de4e9 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-52a6d190-6621-4377-a7e4-91de847de4e9 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-52a6d190-6621-4377-a7e4-91de847de4e9 div.sk-item {z-index: 1;}#sk-52a6d190-6621-4377-a7e4-91de847de4e9 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-52a6d190-6621-4377-a7e4-91de847de4e9 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-52a6d190-6621-4377-a7e4-91de847de4e9 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-52a6d190-6621-4377-a7e4-91de847de4e9 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-52a6d190-6621-4377-a7e4-91de847de4e9 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-52a6d190-6621-4377-a7e4-91de847de4e9 div.sk-parallel-item:only-child::after {width: 0;}#sk-52a6d190-6621-4377-a7e4-91de847de4e9 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-52a6d190-6621-4377-a7e4-91de847de4e9 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-52a6d190-6621-4377-a7e4-91de847de4e9 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-52a6d190-6621-4377-a7e4-91de847de4e9 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-52a6d190-6621-4377-a7e4-91de847de4e9 div.sk-text-repr-fallback {display: none;}</style><div id="sk-52a6d190-6621-4377-a7e4-91de847de4e9" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5698bb5d-2ba3-419f-82fe-318a963439cb" type="checkbox" ><label for="5698bb5d-2ba3-419f-82fe-318a963439cb" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ca9af8dc-68f3-490e-aff8-2cafd5eac8ef" type="checkbox" ><label for="ca9af8dc-68f3-490e-aff8-2cafd5eac8ef" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="47fbb467-6ce4-4884-bb1c-1f22699d19ce" type="checkbox" ><label for="47fbb467-6ce4-4884-bb1c-1f22699d19ce" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="486deed5-15eb-4e18-b901-93e751d56c6e" type="checkbox" ><label for="486deed5-15eb-4e18-b901-93e751d56c6e" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1683e20d-43ee-44d6-aab7-52d22fab104e" type="checkbox" ><label for="1683e20d-43ee-44d6-aab7-52d22fab104e" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="103bd8fa-89a0-480f-b9bb-038f1357749c" type="checkbox" ><label for="103bd8fa-89a0-480f-b9bb-038f1357749c" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="316bc7f5-b3fe-479d-866d-5a5ae6b9b768" type="checkbox" ><label for="316bc7f5-b3fe-479d-866d-5a5ae6b9b768" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="052bc860-de21-4ffb-98a8-5637d50e315b" type="checkbox" ><label for="052bc860-de21-4ffb-98a8-5637d50e315b" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e6972197-72d6-46a3-b394-42568cf4c4cb" type="checkbox" ><label for="e6972197-72d6-46a3-b394-42568cf4c4cb" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.072 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
