
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-f1a016e0-36ed-49bc-a8bc-b5ae08eccc4f {color: black;background-color: white;}#sk-f1a016e0-36ed-49bc-a8bc-b5ae08eccc4f pre{padding: 0;}#sk-f1a016e0-36ed-49bc-a8bc-b5ae08eccc4f div.sk-toggleable {background-color: white;}#sk-f1a016e0-36ed-49bc-a8bc-b5ae08eccc4f label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-f1a016e0-36ed-49bc-a8bc-b5ae08eccc4f label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-f1a016e0-36ed-49bc-a8bc-b5ae08eccc4f label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-f1a016e0-36ed-49bc-a8bc-b5ae08eccc4f div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-f1a016e0-36ed-49bc-a8bc-b5ae08eccc4f div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-f1a016e0-36ed-49bc-a8bc-b5ae08eccc4f div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-f1a016e0-36ed-49bc-a8bc-b5ae08eccc4f input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-f1a016e0-36ed-49bc-a8bc-b5ae08eccc4f input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-f1a016e0-36ed-49bc-a8bc-b5ae08eccc4f div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-f1a016e0-36ed-49bc-a8bc-b5ae08eccc4f div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-f1a016e0-36ed-49bc-a8bc-b5ae08eccc4f input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-f1a016e0-36ed-49bc-a8bc-b5ae08eccc4f div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-f1a016e0-36ed-49bc-a8bc-b5ae08eccc4f div.sk-estimator:hover {background-color: #d4ebff;}#sk-f1a016e0-36ed-49bc-a8bc-b5ae08eccc4f div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-f1a016e0-36ed-49bc-a8bc-b5ae08eccc4f div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-f1a016e0-36ed-49bc-a8bc-b5ae08eccc4f div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-f1a016e0-36ed-49bc-a8bc-b5ae08eccc4f div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-f1a016e0-36ed-49bc-a8bc-b5ae08eccc4f div.sk-item {z-index: 1;}#sk-f1a016e0-36ed-49bc-a8bc-b5ae08eccc4f div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-f1a016e0-36ed-49bc-a8bc-b5ae08eccc4f div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-f1a016e0-36ed-49bc-a8bc-b5ae08eccc4f div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-f1a016e0-36ed-49bc-a8bc-b5ae08eccc4f div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-f1a016e0-36ed-49bc-a8bc-b5ae08eccc4f div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-f1a016e0-36ed-49bc-a8bc-b5ae08eccc4f div.sk-parallel-item:only-child::after {width: 0;}#sk-f1a016e0-36ed-49bc-a8bc-b5ae08eccc4f div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-f1a016e0-36ed-49bc-a8bc-b5ae08eccc4f div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-f1a016e0-36ed-49bc-a8bc-b5ae08eccc4f div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-f1a016e0-36ed-49bc-a8bc-b5ae08eccc4f div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-f1a016e0-36ed-49bc-a8bc-b5ae08eccc4f div.sk-text-repr-fallback {display: none;}</style><div id="sk-f1a016e0-36ed-49bc-a8bc-b5ae08eccc4f" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7dd757c5-c14c-480c-b1b9-0bfea6858304" type="checkbox" ><label for="7dd757c5-c14c-480c-b1b9-0bfea6858304" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c9860213-6be6-4fb2-9eda-265669aa10da" type="checkbox" ><label for="c9860213-6be6-4fb2-9eda-265669aa10da" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="acf0b421-af03-4fc9-912c-5558f788e834" type="checkbox" ><label for="acf0b421-af03-4fc9-912c-5558f788e834" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-931fb048-fde7-4b91-87eb-4f97b35d13fb {color: black;background-color: white;}#sk-931fb048-fde7-4b91-87eb-4f97b35d13fb pre{padding: 0;}#sk-931fb048-fde7-4b91-87eb-4f97b35d13fb div.sk-toggleable {background-color: white;}#sk-931fb048-fde7-4b91-87eb-4f97b35d13fb label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-931fb048-fde7-4b91-87eb-4f97b35d13fb label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-931fb048-fde7-4b91-87eb-4f97b35d13fb label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-931fb048-fde7-4b91-87eb-4f97b35d13fb div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-931fb048-fde7-4b91-87eb-4f97b35d13fb div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-931fb048-fde7-4b91-87eb-4f97b35d13fb div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-931fb048-fde7-4b91-87eb-4f97b35d13fb input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-931fb048-fde7-4b91-87eb-4f97b35d13fb input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-931fb048-fde7-4b91-87eb-4f97b35d13fb div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-931fb048-fde7-4b91-87eb-4f97b35d13fb div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-931fb048-fde7-4b91-87eb-4f97b35d13fb input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-931fb048-fde7-4b91-87eb-4f97b35d13fb div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-931fb048-fde7-4b91-87eb-4f97b35d13fb div.sk-estimator:hover {background-color: #d4ebff;}#sk-931fb048-fde7-4b91-87eb-4f97b35d13fb div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-931fb048-fde7-4b91-87eb-4f97b35d13fb div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-931fb048-fde7-4b91-87eb-4f97b35d13fb div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-931fb048-fde7-4b91-87eb-4f97b35d13fb div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-931fb048-fde7-4b91-87eb-4f97b35d13fb div.sk-item {z-index: 1;}#sk-931fb048-fde7-4b91-87eb-4f97b35d13fb div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-931fb048-fde7-4b91-87eb-4f97b35d13fb div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-931fb048-fde7-4b91-87eb-4f97b35d13fb div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-931fb048-fde7-4b91-87eb-4f97b35d13fb div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-931fb048-fde7-4b91-87eb-4f97b35d13fb div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-931fb048-fde7-4b91-87eb-4f97b35d13fb div.sk-parallel-item:only-child::after {width: 0;}#sk-931fb048-fde7-4b91-87eb-4f97b35d13fb div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-931fb048-fde7-4b91-87eb-4f97b35d13fb div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-931fb048-fde7-4b91-87eb-4f97b35d13fb div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-931fb048-fde7-4b91-87eb-4f97b35d13fb div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-931fb048-fde7-4b91-87eb-4f97b35d13fb div.sk-text-repr-fallback {display: none;}</style><div id="sk-931fb048-fde7-4b91-87eb-4f97b35d13fb" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8d7f3baa-c2e5-486a-b847-8ff63d113663" type="checkbox" ><label for="8d7f3baa-c2e5-486a-b847-8ff63d113663" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b60a0e3c-21ff-4c66-b34a-ff0789f4226a" type="checkbox" ><label for="b60a0e3c-21ff-4c66-b34a-ff0789f4226a" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="31c4778c-6f27-4b4b-a7f4-0e6795b02747" type="checkbox" ><label for="31c4778c-6f27-4b4b-a7f4-0e6795b02747" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a1d857f4-2ff7-4153-8032-b6b923d90e47" type="checkbox" ><label for="a1d857f4-2ff7-4153-8032-b6b923d90e47" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-9bed0cd8-5f5c-435f-9111-da4eb2552502 {color: black;background-color: white;}#sk-9bed0cd8-5f5c-435f-9111-da4eb2552502 pre{padding: 0;}#sk-9bed0cd8-5f5c-435f-9111-da4eb2552502 div.sk-toggleable {background-color: white;}#sk-9bed0cd8-5f5c-435f-9111-da4eb2552502 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-9bed0cd8-5f5c-435f-9111-da4eb2552502 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-9bed0cd8-5f5c-435f-9111-da4eb2552502 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-9bed0cd8-5f5c-435f-9111-da4eb2552502 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-9bed0cd8-5f5c-435f-9111-da4eb2552502 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-9bed0cd8-5f5c-435f-9111-da4eb2552502 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-9bed0cd8-5f5c-435f-9111-da4eb2552502 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-9bed0cd8-5f5c-435f-9111-da4eb2552502 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-9bed0cd8-5f5c-435f-9111-da4eb2552502 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-9bed0cd8-5f5c-435f-9111-da4eb2552502 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-9bed0cd8-5f5c-435f-9111-da4eb2552502 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-9bed0cd8-5f5c-435f-9111-da4eb2552502 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-9bed0cd8-5f5c-435f-9111-da4eb2552502 div.sk-estimator:hover {background-color: #d4ebff;}#sk-9bed0cd8-5f5c-435f-9111-da4eb2552502 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-9bed0cd8-5f5c-435f-9111-da4eb2552502 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-9bed0cd8-5f5c-435f-9111-da4eb2552502 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-9bed0cd8-5f5c-435f-9111-da4eb2552502 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-9bed0cd8-5f5c-435f-9111-da4eb2552502 div.sk-item {z-index: 1;}#sk-9bed0cd8-5f5c-435f-9111-da4eb2552502 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-9bed0cd8-5f5c-435f-9111-da4eb2552502 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-9bed0cd8-5f5c-435f-9111-da4eb2552502 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-9bed0cd8-5f5c-435f-9111-da4eb2552502 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-9bed0cd8-5f5c-435f-9111-da4eb2552502 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-9bed0cd8-5f5c-435f-9111-da4eb2552502 div.sk-parallel-item:only-child::after {width: 0;}#sk-9bed0cd8-5f5c-435f-9111-da4eb2552502 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-9bed0cd8-5f5c-435f-9111-da4eb2552502 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-9bed0cd8-5f5c-435f-9111-da4eb2552502 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-9bed0cd8-5f5c-435f-9111-da4eb2552502 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-9bed0cd8-5f5c-435f-9111-da4eb2552502 div.sk-text-repr-fallback {display: none;}</style><div id="sk-9bed0cd8-5f5c-435f-9111-da4eb2552502" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="027a412a-ea33-4121-8bcc-c18acbf01efb" type="checkbox" ><label for="027a412a-ea33-4121-8bcc-c18acbf01efb" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bf119dcd-ae87-417d-800f-2de03f355cef" type="checkbox" ><label for="bf119dcd-ae87-417d-800f-2de03f355cef" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4ff4321d-fa5c-4a94-8a90-cbb2f6f9991f" type="checkbox" ><label for="4ff4321d-fa5c-4a94-8a90-cbb2f6f9991f" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-633d6605-72de-4c27-b2eb-25b549dc13fc {color: black;background-color: white;}#sk-633d6605-72de-4c27-b2eb-25b549dc13fc pre{padding: 0;}#sk-633d6605-72de-4c27-b2eb-25b549dc13fc div.sk-toggleable {background-color: white;}#sk-633d6605-72de-4c27-b2eb-25b549dc13fc label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-633d6605-72de-4c27-b2eb-25b549dc13fc label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-633d6605-72de-4c27-b2eb-25b549dc13fc label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-633d6605-72de-4c27-b2eb-25b549dc13fc div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-633d6605-72de-4c27-b2eb-25b549dc13fc div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-633d6605-72de-4c27-b2eb-25b549dc13fc div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-633d6605-72de-4c27-b2eb-25b549dc13fc input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-633d6605-72de-4c27-b2eb-25b549dc13fc input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-633d6605-72de-4c27-b2eb-25b549dc13fc div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-633d6605-72de-4c27-b2eb-25b549dc13fc div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-633d6605-72de-4c27-b2eb-25b549dc13fc input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-633d6605-72de-4c27-b2eb-25b549dc13fc div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-633d6605-72de-4c27-b2eb-25b549dc13fc div.sk-estimator:hover {background-color: #d4ebff;}#sk-633d6605-72de-4c27-b2eb-25b549dc13fc div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-633d6605-72de-4c27-b2eb-25b549dc13fc div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-633d6605-72de-4c27-b2eb-25b549dc13fc div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-633d6605-72de-4c27-b2eb-25b549dc13fc div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-633d6605-72de-4c27-b2eb-25b549dc13fc div.sk-item {z-index: 1;}#sk-633d6605-72de-4c27-b2eb-25b549dc13fc div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-633d6605-72de-4c27-b2eb-25b549dc13fc div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-633d6605-72de-4c27-b2eb-25b549dc13fc div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-633d6605-72de-4c27-b2eb-25b549dc13fc div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-633d6605-72de-4c27-b2eb-25b549dc13fc div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-633d6605-72de-4c27-b2eb-25b549dc13fc div.sk-parallel-item:only-child::after {width: 0;}#sk-633d6605-72de-4c27-b2eb-25b549dc13fc div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-633d6605-72de-4c27-b2eb-25b549dc13fc div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-633d6605-72de-4c27-b2eb-25b549dc13fc div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-633d6605-72de-4c27-b2eb-25b549dc13fc div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-633d6605-72de-4c27-b2eb-25b549dc13fc div.sk-text-repr-fallback {display: none;}</style><div id="sk-633d6605-72de-4c27-b2eb-25b549dc13fc" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3ccd8b0b-7f9b-4827-8e09-9464505af1cb" type="checkbox" ><label for="3ccd8b0b-7f9b-4827-8e09-9464505af1cb" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b3e4465d-a09e-4c35-ae55-a278fae927bc" type="checkbox" ><label for="b3e4465d-a09e-4c35-ae55-a278fae927bc" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="70e19585-425c-46f9-909c-0978b844749f" type="checkbox" ><label for="70e19585-425c-46f9-909c-0978b844749f" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="775390ef-b98d-469e-ad95-acecb59aa3f2" type="checkbox" ><label for="775390ef-b98d-469e-ad95-acecb59aa3f2" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9cac39e8-8a77-461c-a9a1-c406a75276eb" type="checkbox" ><label for="9cac39e8-8a77-461c-a9a1-c406a75276eb" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e1b787ca-0441-43bf-865f-bd758ec41e26" type="checkbox" ><label for="e1b787ca-0441-43bf-865f-bd758ec41e26" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bcf0c39d-44b8-4f4d-a82d-d6e3c7026bbe" type="checkbox" ><label for="bcf0c39d-44b8-4f4d-a82d-d6e3c7026bbe" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5134a4cb-25cc-465a-b5fa-25e6cc04ba77" type="checkbox" ><label for="5134a4cb-25cc-465a-b5fa-25e6cc04ba77" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bdc12c72-8c67-45bd-ac79-c81339380454" type="checkbox" ><label for="bdc12c72-8c67-45bd-ac79-c81339380454" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-a3e8b107-29d7-4378-a054-3132e9056deb {color: black;background-color: white;}#sk-a3e8b107-29d7-4378-a054-3132e9056deb pre{padding: 0;}#sk-a3e8b107-29d7-4378-a054-3132e9056deb div.sk-toggleable {background-color: white;}#sk-a3e8b107-29d7-4378-a054-3132e9056deb label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-a3e8b107-29d7-4378-a054-3132e9056deb label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-a3e8b107-29d7-4378-a054-3132e9056deb label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-a3e8b107-29d7-4378-a054-3132e9056deb div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-a3e8b107-29d7-4378-a054-3132e9056deb div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-a3e8b107-29d7-4378-a054-3132e9056deb div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-a3e8b107-29d7-4378-a054-3132e9056deb input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-a3e8b107-29d7-4378-a054-3132e9056deb input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-a3e8b107-29d7-4378-a054-3132e9056deb div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-a3e8b107-29d7-4378-a054-3132e9056deb div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-a3e8b107-29d7-4378-a054-3132e9056deb input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-a3e8b107-29d7-4378-a054-3132e9056deb div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-a3e8b107-29d7-4378-a054-3132e9056deb div.sk-estimator:hover {background-color: #d4ebff;}#sk-a3e8b107-29d7-4378-a054-3132e9056deb div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-a3e8b107-29d7-4378-a054-3132e9056deb div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-a3e8b107-29d7-4378-a054-3132e9056deb div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-a3e8b107-29d7-4378-a054-3132e9056deb div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-a3e8b107-29d7-4378-a054-3132e9056deb div.sk-item {z-index: 1;}#sk-a3e8b107-29d7-4378-a054-3132e9056deb div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-a3e8b107-29d7-4378-a054-3132e9056deb div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-a3e8b107-29d7-4378-a054-3132e9056deb div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-a3e8b107-29d7-4378-a054-3132e9056deb div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-a3e8b107-29d7-4378-a054-3132e9056deb div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-a3e8b107-29d7-4378-a054-3132e9056deb div.sk-parallel-item:only-child::after {width: 0;}#sk-a3e8b107-29d7-4378-a054-3132e9056deb div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-a3e8b107-29d7-4378-a054-3132e9056deb div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-a3e8b107-29d7-4378-a054-3132e9056deb div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-a3e8b107-29d7-4378-a054-3132e9056deb div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-a3e8b107-29d7-4378-a054-3132e9056deb div.sk-text-repr-fallback {display: none;}</style><div id="sk-a3e8b107-29d7-4378-a054-3132e9056deb" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4073c627-c308-4622-940f-e113d102a39c" type="checkbox" ><label for="4073c627-c308-4622-940f-e113d102a39c" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2f2bea58-86e6-478a-9c3e-5f767a6c4dda" type="checkbox" ><label for="2f2bea58-86e6-478a-9c3e-5f767a6c4dda" class="sk-toggleable__label sk-toggleable__label-arrow">estimator: Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessor&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;classifier&#x27;, RandomForestClassifier())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a81e8664-c421-42ff-84b4-11e34fd3f141" type="checkbox" ><label for="a81e8664-c421-42ff-84b4-11e34fd3f141" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="da611b0e-653e-48c3-bcaa-930aeda16623" type="checkbox" ><label for="da611b0e-653e-48c3-bcaa-930aeda16623" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="08953617-cef7-46a1-88a2-e461f5fdc4c2" type="checkbox" ><label for="08953617-cef7-46a1-88a2-e461f5fdc4c2" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1a0ab69d-5a42-46da-b06b-123490c4e77d" type="checkbox" ><label for="1a0ab69d-5a42-46da-b06b-123490c4e77d" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2136af26-89e2-4a12-8815-fde68f8d918f" type="checkbox" ><label for="2136af26-89e2-4a12-8815-fde68f8d918f" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5229cf56-505f-4155-ba6f-6912cf19c6ce" type="checkbox" ><label for="5229cf56-505f-4155-ba6f-6912cf19c6ce" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6b717f97-620a-44dc-a914-6d2ebc673b54" type="checkbox" ><label for="6b717f97-620a-44dc-a914-6d2ebc673b54" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="028db1d3-9285-44d5-a756-bbcbedfe86de" type="checkbox" ><label for="028db1d3-9285-44d5-a756-bbcbedfe86de" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.086 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
