
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-e03c315b-e0a7-4f1e-8497-8c279e2cf829 {color: black;background-color: white;}#sk-e03c315b-e0a7-4f1e-8497-8c279e2cf829 pre{padding: 0;}#sk-e03c315b-e0a7-4f1e-8497-8c279e2cf829 div.sk-toggleable {background-color: white;}#sk-e03c315b-e0a7-4f1e-8497-8c279e2cf829 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-e03c315b-e0a7-4f1e-8497-8c279e2cf829 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-e03c315b-e0a7-4f1e-8497-8c279e2cf829 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-e03c315b-e0a7-4f1e-8497-8c279e2cf829 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-e03c315b-e0a7-4f1e-8497-8c279e2cf829 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-e03c315b-e0a7-4f1e-8497-8c279e2cf829 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-e03c315b-e0a7-4f1e-8497-8c279e2cf829 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-e03c315b-e0a7-4f1e-8497-8c279e2cf829 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-e03c315b-e0a7-4f1e-8497-8c279e2cf829 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-e03c315b-e0a7-4f1e-8497-8c279e2cf829 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-e03c315b-e0a7-4f1e-8497-8c279e2cf829 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-e03c315b-e0a7-4f1e-8497-8c279e2cf829 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-e03c315b-e0a7-4f1e-8497-8c279e2cf829 div.sk-estimator:hover {background-color: #d4ebff;}#sk-e03c315b-e0a7-4f1e-8497-8c279e2cf829 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-e03c315b-e0a7-4f1e-8497-8c279e2cf829 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-e03c315b-e0a7-4f1e-8497-8c279e2cf829 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-e03c315b-e0a7-4f1e-8497-8c279e2cf829 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-e03c315b-e0a7-4f1e-8497-8c279e2cf829 div.sk-item {z-index: 1;}#sk-e03c315b-e0a7-4f1e-8497-8c279e2cf829 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-e03c315b-e0a7-4f1e-8497-8c279e2cf829 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-e03c315b-e0a7-4f1e-8497-8c279e2cf829 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-e03c315b-e0a7-4f1e-8497-8c279e2cf829 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-e03c315b-e0a7-4f1e-8497-8c279e2cf829 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-e03c315b-e0a7-4f1e-8497-8c279e2cf829 div.sk-parallel-item:only-child::after {width: 0;}#sk-e03c315b-e0a7-4f1e-8497-8c279e2cf829 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-e03c315b-e0a7-4f1e-8497-8c279e2cf829 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-e03c315b-e0a7-4f1e-8497-8c279e2cf829 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-e03c315b-e0a7-4f1e-8497-8c279e2cf829 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-e03c315b-e0a7-4f1e-8497-8c279e2cf829 div.sk-text-repr-fallback {display: none;}</style><div id="sk-e03c315b-e0a7-4f1e-8497-8c279e2cf829" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="42f0e785-3dda-4562-8278-bbd5919c75c8" type="checkbox" ><label for="42f0e785-3dda-4562-8278-bbd5919c75c8" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7b2943aa-528b-433a-ac55-38cc73a733cb" type="checkbox" ><label for="7b2943aa-528b-433a-ac55-38cc73a733cb" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="dfa88712-eb65-49af-99b5-a26b0f79a906" type="checkbox" ><label for="dfa88712-eb65-49af-99b5-a26b0f79a906" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-2cf4cea3-3084-4185-9cc6-dccabd6408e1 {color: black;background-color: white;}#sk-2cf4cea3-3084-4185-9cc6-dccabd6408e1 pre{padding: 0;}#sk-2cf4cea3-3084-4185-9cc6-dccabd6408e1 div.sk-toggleable {background-color: white;}#sk-2cf4cea3-3084-4185-9cc6-dccabd6408e1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-2cf4cea3-3084-4185-9cc6-dccabd6408e1 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-2cf4cea3-3084-4185-9cc6-dccabd6408e1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-2cf4cea3-3084-4185-9cc6-dccabd6408e1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-2cf4cea3-3084-4185-9cc6-dccabd6408e1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-2cf4cea3-3084-4185-9cc6-dccabd6408e1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-2cf4cea3-3084-4185-9cc6-dccabd6408e1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-2cf4cea3-3084-4185-9cc6-dccabd6408e1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-2cf4cea3-3084-4185-9cc6-dccabd6408e1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-2cf4cea3-3084-4185-9cc6-dccabd6408e1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-2cf4cea3-3084-4185-9cc6-dccabd6408e1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-2cf4cea3-3084-4185-9cc6-dccabd6408e1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-2cf4cea3-3084-4185-9cc6-dccabd6408e1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-2cf4cea3-3084-4185-9cc6-dccabd6408e1 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-2cf4cea3-3084-4185-9cc6-dccabd6408e1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-2cf4cea3-3084-4185-9cc6-dccabd6408e1 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-2cf4cea3-3084-4185-9cc6-dccabd6408e1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-2cf4cea3-3084-4185-9cc6-dccabd6408e1 div.sk-item {z-index: 1;}#sk-2cf4cea3-3084-4185-9cc6-dccabd6408e1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-2cf4cea3-3084-4185-9cc6-dccabd6408e1 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-2cf4cea3-3084-4185-9cc6-dccabd6408e1 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-2cf4cea3-3084-4185-9cc6-dccabd6408e1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-2cf4cea3-3084-4185-9cc6-dccabd6408e1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-2cf4cea3-3084-4185-9cc6-dccabd6408e1 div.sk-parallel-item:only-child::after {width: 0;}#sk-2cf4cea3-3084-4185-9cc6-dccabd6408e1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-2cf4cea3-3084-4185-9cc6-dccabd6408e1 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-2cf4cea3-3084-4185-9cc6-dccabd6408e1 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-2cf4cea3-3084-4185-9cc6-dccabd6408e1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-2cf4cea3-3084-4185-9cc6-dccabd6408e1 div.sk-text-repr-fallback {display: none;}</style><div id="sk-2cf4cea3-3084-4185-9cc6-dccabd6408e1" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f82c96c6-33cf-4e7f-a0a5-a95c87dfcc6c" type="checkbox" ><label for="f82c96c6-33cf-4e7f-a0a5-a95c87dfcc6c" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="763cce00-2da5-4118-9477-a25a9ac1b8c4" type="checkbox" ><label for="763cce00-2da5-4118-9477-a25a9ac1b8c4" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fe5e80b6-ec3f-438e-8fbe-de44eb45d0fd" type="checkbox" ><label for="fe5e80b6-ec3f-438e-8fbe-de44eb45d0fd" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7b5ecfa0-d996-4971-b708-b5c04ad32c5a" type="checkbox" ><label for="7b5ecfa0-d996-4971-b708-b5c04ad32c5a" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-5a880126-0920-458d-a5a7-abb5fe9ea400 {color: black;background-color: white;}#sk-5a880126-0920-458d-a5a7-abb5fe9ea400 pre{padding: 0;}#sk-5a880126-0920-458d-a5a7-abb5fe9ea400 div.sk-toggleable {background-color: white;}#sk-5a880126-0920-458d-a5a7-abb5fe9ea400 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-5a880126-0920-458d-a5a7-abb5fe9ea400 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-5a880126-0920-458d-a5a7-abb5fe9ea400 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-5a880126-0920-458d-a5a7-abb5fe9ea400 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-5a880126-0920-458d-a5a7-abb5fe9ea400 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-5a880126-0920-458d-a5a7-abb5fe9ea400 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-5a880126-0920-458d-a5a7-abb5fe9ea400 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-5a880126-0920-458d-a5a7-abb5fe9ea400 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-5a880126-0920-458d-a5a7-abb5fe9ea400 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-5a880126-0920-458d-a5a7-abb5fe9ea400 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-5a880126-0920-458d-a5a7-abb5fe9ea400 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-5a880126-0920-458d-a5a7-abb5fe9ea400 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-5a880126-0920-458d-a5a7-abb5fe9ea400 div.sk-estimator:hover {background-color: #d4ebff;}#sk-5a880126-0920-458d-a5a7-abb5fe9ea400 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-5a880126-0920-458d-a5a7-abb5fe9ea400 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-5a880126-0920-458d-a5a7-abb5fe9ea400 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-5a880126-0920-458d-a5a7-abb5fe9ea400 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-5a880126-0920-458d-a5a7-abb5fe9ea400 div.sk-item {z-index: 1;}#sk-5a880126-0920-458d-a5a7-abb5fe9ea400 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-5a880126-0920-458d-a5a7-abb5fe9ea400 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-5a880126-0920-458d-a5a7-abb5fe9ea400 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-5a880126-0920-458d-a5a7-abb5fe9ea400 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-5a880126-0920-458d-a5a7-abb5fe9ea400 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-5a880126-0920-458d-a5a7-abb5fe9ea400 div.sk-parallel-item:only-child::after {width: 0;}#sk-5a880126-0920-458d-a5a7-abb5fe9ea400 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-5a880126-0920-458d-a5a7-abb5fe9ea400 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-5a880126-0920-458d-a5a7-abb5fe9ea400 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-5a880126-0920-458d-a5a7-abb5fe9ea400 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-5a880126-0920-458d-a5a7-abb5fe9ea400 div.sk-text-repr-fallback {display: none;}</style><div id="sk-5a880126-0920-458d-a5a7-abb5fe9ea400" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="719067a4-8ada-4dc5-91fc-d56096194465" type="checkbox" ><label for="719067a4-8ada-4dc5-91fc-d56096194465" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="255bd3e3-8327-483f-bee1-20ac1ddc3ea3" type="checkbox" ><label for="255bd3e3-8327-483f-bee1-20ac1ddc3ea3" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="26f82df7-b770-49aa-9b5a-df200a6fffe5" type="checkbox" ><label for="26f82df7-b770-49aa-9b5a-df200a6fffe5" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-99e9d192-458c-4a10-8f08-313e1e63181b {color: black;background-color: white;}#sk-99e9d192-458c-4a10-8f08-313e1e63181b pre{padding: 0;}#sk-99e9d192-458c-4a10-8f08-313e1e63181b div.sk-toggleable {background-color: white;}#sk-99e9d192-458c-4a10-8f08-313e1e63181b label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-99e9d192-458c-4a10-8f08-313e1e63181b label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-99e9d192-458c-4a10-8f08-313e1e63181b label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-99e9d192-458c-4a10-8f08-313e1e63181b div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-99e9d192-458c-4a10-8f08-313e1e63181b div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-99e9d192-458c-4a10-8f08-313e1e63181b div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-99e9d192-458c-4a10-8f08-313e1e63181b input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-99e9d192-458c-4a10-8f08-313e1e63181b input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-99e9d192-458c-4a10-8f08-313e1e63181b div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-99e9d192-458c-4a10-8f08-313e1e63181b div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-99e9d192-458c-4a10-8f08-313e1e63181b input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-99e9d192-458c-4a10-8f08-313e1e63181b div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-99e9d192-458c-4a10-8f08-313e1e63181b div.sk-estimator:hover {background-color: #d4ebff;}#sk-99e9d192-458c-4a10-8f08-313e1e63181b div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-99e9d192-458c-4a10-8f08-313e1e63181b div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-99e9d192-458c-4a10-8f08-313e1e63181b div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-99e9d192-458c-4a10-8f08-313e1e63181b div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-99e9d192-458c-4a10-8f08-313e1e63181b div.sk-item {z-index: 1;}#sk-99e9d192-458c-4a10-8f08-313e1e63181b div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-99e9d192-458c-4a10-8f08-313e1e63181b div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-99e9d192-458c-4a10-8f08-313e1e63181b div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-99e9d192-458c-4a10-8f08-313e1e63181b div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-99e9d192-458c-4a10-8f08-313e1e63181b div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-99e9d192-458c-4a10-8f08-313e1e63181b div.sk-parallel-item:only-child::after {width: 0;}#sk-99e9d192-458c-4a10-8f08-313e1e63181b div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-99e9d192-458c-4a10-8f08-313e1e63181b div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-99e9d192-458c-4a10-8f08-313e1e63181b div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-99e9d192-458c-4a10-8f08-313e1e63181b div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-99e9d192-458c-4a10-8f08-313e1e63181b div.sk-text-repr-fallback {display: none;}</style><div id="sk-99e9d192-458c-4a10-8f08-313e1e63181b" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4d16061a-ca00-4c2d-8c3b-018d9b665a49" type="checkbox" ><label for="4d16061a-ca00-4c2d-8c3b-018d9b665a49" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e540e05d-ce5c-4ce8-b922-332cf63f55ac" type="checkbox" ><label for="e540e05d-ce5c-4ce8-b922-332cf63f55ac" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0bba97f4-e2ce-429c-b3cb-7f5a7ed9acb3" type="checkbox" ><label for="0bba97f4-e2ce-429c-b3cb-7f5a7ed9acb3" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="959cee7e-d76f-49fe-af15-1f29a3192f91" type="checkbox" ><label for="959cee7e-d76f-49fe-af15-1f29a3192f91" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a5c632c9-2456-44ea-8f6c-a3d2ec02bcf8" type="checkbox" ><label for="a5c632c9-2456-44ea-8f6c-a3d2ec02bcf8" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6339b9b5-cf16-4510-a0b1-2d60b03300e0" type="checkbox" ><label for="6339b9b5-cf16-4510-a0b1-2d60b03300e0" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bc474d63-11a1-40e5-abe7-08b74bc13f0a" type="checkbox" ><label for="bc474d63-11a1-40e5-abe7-08b74bc13f0a" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d2a3248d-e5fa-4af7-af2f-c1ddb6bc260e" type="checkbox" ><label for="d2a3248d-e5fa-4af7-af2f-c1ddb6bc260e" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2efc926d-292f-4073-9ce9-2320a2688b22" type="checkbox" ><label for="2efc926d-292f-4073-9ce9-2320a2688b22" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-e4131224-77c8-417f-9d8a-890232bae1b9 {color: black;background-color: white;}#sk-e4131224-77c8-417f-9d8a-890232bae1b9 pre{padding: 0;}#sk-e4131224-77c8-417f-9d8a-890232bae1b9 div.sk-toggleable {background-color: white;}#sk-e4131224-77c8-417f-9d8a-890232bae1b9 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-e4131224-77c8-417f-9d8a-890232bae1b9 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-e4131224-77c8-417f-9d8a-890232bae1b9 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-e4131224-77c8-417f-9d8a-890232bae1b9 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-e4131224-77c8-417f-9d8a-890232bae1b9 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-e4131224-77c8-417f-9d8a-890232bae1b9 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-e4131224-77c8-417f-9d8a-890232bae1b9 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-e4131224-77c8-417f-9d8a-890232bae1b9 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-e4131224-77c8-417f-9d8a-890232bae1b9 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-e4131224-77c8-417f-9d8a-890232bae1b9 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-e4131224-77c8-417f-9d8a-890232bae1b9 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-e4131224-77c8-417f-9d8a-890232bae1b9 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-e4131224-77c8-417f-9d8a-890232bae1b9 div.sk-estimator:hover {background-color: #d4ebff;}#sk-e4131224-77c8-417f-9d8a-890232bae1b9 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-e4131224-77c8-417f-9d8a-890232bae1b9 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-e4131224-77c8-417f-9d8a-890232bae1b9 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-e4131224-77c8-417f-9d8a-890232bae1b9 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-e4131224-77c8-417f-9d8a-890232bae1b9 div.sk-item {z-index: 1;}#sk-e4131224-77c8-417f-9d8a-890232bae1b9 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-e4131224-77c8-417f-9d8a-890232bae1b9 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-e4131224-77c8-417f-9d8a-890232bae1b9 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-e4131224-77c8-417f-9d8a-890232bae1b9 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-e4131224-77c8-417f-9d8a-890232bae1b9 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-e4131224-77c8-417f-9d8a-890232bae1b9 div.sk-parallel-item:only-child::after {width: 0;}#sk-e4131224-77c8-417f-9d8a-890232bae1b9 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-e4131224-77c8-417f-9d8a-890232bae1b9 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-e4131224-77c8-417f-9d8a-890232bae1b9 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-e4131224-77c8-417f-9d8a-890232bae1b9 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-e4131224-77c8-417f-9d8a-890232bae1b9 div.sk-text-repr-fallback {display: none;}</style><div id="sk-e4131224-77c8-417f-9d8a-890232bae1b9" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="35e6ed47-c800-4049-a8d5-ee108fbfffd6" type="checkbox" ><label for="35e6ed47-c800-4049-a8d5-ee108fbfffd6" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5df73e26-6238-4211-9cae-72c8e04b3ae9" type="checkbox" ><label for="5df73e26-6238-4211-9cae-72c8e04b3ae9" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="47699f2c-3cfe-4c7b-9647-223e3e9ed5c9" type="checkbox" ><label for="47699f2c-3cfe-4c7b-9647-223e3e9ed5c9" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0f24804d-d354-4d6d-9c91-dc004ef2a6c6" type="checkbox" ><label for="0f24804d-d354-4d6d-9c91-dc004ef2a6c6" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a8f7c989-97ad-427e-ad7e-87d8aacfd157" type="checkbox" ><label for="a8f7c989-97ad-427e-ad7e-87d8aacfd157" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a93f83d3-0d24-444d-b119-2ca6d925af29" type="checkbox" ><label for="a93f83d3-0d24-444d-b119-2ca6d925af29" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="26236c18-e10a-4667-bf28-c595ac46ae6b" type="checkbox" ><label for="26236c18-e10a-4667-bf28-c595ac46ae6b" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="11cb8e82-9a07-4318-a05f-a1cd7484e899" type="checkbox" ><label for="11cb8e82-9a07-4318-a05f-a1cd7484e899" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9091d547-e372-4ff6-9fc9-6d5a611fce4d" type="checkbox" ><label for="9091d547-e372-4ff6-9fc9-6d5a611fce4d" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.071 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
