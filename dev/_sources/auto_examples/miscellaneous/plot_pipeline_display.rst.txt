
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-6a2aaa39-fa81-4219-88d7-d38e188fb280 {color: black;background-color: white;}#sk-6a2aaa39-fa81-4219-88d7-d38e188fb280 pre{padding: 0;}#sk-6a2aaa39-fa81-4219-88d7-d38e188fb280 div.sk-toggleable {background-color: white;}#sk-6a2aaa39-fa81-4219-88d7-d38e188fb280 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-6a2aaa39-fa81-4219-88d7-d38e188fb280 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-6a2aaa39-fa81-4219-88d7-d38e188fb280 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-6a2aaa39-fa81-4219-88d7-d38e188fb280 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-6a2aaa39-fa81-4219-88d7-d38e188fb280 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-6a2aaa39-fa81-4219-88d7-d38e188fb280 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-6a2aaa39-fa81-4219-88d7-d38e188fb280 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-6a2aaa39-fa81-4219-88d7-d38e188fb280 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-6a2aaa39-fa81-4219-88d7-d38e188fb280 div.sk-estimator:hover {background-color: #d4ebff;}#sk-6a2aaa39-fa81-4219-88d7-d38e188fb280 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-6a2aaa39-fa81-4219-88d7-d38e188fb280 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-6a2aaa39-fa81-4219-88d7-d38e188fb280 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-6a2aaa39-fa81-4219-88d7-d38e188fb280 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-6a2aaa39-fa81-4219-88d7-d38e188fb280 div.sk-item {z-index: 1;}#sk-6a2aaa39-fa81-4219-88d7-d38e188fb280 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-6a2aaa39-fa81-4219-88d7-d38e188fb280 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-6a2aaa39-fa81-4219-88d7-d38e188fb280 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-6a2aaa39-fa81-4219-88d7-d38e188fb280 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-6a2aaa39-fa81-4219-88d7-d38e188fb280 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-6a2aaa39-fa81-4219-88d7-d38e188fb280 div.sk-parallel-item:only-child::after {width: 0;}#sk-6a2aaa39-fa81-4219-88d7-d38e188fb280 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-6a2aaa39-fa81-4219-88d7-d38e188fb280 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-6a2aaa39-fa81-4219-88d7-d38e188fb280 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-6a2aaa39-fa81-4219-88d7-d38e188fb280 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org.  See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-6a2aaa39-fa81-4219-88d7-d38e188fb280 div.sk-text-repr-fallback {display: none;}</style><div id="sk-6a2aaa39-fa81-4219-88d7-d38e188fb280" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="207d2e60-be44-4b5a-9904-a7967d3457e7" type="checkbox" ><label class="sk-toggleable__label" for="207d2e60-be44-4b5a-9904-a7967d3457e7">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a77afd61-3dac-4b53-bbb7-2c9b7b3e449e" type="checkbox" ><label class="sk-toggleable__label" for="a77afd61-3dac-4b53-bbb7-2c9b7b3e449e">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="224bb397-f250-40ed-9b7e-12396d2e1b74" type="checkbox" ><label class="sk-toggleable__label" for="224bb397-f250-40ed-9b7e-12396d2e1b74">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-bb333fe3-b9ea-49ad-aa03-12cb9551c0ec {color: black;background-color: white;}#sk-bb333fe3-b9ea-49ad-aa03-12cb9551c0ec pre{padding: 0;}#sk-bb333fe3-b9ea-49ad-aa03-12cb9551c0ec div.sk-toggleable {background-color: white;}#sk-bb333fe3-b9ea-49ad-aa03-12cb9551c0ec label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-bb333fe3-b9ea-49ad-aa03-12cb9551c0ec div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-bb333fe3-b9ea-49ad-aa03-12cb9551c0ec div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-bb333fe3-b9ea-49ad-aa03-12cb9551c0ec input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-bb333fe3-b9ea-49ad-aa03-12cb9551c0ec div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-bb333fe3-b9ea-49ad-aa03-12cb9551c0ec div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-bb333fe3-b9ea-49ad-aa03-12cb9551c0ec input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-bb333fe3-b9ea-49ad-aa03-12cb9551c0ec div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-bb333fe3-b9ea-49ad-aa03-12cb9551c0ec div.sk-estimator:hover {background-color: #d4ebff;}#sk-bb333fe3-b9ea-49ad-aa03-12cb9551c0ec div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-bb333fe3-b9ea-49ad-aa03-12cb9551c0ec div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-bb333fe3-b9ea-49ad-aa03-12cb9551c0ec div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-bb333fe3-b9ea-49ad-aa03-12cb9551c0ec div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-bb333fe3-b9ea-49ad-aa03-12cb9551c0ec div.sk-item {z-index: 1;}#sk-bb333fe3-b9ea-49ad-aa03-12cb9551c0ec div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-bb333fe3-b9ea-49ad-aa03-12cb9551c0ec div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-bb333fe3-b9ea-49ad-aa03-12cb9551c0ec div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-bb333fe3-b9ea-49ad-aa03-12cb9551c0ec div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-bb333fe3-b9ea-49ad-aa03-12cb9551c0ec div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-bb333fe3-b9ea-49ad-aa03-12cb9551c0ec div.sk-parallel-item:only-child::after {width: 0;}#sk-bb333fe3-b9ea-49ad-aa03-12cb9551c0ec div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-bb333fe3-b9ea-49ad-aa03-12cb9551c0ec div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-bb333fe3-b9ea-49ad-aa03-12cb9551c0ec div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-bb333fe3-b9ea-49ad-aa03-12cb9551c0ec div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org.  See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-bb333fe3-b9ea-49ad-aa03-12cb9551c0ec div.sk-text-repr-fallback {display: none;}</style><div id="sk-bb333fe3-b9ea-49ad-aa03-12cb9551c0ec" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d10658af-7237-4e92-88a4-e01bfff41a55" type="checkbox" ><label class="sk-toggleable__label" for="d10658af-7237-4e92-88a4-e01bfff41a55">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1b8e6d71-e652-4856-a200-fa1cbd073a10" type="checkbox" ><label class="sk-toggleable__label" for="1b8e6d71-e652-4856-a200-fa1cbd073a10">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a7b5fefd-76ad-4022-8c27-bfdffa5fc4a9" type="checkbox" ><label class="sk-toggleable__label" for="a7b5fefd-76ad-4022-8c27-bfdffa5fc4a9">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="aa5c3e18-31f9-444d-bb09-3313f48c81bb" type="checkbox" ><label class="sk-toggleable__label" for="aa5c3e18-31f9-444d-bb09-3313f48c81bb">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-5ab6164c-724d-4876-9645-1c391ffe67a3 {color: black;background-color: white;}#sk-5ab6164c-724d-4876-9645-1c391ffe67a3 pre{padding: 0;}#sk-5ab6164c-724d-4876-9645-1c391ffe67a3 div.sk-toggleable {background-color: white;}#sk-5ab6164c-724d-4876-9645-1c391ffe67a3 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-5ab6164c-724d-4876-9645-1c391ffe67a3 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-5ab6164c-724d-4876-9645-1c391ffe67a3 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-5ab6164c-724d-4876-9645-1c391ffe67a3 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-5ab6164c-724d-4876-9645-1c391ffe67a3 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-5ab6164c-724d-4876-9645-1c391ffe67a3 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-5ab6164c-724d-4876-9645-1c391ffe67a3 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-5ab6164c-724d-4876-9645-1c391ffe67a3 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-5ab6164c-724d-4876-9645-1c391ffe67a3 div.sk-estimator:hover {background-color: #d4ebff;}#sk-5ab6164c-724d-4876-9645-1c391ffe67a3 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-5ab6164c-724d-4876-9645-1c391ffe67a3 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-5ab6164c-724d-4876-9645-1c391ffe67a3 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-5ab6164c-724d-4876-9645-1c391ffe67a3 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-5ab6164c-724d-4876-9645-1c391ffe67a3 div.sk-item {z-index: 1;}#sk-5ab6164c-724d-4876-9645-1c391ffe67a3 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-5ab6164c-724d-4876-9645-1c391ffe67a3 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-5ab6164c-724d-4876-9645-1c391ffe67a3 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-5ab6164c-724d-4876-9645-1c391ffe67a3 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-5ab6164c-724d-4876-9645-1c391ffe67a3 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-5ab6164c-724d-4876-9645-1c391ffe67a3 div.sk-parallel-item:only-child::after {width: 0;}#sk-5ab6164c-724d-4876-9645-1c391ffe67a3 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-5ab6164c-724d-4876-9645-1c391ffe67a3 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-5ab6164c-724d-4876-9645-1c391ffe67a3 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-5ab6164c-724d-4876-9645-1c391ffe67a3 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org.  See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-5ab6164c-724d-4876-9645-1c391ffe67a3 div.sk-text-repr-fallback {display: none;}</style><div id="sk-5ab6164c-724d-4876-9645-1c391ffe67a3" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c353bae3-dfd5-4ed3-b414-aa6d19c80255" type="checkbox" ><label class="sk-toggleable__label" for="c353bae3-dfd5-4ed3-b414-aa6d19c80255">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="55d3f0f4-02d0-482a-a8e4-d7fa8fcb8a21" type="checkbox" ><label class="sk-toggleable__label" for="55d3f0f4-02d0-482a-a8e4-d7fa8fcb8a21">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ff381200-4a0d-4b7a-a4d5-715cf692aaa1" type="checkbox" ><label class="sk-toggleable__label" for="ff381200-4a0d-4b7a-a4d5-715cf692aaa1">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-b36a0919-2726-40b2-847e-1f84a29b634f {color: black;background-color: white;}#sk-b36a0919-2726-40b2-847e-1f84a29b634f pre{padding: 0;}#sk-b36a0919-2726-40b2-847e-1f84a29b634f div.sk-toggleable {background-color: white;}#sk-b36a0919-2726-40b2-847e-1f84a29b634f label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-b36a0919-2726-40b2-847e-1f84a29b634f div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-b36a0919-2726-40b2-847e-1f84a29b634f div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-b36a0919-2726-40b2-847e-1f84a29b634f input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-b36a0919-2726-40b2-847e-1f84a29b634f div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b36a0919-2726-40b2-847e-1f84a29b634f div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b36a0919-2726-40b2-847e-1f84a29b634f input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-b36a0919-2726-40b2-847e-1f84a29b634f div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-b36a0919-2726-40b2-847e-1f84a29b634f div.sk-estimator:hover {background-color: #d4ebff;}#sk-b36a0919-2726-40b2-847e-1f84a29b634f div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-b36a0919-2726-40b2-847e-1f84a29b634f div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-b36a0919-2726-40b2-847e-1f84a29b634f div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b36a0919-2726-40b2-847e-1f84a29b634f div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-b36a0919-2726-40b2-847e-1f84a29b634f div.sk-item {z-index: 1;}#sk-b36a0919-2726-40b2-847e-1f84a29b634f div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-b36a0919-2726-40b2-847e-1f84a29b634f div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b36a0919-2726-40b2-847e-1f84a29b634f div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-b36a0919-2726-40b2-847e-1f84a29b634f div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-b36a0919-2726-40b2-847e-1f84a29b634f div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-b36a0919-2726-40b2-847e-1f84a29b634f div.sk-parallel-item:only-child::after {width: 0;}#sk-b36a0919-2726-40b2-847e-1f84a29b634f div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-b36a0919-2726-40b2-847e-1f84a29b634f div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-b36a0919-2726-40b2-847e-1f84a29b634f div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-b36a0919-2726-40b2-847e-1f84a29b634f div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org.  See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-b36a0919-2726-40b2-847e-1f84a29b634f div.sk-text-repr-fallback {display: none;}</style><div id="sk-b36a0919-2726-40b2-847e-1f84a29b634f" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="02e65aab-3ffc-4200-add5-52212c444f9d" type="checkbox" ><label class="sk-toggleable__label" for="02e65aab-3ffc-4200-add5-52212c444f9d">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cbb55d57-f64c-409f-ba1d-60143e6e28db" type="checkbox" ><label class="sk-toggleable__label" for="cbb55d57-f64c-409f-ba1d-60143e6e28db">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9cd2d7b1-632a-4ef1-b728-6ea952c891bc" type="checkbox" ><label class="sk-toggleable__label" for="9cd2d7b1-632a-4ef1-b728-6ea952c891bc">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f904aad7-3f67-4e21-b8c7-f097c891de5e" type="checkbox" ><label class="sk-toggleable__label" for="f904aad7-3f67-4e21-b8c7-f097c891de5e">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9eba634d-d175-4973-b929-aaddb218aeee" type="checkbox" ><label class="sk-toggleable__label" for="9eba634d-d175-4973-b929-aaddb218aeee">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9b601db8-cb43-4933-bf38-dc170fc71a1e" type="checkbox" ><label class="sk-toggleable__label" for="9b601db8-cb43-4933-bf38-dc170fc71a1e">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d686b014-110d-47da-8fa1-4b3c20af6bd3" type="checkbox" ><label class="sk-toggleable__label" for="d686b014-110d-47da-8fa1-4b3c20af6bd3">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2a2ce7f0-1531-4665-a9cf-c8886b1b2856" type="checkbox" ><label class="sk-toggleable__label" for="2a2ce7f0-1531-4665-a9cf-c8886b1b2856">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a192c124-52a2-47de-ba7b-da238f8b4b56" type="checkbox" ><label class="sk-toggleable__label" for="a192c124-52a2-47de-ba7b-da238f8b4b56">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-84a50e9c-af4c-4dbf-97b7-c691c07d87d9 {color: black;background-color: white;}#sk-84a50e9c-af4c-4dbf-97b7-c691c07d87d9 pre{padding: 0;}#sk-84a50e9c-af4c-4dbf-97b7-c691c07d87d9 div.sk-toggleable {background-color: white;}#sk-84a50e9c-af4c-4dbf-97b7-c691c07d87d9 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-84a50e9c-af4c-4dbf-97b7-c691c07d87d9 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-84a50e9c-af4c-4dbf-97b7-c691c07d87d9 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-84a50e9c-af4c-4dbf-97b7-c691c07d87d9 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-84a50e9c-af4c-4dbf-97b7-c691c07d87d9 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-84a50e9c-af4c-4dbf-97b7-c691c07d87d9 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-84a50e9c-af4c-4dbf-97b7-c691c07d87d9 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-84a50e9c-af4c-4dbf-97b7-c691c07d87d9 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-84a50e9c-af4c-4dbf-97b7-c691c07d87d9 div.sk-estimator:hover {background-color: #d4ebff;}#sk-84a50e9c-af4c-4dbf-97b7-c691c07d87d9 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-84a50e9c-af4c-4dbf-97b7-c691c07d87d9 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-84a50e9c-af4c-4dbf-97b7-c691c07d87d9 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-84a50e9c-af4c-4dbf-97b7-c691c07d87d9 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-84a50e9c-af4c-4dbf-97b7-c691c07d87d9 div.sk-item {z-index: 1;}#sk-84a50e9c-af4c-4dbf-97b7-c691c07d87d9 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-84a50e9c-af4c-4dbf-97b7-c691c07d87d9 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-84a50e9c-af4c-4dbf-97b7-c691c07d87d9 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-84a50e9c-af4c-4dbf-97b7-c691c07d87d9 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-84a50e9c-af4c-4dbf-97b7-c691c07d87d9 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-84a50e9c-af4c-4dbf-97b7-c691c07d87d9 div.sk-parallel-item:only-child::after {width: 0;}#sk-84a50e9c-af4c-4dbf-97b7-c691c07d87d9 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-84a50e9c-af4c-4dbf-97b7-c691c07d87d9 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-84a50e9c-af4c-4dbf-97b7-c691c07d87d9 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-84a50e9c-af4c-4dbf-97b7-c691c07d87d9 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org.  See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-84a50e9c-af4c-4dbf-97b7-c691c07d87d9 div.sk-text-repr-fallback {display: none;}</style><div id="sk-84a50e9c-af4c-4dbf-97b7-c691c07d87d9" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c46586bc-b039-41fc-a141-925c544009f1" type="checkbox" ><label class="sk-toggleable__label" for="c46586bc-b039-41fc-a141-925c544009f1">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5410d3d0-7efe-4799-9a13-927bc9ceca20" type="checkbox" ><label class="sk-toggleable__label" for="5410d3d0-7efe-4799-9a13-927bc9ceca20">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="16fcfc64-be83-49b4-af7b-a3331b4e527a" type="checkbox" ><label class="sk-toggleable__label" for="16fcfc64-be83-49b4-af7b-a3331b4e527a">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="286078ce-fadd-47db-8a4f-5345e22ca476" type="checkbox" ><label class="sk-toggleable__label" for="286078ce-fadd-47db-8a4f-5345e22ca476">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="55409a90-fddc-4d1c-8e91-b54c2b01b5e8" type="checkbox" ><label class="sk-toggleable__label" for="55409a90-fddc-4d1c-8e91-b54c2b01b5e8">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a79ff0ce-e05c-428d-9808-62516bbf81d7" type="checkbox" ><label class="sk-toggleable__label" for="a79ff0ce-e05c-428d-9808-62516bbf81d7">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c46227ee-9f92-4918-b56e-8949cd1fda40" type="checkbox" ><label class="sk-toggleable__label" for="c46227ee-9f92-4918-b56e-8949cd1fda40">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="331135da-027f-41db-b8d2-b6bb9f703800" type="checkbox" ><label class="sk-toggleable__label" for="331135da-027f-41db-b8d2-b6bb9f703800">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="162ca187-1a5c-4bc2-990b-596e4ef7a491" type="checkbox" ><label class="sk-toggleable__label" for="162ca187-1a5c-4bc2-990b-596e4ef7a491">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.138 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
