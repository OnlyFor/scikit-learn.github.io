
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-c1d5d1d2-4b32-4b9e-b95d-f6d08262600d {color: black;background-color: white;}#sk-c1d5d1d2-4b32-4b9e-b95d-f6d08262600d pre{padding: 0;}#sk-c1d5d1d2-4b32-4b9e-b95d-f6d08262600d div.sk-toggleable {background-color: white;}#sk-c1d5d1d2-4b32-4b9e-b95d-f6d08262600d label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-c1d5d1d2-4b32-4b9e-b95d-f6d08262600d label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-c1d5d1d2-4b32-4b9e-b95d-f6d08262600d label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-c1d5d1d2-4b32-4b9e-b95d-f6d08262600d div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-c1d5d1d2-4b32-4b9e-b95d-f6d08262600d div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-c1d5d1d2-4b32-4b9e-b95d-f6d08262600d div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-c1d5d1d2-4b32-4b9e-b95d-f6d08262600d input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-c1d5d1d2-4b32-4b9e-b95d-f6d08262600d input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-c1d5d1d2-4b32-4b9e-b95d-f6d08262600d div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-c1d5d1d2-4b32-4b9e-b95d-f6d08262600d div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-c1d5d1d2-4b32-4b9e-b95d-f6d08262600d input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-c1d5d1d2-4b32-4b9e-b95d-f6d08262600d div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-c1d5d1d2-4b32-4b9e-b95d-f6d08262600d div.sk-estimator:hover {background-color: #d4ebff;}#sk-c1d5d1d2-4b32-4b9e-b95d-f6d08262600d div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-c1d5d1d2-4b32-4b9e-b95d-f6d08262600d div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-c1d5d1d2-4b32-4b9e-b95d-f6d08262600d div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-c1d5d1d2-4b32-4b9e-b95d-f6d08262600d div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-c1d5d1d2-4b32-4b9e-b95d-f6d08262600d div.sk-item {z-index: 1;}#sk-c1d5d1d2-4b32-4b9e-b95d-f6d08262600d div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-c1d5d1d2-4b32-4b9e-b95d-f6d08262600d div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-c1d5d1d2-4b32-4b9e-b95d-f6d08262600d div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-c1d5d1d2-4b32-4b9e-b95d-f6d08262600d div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-c1d5d1d2-4b32-4b9e-b95d-f6d08262600d div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-c1d5d1d2-4b32-4b9e-b95d-f6d08262600d div.sk-parallel-item:only-child::after {width: 0;}#sk-c1d5d1d2-4b32-4b9e-b95d-f6d08262600d div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-c1d5d1d2-4b32-4b9e-b95d-f6d08262600d div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-c1d5d1d2-4b32-4b9e-b95d-f6d08262600d div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-c1d5d1d2-4b32-4b9e-b95d-f6d08262600d div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-c1d5d1d2-4b32-4b9e-b95d-f6d08262600d div.sk-text-repr-fallback {display: none;}</style><div id="sk-c1d5d1d2-4b32-4b9e-b95d-f6d08262600d" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3de61936-25f7-439a-b9e7-48103db74cf7" type="checkbox" ><label for="3de61936-25f7-439a-b9e7-48103db74cf7" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3e2f8818-0e0e-474c-a935-54c704290b8f" type="checkbox" ><label for="3e2f8818-0e0e-474c-a935-54c704290b8f" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5214b712-218f-4bf8-a420-c9cca6566a4d" type="checkbox" ><label for="5214b712-218f-4bf8-a420-c9cca6566a4d" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-e10d1efa-8817-497d-98ec-59b23e50c71b {color: black;background-color: white;}#sk-e10d1efa-8817-497d-98ec-59b23e50c71b pre{padding: 0;}#sk-e10d1efa-8817-497d-98ec-59b23e50c71b div.sk-toggleable {background-color: white;}#sk-e10d1efa-8817-497d-98ec-59b23e50c71b label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-e10d1efa-8817-497d-98ec-59b23e50c71b label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-e10d1efa-8817-497d-98ec-59b23e50c71b label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-e10d1efa-8817-497d-98ec-59b23e50c71b div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-e10d1efa-8817-497d-98ec-59b23e50c71b div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-e10d1efa-8817-497d-98ec-59b23e50c71b div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-e10d1efa-8817-497d-98ec-59b23e50c71b input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-e10d1efa-8817-497d-98ec-59b23e50c71b input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-e10d1efa-8817-497d-98ec-59b23e50c71b div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-e10d1efa-8817-497d-98ec-59b23e50c71b div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-e10d1efa-8817-497d-98ec-59b23e50c71b input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-e10d1efa-8817-497d-98ec-59b23e50c71b div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-e10d1efa-8817-497d-98ec-59b23e50c71b div.sk-estimator:hover {background-color: #d4ebff;}#sk-e10d1efa-8817-497d-98ec-59b23e50c71b div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-e10d1efa-8817-497d-98ec-59b23e50c71b div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-e10d1efa-8817-497d-98ec-59b23e50c71b div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-e10d1efa-8817-497d-98ec-59b23e50c71b div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-e10d1efa-8817-497d-98ec-59b23e50c71b div.sk-item {z-index: 1;}#sk-e10d1efa-8817-497d-98ec-59b23e50c71b div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-e10d1efa-8817-497d-98ec-59b23e50c71b div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-e10d1efa-8817-497d-98ec-59b23e50c71b div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-e10d1efa-8817-497d-98ec-59b23e50c71b div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-e10d1efa-8817-497d-98ec-59b23e50c71b div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-e10d1efa-8817-497d-98ec-59b23e50c71b div.sk-parallel-item:only-child::after {width: 0;}#sk-e10d1efa-8817-497d-98ec-59b23e50c71b div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-e10d1efa-8817-497d-98ec-59b23e50c71b div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-e10d1efa-8817-497d-98ec-59b23e50c71b div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-e10d1efa-8817-497d-98ec-59b23e50c71b div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-e10d1efa-8817-497d-98ec-59b23e50c71b div.sk-text-repr-fallback {display: none;}</style><div id="sk-e10d1efa-8817-497d-98ec-59b23e50c71b" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8796aa5a-d01d-4746-b414-9ba8b5ee9010" type="checkbox" ><label for="8796aa5a-d01d-4746-b414-9ba8b5ee9010" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8f93cff2-f24a-45de-87cc-ba4cbb699f9a" type="checkbox" ><label for="8f93cff2-f24a-45de-87cc-ba4cbb699f9a" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2f5ad177-ba25-4af9-828c-39af83fd365c" type="checkbox" ><label for="2f5ad177-ba25-4af9-828c-39af83fd365c" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="568fc28c-4269-42fe-9329-7e58e446aae9" type="checkbox" ><label for="568fc28c-4269-42fe-9329-7e58e446aae9" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-13bbdd7a-11d8-4fa1-a9ec-13cac8d8577c {color: black;background-color: white;}#sk-13bbdd7a-11d8-4fa1-a9ec-13cac8d8577c pre{padding: 0;}#sk-13bbdd7a-11d8-4fa1-a9ec-13cac8d8577c div.sk-toggleable {background-color: white;}#sk-13bbdd7a-11d8-4fa1-a9ec-13cac8d8577c label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-13bbdd7a-11d8-4fa1-a9ec-13cac8d8577c label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-13bbdd7a-11d8-4fa1-a9ec-13cac8d8577c label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-13bbdd7a-11d8-4fa1-a9ec-13cac8d8577c div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-13bbdd7a-11d8-4fa1-a9ec-13cac8d8577c div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-13bbdd7a-11d8-4fa1-a9ec-13cac8d8577c div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-13bbdd7a-11d8-4fa1-a9ec-13cac8d8577c input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-13bbdd7a-11d8-4fa1-a9ec-13cac8d8577c input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-13bbdd7a-11d8-4fa1-a9ec-13cac8d8577c div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-13bbdd7a-11d8-4fa1-a9ec-13cac8d8577c div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-13bbdd7a-11d8-4fa1-a9ec-13cac8d8577c input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-13bbdd7a-11d8-4fa1-a9ec-13cac8d8577c div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-13bbdd7a-11d8-4fa1-a9ec-13cac8d8577c div.sk-estimator:hover {background-color: #d4ebff;}#sk-13bbdd7a-11d8-4fa1-a9ec-13cac8d8577c div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-13bbdd7a-11d8-4fa1-a9ec-13cac8d8577c div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-13bbdd7a-11d8-4fa1-a9ec-13cac8d8577c div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-13bbdd7a-11d8-4fa1-a9ec-13cac8d8577c div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-13bbdd7a-11d8-4fa1-a9ec-13cac8d8577c div.sk-item {z-index: 1;}#sk-13bbdd7a-11d8-4fa1-a9ec-13cac8d8577c div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-13bbdd7a-11d8-4fa1-a9ec-13cac8d8577c div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-13bbdd7a-11d8-4fa1-a9ec-13cac8d8577c div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-13bbdd7a-11d8-4fa1-a9ec-13cac8d8577c div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-13bbdd7a-11d8-4fa1-a9ec-13cac8d8577c div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-13bbdd7a-11d8-4fa1-a9ec-13cac8d8577c div.sk-parallel-item:only-child::after {width: 0;}#sk-13bbdd7a-11d8-4fa1-a9ec-13cac8d8577c div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-13bbdd7a-11d8-4fa1-a9ec-13cac8d8577c div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-13bbdd7a-11d8-4fa1-a9ec-13cac8d8577c div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-13bbdd7a-11d8-4fa1-a9ec-13cac8d8577c div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-13bbdd7a-11d8-4fa1-a9ec-13cac8d8577c div.sk-text-repr-fallback {display: none;}</style><div id="sk-13bbdd7a-11d8-4fa1-a9ec-13cac8d8577c" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fc6f6efe-941f-4e76-9400-0ca42f1b4d6e" type="checkbox" ><label for="fc6f6efe-941f-4e76-9400-0ca42f1b4d6e" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2c3d3659-1999-4b06-b70f-6eee21d7496b" type="checkbox" ><label for="2c3d3659-1999-4b06-b70f-6eee21d7496b" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="562b302d-708c-4308-be26-1d2dbd63b14f" type="checkbox" ><label for="562b302d-708c-4308-be26-1d2dbd63b14f" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-30b361b9-fdb2-4af5-96ba-ab26c6d9ebd6 {color: black;background-color: white;}#sk-30b361b9-fdb2-4af5-96ba-ab26c6d9ebd6 pre{padding: 0;}#sk-30b361b9-fdb2-4af5-96ba-ab26c6d9ebd6 div.sk-toggleable {background-color: white;}#sk-30b361b9-fdb2-4af5-96ba-ab26c6d9ebd6 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-30b361b9-fdb2-4af5-96ba-ab26c6d9ebd6 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-30b361b9-fdb2-4af5-96ba-ab26c6d9ebd6 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-30b361b9-fdb2-4af5-96ba-ab26c6d9ebd6 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-30b361b9-fdb2-4af5-96ba-ab26c6d9ebd6 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-30b361b9-fdb2-4af5-96ba-ab26c6d9ebd6 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-30b361b9-fdb2-4af5-96ba-ab26c6d9ebd6 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-30b361b9-fdb2-4af5-96ba-ab26c6d9ebd6 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-30b361b9-fdb2-4af5-96ba-ab26c6d9ebd6 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-30b361b9-fdb2-4af5-96ba-ab26c6d9ebd6 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-30b361b9-fdb2-4af5-96ba-ab26c6d9ebd6 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-30b361b9-fdb2-4af5-96ba-ab26c6d9ebd6 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-30b361b9-fdb2-4af5-96ba-ab26c6d9ebd6 div.sk-estimator:hover {background-color: #d4ebff;}#sk-30b361b9-fdb2-4af5-96ba-ab26c6d9ebd6 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-30b361b9-fdb2-4af5-96ba-ab26c6d9ebd6 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-30b361b9-fdb2-4af5-96ba-ab26c6d9ebd6 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-30b361b9-fdb2-4af5-96ba-ab26c6d9ebd6 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-30b361b9-fdb2-4af5-96ba-ab26c6d9ebd6 div.sk-item {z-index: 1;}#sk-30b361b9-fdb2-4af5-96ba-ab26c6d9ebd6 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-30b361b9-fdb2-4af5-96ba-ab26c6d9ebd6 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-30b361b9-fdb2-4af5-96ba-ab26c6d9ebd6 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-30b361b9-fdb2-4af5-96ba-ab26c6d9ebd6 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-30b361b9-fdb2-4af5-96ba-ab26c6d9ebd6 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-30b361b9-fdb2-4af5-96ba-ab26c6d9ebd6 div.sk-parallel-item:only-child::after {width: 0;}#sk-30b361b9-fdb2-4af5-96ba-ab26c6d9ebd6 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-30b361b9-fdb2-4af5-96ba-ab26c6d9ebd6 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-30b361b9-fdb2-4af5-96ba-ab26c6d9ebd6 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-30b361b9-fdb2-4af5-96ba-ab26c6d9ebd6 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-30b361b9-fdb2-4af5-96ba-ab26c6d9ebd6 div.sk-text-repr-fallback {display: none;}</style><div id="sk-30b361b9-fdb2-4af5-96ba-ab26c6d9ebd6" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7bf131f5-587d-4756-9bb6-957eb366bece" type="checkbox" ><label for="7bf131f5-587d-4756-9bb6-957eb366bece" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="103b3d0a-d074-4a9f-b67a-95580806da4f" type="checkbox" ><label for="103b3d0a-d074-4a9f-b67a-95580806da4f" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c4dab493-66bb-4e19-b9f6-d9dccdce0b20" type="checkbox" ><label for="c4dab493-66bb-4e19-b9f6-d9dccdce0b20" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2c1ed88a-a8ef-4f6f-a96a-8b968a68193d" type="checkbox" ><label for="2c1ed88a-a8ef-4f6f-a96a-8b968a68193d" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="684a1b90-eb18-4cc5-82f7-a78b6a3ce1ae" type="checkbox" ><label for="684a1b90-eb18-4cc5-82f7-a78b6a3ce1ae" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5f4e0d92-d190-4773-8d8e-458cd82c7d32" type="checkbox" ><label for="5f4e0d92-d190-4773-8d8e-458cd82c7d32" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="63b54b41-ee84-4b2e-a295-e574e241bd88" type="checkbox" ><label for="63b54b41-ee84-4b2e-a295-e574e241bd88" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="97dee3d8-7653-4029-887c-0bed21f56754" type="checkbox" ><label for="97dee3d8-7653-4029-887c-0bed21f56754" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="edd067b6-7e1c-4328-82cf-386c6f1604ab" type="checkbox" ><label for="edd067b6-7e1c-4328-82cf-386c6f1604ab" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-09390cbc-6ea0-4c1f-83af-c433b28c6566 {color: black;background-color: white;}#sk-09390cbc-6ea0-4c1f-83af-c433b28c6566 pre{padding: 0;}#sk-09390cbc-6ea0-4c1f-83af-c433b28c6566 div.sk-toggleable {background-color: white;}#sk-09390cbc-6ea0-4c1f-83af-c433b28c6566 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-09390cbc-6ea0-4c1f-83af-c433b28c6566 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-09390cbc-6ea0-4c1f-83af-c433b28c6566 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-09390cbc-6ea0-4c1f-83af-c433b28c6566 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-09390cbc-6ea0-4c1f-83af-c433b28c6566 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-09390cbc-6ea0-4c1f-83af-c433b28c6566 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-09390cbc-6ea0-4c1f-83af-c433b28c6566 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-09390cbc-6ea0-4c1f-83af-c433b28c6566 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-09390cbc-6ea0-4c1f-83af-c433b28c6566 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-09390cbc-6ea0-4c1f-83af-c433b28c6566 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-09390cbc-6ea0-4c1f-83af-c433b28c6566 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-09390cbc-6ea0-4c1f-83af-c433b28c6566 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-09390cbc-6ea0-4c1f-83af-c433b28c6566 div.sk-estimator:hover {background-color: #d4ebff;}#sk-09390cbc-6ea0-4c1f-83af-c433b28c6566 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-09390cbc-6ea0-4c1f-83af-c433b28c6566 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-09390cbc-6ea0-4c1f-83af-c433b28c6566 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-09390cbc-6ea0-4c1f-83af-c433b28c6566 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-09390cbc-6ea0-4c1f-83af-c433b28c6566 div.sk-item {z-index: 1;}#sk-09390cbc-6ea0-4c1f-83af-c433b28c6566 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-09390cbc-6ea0-4c1f-83af-c433b28c6566 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-09390cbc-6ea0-4c1f-83af-c433b28c6566 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-09390cbc-6ea0-4c1f-83af-c433b28c6566 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-09390cbc-6ea0-4c1f-83af-c433b28c6566 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-09390cbc-6ea0-4c1f-83af-c433b28c6566 div.sk-parallel-item:only-child::after {width: 0;}#sk-09390cbc-6ea0-4c1f-83af-c433b28c6566 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-09390cbc-6ea0-4c1f-83af-c433b28c6566 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-09390cbc-6ea0-4c1f-83af-c433b28c6566 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-09390cbc-6ea0-4c1f-83af-c433b28c6566 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-09390cbc-6ea0-4c1f-83af-c433b28c6566 div.sk-text-repr-fallback {display: none;}</style><div id="sk-09390cbc-6ea0-4c1f-83af-c433b28c6566" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="977b6680-0870-43f3-8de5-14fe4db22194" type="checkbox" ><label for="977b6680-0870-43f3-8de5-14fe4db22194" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="19fe65ff-58d5-4199-9b29-f4aaef620ed5" type="checkbox" ><label for="19fe65ff-58d5-4199-9b29-f4aaef620ed5" class="sk-toggleable__label sk-toggleable__label-arrow">estimator: Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessor&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;classifier&#x27;, RandomForestClassifier())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5071f0bf-85b3-4b2e-8d59-a34639e791cb" type="checkbox" ><label for="5071f0bf-85b3-4b2e-8d59-a34639e791cb" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="42e5eec3-6e5d-4cf2-a11e-2eac49cae13a" type="checkbox" ><label for="42e5eec3-6e5d-4cf2-a11e-2eac49cae13a" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5535a949-83ec-4fd9-8aff-4664a5c82c41" type="checkbox" ><label for="5535a949-83ec-4fd9-8aff-4664a5c82c41" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="79080e47-959f-4ff9-a3a5-7366b375ad00" type="checkbox" ><label for="79080e47-959f-4ff9-a3a5-7366b375ad00" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bb083aae-12ae-4098-87a9-66be9ff6e14d" type="checkbox" ><label for="bb083aae-12ae-4098-87a9-66be9ff6e14d" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f25a1d99-0bca-40ce-aba0-c90054bf5426" type="checkbox" ><label for="f25a1d99-0bca-40ce-aba0-c90054bf5426" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a783bd08-111d-4708-85bd-5d2f2e3670b7" type="checkbox" ><label for="a783bd08-111d-4708-85bd-5d2f2e3670b7" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7e8b8224-07bf-4fed-bb19-002af0354e11" type="checkbox" ><label for="7e8b8224-07bf-4fed-bb19-002af0354e11" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.088 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
