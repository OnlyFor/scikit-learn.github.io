
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-a885644b-9228-4082-b587-38643bfa8be7 {color: black;background-color: white;}#sk-a885644b-9228-4082-b587-38643bfa8be7 pre{padding: 0;}#sk-a885644b-9228-4082-b587-38643bfa8be7 div.sk-toggleable {background-color: white;}#sk-a885644b-9228-4082-b587-38643bfa8be7 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-a885644b-9228-4082-b587-38643bfa8be7 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-a885644b-9228-4082-b587-38643bfa8be7 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-a885644b-9228-4082-b587-38643bfa8be7 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-a885644b-9228-4082-b587-38643bfa8be7 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-a885644b-9228-4082-b587-38643bfa8be7 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-a885644b-9228-4082-b587-38643bfa8be7 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-a885644b-9228-4082-b587-38643bfa8be7 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-a885644b-9228-4082-b587-38643bfa8be7 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-a885644b-9228-4082-b587-38643bfa8be7 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-a885644b-9228-4082-b587-38643bfa8be7 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-a885644b-9228-4082-b587-38643bfa8be7 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-a885644b-9228-4082-b587-38643bfa8be7 div.sk-estimator:hover {background-color: #d4ebff;}#sk-a885644b-9228-4082-b587-38643bfa8be7 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-a885644b-9228-4082-b587-38643bfa8be7 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-a885644b-9228-4082-b587-38643bfa8be7 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-a885644b-9228-4082-b587-38643bfa8be7 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-a885644b-9228-4082-b587-38643bfa8be7 div.sk-item {z-index: 1;}#sk-a885644b-9228-4082-b587-38643bfa8be7 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-a885644b-9228-4082-b587-38643bfa8be7 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-a885644b-9228-4082-b587-38643bfa8be7 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-a885644b-9228-4082-b587-38643bfa8be7 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-a885644b-9228-4082-b587-38643bfa8be7 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-a885644b-9228-4082-b587-38643bfa8be7 div.sk-parallel-item:only-child::after {width: 0;}#sk-a885644b-9228-4082-b587-38643bfa8be7 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-a885644b-9228-4082-b587-38643bfa8be7 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-a885644b-9228-4082-b587-38643bfa8be7 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-a885644b-9228-4082-b587-38643bfa8be7 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-a885644b-9228-4082-b587-38643bfa8be7 div.sk-text-repr-fallback {display: none;}</style><div id="sk-a885644b-9228-4082-b587-38643bfa8be7" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ba1bad63-2b7d-4038-9275-3ab1e86e2ff4" type="checkbox" ><label for="ba1bad63-2b7d-4038-9275-3ab1e86e2ff4" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f4a09381-ea22-4ce7-a66b-0d7ae78d7788" type="checkbox" ><label for="f4a09381-ea22-4ce7-a66b-0d7ae78d7788" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cdec029a-2784-4023-9e3c-611e0d4a7c2f" type="checkbox" ><label for="cdec029a-2784-4023-9e3c-611e0d4a7c2f" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-ef6fb3b6-7f34-48d2-968f-8b7fb3ddbc9f {color: black;background-color: white;}#sk-ef6fb3b6-7f34-48d2-968f-8b7fb3ddbc9f pre{padding: 0;}#sk-ef6fb3b6-7f34-48d2-968f-8b7fb3ddbc9f div.sk-toggleable {background-color: white;}#sk-ef6fb3b6-7f34-48d2-968f-8b7fb3ddbc9f label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-ef6fb3b6-7f34-48d2-968f-8b7fb3ddbc9f label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-ef6fb3b6-7f34-48d2-968f-8b7fb3ddbc9f label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-ef6fb3b6-7f34-48d2-968f-8b7fb3ddbc9f div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-ef6fb3b6-7f34-48d2-968f-8b7fb3ddbc9f div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-ef6fb3b6-7f34-48d2-968f-8b7fb3ddbc9f div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-ef6fb3b6-7f34-48d2-968f-8b7fb3ddbc9f input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-ef6fb3b6-7f34-48d2-968f-8b7fb3ddbc9f input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-ef6fb3b6-7f34-48d2-968f-8b7fb3ddbc9f div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ef6fb3b6-7f34-48d2-968f-8b7fb3ddbc9f div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ef6fb3b6-7f34-48d2-968f-8b7fb3ddbc9f input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-ef6fb3b6-7f34-48d2-968f-8b7fb3ddbc9f div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-ef6fb3b6-7f34-48d2-968f-8b7fb3ddbc9f div.sk-estimator:hover {background-color: #d4ebff;}#sk-ef6fb3b6-7f34-48d2-968f-8b7fb3ddbc9f div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-ef6fb3b6-7f34-48d2-968f-8b7fb3ddbc9f div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-ef6fb3b6-7f34-48d2-968f-8b7fb3ddbc9f div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ef6fb3b6-7f34-48d2-968f-8b7fb3ddbc9f div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-ef6fb3b6-7f34-48d2-968f-8b7fb3ddbc9f div.sk-item {z-index: 1;}#sk-ef6fb3b6-7f34-48d2-968f-8b7fb3ddbc9f div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-ef6fb3b6-7f34-48d2-968f-8b7fb3ddbc9f div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ef6fb3b6-7f34-48d2-968f-8b7fb3ddbc9f div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-ef6fb3b6-7f34-48d2-968f-8b7fb3ddbc9f div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-ef6fb3b6-7f34-48d2-968f-8b7fb3ddbc9f div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-ef6fb3b6-7f34-48d2-968f-8b7fb3ddbc9f div.sk-parallel-item:only-child::after {width: 0;}#sk-ef6fb3b6-7f34-48d2-968f-8b7fb3ddbc9f div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-ef6fb3b6-7f34-48d2-968f-8b7fb3ddbc9f div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-ef6fb3b6-7f34-48d2-968f-8b7fb3ddbc9f div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-ef6fb3b6-7f34-48d2-968f-8b7fb3ddbc9f div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-ef6fb3b6-7f34-48d2-968f-8b7fb3ddbc9f div.sk-text-repr-fallback {display: none;}</style><div id="sk-ef6fb3b6-7f34-48d2-968f-8b7fb3ddbc9f" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3312b8d5-bae5-4a7a-908d-8f441fd9aa96" type="checkbox" ><label for="3312b8d5-bae5-4a7a-908d-8f441fd9aa96" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="22c4f37c-0e2a-4fb2-88f5-49c8ff294feb" type="checkbox" ><label for="22c4f37c-0e2a-4fb2-88f5-49c8ff294feb" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ff680e0d-df0d-4374-986b-c4d48f90deb5" type="checkbox" ><label for="ff680e0d-df0d-4374-986b-c4d48f90deb5" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="498d7e23-d608-412b-ad00-d84493ba6296" type="checkbox" ><label for="498d7e23-d608-412b-ad00-d84493ba6296" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-dc09f0ea-6111-4958-a813-454f979da8c4 {color: black;background-color: white;}#sk-dc09f0ea-6111-4958-a813-454f979da8c4 pre{padding: 0;}#sk-dc09f0ea-6111-4958-a813-454f979da8c4 div.sk-toggleable {background-color: white;}#sk-dc09f0ea-6111-4958-a813-454f979da8c4 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-dc09f0ea-6111-4958-a813-454f979da8c4 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-dc09f0ea-6111-4958-a813-454f979da8c4 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-dc09f0ea-6111-4958-a813-454f979da8c4 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-dc09f0ea-6111-4958-a813-454f979da8c4 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-dc09f0ea-6111-4958-a813-454f979da8c4 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-dc09f0ea-6111-4958-a813-454f979da8c4 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-dc09f0ea-6111-4958-a813-454f979da8c4 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-dc09f0ea-6111-4958-a813-454f979da8c4 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-dc09f0ea-6111-4958-a813-454f979da8c4 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-dc09f0ea-6111-4958-a813-454f979da8c4 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-dc09f0ea-6111-4958-a813-454f979da8c4 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-dc09f0ea-6111-4958-a813-454f979da8c4 div.sk-estimator:hover {background-color: #d4ebff;}#sk-dc09f0ea-6111-4958-a813-454f979da8c4 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-dc09f0ea-6111-4958-a813-454f979da8c4 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-dc09f0ea-6111-4958-a813-454f979da8c4 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-dc09f0ea-6111-4958-a813-454f979da8c4 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-dc09f0ea-6111-4958-a813-454f979da8c4 div.sk-item {z-index: 1;}#sk-dc09f0ea-6111-4958-a813-454f979da8c4 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-dc09f0ea-6111-4958-a813-454f979da8c4 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-dc09f0ea-6111-4958-a813-454f979da8c4 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-dc09f0ea-6111-4958-a813-454f979da8c4 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-dc09f0ea-6111-4958-a813-454f979da8c4 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-dc09f0ea-6111-4958-a813-454f979da8c4 div.sk-parallel-item:only-child::after {width: 0;}#sk-dc09f0ea-6111-4958-a813-454f979da8c4 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-dc09f0ea-6111-4958-a813-454f979da8c4 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-dc09f0ea-6111-4958-a813-454f979da8c4 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-dc09f0ea-6111-4958-a813-454f979da8c4 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-dc09f0ea-6111-4958-a813-454f979da8c4 div.sk-text-repr-fallback {display: none;}</style><div id="sk-dc09f0ea-6111-4958-a813-454f979da8c4" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7f9a5db8-83df-4fc3-b701-faee3838e9dc" type="checkbox" ><label for="7f9a5db8-83df-4fc3-b701-faee3838e9dc" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ee493e9a-ef36-4893-b69d-9192b900231d" type="checkbox" ><label for="ee493e9a-ef36-4893-b69d-9192b900231d" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c8691899-3a07-4f73-9bd2-ddb1e704001f" type="checkbox" ><label for="c8691899-3a07-4f73-9bd2-ddb1e704001f" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-bf949b1f-84bf-4b5a-8730-557b0eb70092 {color: black;background-color: white;}#sk-bf949b1f-84bf-4b5a-8730-557b0eb70092 pre{padding: 0;}#sk-bf949b1f-84bf-4b5a-8730-557b0eb70092 div.sk-toggleable {background-color: white;}#sk-bf949b1f-84bf-4b5a-8730-557b0eb70092 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-bf949b1f-84bf-4b5a-8730-557b0eb70092 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-bf949b1f-84bf-4b5a-8730-557b0eb70092 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-bf949b1f-84bf-4b5a-8730-557b0eb70092 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-bf949b1f-84bf-4b5a-8730-557b0eb70092 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-bf949b1f-84bf-4b5a-8730-557b0eb70092 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-bf949b1f-84bf-4b5a-8730-557b0eb70092 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-bf949b1f-84bf-4b5a-8730-557b0eb70092 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-bf949b1f-84bf-4b5a-8730-557b0eb70092 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-bf949b1f-84bf-4b5a-8730-557b0eb70092 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-bf949b1f-84bf-4b5a-8730-557b0eb70092 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-bf949b1f-84bf-4b5a-8730-557b0eb70092 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-bf949b1f-84bf-4b5a-8730-557b0eb70092 div.sk-estimator:hover {background-color: #d4ebff;}#sk-bf949b1f-84bf-4b5a-8730-557b0eb70092 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-bf949b1f-84bf-4b5a-8730-557b0eb70092 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-bf949b1f-84bf-4b5a-8730-557b0eb70092 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-bf949b1f-84bf-4b5a-8730-557b0eb70092 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-bf949b1f-84bf-4b5a-8730-557b0eb70092 div.sk-item {z-index: 1;}#sk-bf949b1f-84bf-4b5a-8730-557b0eb70092 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-bf949b1f-84bf-4b5a-8730-557b0eb70092 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-bf949b1f-84bf-4b5a-8730-557b0eb70092 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-bf949b1f-84bf-4b5a-8730-557b0eb70092 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-bf949b1f-84bf-4b5a-8730-557b0eb70092 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-bf949b1f-84bf-4b5a-8730-557b0eb70092 div.sk-parallel-item:only-child::after {width: 0;}#sk-bf949b1f-84bf-4b5a-8730-557b0eb70092 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-bf949b1f-84bf-4b5a-8730-557b0eb70092 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-bf949b1f-84bf-4b5a-8730-557b0eb70092 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-bf949b1f-84bf-4b5a-8730-557b0eb70092 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-bf949b1f-84bf-4b5a-8730-557b0eb70092 div.sk-text-repr-fallback {display: none;}</style><div id="sk-bf949b1f-84bf-4b5a-8730-557b0eb70092" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="098116c4-0c72-480f-9360-fc5d951885f7" type="checkbox" ><label for="098116c4-0c72-480f-9360-fc5d951885f7" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="760c4432-5705-4a20-841c-c066d0ad6686" type="checkbox" ><label for="760c4432-5705-4a20-841c-c066d0ad6686" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9449a64d-faae-4f03-950f-f2ed3244664f" type="checkbox" ><label for="9449a64d-faae-4f03-950f-f2ed3244664f" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="21bb0527-b19f-4028-a1c9-e147e8deadf6" type="checkbox" ><label for="21bb0527-b19f-4028-a1c9-e147e8deadf6" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="55b3319c-cae7-4e78-9710-a26138218453" type="checkbox" ><label for="55b3319c-cae7-4e78-9710-a26138218453" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="26607784-4ade-4bd7-b39e-d0eb0058ac7c" type="checkbox" ><label for="26607784-4ade-4bd7-b39e-d0eb0058ac7c" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="48dbb565-02ab-4c2e-a41a-f10d0f8f925e" type="checkbox" ><label for="48dbb565-02ab-4c2e-a41a-f10d0f8f925e" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5826d52b-1447-44a7-87d5-6097efbf51df" type="checkbox" ><label for="5826d52b-1447-44a7-87d5-6097efbf51df" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3f045c38-6285-4db5-8732-d2a30d7d05e1" type="checkbox" ><label for="3f045c38-6285-4db5-8732-d2a30d7d05e1" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-bc73def7-d0d7-4dea-b6e5-fac9db461f07 {color: black;background-color: white;}#sk-bc73def7-d0d7-4dea-b6e5-fac9db461f07 pre{padding: 0;}#sk-bc73def7-d0d7-4dea-b6e5-fac9db461f07 div.sk-toggleable {background-color: white;}#sk-bc73def7-d0d7-4dea-b6e5-fac9db461f07 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-bc73def7-d0d7-4dea-b6e5-fac9db461f07 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-bc73def7-d0d7-4dea-b6e5-fac9db461f07 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-bc73def7-d0d7-4dea-b6e5-fac9db461f07 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-bc73def7-d0d7-4dea-b6e5-fac9db461f07 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-bc73def7-d0d7-4dea-b6e5-fac9db461f07 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-bc73def7-d0d7-4dea-b6e5-fac9db461f07 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-bc73def7-d0d7-4dea-b6e5-fac9db461f07 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-bc73def7-d0d7-4dea-b6e5-fac9db461f07 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-bc73def7-d0d7-4dea-b6e5-fac9db461f07 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-bc73def7-d0d7-4dea-b6e5-fac9db461f07 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-bc73def7-d0d7-4dea-b6e5-fac9db461f07 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-bc73def7-d0d7-4dea-b6e5-fac9db461f07 div.sk-estimator:hover {background-color: #d4ebff;}#sk-bc73def7-d0d7-4dea-b6e5-fac9db461f07 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-bc73def7-d0d7-4dea-b6e5-fac9db461f07 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-bc73def7-d0d7-4dea-b6e5-fac9db461f07 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-bc73def7-d0d7-4dea-b6e5-fac9db461f07 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-bc73def7-d0d7-4dea-b6e5-fac9db461f07 div.sk-item {z-index: 1;}#sk-bc73def7-d0d7-4dea-b6e5-fac9db461f07 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-bc73def7-d0d7-4dea-b6e5-fac9db461f07 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-bc73def7-d0d7-4dea-b6e5-fac9db461f07 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-bc73def7-d0d7-4dea-b6e5-fac9db461f07 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-bc73def7-d0d7-4dea-b6e5-fac9db461f07 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-bc73def7-d0d7-4dea-b6e5-fac9db461f07 div.sk-parallel-item:only-child::after {width: 0;}#sk-bc73def7-d0d7-4dea-b6e5-fac9db461f07 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-bc73def7-d0d7-4dea-b6e5-fac9db461f07 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-bc73def7-d0d7-4dea-b6e5-fac9db461f07 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-bc73def7-d0d7-4dea-b6e5-fac9db461f07 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-bc73def7-d0d7-4dea-b6e5-fac9db461f07 div.sk-text-repr-fallback {display: none;}</style><div id="sk-bc73def7-d0d7-4dea-b6e5-fac9db461f07" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c8371a20-22cd-406d-889d-23366284775e" type="checkbox" ><label for="c8371a20-22cd-406d-889d-23366284775e" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="483f71d8-6da0-410d-9352-75b9b1e1ddac" type="checkbox" ><label for="483f71d8-6da0-410d-9352-75b9b1e1ddac" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9ff3fcf1-834b-42e0-9aef-1abdcfebc483" type="checkbox" ><label for="9ff3fcf1-834b-42e0-9aef-1abdcfebc483" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f7f06ae3-704e-46a6-8574-a2e7a4d9cca5" type="checkbox" ><label for="f7f06ae3-704e-46a6-8574-a2e7a4d9cca5" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="47c038e7-b3a6-4c29-91af-525e25f6dc1c" type="checkbox" ><label for="47c038e7-b3a6-4c29-91af-525e25f6dc1c" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="abfd1808-c2e3-4345-84c1-04233b605f1e" type="checkbox" ><label for="abfd1808-c2e3-4345-84c1-04233b605f1e" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4d44f449-e06c-4ff8-a2eb-e8f6e29f41d5" type="checkbox" ><label for="4d44f449-e06c-4ff8-a2eb-e8f6e29f41d5" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="db1e1385-8720-4949-8d4b-ca202e2730f7" type="checkbox" ><label for="db1e1385-8720-4949-8d4b-ca202e2730f7" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4082b6a2-ee9e-43cf-b9fe-ea1e532c41c8" type="checkbox" ><label for="4082b6a2-ee9e-43cf-b9fe-ea1e532c41c8" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.070 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
