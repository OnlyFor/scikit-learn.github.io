
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-56d94a41-f2a8-417d-a2cb-5ed89aba98ce {color: black;background-color: white;}#sk-56d94a41-f2a8-417d-a2cb-5ed89aba98ce pre{padding: 0;}#sk-56d94a41-f2a8-417d-a2cb-5ed89aba98ce div.sk-toggleable {background-color: white;}#sk-56d94a41-f2a8-417d-a2cb-5ed89aba98ce label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-56d94a41-f2a8-417d-a2cb-5ed89aba98ce label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-56d94a41-f2a8-417d-a2cb-5ed89aba98ce label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-56d94a41-f2a8-417d-a2cb-5ed89aba98ce div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-56d94a41-f2a8-417d-a2cb-5ed89aba98ce div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-56d94a41-f2a8-417d-a2cb-5ed89aba98ce div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-56d94a41-f2a8-417d-a2cb-5ed89aba98ce input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-56d94a41-f2a8-417d-a2cb-5ed89aba98ce input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-56d94a41-f2a8-417d-a2cb-5ed89aba98ce div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-56d94a41-f2a8-417d-a2cb-5ed89aba98ce div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-56d94a41-f2a8-417d-a2cb-5ed89aba98ce input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-56d94a41-f2a8-417d-a2cb-5ed89aba98ce div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-56d94a41-f2a8-417d-a2cb-5ed89aba98ce div.sk-estimator:hover {background-color: #d4ebff;}#sk-56d94a41-f2a8-417d-a2cb-5ed89aba98ce div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-56d94a41-f2a8-417d-a2cb-5ed89aba98ce div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-56d94a41-f2a8-417d-a2cb-5ed89aba98ce div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-56d94a41-f2a8-417d-a2cb-5ed89aba98ce div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-56d94a41-f2a8-417d-a2cb-5ed89aba98ce div.sk-item {z-index: 1;}#sk-56d94a41-f2a8-417d-a2cb-5ed89aba98ce div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-56d94a41-f2a8-417d-a2cb-5ed89aba98ce div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-56d94a41-f2a8-417d-a2cb-5ed89aba98ce div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-56d94a41-f2a8-417d-a2cb-5ed89aba98ce div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-56d94a41-f2a8-417d-a2cb-5ed89aba98ce div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-56d94a41-f2a8-417d-a2cb-5ed89aba98ce div.sk-parallel-item:only-child::after {width: 0;}#sk-56d94a41-f2a8-417d-a2cb-5ed89aba98ce div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-56d94a41-f2a8-417d-a2cb-5ed89aba98ce div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-56d94a41-f2a8-417d-a2cb-5ed89aba98ce div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-56d94a41-f2a8-417d-a2cb-5ed89aba98ce div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-56d94a41-f2a8-417d-a2cb-5ed89aba98ce div.sk-text-repr-fallback {display: none;}</style><div id="sk-56d94a41-f2a8-417d-a2cb-5ed89aba98ce" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="23353cfb-194d-428c-b5f1-24ed642de394" type="checkbox" ><label for="23353cfb-194d-428c-b5f1-24ed642de394" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6abb7376-63af-4684-a7c6-ca4e8a66119b" type="checkbox" ><label for="6abb7376-63af-4684-a7c6-ca4e8a66119b" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a118a850-94a2-4803-9b5e-4f579ad2a1b5" type="checkbox" ><label for="a118a850-94a2-4803-9b5e-4f579ad2a1b5" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-fb53f14b-9608-4612-a1a7-d3a4df0ff5f8 {color: black;background-color: white;}#sk-fb53f14b-9608-4612-a1a7-d3a4df0ff5f8 pre{padding: 0;}#sk-fb53f14b-9608-4612-a1a7-d3a4df0ff5f8 div.sk-toggleable {background-color: white;}#sk-fb53f14b-9608-4612-a1a7-d3a4df0ff5f8 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-fb53f14b-9608-4612-a1a7-d3a4df0ff5f8 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-fb53f14b-9608-4612-a1a7-d3a4df0ff5f8 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-fb53f14b-9608-4612-a1a7-d3a4df0ff5f8 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-fb53f14b-9608-4612-a1a7-d3a4df0ff5f8 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-fb53f14b-9608-4612-a1a7-d3a4df0ff5f8 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-fb53f14b-9608-4612-a1a7-d3a4df0ff5f8 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-fb53f14b-9608-4612-a1a7-d3a4df0ff5f8 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-fb53f14b-9608-4612-a1a7-d3a4df0ff5f8 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-fb53f14b-9608-4612-a1a7-d3a4df0ff5f8 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-fb53f14b-9608-4612-a1a7-d3a4df0ff5f8 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-fb53f14b-9608-4612-a1a7-d3a4df0ff5f8 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-fb53f14b-9608-4612-a1a7-d3a4df0ff5f8 div.sk-estimator:hover {background-color: #d4ebff;}#sk-fb53f14b-9608-4612-a1a7-d3a4df0ff5f8 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-fb53f14b-9608-4612-a1a7-d3a4df0ff5f8 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-fb53f14b-9608-4612-a1a7-d3a4df0ff5f8 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-fb53f14b-9608-4612-a1a7-d3a4df0ff5f8 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-fb53f14b-9608-4612-a1a7-d3a4df0ff5f8 div.sk-item {z-index: 1;}#sk-fb53f14b-9608-4612-a1a7-d3a4df0ff5f8 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-fb53f14b-9608-4612-a1a7-d3a4df0ff5f8 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-fb53f14b-9608-4612-a1a7-d3a4df0ff5f8 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-fb53f14b-9608-4612-a1a7-d3a4df0ff5f8 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-fb53f14b-9608-4612-a1a7-d3a4df0ff5f8 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-fb53f14b-9608-4612-a1a7-d3a4df0ff5f8 div.sk-parallel-item:only-child::after {width: 0;}#sk-fb53f14b-9608-4612-a1a7-d3a4df0ff5f8 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-fb53f14b-9608-4612-a1a7-d3a4df0ff5f8 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-fb53f14b-9608-4612-a1a7-d3a4df0ff5f8 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-fb53f14b-9608-4612-a1a7-d3a4df0ff5f8 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-fb53f14b-9608-4612-a1a7-d3a4df0ff5f8 div.sk-text-repr-fallback {display: none;}</style><div id="sk-fb53f14b-9608-4612-a1a7-d3a4df0ff5f8" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fe985646-eb91-4a80-9ae2-af5ba70c026d" type="checkbox" ><label for="fe985646-eb91-4a80-9ae2-af5ba70c026d" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bd117ee5-d679-4cdd-8a01-3cc3885ce67e" type="checkbox" ><label for="bd117ee5-d679-4cdd-8a01-3cc3885ce67e" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="06c35002-4476-4b2c-879a-156590569b8f" type="checkbox" ><label for="06c35002-4476-4b2c-879a-156590569b8f" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e2f0d936-4dc3-4ce2-a28a-88b90e77663f" type="checkbox" ><label for="e2f0d936-4dc3-4ce2-a28a-88b90e77663f" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-ec37e58d-9475-4881-875c-61d98f319318 {color: black;background-color: white;}#sk-ec37e58d-9475-4881-875c-61d98f319318 pre{padding: 0;}#sk-ec37e58d-9475-4881-875c-61d98f319318 div.sk-toggleable {background-color: white;}#sk-ec37e58d-9475-4881-875c-61d98f319318 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-ec37e58d-9475-4881-875c-61d98f319318 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-ec37e58d-9475-4881-875c-61d98f319318 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-ec37e58d-9475-4881-875c-61d98f319318 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-ec37e58d-9475-4881-875c-61d98f319318 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-ec37e58d-9475-4881-875c-61d98f319318 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-ec37e58d-9475-4881-875c-61d98f319318 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-ec37e58d-9475-4881-875c-61d98f319318 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-ec37e58d-9475-4881-875c-61d98f319318 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ec37e58d-9475-4881-875c-61d98f319318 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ec37e58d-9475-4881-875c-61d98f319318 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-ec37e58d-9475-4881-875c-61d98f319318 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-ec37e58d-9475-4881-875c-61d98f319318 div.sk-estimator:hover {background-color: #d4ebff;}#sk-ec37e58d-9475-4881-875c-61d98f319318 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-ec37e58d-9475-4881-875c-61d98f319318 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-ec37e58d-9475-4881-875c-61d98f319318 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ec37e58d-9475-4881-875c-61d98f319318 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-ec37e58d-9475-4881-875c-61d98f319318 div.sk-item {z-index: 1;}#sk-ec37e58d-9475-4881-875c-61d98f319318 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-ec37e58d-9475-4881-875c-61d98f319318 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ec37e58d-9475-4881-875c-61d98f319318 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-ec37e58d-9475-4881-875c-61d98f319318 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-ec37e58d-9475-4881-875c-61d98f319318 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-ec37e58d-9475-4881-875c-61d98f319318 div.sk-parallel-item:only-child::after {width: 0;}#sk-ec37e58d-9475-4881-875c-61d98f319318 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-ec37e58d-9475-4881-875c-61d98f319318 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-ec37e58d-9475-4881-875c-61d98f319318 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-ec37e58d-9475-4881-875c-61d98f319318 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-ec37e58d-9475-4881-875c-61d98f319318 div.sk-text-repr-fallback {display: none;}</style><div id="sk-ec37e58d-9475-4881-875c-61d98f319318" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fbfe4b43-b7ea-4119-b49c-9c2a65a75361" type="checkbox" ><label for="fbfe4b43-b7ea-4119-b49c-9c2a65a75361" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f510d7b8-ccf5-4204-ae1e-4c0fbc7fe855" type="checkbox" ><label for="f510d7b8-ccf5-4204-ae1e-4c0fbc7fe855" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3741180f-e417-4c7c-a861-2d12f646ff21" type="checkbox" ><label for="3741180f-e417-4c7c-a861-2d12f646ff21" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-8cdc08a5-5fbc-4840-b4d2-25abdc860d93 {color: black;background-color: white;}#sk-8cdc08a5-5fbc-4840-b4d2-25abdc860d93 pre{padding: 0;}#sk-8cdc08a5-5fbc-4840-b4d2-25abdc860d93 div.sk-toggleable {background-color: white;}#sk-8cdc08a5-5fbc-4840-b4d2-25abdc860d93 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-8cdc08a5-5fbc-4840-b4d2-25abdc860d93 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-8cdc08a5-5fbc-4840-b4d2-25abdc860d93 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-8cdc08a5-5fbc-4840-b4d2-25abdc860d93 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-8cdc08a5-5fbc-4840-b4d2-25abdc860d93 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-8cdc08a5-5fbc-4840-b4d2-25abdc860d93 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-8cdc08a5-5fbc-4840-b4d2-25abdc860d93 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-8cdc08a5-5fbc-4840-b4d2-25abdc860d93 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-8cdc08a5-5fbc-4840-b4d2-25abdc860d93 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-8cdc08a5-5fbc-4840-b4d2-25abdc860d93 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-8cdc08a5-5fbc-4840-b4d2-25abdc860d93 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-8cdc08a5-5fbc-4840-b4d2-25abdc860d93 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-8cdc08a5-5fbc-4840-b4d2-25abdc860d93 div.sk-estimator:hover {background-color: #d4ebff;}#sk-8cdc08a5-5fbc-4840-b4d2-25abdc860d93 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-8cdc08a5-5fbc-4840-b4d2-25abdc860d93 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-8cdc08a5-5fbc-4840-b4d2-25abdc860d93 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-8cdc08a5-5fbc-4840-b4d2-25abdc860d93 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-8cdc08a5-5fbc-4840-b4d2-25abdc860d93 div.sk-item {z-index: 1;}#sk-8cdc08a5-5fbc-4840-b4d2-25abdc860d93 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-8cdc08a5-5fbc-4840-b4d2-25abdc860d93 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-8cdc08a5-5fbc-4840-b4d2-25abdc860d93 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-8cdc08a5-5fbc-4840-b4d2-25abdc860d93 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-8cdc08a5-5fbc-4840-b4d2-25abdc860d93 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-8cdc08a5-5fbc-4840-b4d2-25abdc860d93 div.sk-parallel-item:only-child::after {width: 0;}#sk-8cdc08a5-5fbc-4840-b4d2-25abdc860d93 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-8cdc08a5-5fbc-4840-b4d2-25abdc860d93 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-8cdc08a5-5fbc-4840-b4d2-25abdc860d93 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-8cdc08a5-5fbc-4840-b4d2-25abdc860d93 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-8cdc08a5-5fbc-4840-b4d2-25abdc860d93 div.sk-text-repr-fallback {display: none;}</style><div id="sk-8cdc08a5-5fbc-4840-b4d2-25abdc860d93" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fe9747af-b301-49b1-83fe-317e0f339192" type="checkbox" ><label for="fe9747af-b301-49b1-83fe-317e0f339192" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="605210c9-66f8-4e99-8315-77adeddb35fd" type="checkbox" ><label for="605210c9-66f8-4e99-8315-77adeddb35fd" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ae99f307-0583-4865-9163-68b12913280b" type="checkbox" ><label for="ae99f307-0583-4865-9163-68b12913280b" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c532ede2-8f06-4027-bf9a-54ec2d066c85" type="checkbox" ><label for="c532ede2-8f06-4027-bf9a-54ec2d066c85" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ac16f412-6fd4-484a-85e7-ba6d3a535796" type="checkbox" ><label for="ac16f412-6fd4-484a-85e7-ba6d3a535796" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ad8bba8a-3250-439f-8a73-bb1dd2fb8d61" type="checkbox" ><label for="ad8bba8a-3250-439f-8a73-bb1dd2fb8d61" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1c3b53df-28d5-49e6-82fa-9c3fa5f69af2" type="checkbox" ><label for="1c3b53df-28d5-49e6-82fa-9c3fa5f69af2" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="63ef2811-1b93-4cbb-b114-4c418f46f458" type="checkbox" ><label for="63ef2811-1b93-4cbb-b114-4c418f46f458" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2e828ced-ed13-470e-b642-899fe667de61" type="checkbox" ><label for="2e828ced-ed13-470e-b642-899fe667de61" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-28b2f07d-578b-47ef-a170-1f722e097592 {color: black;background-color: white;}#sk-28b2f07d-578b-47ef-a170-1f722e097592 pre{padding: 0;}#sk-28b2f07d-578b-47ef-a170-1f722e097592 div.sk-toggleable {background-color: white;}#sk-28b2f07d-578b-47ef-a170-1f722e097592 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-28b2f07d-578b-47ef-a170-1f722e097592 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-28b2f07d-578b-47ef-a170-1f722e097592 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-28b2f07d-578b-47ef-a170-1f722e097592 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-28b2f07d-578b-47ef-a170-1f722e097592 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-28b2f07d-578b-47ef-a170-1f722e097592 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-28b2f07d-578b-47ef-a170-1f722e097592 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-28b2f07d-578b-47ef-a170-1f722e097592 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-28b2f07d-578b-47ef-a170-1f722e097592 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-28b2f07d-578b-47ef-a170-1f722e097592 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-28b2f07d-578b-47ef-a170-1f722e097592 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-28b2f07d-578b-47ef-a170-1f722e097592 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-28b2f07d-578b-47ef-a170-1f722e097592 div.sk-estimator:hover {background-color: #d4ebff;}#sk-28b2f07d-578b-47ef-a170-1f722e097592 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-28b2f07d-578b-47ef-a170-1f722e097592 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-28b2f07d-578b-47ef-a170-1f722e097592 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-28b2f07d-578b-47ef-a170-1f722e097592 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-28b2f07d-578b-47ef-a170-1f722e097592 div.sk-item {z-index: 1;}#sk-28b2f07d-578b-47ef-a170-1f722e097592 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-28b2f07d-578b-47ef-a170-1f722e097592 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-28b2f07d-578b-47ef-a170-1f722e097592 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-28b2f07d-578b-47ef-a170-1f722e097592 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-28b2f07d-578b-47ef-a170-1f722e097592 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-28b2f07d-578b-47ef-a170-1f722e097592 div.sk-parallel-item:only-child::after {width: 0;}#sk-28b2f07d-578b-47ef-a170-1f722e097592 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-28b2f07d-578b-47ef-a170-1f722e097592 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-28b2f07d-578b-47ef-a170-1f722e097592 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-28b2f07d-578b-47ef-a170-1f722e097592 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-28b2f07d-578b-47ef-a170-1f722e097592 div.sk-text-repr-fallback {display: none;}</style><div id="sk-28b2f07d-578b-47ef-a170-1f722e097592" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6369f18d-d89f-4a6c-a51f-63e06baf53dc" type="checkbox" ><label for="6369f18d-d89f-4a6c-a51f-63e06baf53dc" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ccb281db-aeac-4777-93d2-ae5eed3fbe37" type="checkbox" ><label for="ccb281db-aeac-4777-93d2-ae5eed3fbe37" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="985d982b-cd05-4333-abe6-5aaa2410c1a3" type="checkbox" ><label for="985d982b-cd05-4333-abe6-5aaa2410c1a3" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="dea8e4ad-aa86-4121-b7e9-312428c3ed89" type="checkbox" ><label for="dea8e4ad-aa86-4121-b7e9-312428c3ed89" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="71fcee78-1ff9-450e-b093-922ed97bab0d" type="checkbox" ><label for="71fcee78-1ff9-450e-b093-922ed97bab0d" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7d4b22e4-dc6b-4289-848c-c744fc03967e" type="checkbox" ><label for="7d4b22e4-dc6b-4289-848c-c744fc03967e" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="936b1dc4-d567-4b78-b0dc-186057f9e9ee" type="checkbox" ><label for="936b1dc4-d567-4b78-b0dc-186057f9e9ee" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5cc6fd95-253b-41fc-a136-f94b7cdb19e8" type="checkbox" ><label for="5cc6fd95-253b-41fc-a136-f94b7cdb19e8" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="909c7384-f0f7-4977-9039-f334ee1a75f8" type="checkbox" ><label for="909c7384-f0f7-4977-9039-f334ee1a75f8" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.073 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
