
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/ensemble/plot_stack_predictors.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_ensemble_plot_stack_predictors.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_ensemble_plot_stack_predictors.py:


=================================
Combine predictors using stacking
=================================

.. currentmodule:: sklearn

Stacking refers to a method to blend estimators. In this strategy, some
estimators are individually fitted on some training data while a final
estimator is trained using the stacked predictions of these base estimators.

In this example, we illustrate the use case in which different regressors are
stacked together and a final linear penalized regressor is used to output the
prediction. We compare the performance of each individual regressor with the
stacking strategy. Stacking slightly improves the overall performance.

.. GENERATED FROM PYTHON SOURCE LINES 18-28

.. code-block:: default


    # Authors: Guillaume Lemaitre <g.lemaitre58@gmail.com>
    #          Maria Telenczuk    <https://github.com/maikia>
    # License: BSD 3 clause

    print(__doc__)

    from sklearn import set_config
    set_config(display='diagram')








.. GENERATED FROM PYTHON SOURCE LINES 29-45

Download the dataset
#############################################################################

 We will use `Ames Housing`_ dataset which was first compiled by Dean De Cock
 and became better known after it was used in Kaggle challenge. It is a set
 of 1460 residential homes in Ames, Iowa, each described by 80 features. We
 will use it to predict the final logarithmic price of the houses. In this
 example we will use only 20 most interesting features chosen using
 GradientBoostingRegressor() and limit number of entries (here we won't go
 into the details on how to select the most interesting features).

 The Ames housing dataset is not shipped with scikit-learn and therefore we
 will fetch it from `OpenML`_.

 .. _`Ames Housing`: http://jse.amstat.org/v19n3/decock.pdf
 .. _`OpenML`: https://www.openml.org/d/42165

.. GENERATED FROM PYTHON SOURCE LINES 45-74

.. code-block:: default


    import numpy as np

    from sklearn.datasets import fetch_openml
    from sklearn.utils import shuffle


    def load_ames_housing():
        df = fetch_openml(name="house_prices", as_frame=True)
        X = df.data
        y = df.target

        features = ['YrSold', 'HeatingQC', 'Street', 'YearRemodAdd', 'Heating',
                    'MasVnrType', 'BsmtUnfSF', 'Foundation', 'MasVnrArea',
                    'MSSubClass', 'ExterQual', 'Condition2', 'GarageCars',
                    'GarageType', 'OverallQual', 'TotalBsmtSF', 'BsmtFinSF1',
                    'HouseStyle', 'MiscFeature', 'MoSold']

        X = X[features]
        X, y = shuffle(X, y, random_state=0)

        X = X[:600]
        y = y[:600]
        return X, np.log(y)


    X, y = load_ames_housing()









.. GENERATED FROM PYTHON SOURCE LINES 75-81

Make pipeline to preprocess the data
#############################################################################

 Before we can use Ames dataset we still need to do some preprocessing.
 First, we will select the categorical and numerical columns of the dataset to
 construct the first step of the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 81-88

.. code-block:: default


    from sklearn.compose import make_column_selector

    cat_selector = make_column_selector(dtype_include=object)
    num_selector = make_column_selector(dtype_include=np.number)
    cat_selector(X)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    ['HeatingQC', 'Street', 'Heating', 'MasVnrType', 'Foundation', 'ExterQual', 'Condition2', 'GarageType', 'HouseStyle', 'MiscFeature']



.. GENERATED FROM PYTHON SOURCE LINES 89-91

.. code-block:: default

    num_selector(X)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    ['YrSold', 'YearRemodAdd', 'BsmtUnfSF', 'MasVnrArea', 'MSSubClass', 'GarageCars', 'OverallQual', 'TotalBsmtSF', 'BsmtFinSF1', 'MoSold']



.. GENERATED FROM PYTHON SOURCE LINES 92-101

Then, we will need to design preprocessing pipelines which depends on the
ending regressor. If the ending regressor is a linear model, one needs to
one-hot encode the categories. If the ending regressor is a tree-based model
an ordinal encoder will be sufficient. Besides, numerical values need to be
standardized for a linear model while the raw numerical data can be treated
as is by a tree-based model. However, both models need an imputer to
handle missing values.

We will first design the pipeline required for the tree-based models.

.. GENERATED FROM PYTHON SOURCE LINES 101-115

.. code-block:: default


    from sklearn.compose import make_column_transformer
    from sklearn.impute import SimpleImputer
    from sklearn.pipeline import make_pipeline
    from sklearn.preprocessing import OrdinalEncoder

    cat_tree_processor = OrdinalEncoder(
        handle_unknown="use_encoded_value", unknown_value=-1)
    num_tree_processor = SimpleImputer(strategy="mean", add_indicator=True)

    tree_preprocessor = make_column_transformer(
        (num_tree_processor, num_selector), (cat_tree_processor, cat_selector))
    tree_preprocessor






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-6d2a04ec-f1e6-4cc3-af71-1148b31646be {color: black;background-color: white;}#sk-6d2a04ec-f1e6-4cc3-af71-1148b31646be pre{padding: 0;}#sk-6d2a04ec-f1e6-4cc3-af71-1148b31646be div.sk-toggleable {background-color: white;}#sk-6d2a04ec-f1e6-4cc3-af71-1148b31646be label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-6d2a04ec-f1e6-4cc3-af71-1148b31646be div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-6d2a04ec-f1e6-4cc3-af71-1148b31646be div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-6d2a04ec-f1e6-4cc3-af71-1148b31646be input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-6d2a04ec-f1e6-4cc3-af71-1148b31646be div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-6d2a04ec-f1e6-4cc3-af71-1148b31646be div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-6d2a04ec-f1e6-4cc3-af71-1148b31646be input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-6d2a04ec-f1e6-4cc3-af71-1148b31646be div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-6d2a04ec-f1e6-4cc3-af71-1148b31646be div.sk-estimator:hover {background-color: #d4ebff;}#sk-6d2a04ec-f1e6-4cc3-af71-1148b31646be div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-6d2a04ec-f1e6-4cc3-af71-1148b31646be div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-6d2a04ec-f1e6-4cc3-af71-1148b31646be div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-6d2a04ec-f1e6-4cc3-af71-1148b31646be div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-6d2a04ec-f1e6-4cc3-af71-1148b31646be div.sk-item {z-index: 1;}#sk-6d2a04ec-f1e6-4cc3-af71-1148b31646be div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-6d2a04ec-f1e6-4cc3-af71-1148b31646be div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-6d2a04ec-f1e6-4cc3-af71-1148b31646be div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-6d2a04ec-f1e6-4cc3-af71-1148b31646be div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-6d2a04ec-f1e6-4cc3-af71-1148b31646be div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-6d2a04ec-f1e6-4cc3-af71-1148b31646be div.sk-parallel-item:only-child::after {width: 0;}#sk-6d2a04ec-f1e6-4cc3-af71-1148b31646be div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-6d2a04ec-f1e6-4cc3-af71-1148b31646be div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-6d2a04ec-f1e6-4cc3-af71-1148b31646be div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-6d2a04ec-f1e6-4cc3-af71-1148b31646be div.sk-container {display: inline-block;position: relative;}</style><div id="sk-6d2a04ec-f1e6-4cc3-af71-1148b31646be" class"sk-top-container"><div class="sk-container"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ea604f25-35dd-4b96-9468-7049ea81ca8e" type="checkbox" ><label class="sk-toggleable__label" for="ea604f25-35dd-4b96-9468-7049ea81ca8e">ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('simpleimputer',
                                     SimpleImputer(add_indicator=True),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7fd5cf0b1a00>),
                                    ('ordinalencoder',
                                     OrdinalEncoder(handle_unknown='use_encoded_value',
                                                    unknown_value=-1),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7fd5cf0b1610>)])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3a4549d3-fe66-4ebc-9aa2-927509d2b799" type="checkbox" ><label class="sk-toggleable__label" for="3a4549d3-fe66-4ebc-9aa2-927509d2b799">simpleimputer</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7fd5cf0b1a00></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c3aca382-052c-4f3f-bf28-90ad06872b5a" type="checkbox" ><label class="sk-toggleable__label" for="c3aca382-052c-4f3f-bf28-90ad06872b5a">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(add_indicator=True)</pre></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7f2f3177-d21b-4c8f-84bb-fe5f6b8faa46" type="checkbox" ><label class="sk-toggleable__label" for="7f2f3177-d21b-4c8f-84bb-fe5f6b8faa46">ordinalencoder</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7fd5cf0b1610></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="42669248-2d81-4bab-ab53-82c21be4e5ea" type="checkbox" ><label class="sk-toggleable__label" for="42669248-2d81-4bab-ab53-82c21be4e5ea">OrdinalEncoder</label><div class="sk-toggleable__content"><pre>OrdinalEncoder(handle_unknown='use_encoded_value', unknown_value=-1)</pre></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 116-118

Then, we will now define the preprocessor used when the ending regressor
is a linear model.

.. GENERATED FROM PYTHON SOURCE LINES 118-130

.. code-block:: default


    from sklearn.preprocessing import OneHotEncoder
    from sklearn.preprocessing import StandardScaler

    cat_linear_processor = OneHotEncoder(handle_unknown="ignore")
    num_linear_processor = make_pipeline(
        StandardScaler(), SimpleImputer(strategy="mean", add_indicator=True))

    linear_preprocessor = make_column_transformer(
        (num_linear_processor, num_selector), (cat_linear_processor, cat_selector))
    linear_preprocessor






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-5c8fe661-ef01-4255-9e00-fe879adf86c5 {color: black;background-color: white;}#sk-5c8fe661-ef01-4255-9e00-fe879adf86c5 pre{padding: 0;}#sk-5c8fe661-ef01-4255-9e00-fe879adf86c5 div.sk-toggleable {background-color: white;}#sk-5c8fe661-ef01-4255-9e00-fe879adf86c5 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-5c8fe661-ef01-4255-9e00-fe879adf86c5 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-5c8fe661-ef01-4255-9e00-fe879adf86c5 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-5c8fe661-ef01-4255-9e00-fe879adf86c5 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-5c8fe661-ef01-4255-9e00-fe879adf86c5 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-5c8fe661-ef01-4255-9e00-fe879adf86c5 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-5c8fe661-ef01-4255-9e00-fe879adf86c5 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-5c8fe661-ef01-4255-9e00-fe879adf86c5 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-5c8fe661-ef01-4255-9e00-fe879adf86c5 div.sk-estimator:hover {background-color: #d4ebff;}#sk-5c8fe661-ef01-4255-9e00-fe879adf86c5 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-5c8fe661-ef01-4255-9e00-fe879adf86c5 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-5c8fe661-ef01-4255-9e00-fe879adf86c5 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-5c8fe661-ef01-4255-9e00-fe879adf86c5 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-5c8fe661-ef01-4255-9e00-fe879adf86c5 div.sk-item {z-index: 1;}#sk-5c8fe661-ef01-4255-9e00-fe879adf86c5 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-5c8fe661-ef01-4255-9e00-fe879adf86c5 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-5c8fe661-ef01-4255-9e00-fe879adf86c5 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-5c8fe661-ef01-4255-9e00-fe879adf86c5 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-5c8fe661-ef01-4255-9e00-fe879adf86c5 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-5c8fe661-ef01-4255-9e00-fe879adf86c5 div.sk-parallel-item:only-child::after {width: 0;}#sk-5c8fe661-ef01-4255-9e00-fe879adf86c5 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-5c8fe661-ef01-4255-9e00-fe879adf86c5 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-5c8fe661-ef01-4255-9e00-fe879adf86c5 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-5c8fe661-ef01-4255-9e00-fe879adf86c5 div.sk-container {display: inline-block;position: relative;}</style><div id="sk-5c8fe661-ef01-4255-9e00-fe879adf86c5" class"sk-top-container"><div class="sk-container"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="520a0d62-5091-494a-b6b8-ea8a442cce3e" type="checkbox" ><label class="sk-toggleable__label" for="520a0d62-5091-494a-b6b8-ea8a442cce3e">ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('pipeline',
                                     Pipeline(steps=[('standardscaler',
                                                      StandardScaler()),
                                                     ('simpleimputer',
                                                      SimpleImputer(add_indicator=True))]),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7fd5cf0b1a00>),
                                    ('onehotencoder',
                                     OneHotEncoder(handle_unknown='ignore'),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7fd5cf0b1610>)])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cc983964-b8ef-4d07-b2a2-57dcdfbc99cf" type="checkbox" ><label class="sk-toggleable__label" for="cc983964-b8ef-4d07-b2a2-57dcdfbc99cf">pipeline</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7fd5cf0b1a00></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2cdd9998-c58c-4bf4-b116-d29b6c47eca5" type="checkbox" ><label class="sk-toggleable__label" for="2cdd9998-c58c-4bf4-b116-d29b6c47eca5">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="478b3f39-35fa-4eec-b2b3-0772bf19bf0c" type="checkbox" ><label class="sk-toggleable__label" for="478b3f39-35fa-4eec-b2b3-0772bf19bf0c">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(add_indicator=True)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b5144c13-04f0-4ba3-9da8-ed0724d0a481" type="checkbox" ><label class="sk-toggleable__label" for="b5144c13-04f0-4ba3-9da8-ed0724d0a481">onehotencoder</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7fd5cf0b1610></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1fcaa9e9-aaf3-4f29-8b34-54892b304450" type="checkbox" ><label class="sk-toggleable__label" for="1fcaa9e9-aaf3-4f29-8b34-54892b304450">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown='ignore')</pre></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 131-149

Stack of predictors on a single data set
#############################################################################

 It is sometimes tedious to find the model which will best perform on a given
 dataset. Stacking provide an alternative by combining the outputs of several
 learners, without the need to choose a model specifically. The performance of
 stacking is usually close to the best model and sometimes it can outperform
 the prediction performance of each individual model.

 Here, we combine 3 learners (linear and non-linear) and use a ridge regressor
 to combine their outputs together.

 .. note::
    Although we will make new pipelines with the processors which we wrote in
    the previous section for the 3 learners, the final estimator
    :class:`~sklearn.linear_model.RidgeCV()` does not need preprocessing of
    the data as it will be fed with the already preprocessed output from the 3
    learners.

.. GENERATED FROM PYTHON SOURCE LINES 149-155

.. code-block:: default


    from sklearn.linear_model import LassoCV

    lasso_pipeline = make_pipeline(linear_preprocessor, LassoCV())
    lasso_pipeline






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-a2aeaab7-1f58-4ad5-994c-829bbc4092b9 {color: black;background-color: white;}#sk-a2aeaab7-1f58-4ad5-994c-829bbc4092b9 pre{padding: 0;}#sk-a2aeaab7-1f58-4ad5-994c-829bbc4092b9 div.sk-toggleable {background-color: white;}#sk-a2aeaab7-1f58-4ad5-994c-829bbc4092b9 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-a2aeaab7-1f58-4ad5-994c-829bbc4092b9 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-a2aeaab7-1f58-4ad5-994c-829bbc4092b9 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-a2aeaab7-1f58-4ad5-994c-829bbc4092b9 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-a2aeaab7-1f58-4ad5-994c-829bbc4092b9 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-a2aeaab7-1f58-4ad5-994c-829bbc4092b9 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-a2aeaab7-1f58-4ad5-994c-829bbc4092b9 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-a2aeaab7-1f58-4ad5-994c-829bbc4092b9 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-a2aeaab7-1f58-4ad5-994c-829bbc4092b9 div.sk-estimator:hover {background-color: #d4ebff;}#sk-a2aeaab7-1f58-4ad5-994c-829bbc4092b9 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-a2aeaab7-1f58-4ad5-994c-829bbc4092b9 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-a2aeaab7-1f58-4ad5-994c-829bbc4092b9 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-a2aeaab7-1f58-4ad5-994c-829bbc4092b9 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-a2aeaab7-1f58-4ad5-994c-829bbc4092b9 div.sk-item {z-index: 1;}#sk-a2aeaab7-1f58-4ad5-994c-829bbc4092b9 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-a2aeaab7-1f58-4ad5-994c-829bbc4092b9 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-a2aeaab7-1f58-4ad5-994c-829bbc4092b9 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-a2aeaab7-1f58-4ad5-994c-829bbc4092b9 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-a2aeaab7-1f58-4ad5-994c-829bbc4092b9 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-a2aeaab7-1f58-4ad5-994c-829bbc4092b9 div.sk-parallel-item:only-child::after {width: 0;}#sk-a2aeaab7-1f58-4ad5-994c-829bbc4092b9 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-a2aeaab7-1f58-4ad5-994c-829bbc4092b9 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-a2aeaab7-1f58-4ad5-994c-829bbc4092b9 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-a2aeaab7-1f58-4ad5-994c-829bbc4092b9 div.sk-container {display: inline-block;position: relative;}</style><div id="sk-a2aeaab7-1f58-4ad5-994c-829bbc4092b9" class"sk-top-container"><div class="sk-container"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e7742b6d-87da-4059-b633-6909d33c1385" type="checkbox" ><label class="sk-toggleable__label" for="e7742b6d-87da-4059-b633-6909d33c1385">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('columntransformer',
                     ColumnTransformer(transformers=[('pipeline',
                                                      Pipeline(steps=[('standardscaler',
                                                                       StandardScaler()),
                                                                      ('simpleimputer',
                                                                       SimpleImputer(add_indicator=True))]),
                                                      <sklearn.compose._column_transformer.make_column_selector object at 0x7fd5cf0b1a00>),
                                                     ('onehotencoder',
                                                      OneHotEncoder(handle_unknown='ignore'),
                                                      <sklearn.compose._column_transformer.make_column_selector object at 0x7fd5cf0b1610>)])),
                    ('lassocv', LassoCV())])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f9785e01-19cd-467c-88e2-069ee2824dec" type="checkbox" ><label class="sk-toggleable__label" for="f9785e01-19cd-467c-88e2-069ee2824dec">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('pipeline',
                                     Pipeline(steps=[('standardscaler',
                                                      StandardScaler()),
                                                     ('simpleimputer',
                                                      SimpleImputer(add_indicator=True))]),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7fd5cf0b1a00>),
                                    ('onehotencoder',
                                     OneHotEncoder(handle_unknown='ignore'),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7fd5cf0b1610>)])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7fe8e355-8f3d-40b5-9848-09c1ebe90d83" type="checkbox" ><label class="sk-toggleable__label" for="7fe8e355-8f3d-40b5-9848-09c1ebe90d83">pipeline</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7fd5cf0b1a00></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0bb5b502-818c-44ff-bd26-f5e2532af185" type="checkbox" ><label class="sk-toggleable__label" for="0bb5b502-818c-44ff-bd26-f5e2532af185">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1c3668dc-0b2f-4460-a2d9-784d4f35a779" type="checkbox" ><label class="sk-toggleable__label" for="1c3668dc-0b2f-4460-a2d9-784d4f35a779">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(add_indicator=True)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e2b5f83e-892f-437f-a911-cf7211a95273" type="checkbox" ><label class="sk-toggleable__label" for="e2b5f83e-892f-437f-a911-cf7211a95273">onehotencoder</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7fd5cf0b1610></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c8c53107-b298-4e78-b392-c1988636db1c" type="checkbox" ><label class="sk-toggleable__label" for="c8c53107-b298-4e78-b392-c1988636db1c">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown='ignore')</pre></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b88cc890-e2d5-4961-822d-eadd2b016e01" type="checkbox" ><label class="sk-toggleable__label" for="b88cc890-e2d5-4961-822d-eadd2b016e01">LassoCV</label><div class="sk-toggleable__content"><pre>LassoCV()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 156-162

.. code-block:: default

    from sklearn.ensemble import RandomForestRegressor

    rf_pipeline = make_pipeline(
        tree_preprocessor, RandomForestRegressor(random_state=42))
    rf_pipeline






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-ec7bd048-6598-48cb-895b-f18a74303ee2 {color: black;background-color: white;}#sk-ec7bd048-6598-48cb-895b-f18a74303ee2 pre{padding: 0;}#sk-ec7bd048-6598-48cb-895b-f18a74303ee2 div.sk-toggleable {background-color: white;}#sk-ec7bd048-6598-48cb-895b-f18a74303ee2 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-ec7bd048-6598-48cb-895b-f18a74303ee2 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-ec7bd048-6598-48cb-895b-f18a74303ee2 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-ec7bd048-6598-48cb-895b-f18a74303ee2 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-ec7bd048-6598-48cb-895b-f18a74303ee2 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ec7bd048-6598-48cb-895b-f18a74303ee2 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ec7bd048-6598-48cb-895b-f18a74303ee2 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-ec7bd048-6598-48cb-895b-f18a74303ee2 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-ec7bd048-6598-48cb-895b-f18a74303ee2 div.sk-estimator:hover {background-color: #d4ebff;}#sk-ec7bd048-6598-48cb-895b-f18a74303ee2 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-ec7bd048-6598-48cb-895b-f18a74303ee2 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-ec7bd048-6598-48cb-895b-f18a74303ee2 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ec7bd048-6598-48cb-895b-f18a74303ee2 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-ec7bd048-6598-48cb-895b-f18a74303ee2 div.sk-item {z-index: 1;}#sk-ec7bd048-6598-48cb-895b-f18a74303ee2 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-ec7bd048-6598-48cb-895b-f18a74303ee2 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ec7bd048-6598-48cb-895b-f18a74303ee2 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-ec7bd048-6598-48cb-895b-f18a74303ee2 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-ec7bd048-6598-48cb-895b-f18a74303ee2 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-ec7bd048-6598-48cb-895b-f18a74303ee2 div.sk-parallel-item:only-child::after {width: 0;}#sk-ec7bd048-6598-48cb-895b-f18a74303ee2 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-ec7bd048-6598-48cb-895b-f18a74303ee2 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-ec7bd048-6598-48cb-895b-f18a74303ee2 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-ec7bd048-6598-48cb-895b-f18a74303ee2 div.sk-container {display: inline-block;position: relative;}</style><div id="sk-ec7bd048-6598-48cb-895b-f18a74303ee2" class"sk-top-container"><div class="sk-container"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ef526083-1106-4790-befa-194d95bd12e0" type="checkbox" ><label class="sk-toggleable__label" for="ef526083-1106-4790-befa-194d95bd12e0">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('columntransformer',
                     ColumnTransformer(transformers=[('simpleimputer',
                                                      SimpleImputer(add_indicator=True),
                                                      <sklearn.compose._column_transformer.make_column_selector object at 0x7fd5cf0b1a00>),
                                                     ('ordinalencoder',
                                                      OrdinalEncoder(handle_unknown='use_encoded_value',
                                                                     unknown_value=-1),
                                                      <sklearn.compose._column_transformer.make_column_selector object at 0x7fd5cf0b1610>)])),
                    ('randomforestregressor',
                     RandomForestRegressor(random_state=42))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d3a049d5-25ae-47a7-9ee4-075d47b12a15" type="checkbox" ><label class="sk-toggleable__label" for="d3a049d5-25ae-47a7-9ee4-075d47b12a15">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('simpleimputer',
                                     SimpleImputer(add_indicator=True),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7fd5cf0b1a00>),
                                    ('ordinalencoder',
                                     OrdinalEncoder(handle_unknown='use_encoded_value',
                                                    unknown_value=-1),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7fd5cf0b1610>)])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="92fc63d7-69ed-4315-9cb5-367ab6788701" type="checkbox" ><label class="sk-toggleable__label" for="92fc63d7-69ed-4315-9cb5-367ab6788701">simpleimputer</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7fd5cf0b1a00></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="30080fa3-2b9c-4e38-9da5-fc420c0fdcff" type="checkbox" ><label class="sk-toggleable__label" for="30080fa3-2b9c-4e38-9da5-fc420c0fdcff">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(add_indicator=True)</pre></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8a677077-6741-4900-91d5-b0c9f46efe61" type="checkbox" ><label class="sk-toggleable__label" for="8a677077-6741-4900-91d5-b0c9f46efe61">ordinalencoder</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7fd5cf0b1610></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="372a34df-b3c5-4e4b-a2bb-7fd19f1285cb" type="checkbox" ><label class="sk-toggleable__label" for="372a34df-b3c5-4e4b-a2bb-7fd19f1285cb">OrdinalEncoder</label><div class="sk-toggleable__content"><pre>OrdinalEncoder(handle_unknown='use_encoded_value', unknown_value=-1)</pre></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="67d70090-fd83-483f-a116-35f424dbc761" type="checkbox" ><label class="sk-toggleable__label" for="67d70090-fd83-483f-a116-35f424dbc761">RandomForestRegressor</label><div class="sk-toggleable__content"><pre>RandomForestRegressor(random_state=42)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 163-169

.. code-block:: default

    from sklearn.ensemble import HistGradientBoostingRegressor

    gbdt_pipeline = make_pipeline(
        tree_preprocessor, HistGradientBoostingRegressor(random_state=0))
    gbdt_pipeline






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-76cefb1e-b562-4c2e-8167-c3c9dcbddaaa {color: black;background-color: white;}#sk-76cefb1e-b562-4c2e-8167-c3c9dcbddaaa pre{padding: 0;}#sk-76cefb1e-b562-4c2e-8167-c3c9dcbddaaa div.sk-toggleable {background-color: white;}#sk-76cefb1e-b562-4c2e-8167-c3c9dcbddaaa label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-76cefb1e-b562-4c2e-8167-c3c9dcbddaaa div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-76cefb1e-b562-4c2e-8167-c3c9dcbddaaa div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-76cefb1e-b562-4c2e-8167-c3c9dcbddaaa input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-76cefb1e-b562-4c2e-8167-c3c9dcbddaaa div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-76cefb1e-b562-4c2e-8167-c3c9dcbddaaa div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-76cefb1e-b562-4c2e-8167-c3c9dcbddaaa input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-76cefb1e-b562-4c2e-8167-c3c9dcbddaaa div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-76cefb1e-b562-4c2e-8167-c3c9dcbddaaa div.sk-estimator:hover {background-color: #d4ebff;}#sk-76cefb1e-b562-4c2e-8167-c3c9dcbddaaa div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-76cefb1e-b562-4c2e-8167-c3c9dcbddaaa div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-76cefb1e-b562-4c2e-8167-c3c9dcbddaaa div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-76cefb1e-b562-4c2e-8167-c3c9dcbddaaa div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-76cefb1e-b562-4c2e-8167-c3c9dcbddaaa div.sk-item {z-index: 1;}#sk-76cefb1e-b562-4c2e-8167-c3c9dcbddaaa div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-76cefb1e-b562-4c2e-8167-c3c9dcbddaaa div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-76cefb1e-b562-4c2e-8167-c3c9dcbddaaa div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-76cefb1e-b562-4c2e-8167-c3c9dcbddaaa div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-76cefb1e-b562-4c2e-8167-c3c9dcbddaaa div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-76cefb1e-b562-4c2e-8167-c3c9dcbddaaa div.sk-parallel-item:only-child::after {width: 0;}#sk-76cefb1e-b562-4c2e-8167-c3c9dcbddaaa div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-76cefb1e-b562-4c2e-8167-c3c9dcbddaaa div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-76cefb1e-b562-4c2e-8167-c3c9dcbddaaa div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-76cefb1e-b562-4c2e-8167-c3c9dcbddaaa div.sk-container {display: inline-block;position: relative;}</style><div id="sk-76cefb1e-b562-4c2e-8167-c3c9dcbddaaa" class"sk-top-container"><div class="sk-container"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="00f16e0d-5c70-4334-bc82-9ab55f3f6dd1" type="checkbox" ><label class="sk-toggleable__label" for="00f16e0d-5c70-4334-bc82-9ab55f3f6dd1">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('columntransformer',
                     ColumnTransformer(transformers=[('simpleimputer',
                                                      SimpleImputer(add_indicator=True),
                                                      <sklearn.compose._column_transformer.make_column_selector object at 0x7fd5cf0b1a00>),
                                                     ('ordinalencoder',
                                                      OrdinalEncoder(handle_unknown='use_encoded_value',
                                                                     unknown_value=-1),
                                                      <sklearn.compose._column_transformer.make_column_selector object at 0x7fd5cf0b1610>)])),
                    ('histgradientboostingregressor',
                     HistGradientBoostingRegressor(random_state=0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0cc1f6d5-1cf5-4296-b879-efdf2edaee2e" type="checkbox" ><label class="sk-toggleable__label" for="0cc1f6d5-1cf5-4296-b879-efdf2edaee2e">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('simpleimputer',
                                     SimpleImputer(add_indicator=True),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7fd5cf0b1a00>),
                                    ('ordinalencoder',
                                     OrdinalEncoder(handle_unknown='use_encoded_value',
                                                    unknown_value=-1),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7fd5cf0b1610>)])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="30a66e2f-bfb9-4076-ad9f-845c89ce9c87" type="checkbox" ><label class="sk-toggleable__label" for="30a66e2f-bfb9-4076-ad9f-845c89ce9c87">simpleimputer</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7fd5cf0b1a00></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5544c28d-f71d-4b24-ba17-555966a25207" type="checkbox" ><label class="sk-toggleable__label" for="5544c28d-f71d-4b24-ba17-555966a25207">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(add_indicator=True)</pre></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="605c938c-57ff-4af2-b188-3cf676199869" type="checkbox" ><label class="sk-toggleable__label" for="605c938c-57ff-4af2-b188-3cf676199869">ordinalencoder</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7fd5cf0b1610></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a3eb4bac-f530-4b2e-8b76-92f8af1c6a62" type="checkbox" ><label class="sk-toggleable__label" for="a3eb4bac-f530-4b2e-8b76-92f8af1c6a62">OrdinalEncoder</label><div class="sk-toggleable__content"><pre>OrdinalEncoder(handle_unknown='use_encoded_value', unknown_value=-1)</pre></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="02f4fedc-a747-4dca-b45e-124234ad251c" type="checkbox" ><label class="sk-toggleable__label" for="02f4fedc-a747-4dca-b45e-124234ad251c">HistGradientBoostingRegressor</label><div class="sk-toggleable__content"><pre>HistGradientBoostingRegressor(random_state=0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 170-181

.. code-block:: default

    from sklearn.ensemble import StackingRegressor
    from sklearn.linear_model import RidgeCV

    estimators = [('Random Forest', rf_pipeline),
                  ('Lasso', lasso_pipeline),
                  ('Gradient Boosting', gbdt_pipeline)]

    stacking_regressor = StackingRegressor(
        estimators=estimators, final_estimator=RidgeCV())
    stacking_regressor






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-16f29b57-4005-4fc3-a259-9e94636a760c {color: black;background-color: white;}#sk-16f29b57-4005-4fc3-a259-9e94636a760c pre{padding: 0;}#sk-16f29b57-4005-4fc3-a259-9e94636a760c div.sk-toggleable {background-color: white;}#sk-16f29b57-4005-4fc3-a259-9e94636a760c label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-16f29b57-4005-4fc3-a259-9e94636a760c div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-16f29b57-4005-4fc3-a259-9e94636a760c div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-16f29b57-4005-4fc3-a259-9e94636a760c input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-16f29b57-4005-4fc3-a259-9e94636a760c div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-16f29b57-4005-4fc3-a259-9e94636a760c div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-16f29b57-4005-4fc3-a259-9e94636a760c input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-16f29b57-4005-4fc3-a259-9e94636a760c div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-16f29b57-4005-4fc3-a259-9e94636a760c div.sk-estimator:hover {background-color: #d4ebff;}#sk-16f29b57-4005-4fc3-a259-9e94636a760c div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-16f29b57-4005-4fc3-a259-9e94636a760c div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-16f29b57-4005-4fc3-a259-9e94636a760c div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-16f29b57-4005-4fc3-a259-9e94636a760c div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-16f29b57-4005-4fc3-a259-9e94636a760c div.sk-item {z-index: 1;}#sk-16f29b57-4005-4fc3-a259-9e94636a760c div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-16f29b57-4005-4fc3-a259-9e94636a760c div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-16f29b57-4005-4fc3-a259-9e94636a760c div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-16f29b57-4005-4fc3-a259-9e94636a760c div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-16f29b57-4005-4fc3-a259-9e94636a760c div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-16f29b57-4005-4fc3-a259-9e94636a760c div.sk-parallel-item:only-child::after {width: 0;}#sk-16f29b57-4005-4fc3-a259-9e94636a760c div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-16f29b57-4005-4fc3-a259-9e94636a760c div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-16f29b57-4005-4fc3-a259-9e94636a760c div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-16f29b57-4005-4fc3-a259-9e94636a760c div.sk-container {display: inline-block;position: relative;}</style><div id="sk-16f29b57-4005-4fc3-a259-9e94636a760c" class"sk-top-container"><div class="sk-container"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ec522158-4de5-49f7-9771-f09de5b2c963" type="checkbox" ><label class="sk-toggleable__label" for="ec522158-4de5-49f7-9771-f09de5b2c963">StackingRegressor</label><div class="sk-toggleable__content"><pre>StackingRegressor(estimators=[('Random Forest',
                                   Pipeline(steps=[('columntransformer',
                                                    ColumnTransformer(transformers=[('simpleimputer',
                                                                                     SimpleImputer(add_indicator=True),
                                                                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7fd5cf0b1a00>),
                                                                                    ('ordinalencoder',
                                                                                     OrdinalEncoder(handle_unknown='use_encoded_value',
                                                                                                    unknown_value=-1),
                                                                                     <sklearn.compose...
                                                                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7fd5cf0b1a00>),
                                                                                    ('ordinalencoder',
                                                                                     OrdinalEncoder(handle_unknown='use_encoded_value',
                                                                                                    unknown_value=-1),
                                                                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7fd5cf0b1610>)])),
                                                   ('histgradientboostingregressor',
                                                    HistGradientBoostingRegressor(random_state=0))]))],
                      final_estimator=RidgeCV(alphas=array([ 0.1,  1. , 10. ])))</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><label>Random Forest</label></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9dcb1fb8-250c-42a7-95bb-7cadfeda282a" type="checkbox" ><label class="sk-toggleable__label" for="9dcb1fb8-250c-42a7-95bb-7cadfeda282a">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('simpleimputer',
                                     SimpleImputer(add_indicator=True),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7fd5cf0b1a00>),
                                    ('ordinalencoder',
                                     OrdinalEncoder(handle_unknown='use_encoded_value',
                                                    unknown_value=-1),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7fd5cf0b1610>)])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="af07dd95-9cfb-4128-9174-65a5b331567c" type="checkbox" ><label class="sk-toggleable__label" for="af07dd95-9cfb-4128-9174-65a5b331567c">simpleimputer</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7fd5cf0b1a00></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="edd9a45d-c4a5-4783-8bd3-95e11b6bafc3" type="checkbox" ><label class="sk-toggleable__label" for="edd9a45d-c4a5-4783-8bd3-95e11b6bafc3">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(add_indicator=True)</pre></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f64964bc-7645-44fe-8956-7d7f52b37e4e" type="checkbox" ><label class="sk-toggleable__label" for="f64964bc-7645-44fe-8956-7d7f52b37e4e">ordinalencoder</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7fd5cf0b1610></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d9e6f168-5278-4a7c-a6e6-500ec53ec6b2" type="checkbox" ><label class="sk-toggleable__label" for="d9e6f168-5278-4a7c-a6e6-500ec53ec6b2">OrdinalEncoder</label><div class="sk-toggleable__content"><pre>OrdinalEncoder(handle_unknown='use_encoded_value', unknown_value=-1)</pre></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bd0e36e0-9620-4c2f-92af-1beae15f1ae0" type="checkbox" ><label class="sk-toggleable__label" for="bd0e36e0-9620-4c2f-92af-1beae15f1ae0">RandomForestRegressor</label><div class="sk-toggleable__content"><pre>RandomForestRegressor(random_state=42)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><label>Lasso</label></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="75a142e4-e65a-4b65-b835-c1f743ad0a5c" type="checkbox" ><label class="sk-toggleable__label" for="75a142e4-e65a-4b65-b835-c1f743ad0a5c">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('pipeline',
                                     Pipeline(steps=[('standardscaler',
                                                      StandardScaler()),
                                                     ('simpleimputer',
                                                      SimpleImputer(add_indicator=True))]),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7fd5cf0b1a00>),
                                    ('onehotencoder',
                                     OneHotEncoder(handle_unknown='ignore'),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7fd5cf0b1610>)])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="92f75a68-0f9e-4b4e-abde-84d8d3fd47d6" type="checkbox" ><label class="sk-toggleable__label" for="92f75a68-0f9e-4b4e-abde-84d8d3fd47d6">pipeline</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7fd5cf0b1a00></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="59f81e99-7ad5-4471-8d4e-b3b904a53055" type="checkbox" ><label class="sk-toggleable__label" for="59f81e99-7ad5-4471-8d4e-b3b904a53055">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7f40f329-8d3a-45ec-a71e-18a446338806" type="checkbox" ><label class="sk-toggleable__label" for="7f40f329-8d3a-45ec-a71e-18a446338806">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(add_indicator=True)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9964e625-7093-410a-ae83-202e8216e680" type="checkbox" ><label class="sk-toggleable__label" for="9964e625-7093-410a-ae83-202e8216e680">onehotencoder</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7fd5cf0b1610></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c0b2388b-eead-4551-b140-7d96b359700d" type="checkbox" ><label class="sk-toggleable__label" for="c0b2388b-eead-4551-b140-7d96b359700d">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown='ignore')</pre></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="df6afb42-ba5f-4174-8aa1-178763250651" type="checkbox" ><label class="sk-toggleable__label" for="df6afb42-ba5f-4174-8aa1-178763250651">LassoCV</label><div class="sk-toggleable__content"><pre>LassoCV()</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><label>Gradient Boosting</label></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e106c1a1-df62-4522-a134-076a3750e081" type="checkbox" ><label class="sk-toggleable__label" for="e106c1a1-df62-4522-a134-076a3750e081">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('simpleimputer',
                                     SimpleImputer(add_indicator=True),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7fd5cf0b1a00>),
                                    ('ordinalencoder',
                                     OrdinalEncoder(handle_unknown='use_encoded_value',
                                                    unknown_value=-1),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7fd5cf0b1610>)])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="752d8f99-7ece-4eec-9b58-f7a7cfd1e8c3" type="checkbox" ><label class="sk-toggleable__label" for="752d8f99-7ece-4eec-9b58-f7a7cfd1e8c3">simpleimputer</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7fd5cf0b1a00></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="273a254b-aac5-4fa5-97a8-b1d2cd701b2e" type="checkbox" ><label class="sk-toggleable__label" for="273a254b-aac5-4fa5-97a8-b1d2cd701b2e">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(add_indicator=True)</pre></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1e51f0cc-6655-45e3-a6f0-cbabe4907730" type="checkbox" ><label class="sk-toggleable__label" for="1e51f0cc-6655-45e3-a6f0-cbabe4907730">ordinalencoder</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7fd5cf0b1610></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d34d9777-91b8-4dbd-b9d0-753257415ab6" type="checkbox" ><label class="sk-toggleable__label" for="d34d9777-91b8-4dbd-b9d0-753257415ab6">OrdinalEncoder</label><div class="sk-toggleable__content"><pre>OrdinalEncoder(handle_unknown='use_encoded_value', unknown_value=-1)</pre></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cd2be605-2eea-423c-8956-2a0bf75fafd7" type="checkbox" ><label class="sk-toggleable__label" for="cd2be605-2eea-423c-8956-2a0bf75fafd7">HistGradientBoostingRegressor</label><div class="sk-toggleable__content"><pre>HistGradientBoostingRegressor(random_state=0)</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><label>final_estimator</label></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="650de9c1-fb27-40a9-9db3-da3d80f9d71c" type="checkbox" ><label class="sk-toggleable__label" for="650de9c1-fb27-40a9-9db3-da3d80f9d71c">RidgeCV</label><div class="sk-toggleable__content"><pre>RidgeCV(alphas=array([ 0.1,  1. , 10. ]))</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 182-191

Measure and plot the results
#############################################################################

 Now we can use Ames Housing dataset to make the predictions. We check the
 performance of each individual predictor as well as of the stack of the
 regressors.

 The function ``plot_regression_results`` is used to plot the predicted and
 true targets.

.. GENERATED FROM PYTHON SOURCE LINES 191-250

.. code-block:: default



    import time
    import matplotlib.pyplot as plt
    from sklearn.model_selection import cross_validate, cross_val_predict


    def plot_regression_results(ax, y_true, y_pred, title, scores, elapsed_time):
        """Scatter plot of the predicted vs true targets."""
        ax.plot([y_true.min(), y_true.max()],
                [y_true.min(), y_true.max()],
                '--r', linewidth=2)
        ax.scatter(y_true, y_pred, alpha=0.2)

        ax.spines['top'].set_visible(False)
        ax.spines['right'].set_visible(False)
        ax.get_xaxis().tick_bottom()
        ax.get_yaxis().tick_left()
        ax.spines['left'].set_position(('outward', 10))
        ax.spines['bottom'].set_position(('outward', 10))
        ax.set_xlim([y_true.min(), y_true.max()])
        ax.set_ylim([y_true.min(), y_true.max()])
        ax.set_xlabel('Measured')
        ax.set_ylabel('Predicted')
        extra = plt.Rectangle((0, 0), 0, 0, fc="w", fill=False,
                              edgecolor='none', linewidth=0)
        ax.legend([extra], [scores], loc='upper left')
        title = title + '\n Evaluation in {:.2f} seconds'.format(elapsed_time)
        ax.set_title(title)


    fig, axs = plt.subplots(2, 2, figsize=(9, 7))
    axs = np.ravel(axs)

    for ax, (name, est) in zip(axs, estimators + [('Stacking Regressor',
                                                   stacking_regressor)]):
        start_time = time.time()
        score = cross_validate(est, X, y,
                               scoring=['r2', 'neg_mean_absolute_error'],
                               n_jobs=-1, verbose=0)
        elapsed_time = time.time() - start_time

        y_pred = cross_val_predict(est, X, y, n_jobs=-1, verbose=0)

        plot_regression_results(
            ax, y, y_pred,
            name,
            (r'$R^2={:.2f} \pm {:.2f}$' + '\n' + r'$MAE={:.2f} \pm {:.2f}$')
            .format(np.mean(score['test_r2']),
                    np.std(score['test_r2']),
                    -np.mean(score['test_neg_mean_absolute_error']),
                    np.std(score['test_neg_mean_absolute_error'])),
            elapsed_time)

    plt.suptitle('Single predictors versus stacked predictors')
    plt.tight_layout()
    plt.subplots_adjust(top=0.9)
    plt.show()




.. image-sg:: /auto_examples/ensemble/images/sphx_glr_plot_stack_predictors_001.png
   :alt: Single predictors versus stacked predictors, Random Forest  Evaluation in 0.93 seconds, Lasso  Evaluation in 0.12 seconds, Gradient Boosting  Evaluation in 0.22 seconds, Stacking Regressor  Evaluation in 2.88 seconds
   :srcset: /auto_examples/ensemble/images/sphx_glr_plot_stack_predictors_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 251-254

The stacked regressor will combine the strengths of the different regressors.
However, we also see that training the stacked regressor is much more
computationally expensive.


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  9.021 seconds)


.. _sphx_glr_download_auto_examples_ensemble_plot_stack_predictors.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/ensemble/plot_stack_predictors.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_stack_predictors.py <plot_stack_predictors.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_stack_predictors.ipynb <plot_stack_predictors.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
