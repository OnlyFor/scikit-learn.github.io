
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/ensemble/plot_stack_predictors.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_ensemble_plot_stack_predictors.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_ensemble_plot_stack_predictors.py:


=================================
Combine predictors using stacking
=================================

.. currentmodule:: sklearn

Stacking refers to a method to blend estimators. In this strategy, some
estimators are individually fitted on some training data while a final
estimator is trained using the stacked predictions of these base estimators.

In this example, we illustrate the use case in which different regressors are
stacked together and a final linear penalized regressor is used to output the
prediction. We compare the performance of each individual regressor with the
stacking strategy. Stacking slightly improves the overall performance.

.. GENERATED FROM PYTHON SOURCE LINES 18-28

.. code-block:: default


    # Authors: Guillaume Lemaitre <g.lemaitre58@gmail.com>
    #          Maria Telenczuk    <https://github.com/maikia>
    # License: BSD 3 clause

    print(__doc__)

    from sklearn import set_config
    set_config(display='diagram')








.. GENERATED FROM PYTHON SOURCE LINES 29-45

Download the dataset
#############################################################################

 We will use `Ames Housing`_ dataset which was first compiled by Dean De Cock
 and became better known after it was used in Kaggle challenge. It is a set
 of 1460 residential homes in Ames, Iowa, each described by 80 features. We
 will use it to predict the final logarithmic price of the houses. In this
 example we will use only 20 most interesting features chosen using
 GradientBoostingRegressor() and limit number of entries (here we won't go
 into the details on how to select the most interesting features).

 The Ames housing dataset is not shipped with scikit-learn and therefore we
 will fetch it from `OpenML`_.

 .. _`Ames Housing`: http://jse.amstat.org/v19n3/decock.pdf
 .. _`OpenML`: https://www.openml.org/d/42165

.. GENERATED FROM PYTHON SOURCE LINES 45-74

.. code-block:: default


    import numpy as np

    from sklearn.datasets import fetch_openml
    from sklearn.utils import shuffle


    def load_ames_housing():
        df = fetch_openml(name="house_prices", as_frame=True)
        X = df.data
        y = df.target

        features = ['YrSold', 'HeatingQC', 'Street', 'YearRemodAdd', 'Heating',
                    'MasVnrType', 'BsmtUnfSF', 'Foundation', 'MasVnrArea',
                    'MSSubClass', 'ExterQual', 'Condition2', 'GarageCars',
                    'GarageType', 'OverallQual', 'TotalBsmtSF', 'BsmtFinSF1',
                    'HouseStyle', 'MiscFeature', 'MoSold']

        X = X[features]
        X, y = shuffle(X, y, random_state=0)

        X = X[:600]
        y = y[:600]
        return X, np.log(y)


    X, y = load_ames_housing()









.. GENERATED FROM PYTHON SOURCE LINES 75-81

Make pipeline to preprocess the data
#############################################################################

 Before we can use Ames dataset we still need to do some preprocessing.
 First, we will select the categorical and numerical columns of the dataset to
 construct the first step of the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 81-88

.. code-block:: default


    from sklearn.compose import make_column_selector

    cat_selector = make_column_selector(dtype_include=object)
    num_selector = make_column_selector(dtype_include=np.number)
    cat_selector(X)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    ['HeatingQC', 'Street', 'Heating', 'MasVnrType', 'Foundation', 'ExterQual', 'Condition2', 'GarageType', 'HouseStyle', 'MiscFeature']



.. GENERATED FROM PYTHON SOURCE LINES 89-91

.. code-block:: default

    num_selector(X)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    ['YrSold', 'YearRemodAdd', 'BsmtUnfSF', 'MasVnrArea', 'MSSubClass', 'GarageCars', 'OverallQual', 'TotalBsmtSF', 'BsmtFinSF1', 'MoSold']



.. GENERATED FROM PYTHON SOURCE LINES 92-101

Then, we will need to design preprocessing pipelines which depends on the
ending regressor. If the ending regressor is a linear model, one needs to
one-hot encode the categories. If the ending regressor is a tree-based model
an ordinal encoder will be sufficient. Besides, numerical values need to be
standardized for a linear model while the raw numerical data can be treated
as is by a tree-based model. However, both models need an imputer to
handle missing values.

We will first design the pipeline required for the tree-based models.

.. GENERATED FROM PYTHON SOURCE LINES 101-115

.. code-block:: default


    from sklearn.compose import make_column_transformer
    from sklearn.impute import SimpleImputer
    from sklearn.pipeline import make_pipeline
    from sklearn.preprocessing import OrdinalEncoder

    cat_tree_processor = OrdinalEncoder(
        handle_unknown="use_encoded_value", unknown_value=-1)
    num_tree_processor = SimpleImputer(strategy="mean", add_indicator=True)

    tree_preprocessor = make_column_transformer(
        (num_tree_processor, num_selector), (cat_tree_processor, cat_selector))
    tree_preprocessor






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-867efe93-e2f3-4b56-800f-a49740d322e5 {color: black;background-color: white;}#sk-867efe93-e2f3-4b56-800f-a49740d322e5 pre{padding: 0;}#sk-867efe93-e2f3-4b56-800f-a49740d322e5 div.sk-toggleable {background-color: white;}#sk-867efe93-e2f3-4b56-800f-a49740d322e5 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-867efe93-e2f3-4b56-800f-a49740d322e5 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-867efe93-e2f3-4b56-800f-a49740d322e5 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-867efe93-e2f3-4b56-800f-a49740d322e5 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-867efe93-e2f3-4b56-800f-a49740d322e5 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-867efe93-e2f3-4b56-800f-a49740d322e5 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-867efe93-e2f3-4b56-800f-a49740d322e5 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-867efe93-e2f3-4b56-800f-a49740d322e5 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-867efe93-e2f3-4b56-800f-a49740d322e5 div.sk-estimator:hover {background-color: #d4ebff;}#sk-867efe93-e2f3-4b56-800f-a49740d322e5 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-867efe93-e2f3-4b56-800f-a49740d322e5 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-867efe93-e2f3-4b56-800f-a49740d322e5 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-867efe93-e2f3-4b56-800f-a49740d322e5 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-867efe93-e2f3-4b56-800f-a49740d322e5 div.sk-item {z-index: 1;}#sk-867efe93-e2f3-4b56-800f-a49740d322e5 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-867efe93-e2f3-4b56-800f-a49740d322e5 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-867efe93-e2f3-4b56-800f-a49740d322e5 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-867efe93-e2f3-4b56-800f-a49740d322e5 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-867efe93-e2f3-4b56-800f-a49740d322e5 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-867efe93-e2f3-4b56-800f-a49740d322e5 div.sk-parallel-item:only-child::after {width: 0;}#sk-867efe93-e2f3-4b56-800f-a49740d322e5 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-867efe93-e2f3-4b56-800f-a49740d322e5 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-867efe93-e2f3-4b56-800f-a49740d322e5 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-867efe93-e2f3-4b56-800f-a49740d322e5 div.sk-container {display: inline-block;position: relative;}</style><div id="sk-867efe93-e2f3-4b56-800f-a49740d322e5" class"sk-top-container"><div class="sk-container"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6907d1e2-35aa-46ca-9cf8-0320120e1518" type="checkbox" ><label class="sk-toggleable__label" for="6907d1e2-35aa-46ca-9cf8-0320120e1518">ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('simpleimputer',
                                     SimpleImputer(add_indicator=True),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7feafd7f8e80>),
                                    ('ordinalencoder',
                                     OrdinalEncoder(handle_unknown='use_encoded_value',
                                                    unknown_value=-1),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7feb0cbd6df0>)])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7a1f5c56-a3c3-4929-9f0c-1f624287ab38" type="checkbox" ><label class="sk-toggleable__label" for="7a1f5c56-a3c3-4929-9f0c-1f624287ab38">simpleimputer</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7feafd7f8e80></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e740c809-cbf8-4c8c-9953-2b95d64f2eb1" type="checkbox" ><label class="sk-toggleable__label" for="e740c809-cbf8-4c8c-9953-2b95d64f2eb1">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(add_indicator=True)</pre></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c0ea75ab-6b5b-42df-9a48-e63eabf24785" type="checkbox" ><label class="sk-toggleable__label" for="c0ea75ab-6b5b-42df-9a48-e63eabf24785">ordinalencoder</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7feb0cbd6df0></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="77cb9178-bf72-4eb3-8daf-8a094ab88c1b" type="checkbox" ><label class="sk-toggleable__label" for="77cb9178-bf72-4eb3-8daf-8a094ab88c1b">OrdinalEncoder</label><div class="sk-toggleable__content"><pre>OrdinalEncoder(handle_unknown='use_encoded_value', unknown_value=-1)</pre></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 116-118

Then, we will now define the preprocessor used when the ending regressor
is a linear model.

.. GENERATED FROM PYTHON SOURCE LINES 118-130

.. code-block:: default


    from sklearn.preprocessing import OneHotEncoder
    from sklearn.preprocessing import StandardScaler

    cat_linear_processor = OneHotEncoder(handle_unknown="ignore")
    num_linear_processor = make_pipeline(
        StandardScaler(), SimpleImputer(strategy="mean", add_indicator=True))

    linear_preprocessor = make_column_transformer(
        (num_linear_processor, num_selector), (cat_linear_processor, cat_selector))
    linear_preprocessor






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-736fa92f-93e2-418a-846b-7b1bb865d10f {color: black;background-color: white;}#sk-736fa92f-93e2-418a-846b-7b1bb865d10f pre{padding: 0;}#sk-736fa92f-93e2-418a-846b-7b1bb865d10f div.sk-toggleable {background-color: white;}#sk-736fa92f-93e2-418a-846b-7b1bb865d10f label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-736fa92f-93e2-418a-846b-7b1bb865d10f div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-736fa92f-93e2-418a-846b-7b1bb865d10f div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-736fa92f-93e2-418a-846b-7b1bb865d10f input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-736fa92f-93e2-418a-846b-7b1bb865d10f div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-736fa92f-93e2-418a-846b-7b1bb865d10f div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-736fa92f-93e2-418a-846b-7b1bb865d10f input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-736fa92f-93e2-418a-846b-7b1bb865d10f div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-736fa92f-93e2-418a-846b-7b1bb865d10f div.sk-estimator:hover {background-color: #d4ebff;}#sk-736fa92f-93e2-418a-846b-7b1bb865d10f div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-736fa92f-93e2-418a-846b-7b1bb865d10f div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-736fa92f-93e2-418a-846b-7b1bb865d10f div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-736fa92f-93e2-418a-846b-7b1bb865d10f div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-736fa92f-93e2-418a-846b-7b1bb865d10f div.sk-item {z-index: 1;}#sk-736fa92f-93e2-418a-846b-7b1bb865d10f div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-736fa92f-93e2-418a-846b-7b1bb865d10f div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-736fa92f-93e2-418a-846b-7b1bb865d10f div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-736fa92f-93e2-418a-846b-7b1bb865d10f div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-736fa92f-93e2-418a-846b-7b1bb865d10f div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-736fa92f-93e2-418a-846b-7b1bb865d10f div.sk-parallel-item:only-child::after {width: 0;}#sk-736fa92f-93e2-418a-846b-7b1bb865d10f div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-736fa92f-93e2-418a-846b-7b1bb865d10f div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-736fa92f-93e2-418a-846b-7b1bb865d10f div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-736fa92f-93e2-418a-846b-7b1bb865d10f div.sk-container {display: inline-block;position: relative;}</style><div id="sk-736fa92f-93e2-418a-846b-7b1bb865d10f" class"sk-top-container"><div class="sk-container"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ca99e790-5613-4d54-ba18-df1a511d58fa" type="checkbox" ><label class="sk-toggleable__label" for="ca99e790-5613-4d54-ba18-df1a511d58fa">ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('pipeline',
                                     Pipeline(steps=[('standardscaler',
                                                      StandardScaler()),
                                                     ('simpleimputer',
                                                      SimpleImputer(add_indicator=True))]),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7feafd7f8e80>),
                                    ('onehotencoder',
                                     OneHotEncoder(handle_unknown='ignore'),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7feb0cbd6df0>)])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="55c269a5-ffcd-47c2-9ea2-9f2ed7e9efa5" type="checkbox" ><label class="sk-toggleable__label" for="55c269a5-ffcd-47c2-9ea2-9f2ed7e9efa5">pipeline</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7feafd7f8e80></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="05da7b77-95e4-4aa1-865d-bd851522afb8" type="checkbox" ><label class="sk-toggleable__label" for="05da7b77-95e4-4aa1-865d-bd851522afb8">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2553f9db-09d7-4db2-8daf-8f5bdebe62fa" type="checkbox" ><label class="sk-toggleable__label" for="2553f9db-09d7-4db2-8daf-8f5bdebe62fa">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(add_indicator=True)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="645bf33a-5465-4c0c-a60b-5aa3ad984892" type="checkbox" ><label class="sk-toggleable__label" for="645bf33a-5465-4c0c-a60b-5aa3ad984892">onehotencoder</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7feb0cbd6df0></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4ace8f8b-dfce-41a1-b301-12ada34ad397" type="checkbox" ><label class="sk-toggleable__label" for="4ace8f8b-dfce-41a1-b301-12ada34ad397">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown='ignore')</pre></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 131-149

Stack of predictors on a single data set
#############################################################################

 It is sometimes tedious to find the model which will best perform on a given
 dataset. Stacking provide an alternative by combining the outputs of several
 learners, without the need to choose a model specifically. The performance of
 stacking is usually close to the best model and sometimes it can outperform
 the prediction performance of each individual model.

 Here, we combine 3 learners (linear and non-linear) and use a ridge regressor
 to combine their outputs together.

 .. note::
    Although we will make new pipelines with the processors which we wrote in
    the previous section for the 3 learners, the final estimator
    :class:`~sklearn.linear_model.RidgeCV()` does not need preprocessing of
    the data as it will be fed with the already preprocessed output from the 3
    learners.

.. GENERATED FROM PYTHON SOURCE LINES 149-155

.. code-block:: default


    from sklearn.linear_model import LassoCV

    lasso_pipeline = make_pipeline(linear_preprocessor, LassoCV())
    lasso_pipeline






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-10b5481b-d796-4e4e-8613-792d1d7ff9a8 {color: black;background-color: white;}#sk-10b5481b-d796-4e4e-8613-792d1d7ff9a8 pre{padding: 0;}#sk-10b5481b-d796-4e4e-8613-792d1d7ff9a8 div.sk-toggleable {background-color: white;}#sk-10b5481b-d796-4e4e-8613-792d1d7ff9a8 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-10b5481b-d796-4e4e-8613-792d1d7ff9a8 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-10b5481b-d796-4e4e-8613-792d1d7ff9a8 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-10b5481b-d796-4e4e-8613-792d1d7ff9a8 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-10b5481b-d796-4e4e-8613-792d1d7ff9a8 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-10b5481b-d796-4e4e-8613-792d1d7ff9a8 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-10b5481b-d796-4e4e-8613-792d1d7ff9a8 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-10b5481b-d796-4e4e-8613-792d1d7ff9a8 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-10b5481b-d796-4e4e-8613-792d1d7ff9a8 div.sk-estimator:hover {background-color: #d4ebff;}#sk-10b5481b-d796-4e4e-8613-792d1d7ff9a8 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-10b5481b-d796-4e4e-8613-792d1d7ff9a8 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-10b5481b-d796-4e4e-8613-792d1d7ff9a8 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-10b5481b-d796-4e4e-8613-792d1d7ff9a8 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-10b5481b-d796-4e4e-8613-792d1d7ff9a8 div.sk-item {z-index: 1;}#sk-10b5481b-d796-4e4e-8613-792d1d7ff9a8 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-10b5481b-d796-4e4e-8613-792d1d7ff9a8 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-10b5481b-d796-4e4e-8613-792d1d7ff9a8 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-10b5481b-d796-4e4e-8613-792d1d7ff9a8 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-10b5481b-d796-4e4e-8613-792d1d7ff9a8 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-10b5481b-d796-4e4e-8613-792d1d7ff9a8 div.sk-parallel-item:only-child::after {width: 0;}#sk-10b5481b-d796-4e4e-8613-792d1d7ff9a8 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-10b5481b-d796-4e4e-8613-792d1d7ff9a8 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-10b5481b-d796-4e4e-8613-792d1d7ff9a8 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-10b5481b-d796-4e4e-8613-792d1d7ff9a8 div.sk-container {display: inline-block;position: relative;}</style><div id="sk-10b5481b-d796-4e4e-8613-792d1d7ff9a8" class"sk-top-container"><div class="sk-container"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="04c8810a-1983-4d81-956f-0408f7d70546" type="checkbox" ><label class="sk-toggleable__label" for="04c8810a-1983-4d81-956f-0408f7d70546">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('columntransformer',
                     ColumnTransformer(transformers=[('pipeline',
                                                      Pipeline(steps=[('standardscaler',
                                                                       StandardScaler()),
                                                                      ('simpleimputer',
                                                                       SimpleImputer(add_indicator=True))]),
                                                      <sklearn.compose._column_transformer.make_column_selector object at 0x7feafd7f8e80>),
                                                     ('onehotencoder',
                                                      OneHotEncoder(handle_unknown='ignore'),
                                                      <sklearn.compose._column_transformer.make_column_selector object at 0x7feb0cbd6df0>)])),
                    ('lassocv', LassoCV())])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="42d755bf-dd5b-4662-9ce4-afbaf09fee87" type="checkbox" ><label class="sk-toggleable__label" for="42d755bf-dd5b-4662-9ce4-afbaf09fee87">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('pipeline',
                                     Pipeline(steps=[('standardscaler',
                                                      StandardScaler()),
                                                     ('simpleimputer',
                                                      SimpleImputer(add_indicator=True))]),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7feafd7f8e80>),
                                    ('onehotencoder',
                                     OneHotEncoder(handle_unknown='ignore'),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7feb0cbd6df0>)])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="28a8adf8-1a73-4286-8eea-5420635029d6" type="checkbox" ><label class="sk-toggleable__label" for="28a8adf8-1a73-4286-8eea-5420635029d6">pipeline</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7feafd7f8e80></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="49a3ab9c-493c-460d-b4ad-e12b59b0ddde" type="checkbox" ><label class="sk-toggleable__label" for="49a3ab9c-493c-460d-b4ad-e12b59b0ddde">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b810645d-fa0f-437e-ae15-515a94ca35e2" type="checkbox" ><label class="sk-toggleable__label" for="b810645d-fa0f-437e-ae15-515a94ca35e2">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(add_indicator=True)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="06692b23-e91e-4667-8830-8cecc769341d" type="checkbox" ><label class="sk-toggleable__label" for="06692b23-e91e-4667-8830-8cecc769341d">onehotencoder</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7feb0cbd6df0></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1e56994b-901b-441f-8943-159de7babc63" type="checkbox" ><label class="sk-toggleable__label" for="1e56994b-901b-441f-8943-159de7babc63">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown='ignore')</pre></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b5a34dc1-aebc-466f-a6c3-1d8d55b9d1c0" type="checkbox" ><label class="sk-toggleable__label" for="b5a34dc1-aebc-466f-a6c3-1d8d55b9d1c0">LassoCV</label><div class="sk-toggleable__content"><pre>LassoCV()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 156-162

.. code-block:: default

    from sklearn.ensemble import RandomForestRegressor

    rf_pipeline = make_pipeline(
        tree_preprocessor, RandomForestRegressor(random_state=42))
    rf_pipeline






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-8a9ab3f1-c9e3-4d80-aec6-87193e62718a {color: black;background-color: white;}#sk-8a9ab3f1-c9e3-4d80-aec6-87193e62718a pre{padding: 0;}#sk-8a9ab3f1-c9e3-4d80-aec6-87193e62718a div.sk-toggleable {background-color: white;}#sk-8a9ab3f1-c9e3-4d80-aec6-87193e62718a label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-8a9ab3f1-c9e3-4d80-aec6-87193e62718a div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-8a9ab3f1-c9e3-4d80-aec6-87193e62718a div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-8a9ab3f1-c9e3-4d80-aec6-87193e62718a input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-8a9ab3f1-c9e3-4d80-aec6-87193e62718a div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-8a9ab3f1-c9e3-4d80-aec6-87193e62718a div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-8a9ab3f1-c9e3-4d80-aec6-87193e62718a input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-8a9ab3f1-c9e3-4d80-aec6-87193e62718a div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-8a9ab3f1-c9e3-4d80-aec6-87193e62718a div.sk-estimator:hover {background-color: #d4ebff;}#sk-8a9ab3f1-c9e3-4d80-aec6-87193e62718a div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-8a9ab3f1-c9e3-4d80-aec6-87193e62718a div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-8a9ab3f1-c9e3-4d80-aec6-87193e62718a div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-8a9ab3f1-c9e3-4d80-aec6-87193e62718a div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-8a9ab3f1-c9e3-4d80-aec6-87193e62718a div.sk-item {z-index: 1;}#sk-8a9ab3f1-c9e3-4d80-aec6-87193e62718a div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-8a9ab3f1-c9e3-4d80-aec6-87193e62718a div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-8a9ab3f1-c9e3-4d80-aec6-87193e62718a div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-8a9ab3f1-c9e3-4d80-aec6-87193e62718a div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-8a9ab3f1-c9e3-4d80-aec6-87193e62718a div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-8a9ab3f1-c9e3-4d80-aec6-87193e62718a div.sk-parallel-item:only-child::after {width: 0;}#sk-8a9ab3f1-c9e3-4d80-aec6-87193e62718a div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-8a9ab3f1-c9e3-4d80-aec6-87193e62718a div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-8a9ab3f1-c9e3-4d80-aec6-87193e62718a div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-8a9ab3f1-c9e3-4d80-aec6-87193e62718a div.sk-container {display: inline-block;position: relative;}</style><div id="sk-8a9ab3f1-c9e3-4d80-aec6-87193e62718a" class"sk-top-container"><div class="sk-container"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="380e22f3-d134-4074-b30d-fd9fd521e091" type="checkbox" ><label class="sk-toggleable__label" for="380e22f3-d134-4074-b30d-fd9fd521e091">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('columntransformer',
                     ColumnTransformer(transformers=[('simpleimputer',
                                                      SimpleImputer(add_indicator=True),
                                                      <sklearn.compose._column_transformer.make_column_selector object at 0x7feafd7f8e80>),
                                                     ('ordinalencoder',
                                                      OrdinalEncoder(handle_unknown='use_encoded_value',
                                                                     unknown_value=-1),
                                                      <sklearn.compose._column_transformer.make_column_selector object at 0x7feb0cbd6df0>)])),
                    ('randomforestregressor',
                     RandomForestRegressor(random_state=42))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f2d3dfa6-2f56-4ea9-8d0b-62c8f9a049ce" type="checkbox" ><label class="sk-toggleable__label" for="f2d3dfa6-2f56-4ea9-8d0b-62c8f9a049ce">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('simpleimputer',
                                     SimpleImputer(add_indicator=True),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7feafd7f8e80>),
                                    ('ordinalencoder',
                                     OrdinalEncoder(handle_unknown='use_encoded_value',
                                                    unknown_value=-1),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7feb0cbd6df0>)])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a17ce748-8c74-4dae-a5c7-d4b858605238" type="checkbox" ><label class="sk-toggleable__label" for="a17ce748-8c74-4dae-a5c7-d4b858605238">simpleimputer</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7feafd7f8e80></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c1e8b909-14a3-4a0a-adbe-57545293fed3" type="checkbox" ><label class="sk-toggleable__label" for="c1e8b909-14a3-4a0a-adbe-57545293fed3">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(add_indicator=True)</pre></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="39851354-1689-4070-854f-494ad3d3036a" type="checkbox" ><label class="sk-toggleable__label" for="39851354-1689-4070-854f-494ad3d3036a">ordinalencoder</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7feb0cbd6df0></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d7c28258-ec87-4026-ba27-adbc35b9e8d8" type="checkbox" ><label class="sk-toggleable__label" for="d7c28258-ec87-4026-ba27-adbc35b9e8d8">OrdinalEncoder</label><div class="sk-toggleable__content"><pre>OrdinalEncoder(handle_unknown='use_encoded_value', unknown_value=-1)</pre></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7b3470a8-03cb-4ad4-b56a-b459f9bb28a1" type="checkbox" ><label class="sk-toggleable__label" for="7b3470a8-03cb-4ad4-b56a-b459f9bb28a1">RandomForestRegressor</label><div class="sk-toggleable__content"><pre>RandomForestRegressor(random_state=42)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 163-169

.. code-block:: default

    from sklearn.ensemble import HistGradientBoostingRegressor

    gbdt_pipeline = make_pipeline(
        tree_preprocessor, HistGradientBoostingRegressor(random_state=0))
    gbdt_pipeline






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-ded99a2e-ee11-482b-b4a1-2ec83de138f7 {color: black;background-color: white;}#sk-ded99a2e-ee11-482b-b4a1-2ec83de138f7 pre{padding: 0;}#sk-ded99a2e-ee11-482b-b4a1-2ec83de138f7 div.sk-toggleable {background-color: white;}#sk-ded99a2e-ee11-482b-b4a1-2ec83de138f7 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-ded99a2e-ee11-482b-b4a1-2ec83de138f7 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-ded99a2e-ee11-482b-b4a1-2ec83de138f7 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-ded99a2e-ee11-482b-b4a1-2ec83de138f7 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-ded99a2e-ee11-482b-b4a1-2ec83de138f7 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ded99a2e-ee11-482b-b4a1-2ec83de138f7 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ded99a2e-ee11-482b-b4a1-2ec83de138f7 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-ded99a2e-ee11-482b-b4a1-2ec83de138f7 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-ded99a2e-ee11-482b-b4a1-2ec83de138f7 div.sk-estimator:hover {background-color: #d4ebff;}#sk-ded99a2e-ee11-482b-b4a1-2ec83de138f7 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-ded99a2e-ee11-482b-b4a1-2ec83de138f7 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-ded99a2e-ee11-482b-b4a1-2ec83de138f7 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ded99a2e-ee11-482b-b4a1-2ec83de138f7 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-ded99a2e-ee11-482b-b4a1-2ec83de138f7 div.sk-item {z-index: 1;}#sk-ded99a2e-ee11-482b-b4a1-2ec83de138f7 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-ded99a2e-ee11-482b-b4a1-2ec83de138f7 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ded99a2e-ee11-482b-b4a1-2ec83de138f7 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-ded99a2e-ee11-482b-b4a1-2ec83de138f7 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-ded99a2e-ee11-482b-b4a1-2ec83de138f7 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-ded99a2e-ee11-482b-b4a1-2ec83de138f7 div.sk-parallel-item:only-child::after {width: 0;}#sk-ded99a2e-ee11-482b-b4a1-2ec83de138f7 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-ded99a2e-ee11-482b-b4a1-2ec83de138f7 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-ded99a2e-ee11-482b-b4a1-2ec83de138f7 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-ded99a2e-ee11-482b-b4a1-2ec83de138f7 div.sk-container {display: inline-block;position: relative;}</style><div id="sk-ded99a2e-ee11-482b-b4a1-2ec83de138f7" class"sk-top-container"><div class="sk-container"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fce555cb-d3a0-4e6e-a6f8-9967f42421b5" type="checkbox" ><label class="sk-toggleable__label" for="fce555cb-d3a0-4e6e-a6f8-9967f42421b5">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('columntransformer',
                     ColumnTransformer(transformers=[('simpleimputer',
                                                      SimpleImputer(add_indicator=True),
                                                      <sklearn.compose._column_transformer.make_column_selector object at 0x7feafd7f8e80>),
                                                     ('ordinalencoder',
                                                      OrdinalEncoder(handle_unknown='use_encoded_value',
                                                                     unknown_value=-1),
                                                      <sklearn.compose._column_transformer.make_column_selector object at 0x7feb0cbd6df0>)])),
                    ('histgradientboostingregressor',
                     HistGradientBoostingRegressor(random_state=0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ece8bbf7-908d-4e47-87b3-645656e5aa39" type="checkbox" ><label class="sk-toggleable__label" for="ece8bbf7-908d-4e47-87b3-645656e5aa39">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('simpleimputer',
                                     SimpleImputer(add_indicator=True),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7feafd7f8e80>),
                                    ('ordinalencoder',
                                     OrdinalEncoder(handle_unknown='use_encoded_value',
                                                    unknown_value=-1),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7feb0cbd6df0>)])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="961b0e3b-2e1e-443d-b7b7-2c6bd6e0a89b" type="checkbox" ><label class="sk-toggleable__label" for="961b0e3b-2e1e-443d-b7b7-2c6bd6e0a89b">simpleimputer</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7feafd7f8e80></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="33f19eed-a701-451e-a457-08fefc7823fd" type="checkbox" ><label class="sk-toggleable__label" for="33f19eed-a701-451e-a457-08fefc7823fd">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(add_indicator=True)</pre></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="669f0fa8-3214-450a-a143-210badb69411" type="checkbox" ><label class="sk-toggleable__label" for="669f0fa8-3214-450a-a143-210badb69411">ordinalencoder</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7feb0cbd6df0></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="99f8dea6-9f58-4bd6-8433-431b5d2971d6" type="checkbox" ><label class="sk-toggleable__label" for="99f8dea6-9f58-4bd6-8433-431b5d2971d6">OrdinalEncoder</label><div class="sk-toggleable__content"><pre>OrdinalEncoder(handle_unknown='use_encoded_value', unknown_value=-1)</pre></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="40764ba0-f318-44fb-b1eb-6522ceda250d" type="checkbox" ><label class="sk-toggleable__label" for="40764ba0-f318-44fb-b1eb-6522ceda250d">HistGradientBoostingRegressor</label><div class="sk-toggleable__content"><pre>HistGradientBoostingRegressor(random_state=0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 170-181

.. code-block:: default

    from sklearn.ensemble import StackingRegressor
    from sklearn.linear_model import RidgeCV

    estimators = [('Random Forest', rf_pipeline),
                  ('Lasso', lasso_pipeline),
                  ('Gradient Boosting', gbdt_pipeline)]

    stacking_regressor = StackingRegressor(
        estimators=estimators, final_estimator=RidgeCV())
    stacking_regressor






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-85e8885b-9f44-4672-afe0-61e757e4c2c9 {color: black;background-color: white;}#sk-85e8885b-9f44-4672-afe0-61e757e4c2c9 pre{padding: 0;}#sk-85e8885b-9f44-4672-afe0-61e757e4c2c9 div.sk-toggleable {background-color: white;}#sk-85e8885b-9f44-4672-afe0-61e757e4c2c9 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-85e8885b-9f44-4672-afe0-61e757e4c2c9 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-85e8885b-9f44-4672-afe0-61e757e4c2c9 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-85e8885b-9f44-4672-afe0-61e757e4c2c9 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-85e8885b-9f44-4672-afe0-61e757e4c2c9 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-85e8885b-9f44-4672-afe0-61e757e4c2c9 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-85e8885b-9f44-4672-afe0-61e757e4c2c9 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-85e8885b-9f44-4672-afe0-61e757e4c2c9 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-85e8885b-9f44-4672-afe0-61e757e4c2c9 div.sk-estimator:hover {background-color: #d4ebff;}#sk-85e8885b-9f44-4672-afe0-61e757e4c2c9 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-85e8885b-9f44-4672-afe0-61e757e4c2c9 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-85e8885b-9f44-4672-afe0-61e757e4c2c9 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-85e8885b-9f44-4672-afe0-61e757e4c2c9 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-85e8885b-9f44-4672-afe0-61e757e4c2c9 div.sk-item {z-index: 1;}#sk-85e8885b-9f44-4672-afe0-61e757e4c2c9 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-85e8885b-9f44-4672-afe0-61e757e4c2c9 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-85e8885b-9f44-4672-afe0-61e757e4c2c9 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-85e8885b-9f44-4672-afe0-61e757e4c2c9 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-85e8885b-9f44-4672-afe0-61e757e4c2c9 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-85e8885b-9f44-4672-afe0-61e757e4c2c9 div.sk-parallel-item:only-child::after {width: 0;}#sk-85e8885b-9f44-4672-afe0-61e757e4c2c9 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-85e8885b-9f44-4672-afe0-61e757e4c2c9 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-85e8885b-9f44-4672-afe0-61e757e4c2c9 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-85e8885b-9f44-4672-afe0-61e757e4c2c9 div.sk-container {display: inline-block;position: relative;}</style><div id="sk-85e8885b-9f44-4672-afe0-61e757e4c2c9" class"sk-top-container"><div class="sk-container"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="10469b18-9a99-4e4f-be8b-160d9f1dc575" type="checkbox" ><label class="sk-toggleable__label" for="10469b18-9a99-4e4f-be8b-160d9f1dc575">StackingRegressor</label><div class="sk-toggleable__content"><pre>StackingRegressor(estimators=[('Random Forest',
                                   Pipeline(steps=[('columntransformer',
                                                    ColumnTransformer(transformers=[('simpleimputer',
                                                                                     SimpleImputer(add_indicator=True),
                                                                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7feafd7f8e80>),
                                                                                    ('ordinalencoder',
                                                                                     OrdinalEncoder(handle_unknown='use_encoded_value',
                                                                                                    unknown_value=-1),
                                                                                     <sklearn.compose...
                                                                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7feafd7f8e80>),
                                                                                    ('ordinalencoder',
                                                                                     OrdinalEncoder(handle_unknown='use_encoded_value',
                                                                                                    unknown_value=-1),
                                                                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7feb0cbd6df0>)])),
                                                   ('histgradientboostingregressor',
                                                    HistGradientBoostingRegressor(random_state=0))]))],
                      final_estimator=RidgeCV(alphas=array([ 0.1,  1. , 10. ])))</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><label>Random Forest</label></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="180c42e7-de49-4f81-b983-d28bbee63218" type="checkbox" ><label class="sk-toggleable__label" for="180c42e7-de49-4f81-b983-d28bbee63218">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('simpleimputer',
                                     SimpleImputer(add_indicator=True),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7feafd7f8e80>),
                                    ('ordinalencoder',
                                     OrdinalEncoder(handle_unknown='use_encoded_value',
                                                    unknown_value=-1),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7feb0cbd6df0>)])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7e7cd797-93e7-40ff-9dfe-d2b0da35ff3d" type="checkbox" ><label class="sk-toggleable__label" for="7e7cd797-93e7-40ff-9dfe-d2b0da35ff3d">simpleimputer</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7feafd7f8e80></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8067fee5-d949-4a05-81f1-1eff08994fe8" type="checkbox" ><label class="sk-toggleable__label" for="8067fee5-d949-4a05-81f1-1eff08994fe8">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(add_indicator=True)</pre></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5e6986da-c555-4fde-aad3-37ebc4a64bca" type="checkbox" ><label class="sk-toggleable__label" for="5e6986da-c555-4fde-aad3-37ebc4a64bca">ordinalencoder</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7feb0cbd6df0></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="72ad5f6a-be56-4525-99cf-0fbcfdfbccc6" type="checkbox" ><label class="sk-toggleable__label" for="72ad5f6a-be56-4525-99cf-0fbcfdfbccc6">OrdinalEncoder</label><div class="sk-toggleable__content"><pre>OrdinalEncoder(handle_unknown='use_encoded_value', unknown_value=-1)</pre></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2463d052-5529-4d6e-9633-3aab6aeb5b9a" type="checkbox" ><label class="sk-toggleable__label" for="2463d052-5529-4d6e-9633-3aab6aeb5b9a">RandomForestRegressor</label><div class="sk-toggleable__content"><pre>RandomForestRegressor(random_state=42)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><label>Lasso</label></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3f9ac7c8-ab4b-4954-b713-f09f3255c115" type="checkbox" ><label class="sk-toggleable__label" for="3f9ac7c8-ab4b-4954-b713-f09f3255c115">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('pipeline',
                                     Pipeline(steps=[('standardscaler',
                                                      StandardScaler()),
                                                     ('simpleimputer',
                                                      SimpleImputer(add_indicator=True))]),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7feafd7f8e80>),
                                    ('onehotencoder',
                                     OneHotEncoder(handle_unknown='ignore'),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7feb0cbd6df0>)])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0479ba04-fb28-4fcb-bb06-cf5cd4fdf229" type="checkbox" ><label class="sk-toggleable__label" for="0479ba04-fb28-4fcb-bb06-cf5cd4fdf229">pipeline</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7feafd7f8e80></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1dbfa3cc-834f-4bb8-91a4-b454fb5fcc6f" type="checkbox" ><label class="sk-toggleable__label" for="1dbfa3cc-834f-4bb8-91a4-b454fb5fcc6f">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="42530b10-4c0d-4731-989d-49bd72414883" type="checkbox" ><label class="sk-toggleable__label" for="42530b10-4c0d-4731-989d-49bd72414883">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(add_indicator=True)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="173a50b2-4d0e-4cc9-9a87-da2879f6d48c" type="checkbox" ><label class="sk-toggleable__label" for="173a50b2-4d0e-4cc9-9a87-da2879f6d48c">onehotencoder</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7feb0cbd6df0></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="34e0742a-4fdb-49c5-81d8-39f657a4f11f" type="checkbox" ><label class="sk-toggleable__label" for="34e0742a-4fdb-49c5-81d8-39f657a4f11f">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown='ignore')</pre></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f83d0f1a-9cb5-4854-8b80-6efcd408c298" type="checkbox" ><label class="sk-toggleable__label" for="f83d0f1a-9cb5-4854-8b80-6efcd408c298">LassoCV</label><div class="sk-toggleable__content"><pre>LassoCV()</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><label>Gradient Boosting</label></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8618990a-3c37-4aa3-b6b2-4a6028987b88" type="checkbox" ><label class="sk-toggleable__label" for="8618990a-3c37-4aa3-b6b2-4a6028987b88">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('simpleimputer',
                                     SimpleImputer(add_indicator=True),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7feafd7f8e80>),
                                    ('ordinalencoder',
                                     OrdinalEncoder(handle_unknown='use_encoded_value',
                                                    unknown_value=-1),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7feb0cbd6df0>)])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6bad054c-2489-44af-8114-47c612104733" type="checkbox" ><label class="sk-toggleable__label" for="6bad054c-2489-44af-8114-47c612104733">simpleimputer</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7feafd7f8e80></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="def27ebd-3838-494e-93b1-2534e8e85fe0" type="checkbox" ><label class="sk-toggleable__label" for="def27ebd-3838-494e-93b1-2534e8e85fe0">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(add_indicator=True)</pre></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3aae3893-00d0-407d-b3ad-042bfebe36ba" type="checkbox" ><label class="sk-toggleable__label" for="3aae3893-00d0-407d-b3ad-042bfebe36ba">ordinalencoder</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7feb0cbd6df0></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="160325bc-7bd1-43f3-b493-1f194c6d94d1" type="checkbox" ><label class="sk-toggleable__label" for="160325bc-7bd1-43f3-b493-1f194c6d94d1">OrdinalEncoder</label><div class="sk-toggleable__content"><pre>OrdinalEncoder(handle_unknown='use_encoded_value', unknown_value=-1)</pre></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a561a89e-f39f-4faa-b7f8-64ac0a498c23" type="checkbox" ><label class="sk-toggleable__label" for="a561a89e-f39f-4faa-b7f8-64ac0a498c23">HistGradientBoostingRegressor</label><div class="sk-toggleable__content"><pre>HistGradientBoostingRegressor(random_state=0)</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><label>final_estimator</label></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ea684f2d-03fa-4dc9-8365-26726885e23d" type="checkbox" ><label class="sk-toggleable__label" for="ea684f2d-03fa-4dc9-8365-26726885e23d">RidgeCV</label><div class="sk-toggleable__content"><pre>RidgeCV(alphas=array([ 0.1,  1. , 10. ]))</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 182-191

Measure and plot the results
#############################################################################

 Now we can use Ames Housing dataset to make the predictions. We check the
 performance of each individual predictor as well as of the stack of the
 regressors.

 The function ``plot_regression_results`` is used to plot the predicted and
 true targets.

.. GENERATED FROM PYTHON SOURCE LINES 191-250

.. code-block:: default



    import time
    import matplotlib.pyplot as plt
    from sklearn.model_selection import cross_validate, cross_val_predict


    def plot_regression_results(ax, y_true, y_pred, title, scores, elapsed_time):
        """Scatter plot of the predicted vs true targets."""
        ax.plot([y_true.min(), y_true.max()],
                [y_true.min(), y_true.max()],
                '--r', linewidth=2)
        ax.scatter(y_true, y_pred, alpha=0.2)

        ax.spines['top'].set_visible(False)
        ax.spines['right'].set_visible(False)
        ax.get_xaxis().tick_bottom()
        ax.get_yaxis().tick_left()
        ax.spines['left'].set_position(('outward', 10))
        ax.spines['bottom'].set_position(('outward', 10))
        ax.set_xlim([y_true.min(), y_true.max()])
        ax.set_ylim([y_true.min(), y_true.max()])
        ax.set_xlabel('Measured')
        ax.set_ylabel('Predicted')
        extra = plt.Rectangle((0, 0), 0, 0, fc="w", fill=False,
                              edgecolor='none', linewidth=0)
        ax.legend([extra], [scores], loc='upper left')
        title = title + '\n Evaluation in {:.2f} seconds'.format(elapsed_time)
        ax.set_title(title)


    fig, axs = plt.subplots(2, 2, figsize=(9, 7))
    axs = np.ravel(axs)

    for ax, (name, est) in zip(axs, estimators + [('Stacking Regressor',
                                                   stacking_regressor)]):
        start_time = time.time()
        score = cross_validate(est, X, y,
                               scoring=['r2', 'neg_mean_absolute_error'],
                               n_jobs=-1, verbose=0)
        elapsed_time = time.time() - start_time

        y_pred = cross_val_predict(est, X, y, n_jobs=-1, verbose=0)

        plot_regression_results(
            ax, y, y_pred,
            name,
            (r'$R^2={:.2f} \pm {:.2f}$' + '\n' + r'$MAE={:.2f} \pm {:.2f}$')
            .format(np.mean(score['test_r2']),
                    np.std(score['test_r2']),
                    -np.mean(score['test_neg_mean_absolute_error']),
                    np.std(score['test_neg_mean_absolute_error'])),
            elapsed_time)

    plt.suptitle('Single predictors versus stacked predictors')
    plt.tight_layout()
    plt.subplots_adjust(top=0.9)
    plt.show()




.. image-sg:: /auto_examples/ensemble/images/sphx_glr_plot_stack_predictors_001.png
   :alt: Single predictors versus stacked predictors, Random Forest  Evaluation in 3.19 seconds, Lasso  Evaluation in 0.55 seconds, Gradient Boosting  Evaluation in 0.85 seconds, Stacking Regressor  Evaluation in 9.03 seconds
   :srcset: /auto_examples/ensemble/images/sphx_glr_plot_stack_predictors_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 251-254

The stacked regressor will combine the strengths of the different regressors.
However, we also see that training the stacked regressor is much more
computationally expensive.


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  25.580 seconds)


.. _sphx_glr_download_auto_examples_ensemble_plot_stack_predictors.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/ensemble/plot_stack_predictors.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_stack_predictors.py <plot_stack_predictors.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_stack_predictors.ipynb <plot_stack_predictors.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
