
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/ensemble/plot_stack_predictors.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_ensemble_plot_stack_predictors.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_ensemble_plot_stack_predictors.py:


=================================
Combine predictors using stacking
=================================

.. currentmodule:: sklearn

Stacking refers to a method to blend estimators. In this strategy, some
estimators are individually fitted on some training data while a final
estimator is trained using the stacked predictions of these base estimators.

In this example, we illustrate the use case in which different regressors are
stacked together and a final linear penalized regressor is used to output the
prediction. We compare the performance of each individual regressor with the
stacking strategy. Stacking slightly improves the overall performance.

.. GENERATED FROM PYTHON SOURCE LINES 18-29

.. code-block:: default


    # Authors: Guillaume Lemaitre <g.lemaitre58@gmail.com>
    #          Maria Telenczuk    <https://github.com/maikia>
    # License: BSD 3 clause

    print(__doc__)

    from sklearn import set_config

    set_config(display="diagram")








.. GENERATED FROM PYTHON SOURCE LINES 30-46

Download the dataset
#############################################################################

 We will use `Ames Housing`_ dataset which was first compiled by Dean De Cock
 and became better known after it was used in Kaggle challenge. It is a set
 of 1460 residential homes in Ames, Iowa, each described by 80 features. We
 will use it to predict the final logarithmic price of the houses. In this
 example we will use only 20 most interesting features chosen using
 GradientBoostingRegressor() and limit number of entries (here we won't go
 into the details on how to select the most interesting features).

 The Ames housing dataset is not shipped with scikit-learn and therefore we
 will fetch it from `OpenML`_.

 .. _`Ames Housing`: http://jse.amstat.org/v19n3/decock.pdf
 .. _`OpenML`: https://www.openml.org/d/42165

.. GENERATED FROM PYTHON SOURCE LINES 46-92

.. code-block:: default


    import numpy as np

    from sklearn.datasets import fetch_openml
    from sklearn.utils import shuffle


    def load_ames_housing():
        df = fetch_openml(name="house_prices", as_frame=True)
        X = df.data
        y = df.target

        features = [
            "YrSold",
            "HeatingQC",
            "Street",
            "YearRemodAdd",
            "Heating",
            "MasVnrType",
            "BsmtUnfSF",
            "Foundation",
            "MasVnrArea",
            "MSSubClass",
            "ExterQual",
            "Condition2",
            "GarageCars",
            "GarageType",
            "OverallQual",
            "TotalBsmtSF",
            "BsmtFinSF1",
            "HouseStyle",
            "MiscFeature",
            "MoSold",
        ]

        X = X[features]
        X, y = shuffle(X, y, random_state=0)

        X = X[:600]
        y = y[:600]
        return X, np.log(y)


    X, y = load_ames_housing()









.. GENERATED FROM PYTHON SOURCE LINES 93-99

Make pipeline to preprocess the data
#############################################################################

 Before we can use Ames dataset we still need to do some preprocessing.
 First, we will select the categorical and numerical columns of the dataset to
 construct the first step of the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 99-106

.. code-block:: default


    from sklearn.compose import make_column_selector

    cat_selector = make_column_selector(dtype_include=object)
    num_selector = make_column_selector(dtype_include=np.number)
    cat_selector(X)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    ['HeatingQC', 'Street', 'Heating', 'MasVnrType', 'Foundation', 'ExterQual', 'Condition2', 'GarageType', 'HouseStyle', 'MiscFeature']



.. GENERATED FROM PYTHON SOURCE LINES 107-109

.. code-block:: default

    num_selector(X)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    ['YrSold', 'YearRemodAdd', 'BsmtUnfSF', 'MasVnrArea', 'MSSubClass', 'GarageCars', 'OverallQual', 'TotalBsmtSF', 'BsmtFinSF1', 'MoSold']



.. GENERATED FROM PYTHON SOURCE LINES 110-119

Then, we will need to design preprocessing pipelines which depends on the
ending regressor. If the ending regressor is a linear model, one needs to
one-hot encode the categories. If the ending regressor is a tree-based model
an ordinal encoder will be sufficient. Besides, numerical values need to be
standardized for a linear model while the raw numerical data can be treated
as is by a tree-based model. However, both models need an imputer to
handle missing values.

We will first design the pipeline required for the tree-based models.

.. GENERATED FROM PYTHON SOURCE LINES 119-135

.. code-block:: default


    from sklearn.compose import make_column_transformer
    from sklearn.impute import SimpleImputer
    from sklearn.pipeline import make_pipeline
    from sklearn.preprocessing import OrdinalEncoder

    cat_tree_processor = OrdinalEncoder(
        handle_unknown="use_encoded_value", unknown_value=-1
    )
    num_tree_processor = SimpleImputer(strategy="mean", add_indicator=True)

    tree_preprocessor = make_column_transformer(
        (num_tree_processor, num_selector), (cat_tree_processor, cat_selector)
    )
    tree_preprocessor






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-37e6fbe7-04e9-4ad4-82e1-c9b227b9882b {color: black;background-color: white;}#sk-37e6fbe7-04e9-4ad4-82e1-c9b227b9882b pre{padding: 0;}#sk-37e6fbe7-04e9-4ad4-82e1-c9b227b9882b div.sk-toggleable {background-color: white;}#sk-37e6fbe7-04e9-4ad4-82e1-c9b227b9882b label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-37e6fbe7-04e9-4ad4-82e1-c9b227b9882b div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-37e6fbe7-04e9-4ad4-82e1-c9b227b9882b div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-37e6fbe7-04e9-4ad4-82e1-c9b227b9882b input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-37e6fbe7-04e9-4ad4-82e1-c9b227b9882b div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-37e6fbe7-04e9-4ad4-82e1-c9b227b9882b div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-37e6fbe7-04e9-4ad4-82e1-c9b227b9882b input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-37e6fbe7-04e9-4ad4-82e1-c9b227b9882b div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-37e6fbe7-04e9-4ad4-82e1-c9b227b9882b div.sk-estimator:hover {background-color: #d4ebff;}#sk-37e6fbe7-04e9-4ad4-82e1-c9b227b9882b div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-37e6fbe7-04e9-4ad4-82e1-c9b227b9882b div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-37e6fbe7-04e9-4ad4-82e1-c9b227b9882b div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-37e6fbe7-04e9-4ad4-82e1-c9b227b9882b div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-37e6fbe7-04e9-4ad4-82e1-c9b227b9882b div.sk-item {z-index: 1;}#sk-37e6fbe7-04e9-4ad4-82e1-c9b227b9882b div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-37e6fbe7-04e9-4ad4-82e1-c9b227b9882b div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-37e6fbe7-04e9-4ad4-82e1-c9b227b9882b div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-37e6fbe7-04e9-4ad4-82e1-c9b227b9882b div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-37e6fbe7-04e9-4ad4-82e1-c9b227b9882b div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-37e6fbe7-04e9-4ad4-82e1-c9b227b9882b div.sk-parallel-item:only-child::after {width: 0;}#sk-37e6fbe7-04e9-4ad4-82e1-c9b227b9882b div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-37e6fbe7-04e9-4ad4-82e1-c9b227b9882b div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-37e6fbe7-04e9-4ad4-82e1-c9b227b9882b div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-37e6fbe7-04e9-4ad4-82e1-c9b227b9882b div.sk-container {display: inline-block;position: relative;}</style><div id="sk-37e6fbe7-04e9-4ad4-82e1-c9b227b9882b" class"sk-top-container"><div class="sk-container"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1e5cb3f4-03ef-45c3-96c3-a63fbf8e3ecf" type="checkbox" ><label class="sk-toggleable__label" for="1e5cb3f4-03ef-45c3-96c3-a63fbf8e3ecf">ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('simpleimputer',
                                     SimpleImputer(add_indicator=True),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f177a20dca0>),
                                    ('ordinalencoder',
                                     OrdinalEncoder(handle_unknown='use_encoded_value',
                                                    unknown_value=-1),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f177a20d460>)])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7d701109-2f3a-4e8d-a450-bfb3b8c9a427" type="checkbox" ><label class="sk-toggleable__label" for="7d701109-2f3a-4e8d-a450-bfb3b8c9a427">simpleimputer</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f177a20dca0></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="732662f9-bca1-497c-9265-2d6bae5ae58d" type="checkbox" ><label class="sk-toggleable__label" for="732662f9-bca1-497c-9265-2d6bae5ae58d">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(add_indicator=True)</pre></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="80f8fe1e-6f35-4d31-bea5-749b2b748957" type="checkbox" ><label class="sk-toggleable__label" for="80f8fe1e-6f35-4d31-bea5-749b2b748957">ordinalencoder</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f177a20d460></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cce1b180-1ba7-4753-9598-7eb6ebdfa030" type="checkbox" ><label class="sk-toggleable__label" for="cce1b180-1ba7-4753-9598-7eb6ebdfa030">OrdinalEncoder</label><div class="sk-toggleable__content"><pre>OrdinalEncoder(handle_unknown='use_encoded_value', unknown_value=-1)</pre></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 136-138

Then, we will now define the preprocessor used when the ending regressor
is a linear model.

.. GENERATED FROM PYTHON SOURCE LINES 138-152

.. code-block:: default


    from sklearn.preprocessing import OneHotEncoder
    from sklearn.preprocessing import StandardScaler

    cat_linear_processor = OneHotEncoder(handle_unknown="ignore")
    num_linear_processor = make_pipeline(
        StandardScaler(), SimpleImputer(strategy="mean", add_indicator=True)
    )

    linear_preprocessor = make_column_transformer(
        (num_linear_processor, num_selector), (cat_linear_processor, cat_selector)
    )
    linear_preprocessor






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-202fb93e-1ffb-49e2-a923-6b231f38f29b {color: black;background-color: white;}#sk-202fb93e-1ffb-49e2-a923-6b231f38f29b pre{padding: 0;}#sk-202fb93e-1ffb-49e2-a923-6b231f38f29b div.sk-toggleable {background-color: white;}#sk-202fb93e-1ffb-49e2-a923-6b231f38f29b label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-202fb93e-1ffb-49e2-a923-6b231f38f29b div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-202fb93e-1ffb-49e2-a923-6b231f38f29b div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-202fb93e-1ffb-49e2-a923-6b231f38f29b input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-202fb93e-1ffb-49e2-a923-6b231f38f29b div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-202fb93e-1ffb-49e2-a923-6b231f38f29b div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-202fb93e-1ffb-49e2-a923-6b231f38f29b input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-202fb93e-1ffb-49e2-a923-6b231f38f29b div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-202fb93e-1ffb-49e2-a923-6b231f38f29b div.sk-estimator:hover {background-color: #d4ebff;}#sk-202fb93e-1ffb-49e2-a923-6b231f38f29b div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-202fb93e-1ffb-49e2-a923-6b231f38f29b div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-202fb93e-1ffb-49e2-a923-6b231f38f29b div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-202fb93e-1ffb-49e2-a923-6b231f38f29b div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-202fb93e-1ffb-49e2-a923-6b231f38f29b div.sk-item {z-index: 1;}#sk-202fb93e-1ffb-49e2-a923-6b231f38f29b div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-202fb93e-1ffb-49e2-a923-6b231f38f29b div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-202fb93e-1ffb-49e2-a923-6b231f38f29b div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-202fb93e-1ffb-49e2-a923-6b231f38f29b div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-202fb93e-1ffb-49e2-a923-6b231f38f29b div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-202fb93e-1ffb-49e2-a923-6b231f38f29b div.sk-parallel-item:only-child::after {width: 0;}#sk-202fb93e-1ffb-49e2-a923-6b231f38f29b div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-202fb93e-1ffb-49e2-a923-6b231f38f29b div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-202fb93e-1ffb-49e2-a923-6b231f38f29b div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-202fb93e-1ffb-49e2-a923-6b231f38f29b div.sk-container {display: inline-block;position: relative;}</style><div id="sk-202fb93e-1ffb-49e2-a923-6b231f38f29b" class"sk-top-container"><div class="sk-container"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0a0ad9a2-da68-4ef1-9aa2-a5bd35605c5c" type="checkbox" ><label class="sk-toggleable__label" for="0a0ad9a2-da68-4ef1-9aa2-a5bd35605c5c">ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('pipeline',
                                     Pipeline(steps=[('standardscaler',
                                                      StandardScaler()),
                                                     ('simpleimputer',
                                                      SimpleImputer(add_indicator=True))]),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f177a20dca0>),
                                    ('onehotencoder',
                                     OneHotEncoder(handle_unknown='ignore'),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f177a20d460>)])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8350b204-c1df-4579-b87d-777a5c0abd55" type="checkbox" ><label class="sk-toggleable__label" for="8350b204-c1df-4579-b87d-777a5c0abd55">pipeline</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f177a20dca0></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b55335e6-ab57-4295-8cb7-d2962fd5c529" type="checkbox" ><label class="sk-toggleable__label" for="b55335e6-ab57-4295-8cb7-d2962fd5c529">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9d390104-a8f4-405d-ab67-fcce98ef7a6b" type="checkbox" ><label class="sk-toggleable__label" for="9d390104-a8f4-405d-ab67-fcce98ef7a6b">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(add_indicator=True)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="93be1c39-009c-4f8e-969d-2d98f734b9e6" type="checkbox" ><label class="sk-toggleable__label" for="93be1c39-009c-4f8e-969d-2d98f734b9e6">onehotencoder</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f177a20d460></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bf3c8e27-88ff-4c27-b2b0-a4d2ee29f04a" type="checkbox" ><label class="sk-toggleable__label" for="bf3c8e27-88ff-4c27-b2b0-a4d2ee29f04a">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown='ignore')</pre></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 153-171

Stack of predictors on a single data set
#############################################################################

 It is sometimes tedious to find the model which will best perform on a given
 dataset. Stacking provide an alternative by combining the outputs of several
 learners, without the need to choose a model specifically. The performance of
 stacking is usually close to the best model and sometimes it can outperform
 the prediction performance of each individual model.

 Here, we combine 3 learners (linear and non-linear) and use a ridge regressor
 to combine their outputs together.

 .. note::
    Although we will make new pipelines with the processors which we wrote in
    the previous section for the 3 learners, the final estimator
    :class:`~sklearn.linear_model.RidgeCV()` does not need preprocessing of
    the data as it will be fed with the already preprocessed output from the 3
    learners.

.. GENERATED FROM PYTHON SOURCE LINES 171-177

.. code-block:: default


    from sklearn.linear_model import LassoCV

    lasso_pipeline = make_pipeline(linear_preprocessor, LassoCV())
    lasso_pipeline






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-cfe66199-0b5f-4df3-a61d-a81ea20e7b42 {color: black;background-color: white;}#sk-cfe66199-0b5f-4df3-a61d-a81ea20e7b42 pre{padding: 0;}#sk-cfe66199-0b5f-4df3-a61d-a81ea20e7b42 div.sk-toggleable {background-color: white;}#sk-cfe66199-0b5f-4df3-a61d-a81ea20e7b42 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-cfe66199-0b5f-4df3-a61d-a81ea20e7b42 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-cfe66199-0b5f-4df3-a61d-a81ea20e7b42 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-cfe66199-0b5f-4df3-a61d-a81ea20e7b42 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-cfe66199-0b5f-4df3-a61d-a81ea20e7b42 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-cfe66199-0b5f-4df3-a61d-a81ea20e7b42 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-cfe66199-0b5f-4df3-a61d-a81ea20e7b42 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-cfe66199-0b5f-4df3-a61d-a81ea20e7b42 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-cfe66199-0b5f-4df3-a61d-a81ea20e7b42 div.sk-estimator:hover {background-color: #d4ebff;}#sk-cfe66199-0b5f-4df3-a61d-a81ea20e7b42 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-cfe66199-0b5f-4df3-a61d-a81ea20e7b42 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-cfe66199-0b5f-4df3-a61d-a81ea20e7b42 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-cfe66199-0b5f-4df3-a61d-a81ea20e7b42 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-cfe66199-0b5f-4df3-a61d-a81ea20e7b42 div.sk-item {z-index: 1;}#sk-cfe66199-0b5f-4df3-a61d-a81ea20e7b42 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-cfe66199-0b5f-4df3-a61d-a81ea20e7b42 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-cfe66199-0b5f-4df3-a61d-a81ea20e7b42 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-cfe66199-0b5f-4df3-a61d-a81ea20e7b42 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-cfe66199-0b5f-4df3-a61d-a81ea20e7b42 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-cfe66199-0b5f-4df3-a61d-a81ea20e7b42 div.sk-parallel-item:only-child::after {width: 0;}#sk-cfe66199-0b5f-4df3-a61d-a81ea20e7b42 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-cfe66199-0b5f-4df3-a61d-a81ea20e7b42 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-cfe66199-0b5f-4df3-a61d-a81ea20e7b42 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-cfe66199-0b5f-4df3-a61d-a81ea20e7b42 div.sk-container {display: inline-block;position: relative;}</style><div id="sk-cfe66199-0b5f-4df3-a61d-a81ea20e7b42" class"sk-top-container"><div class="sk-container"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="18e14592-3010-4f09-b6d0-e4b1cdce5d60" type="checkbox" ><label class="sk-toggleable__label" for="18e14592-3010-4f09-b6d0-e4b1cdce5d60">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('columntransformer',
                     ColumnTransformer(transformers=[('pipeline',
                                                      Pipeline(steps=[('standardscaler',
                                                                       StandardScaler()),
                                                                      ('simpleimputer',
                                                                       SimpleImputer(add_indicator=True))]),
                                                      <sklearn.compose._column_transformer.make_column_selector object at 0x7f177a20dca0>),
                                                     ('onehotencoder',
                                                      OneHotEncoder(handle_unknown='ignore'),
                                                      <sklearn.compose._column_transformer.make_column_selector object at 0x7f177a20d460>)])),
                    ('lassocv', LassoCV())])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e5845758-5dc5-4bfb-b008-56e747aa4d3b" type="checkbox" ><label class="sk-toggleable__label" for="e5845758-5dc5-4bfb-b008-56e747aa4d3b">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('pipeline',
                                     Pipeline(steps=[('standardscaler',
                                                      StandardScaler()),
                                                     ('simpleimputer',
                                                      SimpleImputer(add_indicator=True))]),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f177a20dca0>),
                                    ('onehotencoder',
                                     OneHotEncoder(handle_unknown='ignore'),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f177a20d460>)])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="083e20f6-dae0-4ea9-a5c7-de4ab974ca82" type="checkbox" ><label class="sk-toggleable__label" for="083e20f6-dae0-4ea9-a5c7-de4ab974ca82">pipeline</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f177a20dca0></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="270d87ec-3259-4f2e-86d3-d3ba31d143d1" type="checkbox" ><label class="sk-toggleable__label" for="270d87ec-3259-4f2e-86d3-d3ba31d143d1">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9641af2e-129b-4152-919a-131d7324454f" type="checkbox" ><label class="sk-toggleable__label" for="9641af2e-129b-4152-919a-131d7324454f">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(add_indicator=True)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1a1fffc5-e631-46c4-b3d3-4f1025a59e48" type="checkbox" ><label class="sk-toggleable__label" for="1a1fffc5-e631-46c4-b3d3-4f1025a59e48">onehotencoder</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f177a20d460></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e2ec6350-4fc4-4aef-a1a2-ce65a0cee3d9" type="checkbox" ><label class="sk-toggleable__label" for="e2ec6350-4fc4-4aef-a1a2-ce65a0cee3d9">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown='ignore')</pre></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0063939a-3893-41a2-83d2-aca2dc15a68d" type="checkbox" ><label class="sk-toggleable__label" for="0063939a-3893-41a2-83d2-aca2dc15a68d">LassoCV</label><div class="sk-toggleable__content"><pre>LassoCV()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 178-183

.. code-block:: default

    from sklearn.ensemble import RandomForestRegressor

    rf_pipeline = make_pipeline(tree_preprocessor, RandomForestRegressor(random_state=42))
    rf_pipeline






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-4f40c469-139d-4ba0-9ee3-919d0594414b {color: black;background-color: white;}#sk-4f40c469-139d-4ba0-9ee3-919d0594414b pre{padding: 0;}#sk-4f40c469-139d-4ba0-9ee3-919d0594414b div.sk-toggleable {background-color: white;}#sk-4f40c469-139d-4ba0-9ee3-919d0594414b label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-4f40c469-139d-4ba0-9ee3-919d0594414b div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-4f40c469-139d-4ba0-9ee3-919d0594414b div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-4f40c469-139d-4ba0-9ee3-919d0594414b input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-4f40c469-139d-4ba0-9ee3-919d0594414b div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-4f40c469-139d-4ba0-9ee3-919d0594414b div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-4f40c469-139d-4ba0-9ee3-919d0594414b input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-4f40c469-139d-4ba0-9ee3-919d0594414b div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-4f40c469-139d-4ba0-9ee3-919d0594414b div.sk-estimator:hover {background-color: #d4ebff;}#sk-4f40c469-139d-4ba0-9ee3-919d0594414b div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-4f40c469-139d-4ba0-9ee3-919d0594414b div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-4f40c469-139d-4ba0-9ee3-919d0594414b div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-4f40c469-139d-4ba0-9ee3-919d0594414b div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-4f40c469-139d-4ba0-9ee3-919d0594414b div.sk-item {z-index: 1;}#sk-4f40c469-139d-4ba0-9ee3-919d0594414b div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-4f40c469-139d-4ba0-9ee3-919d0594414b div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-4f40c469-139d-4ba0-9ee3-919d0594414b div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-4f40c469-139d-4ba0-9ee3-919d0594414b div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-4f40c469-139d-4ba0-9ee3-919d0594414b div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-4f40c469-139d-4ba0-9ee3-919d0594414b div.sk-parallel-item:only-child::after {width: 0;}#sk-4f40c469-139d-4ba0-9ee3-919d0594414b div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-4f40c469-139d-4ba0-9ee3-919d0594414b div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-4f40c469-139d-4ba0-9ee3-919d0594414b div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-4f40c469-139d-4ba0-9ee3-919d0594414b div.sk-container {display: inline-block;position: relative;}</style><div id="sk-4f40c469-139d-4ba0-9ee3-919d0594414b" class"sk-top-container"><div class="sk-container"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="aef1d3ff-28a5-4a2e-9faa-09271304877a" type="checkbox" ><label class="sk-toggleable__label" for="aef1d3ff-28a5-4a2e-9faa-09271304877a">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('columntransformer',
                     ColumnTransformer(transformers=[('simpleimputer',
                                                      SimpleImputer(add_indicator=True),
                                                      <sklearn.compose._column_transformer.make_column_selector object at 0x7f177a20dca0>),
                                                     ('ordinalencoder',
                                                      OrdinalEncoder(handle_unknown='use_encoded_value',
                                                                     unknown_value=-1),
                                                      <sklearn.compose._column_transformer.make_column_selector object at 0x7f177a20d460>)])),
                    ('randomforestregressor',
                     RandomForestRegressor(random_state=42))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ec0a30cb-52f4-4298-a084-af03e2c25bb9" type="checkbox" ><label class="sk-toggleable__label" for="ec0a30cb-52f4-4298-a084-af03e2c25bb9">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('simpleimputer',
                                     SimpleImputer(add_indicator=True),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f177a20dca0>),
                                    ('ordinalencoder',
                                     OrdinalEncoder(handle_unknown='use_encoded_value',
                                                    unknown_value=-1),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f177a20d460>)])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="63a3fc78-0d44-4c1a-995d-e10456bff56c" type="checkbox" ><label class="sk-toggleable__label" for="63a3fc78-0d44-4c1a-995d-e10456bff56c">simpleimputer</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f177a20dca0></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e968c5fe-9564-4d2d-8078-83ca44231c2a" type="checkbox" ><label class="sk-toggleable__label" for="e968c5fe-9564-4d2d-8078-83ca44231c2a">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(add_indicator=True)</pre></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8adbdf12-a50c-4fdb-84ef-7c24e537ce5a" type="checkbox" ><label class="sk-toggleable__label" for="8adbdf12-a50c-4fdb-84ef-7c24e537ce5a">ordinalencoder</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f177a20d460></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="641b133c-ecc7-4c0c-862e-9fb8927514fc" type="checkbox" ><label class="sk-toggleable__label" for="641b133c-ecc7-4c0c-862e-9fb8927514fc">OrdinalEncoder</label><div class="sk-toggleable__content"><pre>OrdinalEncoder(handle_unknown='use_encoded_value', unknown_value=-1)</pre></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="202fd921-05ed-46f8-b2b9-33743101527d" type="checkbox" ><label class="sk-toggleable__label" for="202fd921-05ed-46f8-b2b9-33743101527d">RandomForestRegressor</label><div class="sk-toggleable__content"><pre>RandomForestRegressor(random_state=42)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 184-191

.. code-block:: default

    from sklearn.ensemble import HistGradientBoostingRegressor

    gbdt_pipeline = make_pipeline(
        tree_preprocessor, HistGradientBoostingRegressor(random_state=0)
    )
    gbdt_pipeline






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-4d779bb4-69d5-4684-a568-d2a9d9e3f35d {color: black;background-color: white;}#sk-4d779bb4-69d5-4684-a568-d2a9d9e3f35d pre{padding: 0;}#sk-4d779bb4-69d5-4684-a568-d2a9d9e3f35d div.sk-toggleable {background-color: white;}#sk-4d779bb4-69d5-4684-a568-d2a9d9e3f35d label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-4d779bb4-69d5-4684-a568-d2a9d9e3f35d div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-4d779bb4-69d5-4684-a568-d2a9d9e3f35d div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-4d779bb4-69d5-4684-a568-d2a9d9e3f35d input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-4d779bb4-69d5-4684-a568-d2a9d9e3f35d div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-4d779bb4-69d5-4684-a568-d2a9d9e3f35d div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-4d779bb4-69d5-4684-a568-d2a9d9e3f35d input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-4d779bb4-69d5-4684-a568-d2a9d9e3f35d div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-4d779bb4-69d5-4684-a568-d2a9d9e3f35d div.sk-estimator:hover {background-color: #d4ebff;}#sk-4d779bb4-69d5-4684-a568-d2a9d9e3f35d div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-4d779bb4-69d5-4684-a568-d2a9d9e3f35d div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-4d779bb4-69d5-4684-a568-d2a9d9e3f35d div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-4d779bb4-69d5-4684-a568-d2a9d9e3f35d div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-4d779bb4-69d5-4684-a568-d2a9d9e3f35d div.sk-item {z-index: 1;}#sk-4d779bb4-69d5-4684-a568-d2a9d9e3f35d div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-4d779bb4-69d5-4684-a568-d2a9d9e3f35d div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-4d779bb4-69d5-4684-a568-d2a9d9e3f35d div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-4d779bb4-69d5-4684-a568-d2a9d9e3f35d div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-4d779bb4-69d5-4684-a568-d2a9d9e3f35d div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-4d779bb4-69d5-4684-a568-d2a9d9e3f35d div.sk-parallel-item:only-child::after {width: 0;}#sk-4d779bb4-69d5-4684-a568-d2a9d9e3f35d div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-4d779bb4-69d5-4684-a568-d2a9d9e3f35d div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-4d779bb4-69d5-4684-a568-d2a9d9e3f35d div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-4d779bb4-69d5-4684-a568-d2a9d9e3f35d div.sk-container {display: inline-block;position: relative;}</style><div id="sk-4d779bb4-69d5-4684-a568-d2a9d9e3f35d" class"sk-top-container"><div class="sk-container"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="67540e91-03f8-4eea-9d2e-3240a1ab94b3" type="checkbox" ><label class="sk-toggleable__label" for="67540e91-03f8-4eea-9d2e-3240a1ab94b3">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('columntransformer',
                     ColumnTransformer(transformers=[('simpleimputer',
                                                      SimpleImputer(add_indicator=True),
                                                      <sklearn.compose._column_transformer.make_column_selector object at 0x7f177a20dca0>),
                                                     ('ordinalencoder',
                                                      OrdinalEncoder(handle_unknown='use_encoded_value',
                                                                     unknown_value=-1),
                                                      <sklearn.compose._column_transformer.make_column_selector object at 0x7f177a20d460>)])),
                    ('histgradientboostingregressor',
                     HistGradientBoostingRegressor(random_state=0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="dec5c395-fc9c-46fa-9896-2930a46e5072" type="checkbox" ><label class="sk-toggleable__label" for="dec5c395-fc9c-46fa-9896-2930a46e5072">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('simpleimputer',
                                     SimpleImputer(add_indicator=True),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f177a20dca0>),
                                    ('ordinalencoder',
                                     OrdinalEncoder(handle_unknown='use_encoded_value',
                                                    unknown_value=-1),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f177a20d460>)])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f6fe0d67-25f0-4e92-9bb1-176324e73860" type="checkbox" ><label class="sk-toggleable__label" for="f6fe0d67-25f0-4e92-9bb1-176324e73860">simpleimputer</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f177a20dca0></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0c7eca2b-bcb3-4f12-b566-b969a32ee2c4" type="checkbox" ><label class="sk-toggleable__label" for="0c7eca2b-bcb3-4f12-b566-b969a32ee2c4">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(add_indicator=True)</pre></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c1c3ea33-a9b3-427e-8a33-7bc4c6ea95b7" type="checkbox" ><label class="sk-toggleable__label" for="c1c3ea33-a9b3-427e-8a33-7bc4c6ea95b7">ordinalencoder</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f177a20d460></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="97559e87-1e25-4f0b-b800-58166985e636" type="checkbox" ><label class="sk-toggleable__label" for="97559e87-1e25-4f0b-b800-58166985e636">OrdinalEncoder</label><div class="sk-toggleable__content"><pre>OrdinalEncoder(handle_unknown='use_encoded_value', unknown_value=-1)</pre></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="86f01fff-52fc-410d-aea5-a38b02641196" type="checkbox" ><label class="sk-toggleable__label" for="86f01fff-52fc-410d-aea5-a38b02641196">HistGradientBoostingRegressor</label><div class="sk-toggleable__content"><pre>HistGradientBoostingRegressor(random_state=0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 192-204

.. code-block:: default

    from sklearn.ensemble import StackingRegressor
    from sklearn.linear_model import RidgeCV

    estimators = [
        ("Random Forest", rf_pipeline),
        ("Lasso", lasso_pipeline),
        ("Gradient Boosting", gbdt_pipeline),
    ]

    stacking_regressor = StackingRegressor(estimators=estimators, final_estimator=RidgeCV())
    stacking_regressor






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-bf736cb4-ad9e-4ef6-85bc-13fe63df37e5 {color: black;background-color: white;}#sk-bf736cb4-ad9e-4ef6-85bc-13fe63df37e5 pre{padding: 0;}#sk-bf736cb4-ad9e-4ef6-85bc-13fe63df37e5 div.sk-toggleable {background-color: white;}#sk-bf736cb4-ad9e-4ef6-85bc-13fe63df37e5 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-bf736cb4-ad9e-4ef6-85bc-13fe63df37e5 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-bf736cb4-ad9e-4ef6-85bc-13fe63df37e5 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-bf736cb4-ad9e-4ef6-85bc-13fe63df37e5 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-bf736cb4-ad9e-4ef6-85bc-13fe63df37e5 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-bf736cb4-ad9e-4ef6-85bc-13fe63df37e5 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-bf736cb4-ad9e-4ef6-85bc-13fe63df37e5 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-bf736cb4-ad9e-4ef6-85bc-13fe63df37e5 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-bf736cb4-ad9e-4ef6-85bc-13fe63df37e5 div.sk-estimator:hover {background-color: #d4ebff;}#sk-bf736cb4-ad9e-4ef6-85bc-13fe63df37e5 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-bf736cb4-ad9e-4ef6-85bc-13fe63df37e5 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-bf736cb4-ad9e-4ef6-85bc-13fe63df37e5 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-bf736cb4-ad9e-4ef6-85bc-13fe63df37e5 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-bf736cb4-ad9e-4ef6-85bc-13fe63df37e5 div.sk-item {z-index: 1;}#sk-bf736cb4-ad9e-4ef6-85bc-13fe63df37e5 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-bf736cb4-ad9e-4ef6-85bc-13fe63df37e5 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-bf736cb4-ad9e-4ef6-85bc-13fe63df37e5 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-bf736cb4-ad9e-4ef6-85bc-13fe63df37e5 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-bf736cb4-ad9e-4ef6-85bc-13fe63df37e5 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-bf736cb4-ad9e-4ef6-85bc-13fe63df37e5 div.sk-parallel-item:only-child::after {width: 0;}#sk-bf736cb4-ad9e-4ef6-85bc-13fe63df37e5 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-bf736cb4-ad9e-4ef6-85bc-13fe63df37e5 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-bf736cb4-ad9e-4ef6-85bc-13fe63df37e5 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-bf736cb4-ad9e-4ef6-85bc-13fe63df37e5 div.sk-container {display: inline-block;position: relative;}</style><div id="sk-bf736cb4-ad9e-4ef6-85bc-13fe63df37e5" class"sk-top-container"><div class="sk-container"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="11302386-9308-405d-ae7e-2595e5852d5b" type="checkbox" ><label class="sk-toggleable__label" for="11302386-9308-405d-ae7e-2595e5852d5b">StackingRegressor</label><div class="sk-toggleable__content"><pre>StackingRegressor(estimators=[('Random Forest',
                                   Pipeline(steps=[('columntransformer',
                                                    ColumnTransformer(transformers=[('simpleimputer',
                                                                                     SimpleImputer(add_indicator=True),
                                                                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f177a20dca0>),
                                                                                    ('ordinalencoder',
                                                                                     OrdinalEncoder(handle_unknown='use_encoded_value',
                                                                                                    unknown_value=-1),
                                                                                     <sklearn.compose...
                                                                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f177a20dca0>),
                                                                                    ('ordinalencoder',
                                                                                     OrdinalEncoder(handle_unknown='use_encoded_value',
                                                                                                    unknown_value=-1),
                                                                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f177a20d460>)])),
                                                   ('histgradientboostingregressor',
                                                    HistGradientBoostingRegressor(random_state=0))]))],
                      final_estimator=RidgeCV(alphas=array([ 0.1,  1. , 10. ])))</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><label>Random Forest</label></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="50fcdb12-63c5-4668-8fca-43f5c0ad7e47" type="checkbox" ><label class="sk-toggleable__label" for="50fcdb12-63c5-4668-8fca-43f5c0ad7e47">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('simpleimputer',
                                     SimpleImputer(add_indicator=True),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f177a20dca0>),
                                    ('ordinalencoder',
                                     OrdinalEncoder(handle_unknown='use_encoded_value',
                                                    unknown_value=-1),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f177a20d460>)])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c56ff95c-bccc-4cd4-bcd2-5e3635935c75" type="checkbox" ><label class="sk-toggleable__label" for="c56ff95c-bccc-4cd4-bcd2-5e3635935c75">simpleimputer</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f177a20dca0></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4ec8a2cd-bcad-4554-9323-677e009d95b4" type="checkbox" ><label class="sk-toggleable__label" for="4ec8a2cd-bcad-4554-9323-677e009d95b4">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(add_indicator=True)</pre></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="13d77995-b967-493e-b2d7-df87de6fd98f" type="checkbox" ><label class="sk-toggleable__label" for="13d77995-b967-493e-b2d7-df87de6fd98f">ordinalencoder</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f177a20d460></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bf73962d-cff2-4dbc-ac3f-625ed43f0c22" type="checkbox" ><label class="sk-toggleable__label" for="bf73962d-cff2-4dbc-ac3f-625ed43f0c22">OrdinalEncoder</label><div class="sk-toggleable__content"><pre>OrdinalEncoder(handle_unknown='use_encoded_value', unknown_value=-1)</pre></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="dbc1775d-0509-415f-bba0-5254a0d540c7" type="checkbox" ><label class="sk-toggleable__label" for="dbc1775d-0509-415f-bba0-5254a0d540c7">RandomForestRegressor</label><div class="sk-toggleable__content"><pre>RandomForestRegressor(random_state=42)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><label>Lasso</label></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5495bb2a-77ed-4af6-9219-972b1590b90b" type="checkbox" ><label class="sk-toggleable__label" for="5495bb2a-77ed-4af6-9219-972b1590b90b">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('pipeline',
                                     Pipeline(steps=[('standardscaler',
                                                      StandardScaler()),
                                                     ('simpleimputer',
                                                      SimpleImputer(add_indicator=True))]),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f177a20dca0>),
                                    ('onehotencoder',
                                     OneHotEncoder(handle_unknown='ignore'),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f177a20d460>)])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3576948f-c53a-4ab9-a224-cf2bd1d4b22d" type="checkbox" ><label class="sk-toggleable__label" for="3576948f-c53a-4ab9-a224-cf2bd1d4b22d">pipeline</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f177a20dca0></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d1fee246-112b-4c7c-88fa-8a6bf257be0e" type="checkbox" ><label class="sk-toggleable__label" for="d1fee246-112b-4c7c-88fa-8a6bf257be0e">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bbd3dd91-dbb0-4b84-9ebf-eeccf9c804d2" type="checkbox" ><label class="sk-toggleable__label" for="bbd3dd91-dbb0-4b84-9ebf-eeccf9c804d2">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(add_indicator=True)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="191d61d1-6051-4869-a3f8-0d01f8bd92ef" type="checkbox" ><label class="sk-toggleable__label" for="191d61d1-6051-4869-a3f8-0d01f8bd92ef">onehotencoder</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f177a20d460></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0fa9919c-889e-4612-96a4-41e761c28c19" type="checkbox" ><label class="sk-toggleable__label" for="0fa9919c-889e-4612-96a4-41e761c28c19">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown='ignore')</pre></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="61c40d75-8e17-4a7c-b187-7cf6069a6272" type="checkbox" ><label class="sk-toggleable__label" for="61c40d75-8e17-4a7c-b187-7cf6069a6272">LassoCV</label><div class="sk-toggleable__content"><pre>LassoCV()</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><label>Gradient Boosting</label></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5dba5956-6a2e-4a3d-b196-f4b688c4c099" type="checkbox" ><label class="sk-toggleable__label" for="5dba5956-6a2e-4a3d-b196-f4b688c4c099">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('simpleimputer',
                                     SimpleImputer(add_indicator=True),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f177a20dca0>),
                                    ('ordinalencoder',
                                     OrdinalEncoder(handle_unknown='use_encoded_value',
                                                    unknown_value=-1),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f177a20d460>)])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="275c26d1-01f9-47de-8a51-ef275f38c928" type="checkbox" ><label class="sk-toggleable__label" for="275c26d1-01f9-47de-8a51-ef275f38c928">simpleimputer</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f177a20dca0></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e262f181-4a49-4667-a738-3ced01ab56d5" type="checkbox" ><label class="sk-toggleable__label" for="e262f181-4a49-4667-a738-3ced01ab56d5">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(add_indicator=True)</pre></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3a653927-0431-41df-804f-4ff9833793fc" type="checkbox" ><label class="sk-toggleable__label" for="3a653927-0431-41df-804f-4ff9833793fc">ordinalencoder</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f177a20d460></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a896515d-7052-4bfe-b8ab-4612e2278734" type="checkbox" ><label class="sk-toggleable__label" for="a896515d-7052-4bfe-b8ab-4612e2278734">OrdinalEncoder</label><div class="sk-toggleable__content"><pre>OrdinalEncoder(handle_unknown='use_encoded_value', unknown_value=-1)</pre></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="426070af-4b58-48bf-b5ef-7e1b1fa5f783" type="checkbox" ><label class="sk-toggleable__label" for="426070af-4b58-48bf-b5ef-7e1b1fa5f783">HistGradientBoostingRegressor</label><div class="sk-toggleable__content"><pre>HistGradientBoostingRegressor(random_state=0)</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><label>final_estimator</label></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cd1337fe-e0c6-4667-8ffb-82110ab4081c" type="checkbox" ><label class="sk-toggleable__label" for="cd1337fe-e0c6-4667-8ffb-82110ab4081c">RidgeCV</label><div class="sk-toggleable__content"><pre>RidgeCV(alphas=array([ 0.1,  1. , 10. ]))</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 205-214

Measure and plot the results
#############################################################################

 Now we can use Ames Housing dataset to make the predictions. We check the
 performance of each individual predictor as well as of the stack of the
 regressors.

 The function ``plot_regression_results`` is used to plot the predicted and
 true targets.

.. GENERATED FROM PYTHON SOURCE LINES 214-279

.. code-block:: default



    import time
    import matplotlib.pyplot as plt
    from sklearn.model_selection import cross_validate, cross_val_predict


    def plot_regression_results(ax, y_true, y_pred, title, scores, elapsed_time):
        """Scatter plot of the predicted vs true targets."""
        ax.plot(
            [y_true.min(), y_true.max()], [y_true.min(), y_true.max()], "--r", linewidth=2
        )
        ax.scatter(y_true, y_pred, alpha=0.2)

        ax.spines["top"].set_visible(False)
        ax.spines["right"].set_visible(False)
        ax.get_xaxis().tick_bottom()
        ax.get_yaxis().tick_left()
        ax.spines["left"].set_position(("outward", 10))
        ax.spines["bottom"].set_position(("outward", 10))
        ax.set_xlim([y_true.min(), y_true.max()])
        ax.set_ylim([y_true.min(), y_true.max()])
        ax.set_xlabel("Measured")
        ax.set_ylabel("Predicted")
        extra = plt.Rectangle(
            (0, 0), 0, 0, fc="w", fill=False, edgecolor="none", linewidth=0
        )
        ax.legend([extra], [scores], loc="upper left")
        title = title + "\n Evaluation in {:.2f} seconds".format(elapsed_time)
        ax.set_title(title)


    fig, axs = plt.subplots(2, 2, figsize=(9, 7))
    axs = np.ravel(axs)

    for ax, (name, est) in zip(
        axs, estimators + [("Stacking Regressor", stacking_regressor)]
    ):
        start_time = time.time()
        score = cross_validate(
            est, X, y, scoring=["r2", "neg_mean_absolute_error"], n_jobs=-1, verbose=0
        )
        elapsed_time = time.time() - start_time

        y_pred = cross_val_predict(est, X, y, n_jobs=-1, verbose=0)

        plot_regression_results(
            ax,
            y,
            y_pred,
            name,
            (r"$R^2={:.2f} \pm {:.2f}$" + "\n" + r"$MAE={:.2f} \pm {:.2f}$").format(
                np.mean(score["test_r2"]),
                np.std(score["test_r2"]),
                -np.mean(score["test_neg_mean_absolute_error"]),
                np.std(score["test_neg_mean_absolute_error"]),
            ),
            elapsed_time,
        )

    plt.suptitle("Single predictors versus stacked predictors")
    plt.tight_layout()
    plt.subplots_adjust(top=0.9)
    plt.show()




.. image-sg:: /auto_examples/ensemble/images/sphx_glr_plot_stack_predictors_001.png
   :alt: Single predictors versus stacked predictors, Random Forest  Evaluation in 2.48 seconds, Lasso  Evaluation in 0.73 seconds, Gradient Boosting  Evaluation in 0.75 seconds, Stacking Regressor  Evaluation in 9.76 seconds
   :srcset: /auto_examples/ensemble/images/sphx_glr_plot_stack_predictors_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 280-283

The stacked regressor will combine the strengths of the different regressors.
However, we also see that training the stacked regressor is much more
computationally expensive.


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  27.473 seconds)


.. _sphx_glr_download_auto_examples_ensemble_plot_stack_predictors.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/ensemble/plot_stack_predictors.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_stack_predictors.py <plot_stack_predictors.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_stack_predictors.ipynb <plot_stack_predictors.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
