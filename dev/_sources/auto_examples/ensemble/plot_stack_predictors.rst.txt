
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/ensemble/plot_stack_predictors.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_ensemble_plot_stack_predictors.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_ensemble_plot_stack_predictors.py:


=================================
Combine predictors using stacking
=================================

.. currentmodule:: sklearn

Stacking refers to a method to blend estimators. In this strategy, some
estimators are individually fitted on some training data while a final
estimator is trained using the stacked predictions of these base estimators.

In this example, we illustrate the use case in which different regressors are
stacked together and a final linear penalized regressor is used to output the
prediction. We compare the performance of each individual regressor with the
stacking strategy. Stacking slightly improves the overall performance.

.. GENERATED FROM PYTHON SOURCE LINES 18-29

.. code-block:: default


    # Authors: Guillaume Lemaitre <g.lemaitre58@gmail.com>
    #          Maria Telenczuk    <https://github.com/maikia>
    # License: BSD 3 clause

    print(__doc__)

    from sklearn import set_config

    set_config(display="diagram")








.. GENERATED FROM PYTHON SOURCE LINES 30-46

Download the dataset
#############################################################################

 We will use `Ames Housing`_ dataset which was first compiled by Dean De Cock
 and became better known after it was used in Kaggle challenge. It is a set
 of 1460 residential homes in Ames, Iowa, each described by 80 features. We
 will use it to predict the final logarithmic price of the houses. In this
 example we will use only 20 most interesting features chosen using
 GradientBoostingRegressor() and limit number of entries (here we won't go
 into the details on how to select the most interesting features).

 The Ames housing dataset is not shipped with scikit-learn and therefore we
 will fetch it from `OpenML`_.

 .. _`Ames Housing`: http://jse.amstat.org/v19n3/decock.pdf
 .. _`OpenML`: https://www.openml.org/d/42165

.. GENERATED FROM PYTHON SOURCE LINES 46-92

.. code-block:: default


    import numpy as np

    from sklearn.datasets import fetch_openml
    from sklearn.utils import shuffle


    def load_ames_housing():
        df = fetch_openml(name="house_prices", as_frame=True)
        X = df.data
        y = df.target

        features = [
            "YrSold",
            "HeatingQC",
            "Street",
            "YearRemodAdd",
            "Heating",
            "MasVnrType",
            "BsmtUnfSF",
            "Foundation",
            "MasVnrArea",
            "MSSubClass",
            "ExterQual",
            "Condition2",
            "GarageCars",
            "GarageType",
            "OverallQual",
            "TotalBsmtSF",
            "BsmtFinSF1",
            "HouseStyle",
            "MiscFeature",
            "MoSold",
        ]

        X = X[features]
        X, y = shuffle(X, y, random_state=0)

        X = X[:600]
        y = y[:600]
        return X, np.log(y)


    X, y = load_ames_housing()









.. GENERATED FROM PYTHON SOURCE LINES 93-99

Make pipeline to preprocess the data
#############################################################################

 Before we can use Ames dataset we still need to do some preprocessing.
 First, we will select the categorical and numerical columns of the dataset to
 construct the first step of the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 99-106

.. code-block:: default


    from sklearn.compose import make_column_selector

    cat_selector = make_column_selector(dtype_include=object)
    num_selector = make_column_selector(dtype_include=np.number)
    cat_selector(X)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    ['HeatingQC', 'Street', 'Heating', 'MasVnrType', 'Foundation', 'ExterQual', 'Condition2', 'GarageType', 'HouseStyle', 'MiscFeature']



.. GENERATED FROM PYTHON SOURCE LINES 107-109

.. code-block:: default

    num_selector(X)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    ['YrSold', 'YearRemodAdd', 'BsmtUnfSF', 'MasVnrArea', 'MSSubClass', 'GarageCars', 'OverallQual', 'TotalBsmtSF', 'BsmtFinSF1', 'MoSold']



.. GENERATED FROM PYTHON SOURCE LINES 110-119

Then, we will need to design preprocessing pipelines which depends on the
ending regressor. If the ending regressor is a linear model, one needs to
one-hot encode the categories. If the ending regressor is a tree-based model
an ordinal encoder will be sufficient. Besides, numerical values need to be
standardized for a linear model while the raw numerical data can be treated
as is by a tree-based model. However, both models need an imputer to
handle missing values.

We will first design the pipeline required for the tree-based models.

.. GENERATED FROM PYTHON SOURCE LINES 119-135

.. code-block:: default


    from sklearn.compose import make_column_transformer
    from sklearn.impute import SimpleImputer
    from sklearn.pipeline import make_pipeline
    from sklearn.preprocessing import OrdinalEncoder

    cat_tree_processor = OrdinalEncoder(
        handle_unknown="use_encoded_value", unknown_value=-1
    )
    num_tree_processor = SimpleImputer(strategy="mean", add_indicator=True)

    tree_preprocessor = make_column_transformer(
        (num_tree_processor, num_selector), (cat_tree_processor, cat_selector)
    )
    tree_preprocessor






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-bec0160f-21d5-4436-8f63-14059cefdfca {color: black;background-color: white;}#sk-bec0160f-21d5-4436-8f63-14059cefdfca pre{padding: 0;}#sk-bec0160f-21d5-4436-8f63-14059cefdfca div.sk-toggleable {background-color: white;}#sk-bec0160f-21d5-4436-8f63-14059cefdfca label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-bec0160f-21d5-4436-8f63-14059cefdfca div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-bec0160f-21d5-4436-8f63-14059cefdfca div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-bec0160f-21d5-4436-8f63-14059cefdfca input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-bec0160f-21d5-4436-8f63-14059cefdfca div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-bec0160f-21d5-4436-8f63-14059cefdfca div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-bec0160f-21d5-4436-8f63-14059cefdfca input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-bec0160f-21d5-4436-8f63-14059cefdfca div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-bec0160f-21d5-4436-8f63-14059cefdfca div.sk-estimator:hover {background-color: #d4ebff;}#sk-bec0160f-21d5-4436-8f63-14059cefdfca div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-bec0160f-21d5-4436-8f63-14059cefdfca div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-bec0160f-21d5-4436-8f63-14059cefdfca div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-bec0160f-21d5-4436-8f63-14059cefdfca div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-bec0160f-21d5-4436-8f63-14059cefdfca div.sk-item {z-index: 1;}#sk-bec0160f-21d5-4436-8f63-14059cefdfca div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-bec0160f-21d5-4436-8f63-14059cefdfca div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-bec0160f-21d5-4436-8f63-14059cefdfca div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-bec0160f-21d5-4436-8f63-14059cefdfca div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-bec0160f-21d5-4436-8f63-14059cefdfca div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-bec0160f-21d5-4436-8f63-14059cefdfca div.sk-parallel-item:only-child::after {width: 0;}#sk-bec0160f-21d5-4436-8f63-14059cefdfca div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-bec0160f-21d5-4436-8f63-14059cefdfca div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-bec0160f-21d5-4436-8f63-14059cefdfca div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-bec0160f-21d5-4436-8f63-14059cefdfca div.sk-container {display: inline-block;position: relative;}</style><div id="sk-bec0160f-21d5-4436-8f63-14059cefdfca" class"sk-top-container"><div class="sk-container"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9e1e6cca-f1ae-4a3b-80bf-2a91124dacdd" type="checkbox" ><label class="sk-toggleable__label" for="9e1e6cca-f1ae-4a3b-80bf-2a91124dacdd">ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('simpleimputer',
                                     SimpleImputer(add_indicator=True),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f2cea441940>),
                                    ('ordinalencoder',
                                     OrdinalEncoder(handle_unknown='use_encoded_value',
                                                    unknown_value=-1),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f2cea441ac0>)])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ed9b4489-b4aa-414a-8389-98e839455cb2" type="checkbox" ><label class="sk-toggleable__label" for="ed9b4489-b4aa-414a-8389-98e839455cb2">simpleimputer</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f2cea441940></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8c6cbb94-968b-4329-8f7f-b45e57e3d0fd" type="checkbox" ><label class="sk-toggleable__label" for="8c6cbb94-968b-4329-8f7f-b45e57e3d0fd">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(add_indicator=True)</pre></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="256b54bf-5bbd-4bea-9fb8-0b0442ecc9d7" type="checkbox" ><label class="sk-toggleable__label" for="256b54bf-5bbd-4bea-9fb8-0b0442ecc9d7">ordinalencoder</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f2cea441ac0></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7eeaa277-8315-46c0-924e-78c5059219b7" type="checkbox" ><label class="sk-toggleable__label" for="7eeaa277-8315-46c0-924e-78c5059219b7">OrdinalEncoder</label><div class="sk-toggleable__content"><pre>OrdinalEncoder(handle_unknown='use_encoded_value', unknown_value=-1)</pre></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 136-138

Then, we will now define the preprocessor used when the ending regressor
is a linear model.

.. GENERATED FROM PYTHON SOURCE LINES 138-152

.. code-block:: default


    from sklearn.preprocessing import OneHotEncoder
    from sklearn.preprocessing import StandardScaler

    cat_linear_processor = OneHotEncoder(handle_unknown="ignore")
    num_linear_processor = make_pipeline(
        StandardScaler(), SimpleImputer(strategy="mean", add_indicator=True)
    )

    linear_preprocessor = make_column_transformer(
        (num_linear_processor, num_selector), (cat_linear_processor, cat_selector)
    )
    linear_preprocessor






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-0a538676-89c9-402b-a755-f667c68cb593 {color: black;background-color: white;}#sk-0a538676-89c9-402b-a755-f667c68cb593 pre{padding: 0;}#sk-0a538676-89c9-402b-a755-f667c68cb593 div.sk-toggleable {background-color: white;}#sk-0a538676-89c9-402b-a755-f667c68cb593 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-0a538676-89c9-402b-a755-f667c68cb593 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-0a538676-89c9-402b-a755-f667c68cb593 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-0a538676-89c9-402b-a755-f667c68cb593 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-0a538676-89c9-402b-a755-f667c68cb593 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-0a538676-89c9-402b-a755-f667c68cb593 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-0a538676-89c9-402b-a755-f667c68cb593 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-0a538676-89c9-402b-a755-f667c68cb593 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-0a538676-89c9-402b-a755-f667c68cb593 div.sk-estimator:hover {background-color: #d4ebff;}#sk-0a538676-89c9-402b-a755-f667c68cb593 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-0a538676-89c9-402b-a755-f667c68cb593 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-0a538676-89c9-402b-a755-f667c68cb593 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-0a538676-89c9-402b-a755-f667c68cb593 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-0a538676-89c9-402b-a755-f667c68cb593 div.sk-item {z-index: 1;}#sk-0a538676-89c9-402b-a755-f667c68cb593 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-0a538676-89c9-402b-a755-f667c68cb593 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-0a538676-89c9-402b-a755-f667c68cb593 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-0a538676-89c9-402b-a755-f667c68cb593 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-0a538676-89c9-402b-a755-f667c68cb593 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-0a538676-89c9-402b-a755-f667c68cb593 div.sk-parallel-item:only-child::after {width: 0;}#sk-0a538676-89c9-402b-a755-f667c68cb593 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-0a538676-89c9-402b-a755-f667c68cb593 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-0a538676-89c9-402b-a755-f667c68cb593 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-0a538676-89c9-402b-a755-f667c68cb593 div.sk-container {display: inline-block;position: relative;}</style><div id="sk-0a538676-89c9-402b-a755-f667c68cb593" class"sk-top-container"><div class="sk-container"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="317e549a-a863-4210-916a-7902c576f2f8" type="checkbox" ><label class="sk-toggleable__label" for="317e549a-a863-4210-916a-7902c576f2f8">ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('pipeline',
                                     Pipeline(steps=[('standardscaler',
                                                      StandardScaler()),
                                                     ('simpleimputer',
                                                      SimpleImputer(add_indicator=True))]),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f2cea441940>),
                                    ('onehotencoder',
                                     OneHotEncoder(handle_unknown='ignore'),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f2cea441ac0>)])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="250a832a-4ebe-467e-a129-8c12d4362a79" type="checkbox" ><label class="sk-toggleable__label" for="250a832a-4ebe-467e-a129-8c12d4362a79">pipeline</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f2cea441940></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ac55f16c-3109-4e32-912b-a436aea06d47" type="checkbox" ><label class="sk-toggleable__label" for="ac55f16c-3109-4e32-912b-a436aea06d47">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="85b8f2a1-e2df-49e8-b232-b749a15bac2a" type="checkbox" ><label class="sk-toggleable__label" for="85b8f2a1-e2df-49e8-b232-b749a15bac2a">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(add_indicator=True)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="76bf2315-0792-46c7-a685-c001e02e4f36" type="checkbox" ><label class="sk-toggleable__label" for="76bf2315-0792-46c7-a685-c001e02e4f36">onehotencoder</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f2cea441ac0></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b0a68000-1bb0-4659-b7a3-a235bf325ba2" type="checkbox" ><label class="sk-toggleable__label" for="b0a68000-1bb0-4659-b7a3-a235bf325ba2">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown='ignore')</pre></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 153-171

Stack of predictors on a single data set
#############################################################################

 It is sometimes tedious to find the model which will best perform on a given
 dataset. Stacking provide an alternative by combining the outputs of several
 learners, without the need to choose a model specifically. The performance of
 stacking is usually close to the best model and sometimes it can outperform
 the prediction performance of each individual model.

 Here, we combine 3 learners (linear and non-linear) and use a ridge regressor
 to combine their outputs together.

 .. note::
    Although we will make new pipelines with the processors which we wrote in
    the previous section for the 3 learners, the final estimator
    :class:`~sklearn.linear_model.RidgeCV()` does not need preprocessing of
    the data as it will be fed with the already preprocessed output from the 3
    learners.

.. GENERATED FROM PYTHON SOURCE LINES 171-177

.. code-block:: default


    from sklearn.linear_model import LassoCV

    lasso_pipeline = make_pipeline(linear_preprocessor, LassoCV())
    lasso_pipeline






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-a04d507f-2a8f-4103-9c9e-bec6f543d1ea {color: black;background-color: white;}#sk-a04d507f-2a8f-4103-9c9e-bec6f543d1ea pre{padding: 0;}#sk-a04d507f-2a8f-4103-9c9e-bec6f543d1ea div.sk-toggleable {background-color: white;}#sk-a04d507f-2a8f-4103-9c9e-bec6f543d1ea label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-a04d507f-2a8f-4103-9c9e-bec6f543d1ea div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-a04d507f-2a8f-4103-9c9e-bec6f543d1ea div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-a04d507f-2a8f-4103-9c9e-bec6f543d1ea input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-a04d507f-2a8f-4103-9c9e-bec6f543d1ea div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-a04d507f-2a8f-4103-9c9e-bec6f543d1ea div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-a04d507f-2a8f-4103-9c9e-bec6f543d1ea input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-a04d507f-2a8f-4103-9c9e-bec6f543d1ea div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-a04d507f-2a8f-4103-9c9e-bec6f543d1ea div.sk-estimator:hover {background-color: #d4ebff;}#sk-a04d507f-2a8f-4103-9c9e-bec6f543d1ea div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-a04d507f-2a8f-4103-9c9e-bec6f543d1ea div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-a04d507f-2a8f-4103-9c9e-bec6f543d1ea div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-a04d507f-2a8f-4103-9c9e-bec6f543d1ea div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-a04d507f-2a8f-4103-9c9e-bec6f543d1ea div.sk-item {z-index: 1;}#sk-a04d507f-2a8f-4103-9c9e-bec6f543d1ea div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-a04d507f-2a8f-4103-9c9e-bec6f543d1ea div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-a04d507f-2a8f-4103-9c9e-bec6f543d1ea div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-a04d507f-2a8f-4103-9c9e-bec6f543d1ea div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-a04d507f-2a8f-4103-9c9e-bec6f543d1ea div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-a04d507f-2a8f-4103-9c9e-bec6f543d1ea div.sk-parallel-item:only-child::after {width: 0;}#sk-a04d507f-2a8f-4103-9c9e-bec6f543d1ea div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-a04d507f-2a8f-4103-9c9e-bec6f543d1ea div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-a04d507f-2a8f-4103-9c9e-bec6f543d1ea div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-a04d507f-2a8f-4103-9c9e-bec6f543d1ea div.sk-container {display: inline-block;position: relative;}</style><div id="sk-a04d507f-2a8f-4103-9c9e-bec6f543d1ea" class"sk-top-container"><div class="sk-container"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e09a1eca-e75b-4bd9-9847-932a9e8d8e25" type="checkbox" ><label class="sk-toggleable__label" for="e09a1eca-e75b-4bd9-9847-932a9e8d8e25">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('columntransformer',
                     ColumnTransformer(transformers=[('pipeline',
                                                      Pipeline(steps=[('standardscaler',
                                                                       StandardScaler()),
                                                                      ('simpleimputer',
                                                                       SimpleImputer(add_indicator=True))]),
                                                      <sklearn.compose._column_transformer.make_column_selector object at 0x7f2cea441940>),
                                                     ('onehotencoder',
                                                      OneHotEncoder(handle_unknown='ignore'),
                                                      <sklearn.compose._column_transformer.make_column_selector object at 0x7f2cea441ac0>)])),
                    ('lassocv', LassoCV())])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="61cdef3c-e304-42f1-bb08-d3181f5a4687" type="checkbox" ><label class="sk-toggleable__label" for="61cdef3c-e304-42f1-bb08-d3181f5a4687">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('pipeline',
                                     Pipeline(steps=[('standardscaler',
                                                      StandardScaler()),
                                                     ('simpleimputer',
                                                      SimpleImputer(add_indicator=True))]),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f2cea441940>),
                                    ('onehotencoder',
                                     OneHotEncoder(handle_unknown='ignore'),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f2cea441ac0>)])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e9a5d227-0d61-44ab-a456-46358666875d" type="checkbox" ><label class="sk-toggleable__label" for="e9a5d227-0d61-44ab-a456-46358666875d">pipeline</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f2cea441940></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="dfb8a178-cfc3-4298-a374-d8d653a152d3" type="checkbox" ><label class="sk-toggleable__label" for="dfb8a178-cfc3-4298-a374-d8d653a152d3">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e619f44f-5326-4bae-a98b-1478d914fa3a" type="checkbox" ><label class="sk-toggleable__label" for="e619f44f-5326-4bae-a98b-1478d914fa3a">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(add_indicator=True)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5d7993a7-2883-458f-b096-f16d70e9ae4f" type="checkbox" ><label class="sk-toggleable__label" for="5d7993a7-2883-458f-b096-f16d70e9ae4f">onehotencoder</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f2cea441ac0></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1ab6a4f8-b28a-413d-aeb4-5bcb0902fb58" type="checkbox" ><label class="sk-toggleable__label" for="1ab6a4f8-b28a-413d-aeb4-5bcb0902fb58">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown='ignore')</pre></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="444f506e-0c26-4372-8116-47f2d12fe6fa" type="checkbox" ><label class="sk-toggleable__label" for="444f506e-0c26-4372-8116-47f2d12fe6fa">LassoCV</label><div class="sk-toggleable__content"><pre>LassoCV()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 178-183

.. code-block:: default

    from sklearn.ensemble import RandomForestRegressor

    rf_pipeline = make_pipeline(tree_preprocessor, RandomForestRegressor(random_state=42))
    rf_pipeline






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-d4d36868-3851-4d6a-912e-0bf69d1d44e2 {color: black;background-color: white;}#sk-d4d36868-3851-4d6a-912e-0bf69d1d44e2 pre{padding: 0;}#sk-d4d36868-3851-4d6a-912e-0bf69d1d44e2 div.sk-toggleable {background-color: white;}#sk-d4d36868-3851-4d6a-912e-0bf69d1d44e2 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-d4d36868-3851-4d6a-912e-0bf69d1d44e2 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-d4d36868-3851-4d6a-912e-0bf69d1d44e2 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-d4d36868-3851-4d6a-912e-0bf69d1d44e2 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-d4d36868-3851-4d6a-912e-0bf69d1d44e2 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-d4d36868-3851-4d6a-912e-0bf69d1d44e2 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-d4d36868-3851-4d6a-912e-0bf69d1d44e2 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-d4d36868-3851-4d6a-912e-0bf69d1d44e2 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-d4d36868-3851-4d6a-912e-0bf69d1d44e2 div.sk-estimator:hover {background-color: #d4ebff;}#sk-d4d36868-3851-4d6a-912e-0bf69d1d44e2 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-d4d36868-3851-4d6a-912e-0bf69d1d44e2 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-d4d36868-3851-4d6a-912e-0bf69d1d44e2 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-d4d36868-3851-4d6a-912e-0bf69d1d44e2 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-d4d36868-3851-4d6a-912e-0bf69d1d44e2 div.sk-item {z-index: 1;}#sk-d4d36868-3851-4d6a-912e-0bf69d1d44e2 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-d4d36868-3851-4d6a-912e-0bf69d1d44e2 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-d4d36868-3851-4d6a-912e-0bf69d1d44e2 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-d4d36868-3851-4d6a-912e-0bf69d1d44e2 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-d4d36868-3851-4d6a-912e-0bf69d1d44e2 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-d4d36868-3851-4d6a-912e-0bf69d1d44e2 div.sk-parallel-item:only-child::after {width: 0;}#sk-d4d36868-3851-4d6a-912e-0bf69d1d44e2 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-d4d36868-3851-4d6a-912e-0bf69d1d44e2 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-d4d36868-3851-4d6a-912e-0bf69d1d44e2 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-d4d36868-3851-4d6a-912e-0bf69d1d44e2 div.sk-container {display: inline-block;position: relative;}</style><div id="sk-d4d36868-3851-4d6a-912e-0bf69d1d44e2" class"sk-top-container"><div class="sk-container"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="80a9ff4f-5004-4926-87c2-c9f5f164b5db" type="checkbox" ><label class="sk-toggleable__label" for="80a9ff4f-5004-4926-87c2-c9f5f164b5db">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('columntransformer',
                     ColumnTransformer(transformers=[('simpleimputer',
                                                      SimpleImputer(add_indicator=True),
                                                      <sklearn.compose._column_transformer.make_column_selector object at 0x7f2cea441940>),
                                                     ('ordinalencoder',
                                                      OrdinalEncoder(handle_unknown='use_encoded_value',
                                                                     unknown_value=-1),
                                                      <sklearn.compose._column_transformer.make_column_selector object at 0x7f2cea441ac0>)])),
                    ('randomforestregressor',
                     RandomForestRegressor(random_state=42))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="726a736e-e73c-4285-afef-79c35659155d" type="checkbox" ><label class="sk-toggleable__label" for="726a736e-e73c-4285-afef-79c35659155d">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('simpleimputer',
                                     SimpleImputer(add_indicator=True),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f2cea441940>),
                                    ('ordinalencoder',
                                     OrdinalEncoder(handle_unknown='use_encoded_value',
                                                    unknown_value=-1),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f2cea441ac0>)])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7b5952c0-6000-431e-9427-989c03a80618" type="checkbox" ><label class="sk-toggleable__label" for="7b5952c0-6000-431e-9427-989c03a80618">simpleimputer</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f2cea441940></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="564fff50-719a-402a-89dc-b9385b2c6487" type="checkbox" ><label class="sk-toggleable__label" for="564fff50-719a-402a-89dc-b9385b2c6487">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(add_indicator=True)</pre></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e813f1cb-4e88-4ed3-8b5e-5b8211cebc99" type="checkbox" ><label class="sk-toggleable__label" for="e813f1cb-4e88-4ed3-8b5e-5b8211cebc99">ordinalencoder</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f2cea441ac0></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0acfaac8-bba1-4744-817c-22421d0b9d62" type="checkbox" ><label class="sk-toggleable__label" for="0acfaac8-bba1-4744-817c-22421d0b9d62">OrdinalEncoder</label><div class="sk-toggleable__content"><pre>OrdinalEncoder(handle_unknown='use_encoded_value', unknown_value=-1)</pre></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="74220ac8-8d29-44bd-92b6-062a9a2fd6bd" type="checkbox" ><label class="sk-toggleable__label" for="74220ac8-8d29-44bd-92b6-062a9a2fd6bd">RandomForestRegressor</label><div class="sk-toggleable__content"><pre>RandomForestRegressor(random_state=42)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 184-191

.. code-block:: default

    from sklearn.ensemble import HistGradientBoostingRegressor

    gbdt_pipeline = make_pipeline(
        tree_preprocessor, HistGradientBoostingRegressor(random_state=0)
    )
    gbdt_pipeline






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-233996b0-275a-4529-9f0d-5b703d243f32 {color: black;background-color: white;}#sk-233996b0-275a-4529-9f0d-5b703d243f32 pre{padding: 0;}#sk-233996b0-275a-4529-9f0d-5b703d243f32 div.sk-toggleable {background-color: white;}#sk-233996b0-275a-4529-9f0d-5b703d243f32 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-233996b0-275a-4529-9f0d-5b703d243f32 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-233996b0-275a-4529-9f0d-5b703d243f32 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-233996b0-275a-4529-9f0d-5b703d243f32 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-233996b0-275a-4529-9f0d-5b703d243f32 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-233996b0-275a-4529-9f0d-5b703d243f32 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-233996b0-275a-4529-9f0d-5b703d243f32 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-233996b0-275a-4529-9f0d-5b703d243f32 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-233996b0-275a-4529-9f0d-5b703d243f32 div.sk-estimator:hover {background-color: #d4ebff;}#sk-233996b0-275a-4529-9f0d-5b703d243f32 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-233996b0-275a-4529-9f0d-5b703d243f32 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-233996b0-275a-4529-9f0d-5b703d243f32 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-233996b0-275a-4529-9f0d-5b703d243f32 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-233996b0-275a-4529-9f0d-5b703d243f32 div.sk-item {z-index: 1;}#sk-233996b0-275a-4529-9f0d-5b703d243f32 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-233996b0-275a-4529-9f0d-5b703d243f32 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-233996b0-275a-4529-9f0d-5b703d243f32 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-233996b0-275a-4529-9f0d-5b703d243f32 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-233996b0-275a-4529-9f0d-5b703d243f32 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-233996b0-275a-4529-9f0d-5b703d243f32 div.sk-parallel-item:only-child::after {width: 0;}#sk-233996b0-275a-4529-9f0d-5b703d243f32 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-233996b0-275a-4529-9f0d-5b703d243f32 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-233996b0-275a-4529-9f0d-5b703d243f32 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-233996b0-275a-4529-9f0d-5b703d243f32 div.sk-container {display: inline-block;position: relative;}</style><div id="sk-233996b0-275a-4529-9f0d-5b703d243f32" class"sk-top-container"><div class="sk-container"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7043971a-2f14-4921-aeb2-6a9837288a21" type="checkbox" ><label class="sk-toggleable__label" for="7043971a-2f14-4921-aeb2-6a9837288a21">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('columntransformer',
                     ColumnTransformer(transformers=[('simpleimputer',
                                                      SimpleImputer(add_indicator=True),
                                                      <sklearn.compose._column_transformer.make_column_selector object at 0x7f2cea441940>),
                                                     ('ordinalencoder',
                                                      OrdinalEncoder(handle_unknown='use_encoded_value',
                                                                     unknown_value=-1),
                                                      <sklearn.compose._column_transformer.make_column_selector object at 0x7f2cea441ac0>)])),
                    ('histgradientboostingregressor',
                     HistGradientBoostingRegressor(random_state=0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c1bb6b11-9d66-4f95-9adb-e3d10eca4b23" type="checkbox" ><label class="sk-toggleable__label" for="c1bb6b11-9d66-4f95-9adb-e3d10eca4b23">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('simpleimputer',
                                     SimpleImputer(add_indicator=True),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f2cea441940>),
                                    ('ordinalencoder',
                                     OrdinalEncoder(handle_unknown='use_encoded_value',
                                                    unknown_value=-1),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f2cea441ac0>)])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4e9c200d-c84c-49ce-bc35-9e59f4f56752" type="checkbox" ><label class="sk-toggleable__label" for="4e9c200d-c84c-49ce-bc35-9e59f4f56752">simpleimputer</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f2cea441940></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4b149c51-84c7-4717-8a59-635bf56a4231" type="checkbox" ><label class="sk-toggleable__label" for="4b149c51-84c7-4717-8a59-635bf56a4231">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(add_indicator=True)</pre></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="36c36b3e-fa83-44fd-994f-8faebbfe0fd2" type="checkbox" ><label class="sk-toggleable__label" for="36c36b3e-fa83-44fd-994f-8faebbfe0fd2">ordinalencoder</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f2cea441ac0></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6619a849-0418-4ecd-b626-d8d06730bbde" type="checkbox" ><label class="sk-toggleable__label" for="6619a849-0418-4ecd-b626-d8d06730bbde">OrdinalEncoder</label><div class="sk-toggleable__content"><pre>OrdinalEncoder(handle_unknown='use_encoded_value', unknown_value=-1)</pre></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c853ec6f-b33c-4cd3-8467-d3f4d8c39f96" type="checkbox" ><label class="sk-toggleable__label" for="c853ec6f-b33c-4cd3-8467-d3f4d8c39f96">HistGradientBoostingRegressor</label><div class="sk-toggleable__content"><pre>HistGradientBoostingRegressor(random_state=0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 192-204

.. code-block:: default

    from sklearn.ensemble import StackingRegressor
    from sklearn.linear_model import RidgeCV

    estimators = [
        ("Random Forest", rf_pipeline),
        ("Lasso", lasso_pipeline),
        ("Gradient Boosting", gbdt_pipeline),
    ]

    stacking_regressor = StackingRegressor(estimators=estimators, final_estimator=RidgeCV())
    stacking_regressor






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-7c123116-4633-465e-b7ed-adbd35e72853 {color: black;background-color: white;}#sk-7c123116-4633-465e-b7ed-adbd35e72853 pre{padding: 0;}#sk-7c123116-4633-465e-b7ed-adbd35e72853 div.sk-toggleable {background-color: white;}#sk-7c123116-4633-465e-b7ed-adbd35e72853 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-7c123116-4633-465e-b7ed-adbd35e72853 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-7c123116-4633-465e-b7ed-adbd35e72853 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-7c123116-4633-465e-b7ed-adbd35e72853 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-7c123116-4633-465e-b7ed-adbd35e72853 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-7c123116-4633-465e-b7ed-adbd35e72853 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-7c123116-4633-465e-b7ed-adbd35e72853 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-7c123116-4633-465e-b7ed-adbd35e72853 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-7c123116-4633-465e-b7ed-adbd35e72853 div.sk-estimator:hover {background-color: #d4ebff;}#sk-7c123116-4633-465e-b7ed-adbd35e72853 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-7c123116-4633-465e-b7ed-adbd35e72853 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-7c123116-4633-465e-b7ed-adbd35e72853 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-7c123116-4633-465e-b7ed-adbd35e72853 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-7c123116-4633-465e-b7ed-adbd35e72853 div.sk-item {z-index: 1;}#sk-7c123116-4633-465e-b7ed-adbd35e72853 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-7c123116-4633-465e-b7ed-adbd35e72853 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-7c123116-4633-465e-b7ed-adbd35e72853 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-7c123116-4633-465e-b7ed-adbd35e72853 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-7c123116-4633-465e-b7ed-adbd35e72853 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-7c123116-4633-465e-b7ed-adbd35e72853 div.sk-parallel-item:only-child::after {width: 0;}#sk-7c123116-4633-465e-b7ed-adbd35e72853 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-7c123116-4633-465e-b7ed-adbd35e72853 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-7c123116-4633-465e-b7ed-adbd35e72853 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-7c123116-4633-465e-b7ed-adbd35e72853 div.sk-container {display: inline-block;position: relative;}</style><div id="sk-7c123116-4633-465e-b7ed-adbd35e72853" class"sk-top-container"><div class="sk-container"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="673f0cd2-3f14-426e-9c9e-b7b39678c536" type="checkbox" ><label class="sk-toggleable__label" for="673f0cd2-3f14-426e-9c9e-b7b39678c536">StackingRegressor</label><div class="sk-toggleable__content"><pre>StackingRegressor(estimators=[('Random Forest',
                                   Pipeline(steps=[('columntransformer',
                                                    ColumnTransformer(transformers=[('simpleimputer',
                                                                                     SimpleImputer(add_indicator=True),
                                                                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f2cea441940>),
                                                                                    ('ordinalencoder',
                                                                                     OrdinalEncoder(handle_unknown='use_encoded_value',
                                                                                                    unknown_value=-1),
                                                                                     <sklearn.compose...
                                                                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f2cea441940>),
                                                                                    ('ordinalencoder',
                                                                                     OrdinalEncoder(handle_unknown='use_encoded_value',
                                                                                                    unknown_value=-1),
                                                                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f2cea441ac0>)])),
                                                   ('histgradientboostingregressor',
                                                    HistGradientBoostingRegressor(random_state=0))]))],
                      final_estimator=RidgeCV(alphas=array([ 0.1,  1. , 10. ])))</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><label>Random Forest</label></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0cc8570a-ecff-48a3-a8f6-09dd61a6be8f" type="checkbox" ><label class="sk-toggleable__label" for="0cc8570a-ecff-48a3-a8f6-09dd61a6be8f">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('simpleimputer',
                                     SimpleImputer(add_indicator=True),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f2cea441940>),
                                    ('ordinalencoder',
                                     OrdinalEncoder(handle_unknown='use_encoded_value',
                                                    unknown_value=-1),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f2cea441ac0>)])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5df72c75-e685-4a4b-9e31-e5e4c45ecbf0" type="checkbox" ><label class="sk-toggleable__label" for="5df72c75-e685-4a4b-9e31-e5e4c45ecbf0">simpleimputer</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f2cea441940></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b4ee9c66-3a16-43de-a9e5-0682c9715f19" type="checkbox" ><label class="sk-toggleable__label" for="b4ee9c66-3a16-43de-a9e5-0682c9715f19">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(add_indicator=True)</pre></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="56799550-2bfe-44e8-8bae-02db00b32209" type="checkbox" ><label class="sk-toggleable__label" for="56799550-2bfe-44e8-8bae-02db00b32209">ordinalencoder</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f2cea441ac0></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8dca1221-1e3f-4789-8878-6847375d5fd6" type="checkbox" ><label class="sk-toggleable__label" for="8dca1221-1e3f-4789-8878-6847375d5fd6">OrdinalEncoder</label><div class="sk-toggleable__content"><pre>OrdinalEncoder(handle_unknown='use_encoded_value', unknown_value=-1)</pre></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3e423351-7ca4-4037-83c8-b3c1754c4d88" type="checkbox" ><label class="sk-toggleable__label" for="3e423351-7ca4-4037-83c8-b3c1754c4d88">RandomForestRegressor</label><div class="sk-toggleable__content"><pre>RandomForestRegressor(random_state=42)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><label>Lasso</label></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1a0ccf02-7703-4290-9aef-045e21a153a8" type="checkbox" ><label class="sk-toggleable__label" for="1a0ccf02-7703-4290-9aef-045e21a153a8">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('pipeline',
                                     Pipeline(steps=[('standardscaler',
                                                      StandardScaler()),
                                                     ('simpleimputer',
                                                      SimpleImputer(add_indicator=True))]),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f2cea441940>),
                                    ('onehotencoder',
                                     OneHotEncoder(handle_unknown='ignore'),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f2cea441ac0>)])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c1a7078f-bd52-44fa-9526-bf535cb77017" type="checkbox" ><label class="sk-toggleable__label" for="c1a7078f-bd52-44fa-9526-bf535cb77017">pipeline</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f2cea441940></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fb113abf-fddf-429a-b7b8-0ac4ca63d56b" type="checkbox" ><label class="sk-toggleable__label" for="fb113abf-fddf-429a-b7b8-0ac4ca63d56b">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4fe524b4-3da5-497b-88bb-ef13487ac2f6" type="checkbox" ><label class="sk-toggleable__label" for="4fe524b4-3da5-497b-88bb-ef13487ac2f6">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(add_indicator=True)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="93066de3-d333-4ad9-901e-19393fba104e" type="checkbox" ><label class="sk-toggleable__label" for="93066de3-d333-4ad9-901e-19393fba104e">onehotencoder</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f2cea441ac0></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1dc4583e-6b76-4249-baf3-0d6422584a74" type="checkbox" ><label class="sk-toggleable__label" for="1dc4583e-6b76-4249-baf3-0d6422584a74">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown='ignore')</pre></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8428ed5c-6f5d-4e0f-9bd9-3d7eac11d753" type="checkbox" ><label class="sk-toggleable__label" for="8428ed5c-6f5d-4e0f-9bd9-3d7eac11d753">LassoCV</label><div class="sk-toggleable__content"><pre>LassoCV()</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><label>Gradient Boosting</label></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="dd909f54-d0c1-4d6e-a12e-87645ea1b5a9" type="checkbox" ><label class="sk-toggleable__label" for="dd909f54-d0c1-4d6e-a12e-87645ea1b5a9">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('simpleimputer',
                                     SimpleImputer(add_indicator=True),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f2cea441940>),
                                    ('ordinalencoder',
                                     OrdinalEncoder(handle_unknown='use_encoded_value',
                                                    unknown_value=-1),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f2cea441ac0>)])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ea48c27c-3b99-4cc2-94fa-f8356cde022a" type="checkbox" ><label class="sk-toggleable__label" for="ea48c27c-3b99-4cc2-94fa-f8356cde022a">simpleimputer</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f2cea441940></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e5ad7941-49f5-4c1b-9845-5c5c4d87d050" type="checkbox" ><label class="sk-toggleable__label" for="e5ad7941-49f5-4c1b-9845-5c5c4d87d050">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(add_indicator=True)</pre></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="37f1e393-d515-4089-8331-fdaba792bd55" type="checkbox" ><label class="sk-toggleable__label" for="37f1e393-d515-4089-8331-fdaba792bd55">ordinalencoder</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f2cea441ac0></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="25810e17-0b1e-415b-acfe-e20ea7a8f3d4" type="checkbox" ><label class="sk-toggleable__label" for="25810e17-0b1e-415b-acfe-e20ea7a8f3d4">OrdinalEncoder</label><div class="sk-toggleable__content"><pre>OrdinalEncoder(handle_unknown='use_encoded_value', unknown_value=-1)</pre></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0989399d-df0e-489d-ac4e-8b86931aafbd" type="checkbox" ><label class="sk-toggleable__label" for="0989399d-df0e-489d-ac4e-8b86931aafbd">HistGradientBoostingRegressor</label><div class="sk-toggleable__content"><pre>HistGradientBoostingRegressor(random_state=0)</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><label>final_estimator</label></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6e41c18d-4e80-4416-bc31-b584c4c17308" type="checkbox" ><label class="sk-toggleable__label" for="6e41c18d-4e80-4416-bc31-b584c4c17308">RidgeCV</label><div class="sk-toggleable__content"><pre>RidgeCV(alphas=array([ 0.1,  1. , 10. ]))</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 205-214

Measure and plot the results
#############################################################################

 Now we can use Ames Housing dataset to make the predictions. We check the
 performance of each individual predictor as well as of the stack of the
 regressors.

 The function ``plot_regression_results`` is used to plot the predicted and
 true targets.

.. GENERATED FROM PYTHON SOURCE LINES 214-279

.. code-block:: default



    import time
    import matplotlib.pyplot as plt
    from sklearn.model_selection import cross_validate, cross_val_predict


    def plot_regression_results(ax, y_true, y_pred, title, scores, elapsed_time):
        """Scatter plot of the predicted vs true targets."""
        ax.plot(
            [y_true.min(), y_true.max()], [y_true.min(), y_true.max()], "--r", linewidth=2
        )
        ax.scatter(y_true, y_pred, alpha=0.2)

        ax.spines["top"].set_visible(False)
        ax.spines["right"].set_visible(False)
        ax.get_xaxis().tick_bottom()
        ax.get_yaxis().tick_left()
        ax.spines["left"].set_position(("outward", 10))
        ax.spines["bottom"].set_position(("outward", 10))
        ax.set_xlim([y_true.min(), y_true.max()])
        ax.set_ylim([y_true.min(), y_true.max()])
        ax.set_xlabel("Measured")
        ax.set_ylabel("Predicted")
        extra = plt.Rectangle(
            (0, 0), 0, 0, fc="w", fill=False, edgecolor="none", linewidth=0
        )
        ax.legend([extra], [scores], loc="upper left")
        title = title + "\n Evaluation in {:.2f} seconds".format(elapsed_time)
        ax.set_title(title)


    fig, axs = plt.subplots(2, 2, figsize=(9, 7))
    axs = np.ravel(axs)

    for ax, (name, est) in zip(
        axs, estimators + [("Stacking Regressor", stacking_regressor)]
    ):
        start_time = time.time()
        score = cross_validate(
            est, X, y, scoring=["r2", "neg_mean_absolute_error"], n_jobs=-1, verbose=0
        )
        elapsed_time = time.time() - start_time

        y_pred = cross_val_predict(est, X, y, n_jobs=-1, verbose=0)

        plot_regression_results(
            ax,
            y,
            y_pred,
            name,
            (r"$R^2={:.2f} \pm {:.2f}$" + "\n" + r"$MAE={:.2f} \pm {:.2f}$").format(
                np.mean(score["test_r2"]),
                np.std(score["test_r2"]),
                -np.mean(score["test_neg_mean_absolute_error"]),
                np.std(score["test_neg_mean_absolute_error"]),
            ),
            elapsed_time,
        )

    plt.suptitle("Single predictors versus stacked predictors")
    plt.tight_layout()
    plt.subplots_adjust(top=0.9)
    plt.show()




.. image-sg:: /auto_examples/ensemble/images/sphx_glr_plot_stack_predictors_001.png
   :alt: Single predictors versus stacked predictors, Random Forest  Evaluation in 2.73 seconds, Lasso  Evaluation in 0.51 seconds, Gradient Boosting  Evaluation in 0.56 seconds, Stacking Regressor  Evaluation in 8.02 seconds
   :srcset: /auto_examples/ensemble/images/sphx_glr_plot_stack_predictors_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 280-283

The stacked regressor will combine the strengths of the different regressors.
However, we also see that training the stacked regressor is much more
computationally expensive.


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  24.116 seconds)


.. _sphx_glr_download_auto_examples_ensemble_plot_stack_predictors.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/ensemble/plot_stack_predictors.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_stack_predictors.py <plot_stack_predictors.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_stack_predictors.ipynb <plot_stack_predictors.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
