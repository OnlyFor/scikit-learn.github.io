
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/ensemble/plot_stack_predictors.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_ensemble_plot_stack_predictors.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_ensemble_plot_stack_predictors.py:


=================================
Combine predictors using stacking
=================================

.. currentmodule:: sklearn

Stacking refers to a method to blend estimators. In this strategy, some
estimators are individually fitted on some training data while a final
estimator is trained using the stacked predictions of these base estimators.

In this example, we illustrate the use case in which different regressors are
stacked together and a final linear penalized regressor is used to output the
prediction. We compare the performance of each individual regressor with the
stacking strategy. Stacking slightly improves the overall performance.

.. GENERATED FROM PYTHON SOURCE LINES 18-29

.. code-block:: default


    # Authors: Guillaume Lemaitre <g.lemaitre58@gmail.com>
    #          Maria Telenczuk    <https://github.com/maikia>
    # License: BSD 3 clause

    print(__doc__)

    from sklearn import set_config

    set_config(display="diagram")








.. GENERATED FROM PYTHON SOURCE LINES 30-46

Download the dataset
#############################################################################

 We will use `Ames Housing`_ dataset which was first compiled by Dean De Cock
 and became better known after it was used in Kaggle challenge. It is a set
 of 1460 residential homes in Ames, Iowa, each described by 80 features. We
 will use it to predict the final logarithmic price of the houses. In this
 example we will use only 20 most interesting features chosen using
 GradientBoostingRegressor() and limit number of entries (here we won't go
 into the details on how to select the most interesting features).

 The Ames housing dataset is not shipped with scikit-learn and therefore we
 will fetch it from `OpenML`_.

 .. _`Ames Housing`: http://jse.amstat.org/v19n3/decock.pdf
 .. _`OpenML`: https://www.openml.org/d/42165

.. GENERATED FROM PYTHON SOURCE LINES 46-92

.. code-block:: default


    import numpy as np

    from sklearn.datasets import fetch_openml
    from sklearn.utils import shuffle


    def load_ames_housing():
        df = fetch_openml(name="house_prices", as_frame=True)
        X = df.data
        y = df.target

        features = [
            "YrSold",
            "HeatingQC",
            "Street",
            "YearRemodAdd",
            "Heating",
            "MasVnrType",
            "BsmtUnfSF",
            "Foundation",
            "MasVnrArea",
            "MSSubClass",
            "ExterQual",
            "Condition2",
            "GarageCars",
            "GarageType",
            "OverallQual",
            "TotalBsmtSF",
            "BsmtFinSF1",
            "HouseStyle",
            "MiscFeature",
            "MoSold",
        ]

        X = X[features]
        X, y = shuffle(X, y, random_state=0)

        X = X[:600]
        y = y[:600]
        return X, np.log(y)


    X, y = load_ames_housing()









.. GENERATED FROM PYTHON SOURCE LINES 93-99

Make pipeline to preprocess the data
#############################################################################

 Before we can use Ames dataset we still need to do some preprocessing.
 First, we will select the categorical and numerical columns of the dataset to
 construct the first step of the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 99-106

.. code-block:: default


    from sklearn.compose import make_column_selector

    cat_selector = make_column_selector(dtype_include=object)
    num_selector = make_column_selector(dtype_include=np.number)
    cat_selector(X)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    ['HeatingQC', 'Street', 'Heating', 'MasVnrType', 'Foundation', 'ExterQual', 'Condition2', 'GarageType', 'HouseStyle', 'MiscFeature']



.. GENERATED FROM PYTHON SOURCE LINES 107-109

.. code-block:: default

    num_selector(X)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    ['YrSold', 'YearRemodAdd', 'BsmtUnfSF', 'MasVnrArea', 'MSSubClass', 'GarageCars', 'OverallQual', 'TotalBsmtSF', 'BsmtFinSF1', 'MoSold']



.. GENERATED FROM PYTHON SOURCE LINES 110-119

Then, we will need to design preprocessing pipelines which depends on the
ending regressor. If the ending regressor is a linear model, one needs to
one-hot encode the categories. If the ending regressor is a tree-based model
an ordinal encoder will be sufficient. Besides, numerical values need to be
standardized for a linear model while the raw numerical data can be treated
as is by a tree-based model. However, both models need an imputer to
handle missing values.

We will first design the pipeline required for the tree-based models.

.. GENERATED FROM PYTHON SOURCE LINES 119-135

.. code-block:: default


    from sklearn.compose import make_column_transformer
    from sklearn.impute import SimpleImputer
    from sklearn.pipeline import make_pipeline
    from sklearn.preprocessing import OrdinalEncoder

    cat_tree_processor = OrdinalEncoder(
        handle_unknown="use_encoded_value", unknown_value=-1
    )
    num_tree_processor = SimpleImputer(strategy="mean", add_indicator=True)

    tree_preprocessor = make_column_transformer(
        (num_tree_processor, num_selector), (cat_tree_processor, cat_selector)
    )
    tree_preprocessor






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-407a5205-40d3-4745-926a-a17d9f1023ce {color: black;background-color: white;}#sk-407a5205-40d3-4745-926a-a17d9f1023ce pre{padding: 0;}#sk-407a5205-40d3-4745-926a-a17d9f1023ce div.sk-toggleable {background-color: white;}#sk-407a5205-40d3-4745-926a-a17d9f1023ce label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-407a5205-40d3-4745-926a-a17d9f1023ce div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-407a5205-40d3-4745-926a-a17d9f1023ce div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-407a5205-40d3-4745-926a-a17d9f1023ce input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-407a5205-40d3-4745-926a-a17d9f1023ce div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-407a5205-40d3-4745-926a-a17d9f1023ce div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-407a5205-40d3-4745-926a-a17d9f1023ce input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-407a5205-40d3-4745-926a-a17d9f1023ce div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-407a5205-40d3-4745-926a-a17d9f1023ce div.sk-estimator:hover {background-color: #d4ebff;}#sk-407a5205-40d3-4745-926a-a17d9f1023ce div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-407a5205-40d3-4745-926a-a17d9f1023ce div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-407a5205-40d3-4745-926a-a17d9f1023ce div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-407a5205-40d3-4745-926a-a17d9f1023ce div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-407a5205-40d3-4745-926a-a17d9f1023ce div.sk-item {z-index: 1;}#sk-407a5205-40d3-4745-926a-a17d9f1023ce div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-407a5205-40d3-4745-926a-a17d9f1023ce div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-407a5205-40d3-4745-926a-a17d9f1023ce div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-407a5205-40d3-4745-926a-a17d9f1023ce div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-407a5205-40d3-4745-926a-a17d9f1023ce div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-407a5205-40d3-4745-926a-a17d9f1023ce div.sk-parallel-item:only-child::after {width: 0;}#sk-407a5205-40d3-4745-926a-a17d9f1023ce div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-407a5205-40d3-4745-926a-a17d9f1023ce div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-407a5205-40d3-4745-926a-a17d9f1023ce div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-407a5205-40d3-4745-926a-a17d9f1023ce div.sk-container {display: inline-block;position: relative;}</style><div id="sk-407a5205-40d3-4745-926a-a17d9f1023ce" class"sk-top-container"><div class="sk-container"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5217d4f3-7b52-4615-9375-f8e781ea1371" type="checkbox" ><label class="sk-toggleable__label" for="5217d4f3-7b52-4615-9375-f8e781ea1371">ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('simpleimputer',
                                     SimpleImputer(add_indicator=True),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f4455401130>),
                                    ('ordinalencoder',
                                     OrdinalEncoder(handle_unknown='use_encoded_value',
                                                    unknown_value=-1),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f4455401430>)])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9e1fb1c9-323a-4aae-816a-0894d83a77bc" type="checkbox" ><label class="sk-toggleable__label" for="9e1fb1c9-323a-4aae-816a-0894d83a77bc">simpleimputer</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f4455401130></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b7f08b78-d86b-49ba-91db-dfa4a5bdd20b" type="checkbox" ><label class="sk-toggleable__label" for="b7f08b78-d86b-49ba-91db-dfa4a5bdd20b">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(add_indicator=True)</pre></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="309ac315-e04c-4921-9710-631d84ceef46" type="checkbox" ><label class="sk-toggleable__label" for="309ac315-e04c-4921-9710-631d84ceef46">ordinalencoder</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f4455401430></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="50459940-0a55-4045-a2ab-6b4a5a161a5b" type="checkbox" ><label class="sk-toggleable__label" for="50459940-0a55-4045-a2ab-6b4a5a161a5b">OrdinalEncoder</label><div class="sk-toggleable__content"><pre>OrdinalEncoder(handle_unknown='use_encoded_value', unknown_value=-1)</pre></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 136-138

Then, we will now define the preprocessor used when the ending regressor
is a linear model.

.. GENERATED FROM PYTHON SOURCE LINES 138-152

.. code-block:: default


    from sklearn.preprocessing import OneHotEncoder
    from sklearn.preprocessing import StandardScaler

    cat_linear_processor = OneHotEncoder(handle_unknown="ignore")
    num_linear_processor = make_pipeline(
        StandardScaler(), SimpleImputer(strategy="mean", add_indicator=True)
    )

    linear_preprocessor = make_column_transformer(
        (num_linear_processor, num_selector), (cat_linear_processor, cat_selector)
    )
    linear_preprocessor






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-c2cbb6ca-1e00-468b-82a9-be09afe0dba7 {color: black;background-color: white;}#sk-c2cbb6ca-1e00-468b-82a9-be09afe0dba7 pre{padding: 0;}#sk-c2cbb6ca-1e00-468b-82a9-be09afe0dba7 div.sk-toggleable {background-color: white;}#sk-c2cbb6ca-1e00-468b-82a9-be09afe0dba7 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-c2cbb6ca-1e00-468b-82a9-be09afe0dba7 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-c2cbb6ca-1e00-468b-82a9-be09afe0dba7 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-c2cbb6ca-1e00-468b-82a9-be09afe0dba7 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-c2cbb6ca-1e00-468b-82a9-be09afe0dba7 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-c2cbb6ca-1e00-468b-82a9-be09afe0dba7 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-c2cbb6ca-1e00-468b-82a9-be09afe0dba7 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-c2cbb6ca-1e00-468b-82a9-be09afe0dba7 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-c2cbb6ca-1e00-468b-82a9-be09afe0dba7 div.sk-estimator:hover {background-color: #d4ebff;}#sk-c2cbb6ca-1e00-468b-82a9-be09afe0dba7 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-c2cbb6ca-1e00-468b-82a9-be09afe0dba7 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-c2cbb6ca-1e00-468b-82a9-be09afe0dba7 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-c2cbb6ca-1e00-468b-82a9-be09afe0dba7 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-c2cbb6ca-1e00-468b-82a9-be09afe0dba7 div.sk-item {z-index: 1;}#sk-c2cbb6ca-1e00-468b-82a9-be09afe0dba7 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-c2cbb6ca-1e00-468b-82a9-be09afe0dba7 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-c2cbb6ca-1e00-468b-82a9-be09afe0dba7 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-c2cbb6ca-1e00-468b-82a9-be09afe0dba7 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-c2cbb6ca-1e00-468b-82a9-be09afe0dba7 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-c2cbb6ca-1e00-468b-82a9-be09afe0dba7 div.sk-parallel-item:only-child::after {width: 0;}#sk-c2cbb6ca-1e00-468b-82a9-be09afe0dba7 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-c2cbb6ca-1e00-468b-82a9-be09afe0dba7 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-c2cbb6ca-1e00-468b-82a9-be09afe0dba7 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-c2cbb6ca-1e00-468b-82a9-be09afe0dba7 div.sk-container {display: inline-block;position: relative;}</style><div id="sk-c2cbb6ca-1e00-468b-82a9-be09afe0dba7" class"sk-top-container"><div class="sk-container"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d158daeb-65db-42b7-9bbe-fbd2fdea9b67" type="checkbox" ><label class="sk-toggleable__label" for="d158daeb-65db-42b7-9bbe-fbd2fdea9b67">ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('pipeline',
                                     Pipeline(steps=[('standardscaler',
                                                      StandardScaler()),
                                                     ('simpleimputer',
                                                      SimpleImputer(add_indicator=True))]),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f4455401130>),
                                    ('onehotencoder',
                                     OneHotEncoder(handle_unknown='ignore'),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f4455401430>)])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="66ca4da0-a4d5-4f8d-b511-f2c84b3a4849" type="checkbox" ><label class="sk-toggleable__label" for="66ca4da0-a4d5-4f8d-b511-f2c84b3a4849">pipeline</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f4455401130></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e5d7fdbd-b8b6-4c01-b8e4-3c413b062c39" type="checkbox" ><label class="sk-toggleable__label" for="e5d7fdbd-b8b6-4c01-b8e4-3c413b062c39">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f55b4f41-32da-497f-a0ed-68bdfccd983a" type="checkbox" ><label class="sk-toggleable__label" for="f55b4f41-32da-497f-a0ed-68bdfccd983a">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(add_indicator=True)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="78cddce3-ffbc-4496-a696-be1d820c26b3" type="checkbox" ><label class="sk-toggleable__label" for="78cddce3-ffbc-4496-a696-be1d820c26b3">onehotencoder</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f4455401430></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8965055a-3b2d-44dd-815f-36cd5c395ec9" type="checkbox" ><label class="sk-toggleable__label" for="8965055a-3b2d-44dd-815f-36cd5c395ec9">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown='ignore')</pre></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 153-171

Stack of predictors on a single data set
#############################################################################

 It is sometimes tedious to find the model which will best perform on a given
 dataset. Stacking provide an alternative by combining the outputs of several
 learners, without the need to choose a model specifically. The performance of
 stacking is usually close to the best model and sometimes it can outperform
 the prediction performance of each individual model.

 Here, we combine 3 learners (linear and non-linear) and use a ridge regressor
 to combine their outputs together.

 .. note::
    Although we will make new pipelines with the processors which we wrote in
    the previous section for the 3 learners, the final estimator
    :class:`~sklearn.linear_model.RidgeCV()` does not need preprocessing of
    the data as it will be fed with the already preprocessed output from the 3
    learners.

.. GENERATED FROM PYTHON SOURCE LINES 171-177

.. code-block:: default


    from sklearn.linear_model import LassoCV

    lasso_pipeline = make_pipeline(linear_preprocessor, LassoCV())
    lasso_pipeline






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-d27770fb-386c-4a00-994b-48f3271de406 {color: black;background-color: white;}#sk-d27770fb-386c-4a00-994b-48f3271de406 pre{padding: 0;}#sk-d27770fb-386c-4a00-994b-48f3271de406 div.sk-toggleable {background-color: white;}#sk-d27770fb-386c-4a00-994b-48f3271de406 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-d27770fb-386c-4a00-994b-48f3271de406 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-d27770fb-386c-4a00-994b-48f3271de406 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-d27770fb-386c-4a00-994b-48f3271de406 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-d27770fb-386c-4a00-994b-48f3271de406 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-d27770fb-386c-4a00-994b-48f3271de406 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-d27770fb-386c-4a00-994b-48f3271de406 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-d27770fb-386c-4a00-994b-48f3271de406 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-d27770fb-386c-4a00-994b-48f3271de406 div.sk-estimator:hover {background-color: #d4ebff;}#sk-d27770fb-386c-4a00-994b-48f3271de406 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-d27770fb-386c-4a00-994b-48f3271de406 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-d27770fb-386c-4a00-994b-48f3271de406 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-d27770fb-386c-4a00-994b-48f3271de406 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-d27770fb-386c-4a00-994b-48f3271de406 div.sk-item {z-index: 1;}#sk-d27770fb-386c-4a00-994b-48f3271de406 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-d27770fb-386c-4a00-994b-48f3271de406 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-d27770fb-386c-4a00-994b-48f3271de406 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-d27770fb-386c-4a00-994b-48f3271de406 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-d27770fb-386c-4a00-994b-48f3271de406 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-d27770fb-386c-4a00-994b-48f3271de406 div.sk-parallel-item:only-child::after {width: 0;}#sk-d27770fb-386c-4a00-994b-48f3271de406 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-d27770fb-386c-4a00-994b-48f3271de406 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-d27770fb-386c-4a00-994b-48f3271de406 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-d27770fb-386c-4a00-994b-48f3271de406 div.sk-container {display: inline-block;position: relative;}</style><div id="sk-d27770fb-386c-4a00-994b-48f3271de406" class"sk-top-container"><div class="sk-container"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="eff3249d-f50c-4f95-a424-1f436c73bed9" type="checkbox" ><label class="sk-toggleable__label" for="eff3249d-f50c-4f95-a424-1f436c73bed9">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('columntransformer',
                     ColumnTransformer(transformers=[('pipeline',
                                                      Pipeline(steps=[('standardscaler',
                                                                       StandardScaler()),
                                                                      ('simpleimputer',
                                                                       SimpleImputer(add_indicator=True))]),
                                                      <sklearn.compose._column_transformer.make_column_selector object at 0x7f4455401130>),
                                                     ('onehotencoder',
                                                      OneHotEncoder(handle_unknown='ignore'),
                                                      <sklearn.compose._column_transformer.make_column_selector object at 0x7f4455401430>)])),
                    ('lassocv', LassoCV())])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="dd64a34e-64a9-463a-afcf-d885906cabd1" type="checkbox" ><label class="sk-toggleable__label" for="dd64a34e-64a9-463a-afcf-d885906cabd1">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('pipeline',
                                     Pipeline(steps=[('standardscaler',
                                                      StandardScaler()),
                                                     ('simpleimputer',
                                                      SimpleImputer(add_indicator=True))]),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f4455401130>),
                                    ('onehotencoder',
                                     OneHotEncoder(handle_unknown='ignore'),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f4455401430>)])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a7355c3c-0ba8-4133-af61-7974eefdf12b" type="checkbox" ><label class="sk-toggleable__label" for="a7355c3c-0ba8-4133-af61-7974eefdf12b">pipeline</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f4455401130></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bbd074a5-d06d-4eaf-af35-cb7784798163" type="checkbox" ><label class="sk-toggleable__label" for="bbd074a5-d06d-4eaf-af35-cb7784798163">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b9fda776-a2ef-4b60-a503-a6303f07e8b0" type="checkbox" ><label class="sk-toggleable__label" for="b9fda776-a2ef-4b60-a503-a6303f07e8b0">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(add_indicator=True)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b7824653-bc06-41eb-ae14-fa111ce507e6" type="checkbox" ><label class="sk-toggleable__label" for="b7824653-bc06-41eb-ae14-fa111ce507e6">onehotencoder</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f4455401430></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ca24ee30-32eb-463d-b4fb-1b7a46a18b0b" type="checkbox" ><label class="sk-toggleable__label" for="ca24ee30-32eb-463d-b4fb-1b7a46a18b0b">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown='ignore')</pre></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="828bd5e6-3863-472c-b41e-517af2050ed6" type="checkbox" ><label class="sk-toggleable__label" for="828bd5e6-3863-472c-b41e-517af2050ed6">LassoCV</label><div class="sk-toggleable__content"><pre>LassoCV()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 178-183

.. code-block:: default

    from sklearn.ensemble import RandomForestRegressor

    rf_pipeline = make_pipeline(tree_preprocessor, RandomForestRegressor(random_state=42))
    rf_pipeline






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-b01aeec9-f115-4c44-86a2-36eac33ddb45 {color: black;background-color: white;}#sk-b01aeec9-f115-4c44-86a2-36eac33ddb45 pre{padding: 0;}#sk-b01aeec9-f115-4c44-86a2-36eac33ddb45 div.sk-toggleable {background-color: white;}#sk-b01aeec9-f115-4c44-86a2-36eac33ddb45 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-b01aeec9-f115-4c44-86a2-36eac33ddb45 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-b01aeec9-f115-4c44-86a2-36eac33ddb45 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-b01aeec9-f115-4c44-86a2-36eac33ddb45 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-b01aeec9-f115-4c44-86a2-36eac33ddb45 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b01aeec9-f115-4c44-86a2-36eac33ddb45 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b01aeec9-f115-4c44-86a2-36eac33ddb45 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-b01aeec9-f115-4c44-86a2-36eac33ddb45 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-b01aeec9-f115-4c44-86a2-36eac33ddb45 div.sk-estimator:hover {background-color: #d4ebff;}#sk-b01aeec9-f115-4c44-86a2-36eac33ddb45 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-b01aeec9-f115-4c44-86a2-36eac33ddb45 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-b01aeec9-f115-4c44-86a2-36eac33ddb45 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b01aeec9-f115-4c44-86a2-36eac33ddb45 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-b01aeec9-f115-4c44-86a2-36eac33ddb45 div.sk-item {z-index: 1;}#sk-b01aeec9-f115-4c44-86a2-36eac33ddb45 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-b01aeec9-f115-4c44-86a2-36eac33ddb45 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b01aeec9-f115-4c44-86a2-36eac33ddb45 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-b01aeec9-f115-4c44-86a2-36eac33ddb45 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-b01aeec9-f115-4c44-86a2-36eac33ddb45 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-b01aeec9-f115-4c44-86a2-36eac33ddb45 div.sk-parallel-item:only-child::after {width: 0;}#sk-b01aeec9-f115-4c44-86a2-36eac33ddb45 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-b01aeec9-f115-4c44-86a2-36eac33ddb45 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-b01aeec9-f115-4c44-86a2-36eac33ddb45 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-b01aeec9-f115-4c44-86a2-36eac33ddb45 div.sk-container {display: inline-block;position: relative;}</style><div id="sk-b01aeec9-f115-4c44-86a2-36eac33ddb45" class"sk-top-container"><div class="sk-container"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6e9deeee-4a59-4fbb-8d17-3eb173a95975" type="checkbox" ><label class="sk-toggleable__label" for="6e9deeee-4a59-4fbb-8d17-3eb173a95975">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('columntransformer',
                     ColumnTransformer(transformers=[('simpleimputer',
                                                      SimpleImputer(add_indicator=True),
                                                      <sklearn.compose._column_transformer.make_column_selector object at 0x7f4455401130>),
                                                     ('ordinalencoder',
                                                      OrdinalEncoder(handle_unknown='use_encoded_value',
                                                                     unknown_value=-1),
                                                      <sklearn.compose._column_transformer.make_column_selector object at 0x7f4455401430>)])),
                    ('randomforestregressor',
                     RandomForestRegressor(random_state=42))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5fbf99e7-21b3-4c0d-8e30-5747919b304b" type="checkbox" ><label class="sk-toggleable__label" for="5fbf99e7-21b3-4c0d-8e30-5747919b304b">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('simpleimputer',
                                     SimpleImputer(add_indicator=True),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f4455401130>),
                                    ('ordinalencoder',
                                     OrdinalEncoder(handle_unknown='use_encoded_value',
                                                    unknown_value=-1),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f4455401430>)])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c25f5965-e898-4b3b-943a-b435883369c7" type="checkbox" ><label class="sk-toggleable__label" for="c25f5965-e898-4b3b-943a-b435883369c7">simpleimputer</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f4455401130></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1c939623-9e33-4ca8-b2a9-cc5066a4c5fe" type="checkbox" ><label class="sk-toggleable__label" for="1c939623-9e33-4ca8-b2a9-cc5066a4c5fe">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(add_indicator=True)</pre></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3a8d03c2-4564-4447-a672-2c7260d9e3d3" type="checkbox" ><label class="sk-toggleable__label" for="3a8d03c2-4564-4447-a672-2c7260d9e3d3">ordinalencoder</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f4455401430></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ffb66706-709f-4c40-84e1-be8c4617c48f" type="checkbox" ><label class="sk-toggleable__label" for="ffb66706-709f-4c40-84e1-be8c4617c48f">OrdinalEncoder</label><div class="sk-toggleable__content"><pre>OrdinalEncoder(handle_unknown='use_encoded_value', unknown_value=-1)</pre></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b0980e06-5374-4ca8-bab4-116fd46b49e4" type="checkbox" ><label class="sk-toggleable__label" for="b0980e06-5374-4ca8-bab4-116fd46b49e4">RandomForestRegressor</label><div class="sk-toggleable__content"><pre>RandomForestRegressor(random_state=42)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 184-191

.. code-block:: default

    from sklearn.ensemble import HistGradientBoostingRegressor

    gbdt_pipeline = make_pipeline(
        tree_preprocessor, HistGradientBoostingRegressor(random_state=0)
    )
    gbdt_pipeline






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-b3b969e4-fb1c-42f7-81ac-d118db322406 {color: black;background-color: white;}#sk-b3b969e4-fb1c-42f7-81ac-d118db322406 pre{padding: 0;}#sk-b3b969e4-fb1c-42f7-81ac-d118db322406 div.sk-toggleable {background-color: white;}#sk-b3b969e4-fb1c-42f7-81ac-d118db322406 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-b3b969e4-fb1c-42f7-81ac-d118db322406 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-b3b969e4-fb1c-42f7-81ac-d118db322406 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-b3b969e4-fb1c-42f7-81ac-d118db322406 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-b3b969e4-fb1c-42f7-81ac-d118db322406 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b3b969e4-fb1c-42f7-81ac-d118db322406 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b3b969e4-fb1c-42f7-81ac-d118db322406 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-b3b969e4-fb1c-42f7-81ac-d118db322406 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-b3b969e4-fb1c-42f7-81ac-d118db322406 div.sk-estimator:hover {background-color: #d4ebff;}#sk-b3b969e4-fb1c-42f7-81ac-d118db322406 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-b3b969e4-fb1c-42f7-81ac-d118db322406 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-b3b969e4-fb1c-42f7-81ac-d118db322406 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b3b969e4-fb1c-42f7-81ac-d118db322406 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-b3b969e4-fb1c-42f7-81ac-d118db322406 div.sk-item {z-index: 1;}#sk-b3b969e4-fb1c-42f7-81ac-d118db322406 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-b3b969e4-fb1c-42f7-81ac-d118db322406 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b3b969e4-fb1c-42f7-81ac-d118db322406 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-b3b969e4-fb1c-42f7-81ac-d118db322406 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-b3b969e4-fb1c-42f7-81ac-d118db322406 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-b3b969e4-fb1c-42f7-81ac-d118db322406 div.sk-parallel-item:only-child::after {width: 0;}#sk-b3b969e4-fb1c-42f7-81ac-d118db322406 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-b3b969e4-fb1c-42f7-81ac-d118db322406 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-b3b969e4-fb1c-42f7-81ac-d118db322406 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-b3b969e4-fb1c-42f7-81ac-d118db322406 div.sk-container {display: inline-block;position: relative;}</style><div id="sk-b3b969e4-fb1c-42f7-81ac-d118db322406" class"sk-top-container"><div class="sk-container"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0863dd0e-7a77-425a-bb41-cac2b84ac696" type="checkbox" ><label class="sk-toggleable__label" for="0863dd0e-7a77-425a-bb41-cac2b84ac696">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('columntransformer',
                     ColumnTransformer(transformers=[('simpleimputer',
                                                      SimpleImputer(add_indicator=True),
                                                      <sklearn.compose._column_transformer.make_column_selector object at 0x7f4455401130>),
                                                     ('ordinalencoder',
                                                      OrdinalEncoder(handle_unknown='use_encoded_value',
                                                                     unknown_value=-1),
                                                      <sklearn.compose._column_transformer.make_column_selector object at 0x7f4455401430>)])),
                    ('histgradientboostingregressor',
                     HistGradientBoostingRegressor(random_state=0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c410a19a-5797-4299-b97a-36f3581a6680" type="checkbox" ><label class="sk-toggleable__label" for="c410a19a-5797-4299-b97a-36f3581a6680">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('simpleimputer',
                                     SimpleImputer(add_indicator=True),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f4455401130>),
                                    ('ordinalencoder',
                                     OrdinalEncoder(handle_unknown='use_encoded_value',
                                                    unknown_value=-1),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f4455401430>)])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f2f8ac00-64b0-4970-8172-7d1a83218c76" type="checkbox" ><label class="sk-toggleable__label" for="f2f8ac00-64b0-4970-8172-7d1a83218c76">simpleimputer</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f4455401130></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="77b55681-f036-489e-b15f-2ffee004456d" type="checkbox" ><label class="sk-toggleable__label" for="77b55681-f036-489e-b15f-2ffee004456d">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(add_indicator=True)</pre></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cbf435ad-84fe-4aa3-9c92-dadad7ea6cf3" type="checkbox" ><label class="sk-toggleable__label" for="cbf435ad-84fe-4aa3-9c92-dadad7ea6cf3">ordinalencoder</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f4455401430></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="74c72055-9469-4c33-8c66-e952ff28510c" type="checkbox" ><label class="sk-toggleable__label" for="74c72055-9469-4c33-8c66-e952ff28510c">OrdinalEncoder</label><div class="sk-toggleable__content"><pre>OrdinalEncoder(handle_unknown='use_encoded_value', unknown_value=-1)</pre></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d6461310-4910-40ce-a163-f610aa6e3e3d" type="checkbox" ><label class="sk-toggleable__label" for="d6461310-4910-40ce-a163-f610aa6e3e3d">HistGradientBoostingRegressor</label><div class="sk-toggleable__content"><pre>HistGradientBoostingRegressor(random_state=0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 192-204

.. code-block:: default

    from sklearn.ensemble import StackingRegressor
    from sklearn.linear_model import RidgeCV

    estimators = [
        ("Random Forest", rf_pipeline),
        ("Lasso", lasso_pipeline),
        ("Gradient Boosting", gbdt_pipeline),
    ]

    stacking_regressor = StackingRegressor(estimators=estimators, final_estimator=RidgeCV())
    stacking_regressor






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-d801de18-be16-484a-a295-73e72c90bbf8 {color: black;background-color: white;}#sk-d801de18-be16-484a-a295-73e72c90bbf8 pre{padding: 0;}#sk-d801de18-be16-484a-a295-73e72c90bbf8 div.sk-toggleable {background-color: white;}#sk-d801de18-be16-484a-a295-73e72c90bbf8 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-d801de18-be16-484a-a295-73e72c90bbf8 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-d801de18-be16-484a-a295-73e72c90bbf8 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-d801de18-be16-484a-a295-73e72c90bbf8 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-d801de18-be16-484a-a295-73e72c90bbf8 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-d801de18-be16-484a-a295-73e72c90bbf8 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-d801de18-be16-484a-a295-73e72c90bbf8 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-d801de18-be16-484a-a295-73e72c90bbf8 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-d801de18-be16-484a-a295-73e72c90bbf8 div.sk-estimator:hover {background-color: #d4ebff;}#sk-d801de18-be16-484a-a295-73e72c90bbf8 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-d801de18-be16-484a-a295-73e72c90bbf8 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-d801de18-be16-484a-a295-73e72c90bbf8 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-d801de18-be16-484a-a295-73e72c90bbf8 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-d801de18-be16-484a-a295-73e72c90bbf8 div.sk-item {z-index: 1;}#sk-d801de18-be16-484a-a295-73e72c90bbf8 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-d801de18-be16-484a-a295-73e72c90bbf8 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-d801de18-be16-484a-a295-73e72c90bbf8 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-d801de18-be16-484a-a295-73e72c90bbf8 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-d801de18-be16-484a-a295-73e72c90bbf8 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-d801de18-be16-484a-a295-73e72c90bbf8 div.sk-parallel-item:only-child::after {width: 0;}#sk-d801de18-be16-484a-a295-73e72c90bbf8 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-d801de18-be16-484a-a295-73e72c90bbf8 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-d801de18-be16-484a-a295-73e72c90bbf8 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-d801de18-be16-484a-a295-73e72c90bbf8 div.sk-container {display: inline-block;position: relative;}</style><div id="sk-d801de18-be16-484a-a295-73e72c90bbf8" class"sk-top-container"><div class="sk-container"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4b4cfa77-7399-4752-82bf-677d1f491bac" type="checkbox" ><label class="sk-toggleable__label" for="4b4cfa77-7399-4752-82bf-677d1f491bac">StackingRegressor</label><div class="sk-toggleable__content"><pre>StackingRegressor(estimators=[('Random Forest',
                                   Pipeline(steps=[('columntransformer',
                                                    ColumnTransformer(transformers=[('simpleimputer',
                                                                                     SimpleImputer(add_indicator=True),
                                                                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f4455401130>),
                                                                                    ('ordinalencoder',
                                                                                     OrdinalEncoder(handle_unknown='use_encoded_value',
                                                                                                    unknown_value=-1),
                                                                                     <sklearn.compose...
                                                                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f4455401130>),
                                                                                    ('ordinalencoder',
                                                                                     OrdinalEncoder(handle_unknown='use_encoded_value',
                                                                                                    unknown_value=-1),
                                                                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f4455401430>)])),
                                                   ('histgradientboostingregressor',
                                                    HistGradientBoostingRegressor(random_state=0))]))],
                      final_estimator=RidgeCV(alphas=array([ 0.1,  1. , 10. ])))</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><label>Random Forest</label></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cf5bd244-a1e2-4824-9b6c-639f9f726d8c" type="checkbox" ><label class="sk-toggleable__label" for="cf5bd244-a1e2-4824-9b6c-639f9f726d8c">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('simpleimputer',
                                     SimpleImputer(add_indicator=True),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f4455401130>),
                                    ('ordinalencoder',
                                     OrdinalEncoder(handle_unknown='use_encoded_value',
                                                    unknown_value=-1),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f4455401430>)])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="45afc23c-8412-4b9e-b72e-8cf92a9892ee" type="checkbox" ><label class="sk-toggleable__label" for="45afc23c-8412-4b9e-b72e-8cf92a9892ee">simpleimputer</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f4455401130></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="82bbe67e-2ed0-4c9f-a653-4beec4ea1681" type="checkbox" ><label class="sk-toggleable__label" for="82bbe67e-2ed0-4c9f-a653-4beec4ea1681">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(add_indicator=True)</pre></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="68a6160b-c523-4cdf-bd64-85cbc6e5b7a3" type="checkbox" ><label class="sk-toggleable__label" for="68a6160b-c523-4cdf-bd64-85cbc6e5b7a3">ordinalencoder</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f4455401430></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a4040a85-875a-4699-ae7b-7685e80c6467" type="checkbox" ><label class="sk-toggleable__label" for="a4040a85-875a-4699-ae7b-7685e80c6467">OrdinalEncoder</label><div class="sk-toggleable__content"><pre>OrdinalEncoder(handle_unknown='use_encoded_value', unknown_value=-1)</pre></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="680ab2ab-2d9d-4eea-b42f-2c4d7605a3d8" type="checkbox" ><label class="sk-toggleable__label" for="680ab2ab-2d9d-4eea-b42f-2c4d7605a3d8">RandomForestRegressor</label><div class="sk-toggleable__content"><pre>RandomForestRegressor(random_state=42)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><label>Lasso</label></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="be5b59d1-953c-4a44-aa4b-5ae8fb68c5e4" type="checkbox" ><label class="sk-toggleable__label" for="be5b59d1-953c-4a44-aa4b-5ae8fb68c5e4">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('pipeline',
                                     Pipeline(steps=[('standardscaler',
                                                      StandardScaler()),
                                                     ('simpleimputer',
                                                      SimpleImputer(add_indicator=True))]),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f4455401130>),
                                    ('onehotencoder',
                                     OneHotEncoder(handle_unknown='ignore'),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f4455401430>)])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b747051d-3829-4957-8c69-ed29e7ecbee7" type="checkbox" ><label class="sk-toggleable__label" for="b747051d-3829-4957-8c69-ed29e7ecbee7">pipeline</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f4455401130></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="13d2e111-b3ee-44e9-8793-da8bdc38d806" type="checkbox" ><label class="sk-toggleable__label" for="13d2e111-b3ee-44e9-8793-da8bdc38d806">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a9a2353a-a877-4bb2-91da-8c81bfddc4f2" type="checkbox" ><label class="sk-toggleable__label" for="a9a2353a-a877-4bb2-91da-8c81bfddc4f2">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(add_indicator=True)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="705f8bd8-c60f-4f73-aa48-940d47f7eb2c" type="checkbox" ><label class="sk-toggleable__label" for="705f8bd8-c60f-4f73-aa48-940d47f7eb2c">onehotencoder</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f4455401430></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ef6830ff-4afa-427b-a4f2-ae00bbbb62b7" type="checkbox" ><label class="sk-toggleable__label" for="ef6830ff-4afa-427b-a4f2-ae00bbbb62b7">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown='ignore')</pre></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="355dd809-ecac-49cf-bca4-f7b4088e88b4" type="checkbox" ><label class="sk-toggleable__label" for="355dd809-ecac-49cf-bca4-f7b4088e88b4">LassoCV</label><div class="sk-toggleable__content"><pre>LassoCV()</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><label>Gradient Boosting</label></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5afd0756-9c14-420e-bf51-319a64de1861" type="checkbox" ><label class="sk-toggleable__label" for="5afd0756-9c14-420e-bf51-319a64de1861">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('simpleimputer',
                                     SimpleImputer(add_indicator=True),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f4455401130>),
                                    ('ordinalencoder',
                                     OrdinalEncoder(handle_unknown='use_encoded_value',
                                                    unknown_value=-1),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f4455401430>)])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="01fdc5a5-75b6-4335-8727-5edf61106be4" type="checkbox" ><label class="sk-toggleable__label" for="01fdc5a5-75b6-4335-8727-5edf61106be4">simpleimputer</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f4455401130></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="256c03fb-3de9-469d-b9b6-6a1a0d10dd21" type="checkbox" ><label class="sk-toggleable__label" for="256c03fb-3de9-469d-b9b6-6a1a0d10dd21">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(add_indicator=True)</pre></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="399eeb11-7197-4da5-a34a-e22a9e444479" type="checkbox" ><label class="sk-toggleable__label" for="399eeb11-7197-4da5-a34a-e22a9e444479">ordinalencoder</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f4455401430></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6c9c1998-7a78-4ec0-a324-1ee0b8c06653" type="checkbox" ><label class="sk-toggleable__label" for="6c9c1998-7a78-4ec0-a324-1ee0b8c06653">OrdinalEncoder</label><div class="sk-toggleable__content"><pre>OrdinalEncoder(handle_unknown='use_encoded_value', unknown_value=-1)</pre></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="33e591d5-40b9-449c-9f0a-ecfd5823748a" type="checkbox" ><label class="sk-toggleable__label" for="33e591d5-40b9-449c-9f0a-ecfd5823748a">HistGradientBoostingRegressor</label><div class="sk-toggleable__content"><pre>HistGradientBoostingRegressor(random_state=0)</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><label>final_estimator</label></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c1afbac2-a796-434f-b582-83c7c06ddebe" type="checkbox" ><label class="sk-toggleable__label" for="c1afbac2-a796-434f-b582-83c7c06ddebe">RidgeCV</label><div class="sk-toggleable__content"><pre>RidgeCV(alphas=array([ 0.1,  1. , 10. ]))</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 205-214

Measure and plot the results
#############################################################################

 Now we can use Ames Housing dataset to make the predictions. We check the
 performance of each individual predictor as well as of the stack of the
 regressors.

 The function ``plot_regression_results`` is used to plot the predicted and
 true targets.

.. GENERATED FROM PYTHON SOURCE LINES 214-279

.. code-block:: default



    import time
    import matplotlib.pyplot as plt
    from sklearn.model_selection import cross_validate, cross_val_predict


    def plot_regression_results(ax, y_true, y_pred, title, scores, elapsed_time):
        """Scatter plot of the predicted vs true targets."""
        ax.plot(
            [y_true.min(), y_true.max()], [y_true.min(), y_true.max()], "--r", linewidth=2
        )
        ax.scatter(y_true, y_pred, alpha=0.2)

        ax.spines["top"].set_visible(False)
        ax.spines["right"].set_visible(False)
        ax.get_xaxis().tick_bottom()
        ax.get_yaxis().tick_left()
        ax.spines["left"].set_position(("outward", 10))
        ax.spines["bottom"].set_position(("outward", 10))
        ax.set_xlim([y_true.min(), y_true.max()])
        ax.set_ylim([y_true.min(), y_true.max()])
        ax.set_xlabel("Measured")
        ax.set_ylabel("Predicted")
        extra = plt.Rectangle(
            (0, 0), 0, 0, fc="w", fill=False, edgecolor="none", linewidth=0
        )
        ax.legend([extra], [scores], loc="upper left")
        title = title + "\n Evaluation in {:.2f} seconds".format(elapsed_time)
        ax.set_title(title)


    fig, axs = plt.subplots(2, 2, figsize=(9, 7))
    axs = np.ravel(axs)

    for ax, (name, est) in zip(
        axs, estimators + [("Stacking Regressor", stacking_regressor)]
    ):
        start_time = time.time()
        score = cross_validate(
            est, X, y, scoring=["r2", "neg_mean_absolute_error"], n_jobs=-1, verbose=0
        )
        elapsed_time = time.time() - start_time

        y_pred = cross_val_predict(est, X, y, n_jobs=-1, verbose=0)

        plot_regression_results(
            ax,
            y,
            y_pred,
            name,
            (r"$R^2={:.2f} \pm {:.2f}$" + "\n" + r"$MAE={:.2f} \pm {:.2f}$").format(
                np.mean(score["test_r2"]),
                np.std(score["test_r2"]),
                -np.mean(score["test_neg_mean_absolute_error"]),
                np.std(score["test_neg_mean_absolute_error"]),
            ),
            elapsed_time,
        )

    plt.suptitle("Single predictors versus stacked predictors")
    plt.tight_layout()
    plt.subplots_adjust(top=0.9)
    plt.show()




.. image-sg:: /auto_examples/ensemble/images/sphx_glr_plot_stack_predictors_001.png
   :alt: Single predictors versus stacked predictors, Random Forest  Evaluation in 1.24 seconds, Lasso  Evaluation in 0.29 seconds, Gradient Boosting  Evaluation in 0.37 seconds, Stacking Regressor  Evaluation in 5.64 seconds
   :srcset: /auto_examples/ensemble/images/sphx_glr_plot_stack_predictors_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 280-283

The stacked regressor will combine the strengths of the different regressors.
However, we also see that training the stacked regressor is much more
computationally expensive.


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  14.976 seconds)


.. _sphx_glr_download_auto_examples_ensemble_plot_stack_predictors.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/ensemble/plot_stack_predictors.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_stack_predictors.py <plot_stack_predictors.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_stack_predictors.ipynb <plot_stack_predictors.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
