
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/ensemble/plot_stack_predictors.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_ensemble_plot_stack_predictors.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_ensemble_plot_stack_predictors.py:


=================================
Combine predictors using stacking
=================================

.. currentmodule:: sklearn

Stacking refers to a method to blend estimators. In this strategy, some
estimators are individually fitted on some training data while a final
estimator is trained using the stacked predictions of these base estimators.

In this example, we illustrate the use case in which different regressors are
stacked together and a final linear penalized regressor is used to output the
prediction. We compare the performance of each individual regressor with the
stacking strategy. Stacking slightly improves the overall performance.

.. GENERATED FROM PYTHON SOURCE LINES 18-29

.. code-block:: default


    # Authors: Guillaume Lemaitre <g.lemaitre58@gmail.com>
    #          Maria Telenczuk    <https://github.com/maikia>
    # License: BSD 3 clause

    print(__doc__)

    from sklearn import set_config

    set_config(display="diagram")








.. GENERATED FROM PYTHON SOURCE LINES 30-46

Download the dataset
#############################################################################

 We will use `Ames Housing`_ dataset which was first compiled by Dean De Cock
 and became better known after it was used in Kaggle challenge. It is a set
 of 1460 residential homes in Ames, Iowa, each described by 80 features. We
 will use it to predict the final logarithmic price of the houses. In this
 example we will use only 20 most interesting features chosen using
 GradientBoostingRegressor() and limit number of entries (here we won't go
 into the details on how to select the most interesting features).

 The Ames housing dataset is not shipped with scikit-learn and therefore we
 will fetch it from `OpenML`_.

 .. _`Ames Housing`: http://jse.amstat.org/v19n3/decock.pdf
 .. _`OpenML`: https://www.openml.org/d/42165

.. GENERATED FROM PYTHON SOURCE LINES 46-92

.. code-block:: default


    import numpy as np

    from sklearn.datasets import fetch_openml
    from sklearn.utils import shuffle


    def load_ames_housing():
        df = fetch_openml(name="house_prices", as_frame=True)
        X = df.data
        y = df.target

        features = [
            "YrSold",
            "HeatingQC",
            "Street",
            "YearRemodAdd",
            "Heating",
            "MasVnrType",
            "BsmtUnfSF",
            "Foundation",
            "MasVnrArea",
            "MSSubClass",
            "ExterQual",
            "Condition2",
            "GarageCars",
            "GarageType",
            "OverallQual",
            "TotalBsmtSF",
            "BsmtFinSF1",
            "HouseStyle",
            "MiscFeature",
            "MoSold",
        ]

        X = X[features]
        X, y = shuffle(X, y, random_state=0)

        X = X[:600]
        y = y[:600]
        return X, np.log(y)


    X, y = load_ames_housing()









.. GENERATED FROM PYTHON SOURCE LINES 93-99

Make pipeline to preprocess the data
#############################################################################

 Before we can use Ames dataset we still need to do some preprocessing.
 First, we will select the categorical and numerical columns of the dataset to
 construct the first step of the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 99-106

.. code-block:: default


    from sklearn.compose import make_column_selector

    cat_selector = make_column_selector(dtype_include=object)
    num_selector = make_column_selector(dtype_include=np.number)
    cat_selector(X)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    ['HeatingQC', 'Street', 'Heating', 'MasVnrType', 'Foundation', 'ExterQual', 'Condition2', 'GarageType', 'HouseStyle', 'MiscFeature']



.. GENERATED FROM PYTHON SOURCE LINES 107-109

.. code-block:: default

    num_selector(X)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    ['YrSold', 'YearRemodAdd', 'BsmtUnfSF', 'MasVnrArea', 'MSSubClass', 'GarageCars', 'OverallQual', 'TotalBsmtSF', 'BsmtFinSF1', 'MoSold']



.. GENERATED FROM PYTHON SOURCE LINES 110-119

Then, we will need to design preprocessing pipelines which depends on the
ending regressor. If the ending regressor is a linear model, one needs to
one-hot encode the categories. If the ending regressor is a tree-based model
an ordinal encoder will be sufficient. Besides, numerical values need to be
standardized for a linear model while the raw numerical data can be treated
as is by a tree-based model. However, both models need an imputer to
handle missing values.

We will first design the pipeline required for the tree-based models.

.. GENERATED FROM PYTHON SOURCE LINES 119-135

.. code-block:: default


    from sklearn.compose import make_column_transformer
    from sklearn.impute import SimpleImputer
    from sklearn.pipeline import make_pipeline
    from sklearn.preprocessing import OrdinalEncoder

    cat_tree_processor = OrdinalEncoder(
        handle_unknown="use_encoded_value", unknown_value=-1
    )
    num_tree_processor = SimpleImputer(strategy="mean", add_indicator=True)

    tree_preprocessor = make_column_transformer(
        (num_tree_processor, num_selector), (cat_tree_processor, cat_selector)
    )
    tree_preprocessor






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-ca6953e7-f52d-447f-9399-4420574bbe7c {color: black;background-color: white;}#sk-ca6953e7-f52d-447f-9399-4420574bbe7c pre{padding: 0;}#sk-ca6953e7-f52d-447f-9399-4420574bbe7c div.sk-toggleable {background-color: white;}#sk-ca6953e7-f52d-447f-9399-4420574bbe7c label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-ca6953e7-f52d-447f-9399-4420574bbe7c div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-ca6953e7-f52d-447f-9399-4420574bbe7c div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-ca6953e7-f52d-447f-9399-4420574bbe7c input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-ca6953e7-f52d-447f-9399-4420574bbe7c div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ca6953e7-f52d-447f-9399-4420574bbe7c div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ca6953e7-f52d-447f-9399-4420574bbe7c input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-ca6953e7-f52d-447f-9399-4420574bbe7c div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-ca6953e7-f52d-447f-9399-4420574bbe7c div.sk-estimator:hover {background-color: #d4ebff;}#sk-ca6953e7-f52d-447f-9399-4420574bbe7c div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-ca6953e7-f52d-447f-9399-4420574bbe7c div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-ca6953e7-f52d-447f-9399-4420574bbe7c div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ca6953e7-f52d-447f-9399-4420574bbe7c div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-ca6953e7-f52d-447f-9399-4420574bbe7c div.sk-item {z-index: 1;}#sk-ca6953e7-f52d-447f-9399-4420574bbe7c div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-ca6953e7-f52d-447f-9399-4420574bbe7c div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ca6953e7-f52d-447f-9399-4420574bbe7c div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-ca6953e7-f52d-447f-9399-4420574bbe7c div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-ca6953e7-f52d-447f-9399-4420574bbe7c div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-ca6953e7-f52d-447f-9399-4420574bbe7c div.sk-parallel-item:only-child::after {width: 0;}#sk-ca6953e7-f52d-447f-9399-4420574bbe7c div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-ca6953e7-f52d-447f-9399-4420574bbe7c div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-ca6953e7-f52d-447f-9399-4420574bbe7c div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-ca6953e7-f52d-447f-9399-4420574bbe7c div.sk-container {display: inline-block;position: relative;}</style><div id="sk-ca6953e7-f52d-447f-9399-4420574bbe7c" class"sk-top-container"><div class="sk-container"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a73d3043-4b5a-4e38-91ac-c534dd7d045b" type="checkbox" ><label class="sk-toggleable__label" for="a73d3043-4b5a-4e38-91ac-c534dd7d045b">ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('simpleimputer',
                                     SimpleImputer(add_indicator=True),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f7eeb095250>),
                                    ('ordinalencoder',
                                     OrdinalEncoder(handle_unknown='use_encoded_value',
                                                    unknown_value=-1),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f7eeb095be0>)])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a3c58e0b-d66c-4386-86e3-388dcd8bbb18" type="checkbox" ><label class="sk-toggleable__label" for="a3c58e0b-d66c-4386-86e3-388dcd8bbb18">simpleimputer</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f7eeb095250></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cd5d1e46-519b-4634-ae08-857b11aaee03" type="checkbox" ><label class="sk-toggleable__label" for="cd5d1e46-519b-4634-ae08-857b11aaee03">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(add_indicator=True)</pre></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fb9a86ee-38eb-420d-bfe8-640df02296c9" type="checkbox" ><label class="sk-toggleable__label" for="fb9a86ee-38eb-420d-bfe8-640df02296c9">ordinalencoder</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f7eeb095be0></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="22de5e51-c505-4fc0-b830-edea14c75f31" type="checkbox" ><label class="sk-toggleable__label" for="22de5e51-c505-4fc0-b830-edea14c75f31">OrdinalEncoder</label><div class="sk-toggleable__content"><pre>OrdinalEncoder(handle_unknown='use_encoded_value', unknown_value=-1)</pre></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 136-138

Then, we will now define the preprocessor used when the ending regressor
is a linear model.

.. GENERATED FROM PYTHON SOURCE LINES 138-152

.. code-block:: default


    from sklearn.preprocessing import OneHotEncoder
    from sklearn.preprocessing import StandardScaler

    cat_linear_processor = OneHotEncoder(handle_unknown="ignore")
    num_linear_processor = make_pipeline(
        StandardScaler(), SimpleImputer(strategy="mean", add_indicator=True)
    )

    linear_preprocessor = make_column_transformer(
        (num_linear_processor, num_selector), (cat_linear_processor, cat_selector)
    )
    linear_preprocessor






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-ba4960ed-aae7-4a96-82d8-797e11fd629a {color: black;background-color: white;}#sk-ba4960ed-aae7-4a96-82d8-797e11fd629a pre{padding: 0;}#sk-ba4960ed-aae7-4a96-82d8-797e11fd629a div.sk-toggleable {background-color: white;}#sk-ba4960ed-aae7-4a96-82d8-797e11fd629a label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-ba4960ed-aae7-4a96-82d8-797e11fd629a div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-ba4960ed-aae7-4a96-82d8-797e11fd629a div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-ba4960ed-aae7-4a96-82d8-797e11fd629a input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-ba4960ed-aae7-4a96-82d8-797e11fd629a div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ba4960ed-aae7-4a96-82d8-797e11fd629a div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ba4960ed-aae7-4a96-82d8-797e11fd629a input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-ba4960ed-aae7-4a96-82d8-797e11fd629a div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-ba4960ed-aae7-4a96-82d8-797e11fd629a div.sk-estimator:hover {background-color: #d4ebff;}#sk-ba4960ed-aae7-4a96-82d8-797e11fd629a div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-ba4960ed-aae7-4a96-82d8-797e11fd629a div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-ba4960ed-aae7-4a96-82d8-797e11fd629a div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ba4960ed-aae7-4a96-82d8-797e11fd629a div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-ba4960ed-aae7-4a96-82d8-797e11fd629a div.sk-item {z-index: 1;}#sk-ba4960ed-aae7-4a96-82d8-797e11fd629a div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-ba4960ed-aae7-4a96-82d8-797e11fd629a div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ba4960ed-aae7-4a96-82d8-797e11fd629a div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-ba4960ed-aae7-4a96-82d8-797e11fd629a div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-ba4960ed-aae7-4a96-82d8-797e11fd629a div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-ba4960ed-aae7-4a96-82d8-797e11fd629a div.sk-parallel-item:only-child::after {width: 0;}#sk-ba4960ed-aae7-4a96-82d8-797e11fd629a div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-ba4960ed-aae7-4a96-82d8-797e11fd629a div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-ba4960ed-aae7-4a96-82d8-797e11fd629a div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-ba4960ed-aae7-4a96-82d8-797e11fd629a div.sk-container {display: inline-block;position: relative;}</style><div id="sk-ba4960ed-aae7-4a96-82d8-797e11fd629a" class"sk-top-container"><div class="sk-container"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5c79947c-bc68-42e7-a176-cbb19dfd8c12" type="checkbox" ><label class="sk-toggleable__label" for="5c79947c-bc68-42e7-a176-cbb19dfd8c12">ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('pipeline',
                                     Pipeline(steps=[('standardscaler',
                                                      StandardScaler()),
                                                     ('simpleimputer',
                                                      SimpleImputer(add_indicator=True))]),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f7eeb095250>),
                                    ('onehotencoder',
                                     OneHotEncoder(handle_unknown='ignore'),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f7eeb095be0>)])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f1685e8b-c670-4d69-9036-20c2548f1ffe" type="checkbox" ><label class="sk-toggleable__label" for="f1685e8b-c670-4d69-9036-20c2548f1ffe">pipeline</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f7eeb095250></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3611331f-9fce-4c90-9768-8ba7368472ce" type="checkbox" ><label class="sk-toggleable__label" for="3611331f-9fce-4c90-9768-8ba7368472ce">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f15ebcc6-ddc2-413f-8497-163788e708e3" type="checkbox" ><label class="sk-toggleable__label" for="f15ebcc6-ddc2-413f-8497-163788e708e3">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(add_indicator=True)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="58479d24-241d-40ca-a322-08981cb18f65" type="checkbox" ><label class="sk-toggleable__label" for="58479d24-241d-40ca-a322-08981cb18f65">onehotencoder</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f7eeb095be0></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9aff3191-c865-4ed3-8c9f-ae1679ebaf63" type="checkbox" ><label class="sk-toggleable__label" for="9aff3191-c865-4ed3-8c9f-ae1679ebaf63">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown='ignore')</pre></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 153-171

Stack of predictors on a single data set
#############################################################################

 It is sometimes tedious to find the model which will best perform on a given
 dataset. Stacking provide an alternative by combining the outputs of several
 learners, without the need to choose a model specifically. The performance of
 stacking is usually close to the best model and sometimes it can outperform
 the prediction performance of each individual model.

 Here, we combine 3 learners (linear and non-linear) and use a ridge regressor
 to combine their outputs together.

 .. note::
    Although we will make new pipelines with the processors which we wrote in
    the previous section for the 3 learners, the final estimator
    :class:`~sklearn.linear_model.RidgeCV()` does not need preprocessing of
    the data as it will be fed with the already preprocessed output from the 3
    learners.

.. GENERATED FROM PYTHON SOURCE LINES 171-177

.. code-block:: default


    from sklearn.linear_model import LassoCV

    lasso_pipeline = make_pipeline(linear_preprocessor, LassoCV())
    lasso_pipeline






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-6f685bf0-05ce-49a0-9b9c-699a3ccb0049 {color: black;background-color: white;}#sk-6f685bf0-05ce-49a0-9b9c-699a3ccb0049 pre{padding: 0;}#sk-6f685bf0-05ce-49a0-9b9c-699a3ccb0049 div.sk-toggleable {background-color: white;}#sk-6f685bf0-05ce-49a0-9b9c-699a3ccb0049 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-6f685bf0-05ce-49a0-9b9c-699a3ccb0049 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-6f685bf0-05ce-49a0-9b9c-699a3ccb0049 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-6f685bf0-05ce-49a0-9b9c-699a3ccb0049 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-6f685bf0-05ce-49a0-9b9c-699a3ccb0049 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-6f685bf0-05ce-49a0-9b9c-699a3ccb0049 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-6f685bf0-05ce-49a0-9b9c-699a3ccb0049 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-6f685bf0-05ce-49a0-9b9c-699a3ccb0049 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-6f685bf0-05ce-49a0-9b9c-699a3ccb0049 div.sk-estimator:hover {background-color: #d4ebff;}#sk-6f685bf0-05ce-49a0-9b9c-699a3ccb0049 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-6f685bf0-05ce-49a0-9b9c-699a3ccb0049 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-6f685bf0-05ce-49a0-9b9c-699a3ccb0049 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-6f685bf0-05ce-49a0-9b9c-699a3ccb0049 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-6f685bf0-05ce-49a0-9b9c-699a3ccb0049 div.sk-item {z-index: 1;}#sk-6f685bf0-05ce-49a0-9b9c-699a3ccb0049 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-6f685bf0-05ce-49a0-9b9c-699a3ccb0049 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-6f685bf0-05ce-49a0-9b9c-699a3ccb0049 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-6f685bf0-05ce-49a0-9b9c-699a3ccb0049 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-6f685bf0-05ce-49a0-9b9c-699a3ccb0049 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-6f685bf0-05ce-49a0-9b9c-699a3ccb0049 div.sk-parallel-item:only-child::after {width: 0;}#sk-6f685bf0-05ce-49a0-9b9c-699a3ccb0049 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-6f685bf0-05ce-49a0-9b9c-699a3ccb0049 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-6f685bf0-05ce-49a0-9b9c-699a3ccb0049 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-6f685bf0-05ce-49a0-9b9c-699a3ccb0049 div.sk-container {display: inline-block;position: relative;}</style><div id="sk-6f685bf0-05ce-49a0-9b9c-699a3ccb0049" class"sk-top-container"><div class="sk-container"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="70e263c6-c5af-47a7-a1ea-c641a9f20b84" type="checkbox" ><label class="sk-toggleable__label" for="70e263c6-c5af-47a7-a1ea-c641a9f20b84">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('columntransformer',
                     ColumnTransformer(transformers=[('pipeline',
                                                      Pipeline(steps=[('standardscaler',
                                                                       StandardScaler()),
                                                                      ('simpleimputer',
                                                                       SimpleImputer(add_indicator=True))]),
                                                      <sklearn.compose._column_transformer.make_column_selector object at 0x7f7eeb095250>),
                                                     ('onehotencoder',
                                                      OneHotEncoder(handle_unknown='ignore'),
                                                      <sklearn.compose._column_transformer.make_column_selector object at 0x7f7eeb095be0>)])),
                    ('lassocv', LassoCV())])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d8ac7a57-eea8-4708-8051-df7e87bd9a31" type="checkbox" ><label class="sk-toggleable__label" for="d8ac7a57-eea8-4708-8051-df7e87bd9a31">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('pipeline',
                                     Pipeline(steps=[('standardscaler',
                                                      StandardScaler()),
                                                     ('simpleimputer',
                                                      SimpleImputer(add_indicator=True))]),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f7eeb095250>),
                                    ('onehotencoder',
                                     OneHotEncoder(handle_unknown='ignore'),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f7eeb095be0>)])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="626c9efd-c8f5-4be8-bdbb-d27107165a28" type="checkbox" ><label class="sk-toggleable__label" for="626c9efd-c8f5-4be8-bdbb-d27107165a28">pipeline</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f7eeb095250></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="482e3b03-b78f-40db-b58d-044d70c71763" type="checkbox" ><label class="sk-toggleable__label" for="482e3b03-b78f-40db-b58d-044d70c71763">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="20577358-04aa-4402-ac1b-90582358452a" type="checkbox" ><label class="sk-toggleable__label" for="20577358-04aa-4402-ac1b-90582358452a">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(add_indicator=True)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2b3def9f-89d4-44ed-b195-584e32b96477" type="checkbox" ><label class="sk-toggleable__label" for="2b3def9f-89d4-44ed-b195-584e32b96477">onehotencoder</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f7eeb095be0></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="983e4338-cbc4-40c0-bd6c-c0f5e2c9352e" type="checkbox" ><label class="sk-toggleable__label" for="983e4338-cbc4-40c0-bd6c-c0f5e2c9352e">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown='ignore')</pre></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a5d4d75c-2954-4de1-90a5-95ebc50a36b7" type="checkbox" ><label class="sk-toggleable__label" for="a5d4d75c-2954-4de1-90a5-95ebc50a36b7">LassoCV</label><div class="sk-toggleable__content"><pre>LassoCV()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 178-183

.. code-block:: default

    from sklearn.ensemble import RandomForestRegressor

    rf_pipeline = make_pipeline(tree_preprocessor, RandomForestRegressor(random_state=42))
    rf_pipeline






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-c2981f5a-bff5-4396-b77d-892730632722 {color: black;background-color: white;}#sk-c2981f5a-bff5-4396-b77d-892730632722 pre{padding: 0;}#sk-c2981f5a-bff5-4396-b77d-892730632722 div.sk-toggleable {background-color: white;}#sk-c2981f5a-bff5-4396-b77d-892730632722 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-c2981f5a-bff5-4396-b77d-892730632722 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-c2981f5a-bff5-4396-b77d-892730632722 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-c2981f5a-bff5-4396-b77d-892730632722 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-c2981f5a-bff5-4396-b77d-892730632722 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-c2981f5a-bff5-4396-b77d-892730632722 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-c2981f5a-bff5-4396-b77d-892730632722 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-c2981f5a-bff5-4396-b77d-892730632722 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-c2981f5a-bff5-4396-b77d-892730632722 div.sk-estimator:hover {background-color: #d4ebff;}#sk-c2981f5a-bff5-4396-b77d-892730632722 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-c2981f5a-bff5-4396-b77d-892730632722 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-c2981f5a-bff5-4396-b77d-892730632722 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-c2981f5a-bff5-4396-b77d-892730632722 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-c2981f5a-bff5-4396-b77d-892730632722 div.sk-item {z-index: 1;}#sk-c2981f5a-bff5-4396-b77d-892730632722 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-c2981f5a-bff5-4396-b77d-892730632722 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-c2981f5a-bff5-4396-b77d-892730632722 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-c2981f5a-bff5-4396-b77d-892730632722 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-c2981f5a-bff5-4396-b77d-892730632722 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-c2981f5a-bff5-4396-b77d-892730632722 div.sk-parallel-item:only-child::after {width: 0;}#sk-c2981f5a-bff5-4396-b77d-892730632722 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-c2981f5a-bff5-4396-b77d-892730632722 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-c2981f5a-bff5-4396-b77d-892730632722 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-c2981f5a-bff5-4396-b77d-892730632722 div.sk-container {display: inline-block;position: relative;}</style><div id="sk-c2981f5a-bff5-4396-b77d-892730632722" class"sk-top-container"><div class="sk-container"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="694507d2-d92b-40f4-8c1b-672e1fb65359" type="checkbox" ><label class="sk-toggleable__label" for="694507d2-d92b-40f4-8c1b-672e1fb65359">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('columntransformer',
                     ColumnTransformer(transformers=[('simpleimputer',
                                                      SimpleImputer(add_indicator=True),
                                                      <sklearn.compose._column_transformer.make_column_selector object at 0x7f7eeb095250>),
                                                     ('ordinalencoder',
                                                      OrdinalEncoder(handle_unknown='use_encoded_value',
                                                                     unknown_value=-1),
                                                      <sklearn.compose._column_transformer.make_column_selector object at 0x7f7eeb095be0>)])),
                    ('randomforestregressor',
                     RandomForestRegressor(random_state=42))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7d7f6735-11a1-4c3e-bdae-5071ec12594f" type="checkbox" ><label class="sk-toggleable__label" for="7d7f6735-11a1-4c3e-bdae-5071ec12594f">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('simpleimputer',
                                     SimpleImputer(add_indicator=True),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f7eeb095250>),
                                    ('ordinalencoder',
                                     OrdinalEncoder(handle_unknown='use_encoded_value',
                                                    unknown_value=-1),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f7eeb095be0>)])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e76a9116-55c5-4db8-89f3-d51af3b7cfa0" type="checkbox" ><label class="sk-toggleable__label" for="e76a9116-55c5-4db8-89f3-d51af3b7cfa0">simpleimputer</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f7eeb095250></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="33d56cdb-b6cf-4392-992f-548e792f35fc" type="checkbox" ><label class="sk-toggleable__label" for="33d56cdb-b6cf-4392-992f-548e792f35fc">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(add_indicator=True)</pre></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="14b5589a-2b8a-4ae3-884f-3ef4222d4aa9" type="checkbox" ><label class="sk-toggleable__label" for="14b5589a-2b8a-4ae3-884f-3ef4222d4aa9">ordinalencoder</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f7eeb095be0></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d2c40825-5380-4cda-9339-3e88b0a335cb" type="checkbox" ><label class="sk-toggleable__label" for="d2c40825-5380-4cda-9339-3e88b0a335cb">OrdinalEncoder</label><div class="sk-toggleable__content"><pre>OrdinalEncoder(handle_unknown='use_encoded_value', unknown_value=-1)</pre></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b5bc2e62-fb50-4146-910d-dbbb9c8a414f" type="checkbox" ><label class="sk-toggleable__label" for="b5bc2e62-fb50-4146-910d-dbbb9c8a414f">RandomForestRegressor</label><div class="sk-toggleable__content"><pre>RandomForestRegressor(random_state=42)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 184-191

.. code-block:: default

    from sklearn.ensemble import HistGradientBoostingRegressor

    gbdt_pipeline = make_pipeline(
        tree_preprocessor, HistGradientBoostingRegressor(random_state=0)
    )
    gbdt_pipeline






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-b29259d5-64ed-46a3-98e4-db24b4140bae {color: black;background-color: white;}#sk-b29259d5-64ed-46a3-98e4-db24b4140bae pre{padding: 0;}#sk-b29259d5-64ed-46a3-98e4-db24b4140bae div.sk-toggleable {background-color: white;}#sk-b29259d5-64ed-46a3-98e4-db24b4140bae label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-b29259d5-64ed-46a3-98e4-db24b4140bae div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-b29259d5-64ed-46a3-98e4-db24b4140bae div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-b29259d5-64ed-46a3-98e4-db24b4140bae input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-b29259d5-64ed-46a3-98e4-db24b4140bae div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b29259d5-64ed-46a3-98e4-db24b4140bae div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b29259d5-64ed-46a3-98e4-db24b4140bae input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-b29259d5-64ed-46a3-98e4-db24b4140bae div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-b29259d5-64ed-46a3-98e4-db24b4140bae div.sk-estimator:hover {background-color: #d4ebff;}#sk-b29259d5-64ed-46a3-98e4-db24b4140bae div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-b29259d5-64ed-46a3-98e4-db24b4140bae div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-b29259d5-64ed-46a3-98e4-db24b4140bae div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b29259d5-64ed-46a3-98e4-db24b4140bae div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-b29259d5-64ed-46a3-98e4-db24b4140bae div.sk-item {z-index: 1;}#sk-b29259d5-64ed-46a3-98e4-db24b4140bae div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-b29259d5-64ed-46a3-98e4-db24b4140bae div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b29259d5-64ed-46a3-98e4-db24b4140bae div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-b29259d5-64ed-46a3-98e4-db24b4140bae div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-b29259d5-64ed-46a3-98e4-db24b4140bae div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-b29259d5-64ed-46a3-98e4-db24b4140bae div.sk-parallel-item:only-child::after {width: 0;}#sk-b29259d5-64ed-46a3-98e4-db24b4140bae div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-b29259d5-64ed-46a3-98e4-db24b4140bae div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-b29259d5-64ed-46a3-98e4-db24b4140bae div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-b29259d5-64ed-46a3-98e4-db24b4140bae div.sk-container {display: inline-block;position: relative;}</style><div id="sk-b29259d5-64ed-46a3-98e4-db24b4140bae" class"sk-top-container"><div class="sk-container"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3fe67ea1-6a19-4422-b787-58cecdc4ad18" type="checkbox" ><label class="sk-toggleable__label" for="3fe67ea1-6a19-4422-b787-58cecdc4ad18">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('columntransformer',
                     ColumnTransformer(transformers=[('simpleimputer',
                                                      SimpleImputer(add_indicator=True),
                                                      <sklearn.compose._column_transformer.make_column_selector object at 0x7f7eeb095250>),
                                                     ('ordinalencoder',
                                                      OrdinalEncoder(handle_unknown='use_encoded_value',
                                                                     unknown_value=-1),
                                                      <sklearn.compose._column_transformer.make_column_selector object at 0x7f7eeb095be0>)])),
                    ('histgradientboostingregressor',
                     HistGradientBoostingRegressor(random_state=0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fbd79815-f196-4a53-ac61-3e231b2c5c94" type="checkbox" ><label class="sk-toggleable__label" for="fbd79815-f196-4a53-ac61-3e231b2c5c94">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('simpleimputer',
                                     SimpleImputer(add_indicator=True),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f7eeb095250>),
                                    ('ordinalencoder',
                                     OrdinalEncoder(handle_unknown='use_encoded_value',
                                                    unknown_value=-1),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f7eeb095be0>)])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="71abd839-804d-46f7-915d-016625cb6318" type="checkbox" ><label class="sk-toggleable__label" for="71abd839-804d-46f7-915d-016625cb6318">simpleimputer</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f7eeb095250></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="557ebbf9-c4dc-4229-9b25-33c55419b6ff" type="checkbox" ><label class="sk-toggleable__label" for="557ebbf9-c4dc-4229-9b25-33c55419b6ff">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(add_indicator=True)</pre></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c2e06b71-48aa-4263-96f8-22db09c77edb" type="checkbox" ><label class="sk-toggleable__label" for="c2e06b71-48aa-4263-96f8-22db09c77edb">ordinalencoder</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f7eeb095be0></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b5529c1d-901f-44b6-8772-25e235eaf307" type="checkbox" ><label class="sk-toggleable__label" for="b5529c1d-901f-44b6-8772-25e235eaf307">OrdinalEncoder</label><div class="sk-toggleable__content"><pre>OrdinalEncoder(handle_unknown='use_encoded_value', unknown_value=-1)</pre></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="77eeaf79-71cb-469a-b3d0-68c122d4540a" type="checkbox" ><label class="sk-toggleable__label" for="77eeaf79-71cb-469a-b3d0-68c122d4540a">HistGradientBoostingRegressor</label><div class="sk-toggleable__content"><pre>HistGradientBoostingRegressor(random_state=0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 192-204

.. code-block:: default

    from sklearn.ensemble import StackingRegressor
    from sklearn.linear_model import RidgeCV

    estimators = [
        ("Random Forest", rf_pipeline),
        ("Lasso", lasso_pipeline),
        ("Gradient Boosting", gbdt_pipeline),
    ]

    stacking_regressor = StackingRegressor(estimators=estimators, final_estimator=RidgeCV())
    stacking_regressor






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-c7b459ab-6aa7-4c49-87fb-105a1d378475 {color: black;background-color: white;}#sk-c7b459ab-6aa7-4c49-87fb-105a1d378475 pre{padding: 0;}#sk-c7b459ab-6aa7-4c49-87fb-105a1d378475 div.sk-toggleable {background-color: white;}#sk-c7b459ab-6aa7-4c49-87fb-105a1d378475 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-c7b459ab-6aa7-4c49-87fb-105a1d378475 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-c7b459ab-6aa7-4c49-87fb-105a1d378475 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-c7b459ab-6aa7-4c49-87fb-105a1d378475 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-c7b459ab-6aa7-4c49-87fb-105a1d378475 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-c7b459ab-6aa7-4c49-87fb-105a1d378475 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-c7b459ab-6aa7-4c49-87fb-105a1d378475 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-c7b459ab-6aa7-4c49-87fb-105a1d378475 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-c7b459ab-6aa7-4c49-87fb-105a1d378475 div.sk-estimator:hover {background-color: #d4ebff;}#sk-c7b459ab-6aa7-4c49-87fb-105a1d378475 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-c7b459ab-6aa7-4c49-87fb-105a1d378475 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-c7b459ab-6aa7-4c49-87fb-105a1d378475 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-c7b459ab-6aa7-4c49-87fb-105a1d378475 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-c7b459ab-6aa7-4c49-87fb-105a1d378475 div.sk-item {z-index: 1;}#sk-c7b459ab-6aa7-4c49-87fb-105a1d378475 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-c7b459ab-6aa7-4c49-87fb-105a1d378475 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-c7b459ab-6aa7-4c49-87fb-105a1d378475 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-c7b459ab-6aa7-4c49-87fb-105a1d378475 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-c7b459ab-6aa7-4c49-87fb-105a1d378475 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-c7b459ab-6aa7-4c49-87fb-105a1d378475 div.sk-parallel-item:only-child::after {width: 0;}#sk-c7b459ab-6aa7-4c49-87fb-105a1d378475 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-c7b459ab-6aa7-4c49-87fb-105a1d378475 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-c7b459ab-6aa7-4c49-87fb-105a1d378475 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-c7b459ab-6aa7-4c49-87fb-105a1d378475 div.sk-container {display: inline-block;position: relative;}</style><div id="sk-c7b459ab-6aa7-4c49-87fb-105a1d378475" class"sk-top-container"><div class="sk-container"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d4cc6738-4762-4395-b3eb-6b32edc69719" type="checkbox" ><label class="sk-toggleable__label" for="d4cc6738-4762-4395-b3eb-6b32edc69719">StackingRegressor</label><div class="sk-toggleable__content"><pre>StackingRegressor(estimators=[('Random Forest',
                                   Pipeline(steps=[('columntransformer',
                                                    ColumnTransformer(transformers=[('simpleimputer',
                                                                                     SimpleImputer(add_indicator=True),
                                                                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f7eeb095250>),
                                                                                    ('ordinalencoder',
                                                                                     OrdinalEncoder(handle_unknown='use_encoded_value',
                                                                                                    unknown_value=-1),
                                                                                     <sklearn.compose...
                                                                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f7eeb095250>),
                                                                                    ('ordinalencoder',
                                                                                     OrdinalEncoder(handle_unknown='use_encoded_value',
                                                                                                    unknown_value=-1),
                                                                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f7eeb095be0>)])),
                                                   ('histgradientboostingregressor',
                                                    HistGradientBoostingRegressor(random_state=0))]))],
                      final_estimator=RidgeCV(alphas=array([ 0.1,  1. , 10. ])))</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><label>Random Forest</label></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="17354cd4-80c3-40b8-a242-15be8b7926c4" type="checkbox" ><label class="sk-toggleable__label" for="17354cd4-80c3-40b8-a242-15be8b7926c4">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('simpleimputer',
                                     SimpleImputer(add_indicator=True),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f7eeb095250>),
                                    ('ordinalencoder',
                                     OrdinalEncoder(handle_unknown='use_encoded_value',
                                                    unknown_value=-1),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f7eeb095be0>)])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0d4e9ccb-1615-4e3e-bc82-3a23b4fa2b0a" type="checkbox" ><label class="sk-toggleable__label" for="0d4e9ccb-1615-4e3e-bc82-3a23b4fa2b0a">simpleimputer</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f7eeb095250></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f9be3dda-ac2c-4357-a894-76300e859ab0" type="checkbox" ><label class="sk-toggleable__label" for="f9be3dda-ac2c-4357-a894-76300e859ab0">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(add_indicator=True)</pre></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="95217d14-b870-43e2-874e-0d7669e89b9c" type="checkbox" ><label class="sk-toggleable__label" for="95217d14-b870-43e2-874e-0d7669e89b9c">ordinalencoder</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f7eeb095be0></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="32b6f56c-a3cb-4771-bddd-3a82f9157998" type="checkbox" ><label class="sk-toggleable__label" for="32b6f56c-a3cb-4771-bddd-3a82f9157998">OrdinalEncoder</label><div class="sk-toggleable__content"><pre>OrdinalEncoder(handle_unknown='use_encoded_value', unknown_value=-1)</pre></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ff250a9b-a4c7-4eb2-a54b-d0e7c6eb4f0c" type="checkbox" ><label class="sk-toggleable__label" for="ff250a9b-a4c7-4eb2-a54b-d0e7c6eb4f0c">RandomForestRegressor</label><div class="sk-toggleable__content"><pre>RandomForestRegressor(random_state=42)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><label>Lasso</label></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f8aa0be4-880d-4d30-8efc-7870ab49a5d7" type="checkbox" ><label class="sk-toggleable__label" for="f8aa0be4-880d-4d30-8efc-7870ab49a5d7">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('pipeline',
                                     Pipeline(steps=[('standardscaler',
                                                      StandardScaler()),
                                                     ('simpleimputer',
                                                      SimpleImputer(add_indicator=True))]),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f7eeb095250>),
                                    ('onehotencoder',
                                     OneHotEncoder(handle_unknown='ignore'),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f7eeb095be0>)])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="99dff04d-f287-4a6b-9f4d-ee774c2b4793" type="checkbox" ><label class="sk-toggleable__label" for="99dff04d-f287-4a6b-9f4d-ee774c2b4793">pipeline</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f7eeb095250></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="29262a90-2108-4870-a82a-67bd722ca80a" type="checkbox" ><label class="sk-toggleable__label" for="29262a90-2108-4870-a82a-67bd722ca80a">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0ba480fe-f650-45a5-adeb-ab8f7b7e4836" type="checkbox" ><label class="sk-toggleable__label" for="0ba480fe-f650-45a5-adeb-ab8f7b7e4836">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(add_indicator=True)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6773b349-cd8b-48d3-b72d-285adfe68357" type="checkbox" ><label class="sk-toggleable__label" for="6773b349-cd8b-48d3-b72d-285adfe68357">onehotencoder</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f7eeb095be0></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a0bca2d9-7434-44b4-a9ce-1791dfc91788" type="checkbox" ><label class="sk-toggleable__label" for="a0bca2d9-7434-44b4-a9ce-1791dfc91788">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown='ignore')</pre></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d56772d6-783e-4015-abc3-cd125583aa13" type="checkbox" ><label class="sk-toggleable__label" for="d56772d6-783e-4015-abc3-cd125583aa13">LassoCV</label><div class="sk-toggleable__content"><pre>LassoCV()</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><label>Gradient Boosting</label></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bb3238b7-7180-499f-a73b-3ea8460c82cf" type="checkbox" ><label class="sk-toggleable__label" for="bb3238b7-7180-499f-a73b-3ea8460c82cf">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('simpleimputer',
                                     SimpleImputer(add_indicator=True),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f7eeb095250>),
                                    ('ordinalencoder',
                                     OrdinalEncoder(handle_unknown='use_encoded_value',
                                                    unknown_value=-1),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f7eeb095be0>)])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fdd8b485-fd14-4c44-a128-13b2780bd87e" type="checkbox" ><label class="sk-toggleable__label" for="fdd8b485-fd14-4c44-a128-13b2780bd87e">simpleimputer</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f7eeb095250></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ca3fd996-e5f2-40ff-a874-602f51794374" type="checkbox" ><label class="sk-toggleable__label" for="ca3fd996-e5f2-40ff-a874-602f51794374">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(add_indicator=True)</pre></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="20514895-65da-4a92-8118-93c740251242" type="checkbox" ><label class="sk-toggleable__label" for="20514895-65da-4a92-8118-93c740251242">ordinalencoder</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f7eeb095be0></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="28d0a4ef-a4a9-4ffb-9eab-2655f81cb0db" type="checkbox" ><label class="sk-toggleable__label" for="28d0a4ef-a4a9-4ffb-9eab-2655f81cb0db">OrdinalEncoder</label><div class="sk-toggleable__content"><pre>OrdinalEncoder(handle_unknown='use_encoded_value', unknown_value=-1)</pre></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e1df7824-f790-4d1d-92b7-543ddb1691b5" type="checkbox" ><label class="sk-toggleable__label" for="e1df7824-f790-4d1d-92b7-543ddb1691b5">HistGradientBoostingRegressor</label><div class="sk-toggleable__content"><pre>HistGradientBoostingRegressor(random_state=0)</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><label>final_estimator</label></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c86479dd-84e5-41c3-9b1b-5ce382078575" type="checkbox" ><label class="sk-toggleable__label" for="c86479dd-84e5-41c3-9b1b-5ce382078575">RidgeCV</label><div class="sk-toggleable__content"><pre>RidgeCV(alphas=array([ 0.1,  1. , 10. ]))</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 205-214

Measure and plot the results
#############################################################################

 Now we can use Ames Housing dataset to make the predictions. We check the
 performance of each individual predictor as well as of the stack of the
 regressors.

 The function ``plot_regression_results`` is used to plot the predicted and
 true targets.

.. GENERATED FROM PYTHON SOURCE LINES 214-279

.. code-block:: default



    import time
    import matplotlib.pyplot as plt
    from sklearn.model_selection import cross_validate, cross_val_predict


    def plot_regression_results(ax, y_true, y_pred, title, scores, elapsed_time):
        """Scatter plot of the predicted vs true targets."""
        ax.plot(
            [y_true.min(), y_true.max()], [y_true.min(), y_true.max()], "--r", linewidth=2
        )
        ax.scatter(y_true, y_pred, alpha=0.2)

        ax.spines["top"].set_visible(False)
        ax.spines["right"].set_visible(False)
        ax.get_xaxis().tick_bottom()
        ax.get_yaxis().tick_left()
        ax.spines["left"].set_position(("outward", 10))
        ax.spines["bottom"].set_position(("outward", 10))
        ax.set_xlim([y_true.min(), y_true.max()])
        ax.set_ylim([y_true.min(), y_true.max()])
        ax.set_xlabel("Measured")
        ax.set_ylabel("Predicted")
        extra = plt.Rectangle(
            (0, 0), 0, 0, fc="w", fill=False, edgecolor="none", linewidth=0
        )
        ax.legend([extra], [scores], loc="upper left")
        title = title + "\n Evaluation in {:.2f} seconds".format(elapsed_time)
        ax.set_title(title)


    fig, axs = plt.subplots(2, 2, figsize=(9, 7))
    axs = np.ravel(axs)

    for ax, (name, est) in zip(
        axs, estimators + [("Stacking Regressor", stacking_regressor)]
    ):
        start_time = time.time()
        score = cross_validate(
            est, X, y, scoring=["r2", "neg_mean_absolute_error"], n_jobs=-1, verbose=0
        )
        elapsed_time = time.time() - start_time

        y_pred = cross_val_predict(est, X, y, n_jobs=-1, verbose=0)

        plot_regression_results(
            ax,
            y,
            y_pred,
            name,
            (r"$R^2={:.2f} \pm {:.2f}$" + "\n" + r"$MAE={:.2f} \pm {:.2f}$").format(
                np.mean(score["test_r2"]),
                np.std(score["test_r2"]),
                -np.mean(score["test_neg_mean_absolute_error"]),
                np.std(score["test_neg_mean_absolute_error"]),
            ),
            elapsed_time,
        )

    plt.suptitle("Single predictors versus stacked predictors")
    plt.tight_layout()
    plt.subplots_adjust(top=0.9)
    plt.show()




.. image-sg:: /auto_examples/ensemble/images/sphx_glr_plot_stack_predictors_001.png
   :alt: Single predictors versus stacked predictors, Random Forest  Evaluation in 1.04 seconds, Lasso  Evaluation in 0.55 seconds, Gradient Boosting  Evaluation in 0.66 seconds, Stacking Regressor  Evaluation in 11.93 seconds
   :srcset: /auto_examples/ensemble/images/sphx_glr_plot_stack_predictors_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 280-283

The stacked regressor will combine the strengths of the different regressors.
However, we also see that training the stacked regressor is much more
computationally expensive.


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  29.377 seconds)


.. _sphx_glr_download_auto_examples_ensemble_plot_stack_predictors.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/ensemble/plot_stack_predictors.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_stack_predictors.py <plot_stack_predictors.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_stack_predictors.ipynb <plot_stack_predictors.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
