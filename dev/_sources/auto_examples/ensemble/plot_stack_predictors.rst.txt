
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/ensemble/plot_stack_predictors.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_ensemble_plot_stack_predictors.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_ensemble_plot_stack_predictors.py:


=================================
Combine predictors using stacking
=================================

.. currentmodule:: sklearn

Stacking refers to a method to blend estimators. In this strategy, some
estimators are individually fitted on some training data while a final
estimator is trained using the stacked predictions of these base estimators.

In this example, we illustrate the use case in which different regressors are
stacked together and a final linear penalized regressor is used to output the
prediction. We compare the performance of each individual regressor with the
stacking strategy. Stacking slightly improves the overall performance.

.. GENERATED FROM PYTHON SOURCE LINES 18-29

.. code-block:: default


    # Authors: Guillaume Lemaitre <g.lemaitre58@gmail.com>
    #          Maria Telenczuk    <https://github.com/maikia>
    # License: BSD 3 clause

    print(__doc__)

    from sklearn import set_config

    set_config(display="diagram")








.. GENERATED FROM PYTHON SOURCE LINES 30-46

Download the dataset
#############################################################################

 We will use `Ames Housing`_ dataset which was first compiled by Dean De Cock
 and became better known after it was used in Kaggle challenge. It is a set
 of 1460 residential homes in Ames, Iowa, each described by 80 features. We
 will use it to predict the final logarithmic price of the houses. In this
 example we will use only 20 most interesting features chosen using
 GradientBoostingRegressor() and limit number of entries (here we won't go
 into the details on how to select the most interesting features).

 The Ames housing dataset is not shipped with scikit-learn and therefore we
 will fetch it from `OpenML`_.

 .. _`Ames Housing`: http://jse.amstat.org/v19n3/decock.pdf
 .. _`OpenML`: https://www.openml.org/d/42165

.. GENERATED FROM PYTHON SOURCE LINES 46-92

.. code-block:: default


    import numpy as np

    from sklearn.datasets import fetch_openml
    from sklearn.utils import shuffle


    def load_ames_housing():
        df = fetch_openml(name="house_prices", as_frame=True)
        X = df.data
        y = df.target

        features = [
            "YrSold",
            "HeatingQC",
            "Street",
            "YearRemodAdd",
            "Heating",
            "MasVnrType",
            "BsmtUnfSF",
            "Foundation",
            "MasVnrArea",
            "MSSubClass",
            "ExterQual",
            "Condition2",
            "GarageCars",
            "GarageType",
            "OverallQual",
            "TotalBsmtSF",
            "BsmtFinSF1",
            "HouseStyle",
            "MiscFeature",
            "MoSold",
        ]

        X = X[features]
        X, y = shuffle(X, y, random_state=0)

        X = X[:600]
        y = y[:600]
        return X, np.log(y)


    X, y = load_ames_housing()









.. GENERATED FROM PYTHON SOURCE LINES 93-99

Make pipeline to preprocess the data
#############################################################################

 Before we can use Ames dataset we still need to do some preprocessing.
 First, we will select the categorical and numerical columns of the dataset to
 construct the first step of the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 99-106

.. code-block:: default


    from sklearn.compose import make_column_selector

    cat_selector = make_column_selector(dtype_include=object)
    num_selector = make_column_selector(dtype_include=np.number)
    cat_selector(X)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    ['HeatingQC', 'Street', 'Heating', 'MasVnrType', 'Foundation', 'ExterQual', 'Condition2', 'GarageType', 'HouseStyle', 'MiscFeature']



.. GENERATED FROM PYTHON SOURCE LINES 107-109

.. code-block:: default

    num_selector(X)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    ['YrSold', 'YearRemodAdd', 'BsmtUnfSF', 'MasVnrArea', 'MSSubClass', 'GarageCars', 'OverallQual', 'TotalBsmtSF', 'BsmtFinSF1', 'MoSold']



.. GENERATED FROM PYTHON SOURCE LINES 110-119

Then, we will need to design preprocessing pipelines which depends on the
ending regressor. If the ending regressor is a linear model, one needs to
one-hot encode the categories. If the ending regressor is a tree-based model
an ordinal encoder will be sufficient. Besides, numerical values need to be
standardized for a linear model while the raw numerical data can be treated
as is by a tree-based model. However, both models need an imputer to
handle missing values.

We will first design the pipeline required for the tree-based models.

.. GENERATED FROM PYTHON SOURCE LINES 119-135

.. code-block:: default


    from sklearn.compose import make_column_transformer
    from sklearn.impute import SimpleImputer
    from sklearn.pipeline import make_pipeline
    from sklearn.preprocessing import OrdinalEncoder

    cat_tree_processor = OrdinalEncoder(
        handle_unknown="use_encoded_value", unknown_value=-1
    )
    num_tree_processor = SimpleImputer(strategy="mean", add_indicator=True)

    tree_preprocessor = make_column_transformer(
        (num_tree_processor, num_selector), (cat_tree_processor, cat_selector)
    )
    tree_preprocessor






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-2053d4e1-7ef3-4482-9332-d65dba38e26d {color: black;background-color: white;}#sk-2053d4e1-7ef3-4482-9332-d65dba38e26d pre{padding: 0;}#sk-2053d4e1-7ef3-4482-9332-d65dba38e26d div.sk-toggleable {background-color: white;}#sk-2053d4e1-7ef3-4482-9332-d65dba38e26d label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-2053d4e1-7ef3-4482-9332-d65dba38e26d div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-2053d4e1-7ef3-4482-9332-d65dba38e26d div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-2053d4e1-7ef3-4482-9332-d65dba38e26d input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-2053d4e1-7ef3-4482-9332-d65dba38e26d div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-2053d4e1-7ef3-4482-9332-d65dba38e26d div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-2053d4e1-7ef3-4482-9332-d65dba38e26d input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-2053d4e1-7ef3-4482-9332-d65dba38e26d div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-2053d4e1-7ef3-4482-9332-d65dba38e26d div.sk-estimator:hover {background-color: #d4ebff;}#sk-2053d4e1-7ef3-4482-9332-d65dba38e26d div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-2053d4e1-7ef3-4482-9332-d65dba38e26d div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-2053d4e1-7ef3-4482-9332-d65dba38e26d div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-2053d4e1-7ef3-4482-9332-d65dba38e26d div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-2053d4e1-7ef3-4482-9332-d65dba38e26d div.sk-item {z-index: 1;}#sk-2053d4e1-7ef3-4482-9332-d65dba38e26d div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-2053d4e1-7ef3-4482-9332-d65dba38e26d div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-2053d4e1-7ef3-4482-9332-d65dba38e26d div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-2053d4e1-7ef3-4482-9332-d65dba38e26d div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-2053d4e1-7ef3-4482-9332-d65dba38e26d div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-2053d4e1-7ef3-4482-9332-d65dba38e26d div.sk-parallel-item:only-child::after {width: 0;}#sk-2053d4e1-7ef3-4482-9332-d65dba38e26d div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-2053d4e1-7ef3-4482-9332-d65dba38e26d div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-2053d4e1-7ef3-4482-9332-d65dba38e26d div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-2053d4e1-7ef3-4482-9332-d65dba38e26d div.sk-container {display: inline-block;position: relative;}</style><div id="sk-2053d4e1-7ef3-4482-9332-d65dba38e26d" class"sk-top-container"><div class="sk-container"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="364295f6-6085-4237-99b2-0312174953b6" type="checkbox" ><label class="sk-toggleable__label" for="364295f6-6085-4237-99b2-0312174953b6">ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('simpleimputer',
                                     SimpleImputer(add_indicator=True),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f760fbdb850>),
                                    ('ordinalencoder',
                                     OrdinalEncoder(handle_unknown='use_encoded_value',
                                                    unknown_value=-1),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f760fbdbca0>)])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8b699d78-08ce-4306-a288-a5756270ddd1" type="checkbox" ><label class="sk-toggleable__label" for="8b699d78-08ce-4306-a288-a5756270ddd1">simpleimputer</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f760fbdb850></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6bd976e0-f065-412d-8caa-31c43f46a90e" type="checkbox" ><label class="sk-toggleable__label" for="6bd976e0-f065-412d-8caa-31c43f46a90e">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(add_indicator=True)</pre></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bf371458-e6e1-4f9b-a3d4-42a21113303f" type="checkbox" ><label class="sk-toggleable__label" for="bf371458-e6e1-4f9b-a3d4-42a21113303f">ordinalencoder</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f760fbdbca0></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="92a4e2ee-0b83-449c-a37f-efdbb6e4e86a" type="checkbox" ><label class="sk-toggleable__label" for="92a4e2ee-0b83-449c-a37f-efdbb6e4e86a">OrdinalEncoder</label><div class="sk-toggleable__content"><pre>OrdinalEncoder(handle_unknown='use_encoded_value', unknown_value=-1)</pre></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 136-138

Then, we will now define the preprocessor used when the ending regressor
is a linear model.

.. GENERATED FROM PYTHON SOURCE LINES 138-152

.. code-block:: default


    from sklearn.preprocessing import OneHotEncoder
    from sklearn.preprocessing import StandardScaler

    cat_linear_processor = OneHotEncoder(handle_unknown="ignore")
    num_linear_processor = make_pipeline(
        StandardScaler(), SimpleImputer(strategy="mean", add_indicator=True)
    )

    linear_preprocessor = make_column_transformer(
        (num_linear_processor, num_selector), (cat_linear_processor, cat_selector)
    )
    linear_preprocessor






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-2cc27567-f5dc-4a4c-812c-b432d2b8df6d {color: black;background-color: white;}#sk-2cc27567-f5dc-4a4c-812c-b432d2b8df6d pre{padding: 0;}#sk-2cc27567-f5dc-4a4c-812c-b432d2b8df6d div.sk-toggleable {background-color: white;}#sk-2cc27567-f5dc-4a4c-812c-b432d2b8df6d label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-2cc27567-f5dc-4a4c-812c-b432d2b8df6d div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-2cc27567-f5dc-4a4c-812c-b432d2b8df6d div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-2cc27567-f5dc-4a4c-812c-b432d2b8df6d input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-2cc27567-f5dc-4a4c-812c-b432d2b8df6d div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-2cc27567-f5dc-4a4c-812c-b432d2b8df6d div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-2cc27567-f5dc-4a4c-812c-b432d2b8df6d input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-2cc27567-f5dc-4a4c-812c-b432d2b8df6d div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-2cc27567-f5dc-4a4c-812c-b432d2b8df6d div.sk-estimator:hover {background-color: #d4ebff;}#sk-2cc27567-f5dc-4a4c-812c-b432d2b8df6d div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-2cc27567-f5dc-4a4c-812c-b432d2b8df6d div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-2cc27567-f5dc-4a4c-812c-b432d2b8df6d div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-2cc27567-f5dc-4a4c-812c-b432d2b8df6d div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-2cc27567-f5dc-4a4c-812c-b432d2b8df6d div.sk-item {z-index: 1;}#sk-2cc27567-f5dc-4a4c-812c-b432d2b8df6d div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-2cc27567-f5dc-4a4c-812c-b432d2b8df6d div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-2cc27567-f5dc-4a4c-812c-b432d2b8df6d div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-2cc27567-f5dc-4a4c-812c-b432d2b8df6d div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-2cc27567-f5dc-4a4c-812c-b432d2b8df6d div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-2cc27567-f5dc-4a4c-812c-b432d2b8df6d div.sk-parallel-item:only-child::after {width: 0;}#sk-2cc27567-f5dc-4a4c-812c-b432d2b8df6d div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-2cc27567-f5dc-4a4c-812c-b432d2b8df6d div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-2cc27567-f5dc-4a4c-812c-b432d2b8df6d div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-2cc27567-f5dc-4a4c-812c-b432d2b8df6d div.sk-container {display: inline-block;position: relative;}</style><div id="sk-2cc27567-f5dc-4a4c-812c-b432d2b8df6d" class"sk-top-container"><div class="sk-container"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="55f9c1ca-0ef4-4662-b650-4baf47e0ce51" type="checkbox" ><label class="sk-toggleable__label" for="55f9c1ca-0ef4-4662-b650-4baf47e0ce51">ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('pipeline',
                                     Pipeline(steps=[('standardscaler',
                                                      StandardScaler()),
                                                     ('simpleimputer',
                                                      SimpleImputer(add_indicator=True))]),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f760fbdb850>),
                                    ('onehotencoder',
                                     OneHotEncoder(handle_unknown='ignore'),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f760fbdbca0>)])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a0cc0728-a86c-4f05-8415-14a6425c78f9" type="checkbox" ><label class="sk-toggleable__label" for="a0cc0728-a86c-4f05-8415-14a6425c78f9">pipeline</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f760fbdb850></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="25b72a0a-8106-4c58-89d4-c5d44376a7c7" type="checkbox" ><label class="sk-toggleable__label" for="25b72a0a-8106-4c58-89d4-c5d44376a7c7">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="06c82efc-e27c-44e2-beb5-6ef9290c6ca5" type="checkbox" ><label class="sk-toggleable__label" for="06c82efc-e27c-44e2-beb5-6ef9290c6ca5">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(add_indicator=True)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="40a74578-63b5-405e-ac10-9c94185d3433" type="checkbox" ><label class="sk-toggleable__label" for="40a74578-63b5-405e-ac10-9c94185d3433">onehotencoder</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f760fbdbca0></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8122aab6-3608-4f71-88f0-3a7c9ddd0275" type="checkbox" ><label class="sk-toggleable__label" for="8122aab6-3608-4f71-88f0-3a7c9ddd0275">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown='ignore')</pre></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 153-171

Stack of predictors on a single data set
#############################################################################

 It is sometimes tedious to find the model which will best perform on a given
 dataset. Stacking provide an alternative by combining the outputs of several
 learners, without the need to choose a model specifically. The performance of
 stacking is usually close to the best model and sometimes it can outperform
 the prediction performance of each individual model.

 Here, we combine 3 learners (linear and non-linear) and use a ridge regressor
 to combine their outputs together.

 .. note::
    Although we will make new pipelines with the processors which we wrote in
    the previous section for the 3 learners, the final estimator
    :class:`~sklearn.linear_model.RidgeCV()` does not need preprocessing of
    the data as it will be fed with the already preprocessed output from the 3
    learners.

.. GENERATED FROM PYTHON SOURCE LINES 171-177

.. code-block:: default


    from sklearn.linear_model import LassoCV

    lasso_pipeline = make_pipeline(linear_preprocessor, LassoCV())
    lasso_pipeline






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-31503b0a-d581-42fe-8c25-44051b69a10b {color: black;background-color: white;}#sk-31503b0a-d581-42fe-8c25-44051b69a10b pre{padding: 0;}#sk-31503b0a-d581-42fe-8c25-44051b69a10b div.sk-toggleable {background-color: white;}#sk-31503b0a-d581-42fe-8c25-44051b69a10b label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-31503b0a-d581-42fe-8c25-44051b69a10b div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-31503b0a-d581-42fe-8c25-44051b69a10b div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-31503b0a-d581-42fe-8c25-44051b69a10b input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-31503b0a-d581-42fe-8c25-44051b69a10b div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-31503b0a-d581-42fe-8c25-44051b69a10b div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-31503b0a-d581-42fe-8c25-44051b69a10b input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-31503b0a-d581-42fe-8c25-44051b69a10b div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-31503b0a-d581-42fe-8c25-44051b69a10b div.sk-estimator:hover {background-color: #d4ebff;}#sk-31503b0a-d581-42fe-8c25-44051b69a10b div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-31503b0a-d581-42fe-8c25-44051b69a10b div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-31503b0a-d581-42fe-8c25-44051b69a10b div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-31503b0a-d581-42fe-8c25-44051b69a10b div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-31503b0a-d581-42fe-8c25-44051b69a10b div.sk-item {z-index: 1;}#sk-31503b0a-d581-42fe-8c25-44051b69a10b div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-31503b0a-d581-42fe-8c25-44051b69a10b div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-31503b0a-d581-42fe-8c25-44051b69a10b div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-31503b0a-d581-42fe-8c25-44051b69a10b div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-31503b0a-d581-42fe-8c25-44051b69a10b div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-31503b0a-d581-42fe-8c25-44051b69a10b div.sk-parallel-item:only-child::after {width: 0;}#sk-31503b0a-d581-42fe-8c25-44051b69a10b div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-31503b0a-d581-42fe-8c25-44051b69a10b div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-31503b0a-d581-42fe-8c25-44051b69a10b div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-31503b0a-d581-42fe-8c25-44051b69a10b div.sk-container {display: inline-block;position: relative;}</style><div id="sk-31503b0a-d581-42fe-8c25-44051b69a10b" class"sk-top-container"><div class="sk-container"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="95b20a04-ebea-47f7-84c8-2b10c4bd5575" type="checkbox" ><label class="sk-toggleable__label" for="95b20a04-ebea-47f7-84c8-2b10c4bd5575">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('columntransformer',
                     ColumnTransformer(transformers=[('pipeline',
                                                      Pipeline(steps=[('standardscaler',
                                                                       StandardScaler()),
                                                                      ('simpleimputer',
                                                                       SimpleImputer(add_indicator=True))]),
                                                      <sklearn.compose._column_transformer.make_column_selector object at 0x7f760fbdb850>),
                                                     ('onehotencoder',
                                                      OneHotEncoder(handle_unknown='ignore'),
                                                      <sklearn.compose._column_transformer.make_column_selector object at 0x7f760fbdbca0>)])),
                    ('lassocv', LassoCV())])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d6e98e67-c9ef-455f-97a3-74fe53523686" type="checkbox" ><label class="sk-toggleable__label" for="d6e98e67-c9ef-455f-97a3-74fe53523686">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('pipeline',
                                     Pipeline(steps=[('standardscaler',
                                                      StandardScaler()),
                                                     ('simpleimputer',
                                                      SimpleImputer(add_indicator=True))]),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f760fbdb850>),
                                    ('onehotencoder',
                                     OneHotEncoder(handle_unknown='ignore'),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f760fbdbca0>)])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fc0ae4c8-a120-4385-b713-a928df3df3e5" type="checkbox" ><label class="sk-toggleable__label" for="fc0ae4c8-a120-4385-b713-a928df3df3e5">pipeline</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f760fbdb850></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6040baf1-f30d-4714-8ded-acc06e11fd19" type="checkbox" ><label class="sk-toggleable__label" for="6040baf1-f30d-4714-8ded-acc06e11fd19">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="92e5d52b-d6f1-4d52-8d7c-1eb22185e1e7" type="checkbox" ><label class="sk-toggleable__label" for="92e5d52b-d6f1-4d52-8d7c-1eb22185e1e7">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(add_indicator=True)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="65114465-619b-474f-99fa-c9a4c65af0cc" type="checkbox" ><label class="sk-toggleable__label" for="65114465-619b-474f-99fa-c9a4c65af0cc">onehotencoder</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f760fbdbca0></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a0792552-3b92-4bce-a21e-a9cf2fa037ae" type="checkbox" ><label class="sk-toggleable__label" for="a0792552-3b92-4bce-a21e-a9cf2fa037ae">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown='ignore')</pre></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b2d1a2ff-a047-4c23-8110-c79e417710bb" type="checkbox" ><label class="sk-toggleable__label" for="b2d1a2ff-a047-4c23-8110-c79e417710bb">LassoCV</label><div class="sk-toggleable__content"><pre>LassoCV()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 178-183

.. code-block:: default

    from sklearn.ensemble import RandomForestRegressor

    rf_pipeline = make_pipeline(tree_preprocessor, RandomForestRegressor(random_state=42))
    rf_pipeline






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-ad04f8b4-c5d7-4360-bd3f-c032bbc92ced {color: black;background-color: white;}#sk-ad04f8b4-c5d7-4360-bd3f-c032bbc92ced pre{padding: 0;}#sk-ad04f8b4-c5d7-4360-bd3f-c032bbc92ced div.sk-toggleable {background-color: white;}#sk-ad04f8b4-c5d7-4360-bd3f-c032bbc92ced label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-ad04f8b4-c5d7-4360-bd3f-c032bbc92ced div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-ad04f8b4-c5d7-4360-bd3f-c032bbc92ced div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-ad04f8b4-c5d7-4360-bd3f-c032bbc92ced input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-ad04f8b4-c5d7-4360-bd3f-c032bbc92ced div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ad04f8b4-c5d7-4360-bd3f-c032bbc92ced div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ad04f8b4-c5d7-4360-bd3f-c032bbc92ced input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-ad04f8b4-c5d7-4360-bd3f-c032bbc92ced div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-ad04f8b4-c5d7-4360-bd3f-c032bbc92ced div.sk-estimator:hover {background-color: #d4ebff;}#sk-ad04f8b4-c5d7-4360-bd3f-c032bbc92ced div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-ad04f8b4-c5d7-4360-bd3f-c032bbc92ced div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-ad04f8b4-c5d7-4360-bd3f-c032bbc92ced div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ad04f8b4-c5d7-4360-bd3f-c032bbc92ced div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-ad04f8b4-c5d7-4360-bd3f-c032bbc92ced div.sk-item {z-index: 1;}#sk-ad04f8b4-c5d7-4360-bd3f-c032bbc92ced div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-ad04f8b4-c5d7-4360-bd3f-c032bbc92ced div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ad04f8b4-c5d7-4360-bd3f-c032bbc92ced div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-ad04f8b4-c5d7-4360-bd3f-c032bbc92ced div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-ad04f8b4-c5d7-4360-bd3f-c032bbc92ced div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-ad04f8b4-c5d7-4360-bd3f-c032bbc92ced div.sk-parallel-item:only-child::after {width: 0;}#sk-ad04f8b4-c5d7-4360-bd3f-c032bbc92ced div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-ad04f8b4-c5d7-4360-bd3f-c032bbc92ced div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-ad04f8b4-c5d7-4360-bd3f-c032bbc92ced div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-ad04f8b4-c5d7-4360-bd3f-c032bbc92ced div.sk-container {display: inline-block;position: relative;}</style><div id="sk-ad04f8b4-c5d7-4360-bd3f-c032bbc92ced" class"sk-top-container"><div class="sk-container"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d6c3b7c7-7866-457b-94fa-c73176aea8e3" type="checkbox" ><label class="sk-toggleable__label" for="d6c3b7c7-7866-457b-94fa-c73176aea8e3">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('columntransformer',
                     ColumnTransformer(transformers=[('simpleimputer',
                                                      SimpleImputer(add_indicator=True),
                                                      <sklearn.compose._column_transformer.make_column_selector object at 0x7f760fbdb850>),
                                                     ('ordinalencoder',
                                                      OrdinalEncoder(handle_unknown='use_encoded_value',
                                                                     unknown_value=-1),
                                                      <sklearn.compose._column_transformer.make_column_selector object at 0x7f760fbdbca0>)])),
                    ('randomforestregressor',
                     RandomForestRegressor(random_state=42))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3e4d7361-691f-4079-a078-aa3f18a63bb4" type="checkbox" ><label class="sk-toggleable__label" for="3e4d7361-691f-4079-a078-aa3f18a63bb4">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('simpleimputer',
                                     SimpleImputer(add_indicator=True),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f760fbdb850>),
                                    ('ordinalencoder',
                                     OrdinalEncoder(handle_unknown='use_encoded_value',
                                                    unknown_value=-1),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f760fbdbca0>)])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4065a737-5a85-4b9c-8e65-71e40b6470e4" type="checkbox" ><label class="sk-toggleable__label" for="4065a737-5a85-4b9c-8e65-71e40b6470e4">simpleimputer</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f760fbdb850></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="74f84c73-62b0-4d5a-8d50-3afafc5eb76c" type="checkbox" ><label class="sk-toggleable__label" for="74f84c73-62b0-4d5a-8d50-3afafc5eb76c">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(add_indicator=True)</pre></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fe26c1e2-8e1e-4151-982b-760933a98cb4" type="checkbox" ><label class="sk-toggleable__label" for="fe26c1e2-8e1e-4151-982b-760933a98cb4">ordinalencoder</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f760fbdbca0></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="69e21671-8dff-4a74-b334-7da0228aa088" type="checkbox" ><label class="sk-toggleable__label" for="69e21671-8dff-4a74-b334-7da0228aa088">OrdinalEncoder</label><div class="sk-toggleable__content"><pre>OrdinalEncoder(handle_unknown='use_encoded_value', unknown_value=-1)</pre></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="20c79651-e3aa-4e98-917f-2f4bb2e333e2" type="checkbox" ><label class="sk-toggleable__label" for="20c79651-e3aa-4e98-917f-2f4bb2e333e2">RandomForestRegressor</label><div class="sk-toggleable__content"><pre>RandomForestRegressor(random_state=42)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 184-191

.. code-block:: default

    from sklearn.ensemble import HistGradientBoostingRegressor

    gbdt_pipeline = make_pipeline(
        tree_preprocessor, HistGradientBoostingRegressor(random_state=0)
    )
    gbdt_pipeline






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-9fe04767-937f-4797-a1aa-ddc36fe4f21c {color: black;background-color: white;}#sk-9fe04767-937f-4797-a1aa-ddc36fe4f21c pre{padding: 0;}#sk-9fe04767-937f-4797-a1aa-ddc36fe4f21c div.sk-toggleable {background-color: white;}#sk-9fe04767-937f-4797-a1aa-ddc36fe4f21c label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-9fe04767-937f-4797-a1aa-ddc36fe4f21c div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-9fe04767-937f-4797-a1aa-ddc36fe4f21c div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-9fe04767-937f-4797-a1aa-ddc36fe4f21c input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-9fe04767-937f-4797-a1aa-ddc36fe4f21c div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-9fe04767-937f-4797-a1aa-ddc36fe4f21c div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-9fe04767-937f-4797-a1aa-ddc36fe4f21c input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-9fe04767-937f-4797-a1aa-ddc36fe4f21c div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-9fe04767-937f-4797-a1aa-ddc36fe4f21c div.sk-estimator:hover {background-color: #d4ebff;}#sk-9fe04767-937f-4797-a1aa-ddc36fe4f21c div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-9fe04767-937f-4797-a1aa-ddc36fe4f21c div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-9fe04767-937f-4797-a1aa-ddc36fe4f21c div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-9fe04767-937f-4797-a1aa-ddc36fe4f21c div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-9fe04767-937f-4797-a1aa-ddc36fe4f21c div.sk-item {z-index: 1;}#sk-9fe04767-937f-4797-a1aa-ddc36fe4f21c div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-9fe04767-937f-4797-a1aa-ddc36fe4f21c div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-9fe04767-937f-4797-a1aa-ddc36fe4f21c div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-9fe04767-937f-4797-a1aa-ddc36fe4f21c div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-9fe04767-937f-4797-a1aa-ddc36fe4f21c div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-9fe04767-937f-4797-a1aa-ddc36fe4f21c div.sk-parallel-item:only-child::after {width: 0;}#sk-9fe04767-937f-4797-a1aa-ddc36fe4f21c div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-9fe04767-937f-4797-a1aa-ddc36fe4f21c div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-9fe04767-937f-4797-a1aa-ddc36fe4f21c div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-9fe04767-937f-4797-a1aa-ddc36fe4f21c div.sk-container {display: inline-block;position: relative;}</style><div id="sk-9fe04767-937f-4797-a1aa-ddc36fe4f21c" class"sk-top-container"><div class="sk-container"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4f3fad2d-7de2-4e8c-9d4b-43b31e9263eb" type="checkbox" ><label class="sk-toggleable__label" for="4f3fad2d-7de2-4e8c-9d4b-43b31e9263eb">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('columntransformer',
                     ColumnTransformer(transformers=[('simpleimputer',
                                                      SimpleImputer(add_indicator=True),
                                                      <sklearn.compose._column_transformer.make_column_selector object at 0x7f760fbdb850>),
                                                     ('ordinalencoder',
                                                      OrdinalEncoder(handle_unknown='use_encoded_value',
                                                                     unknown_value=-1),
                                                      <sklearn.compose._column_transformer.make_column_selector object at 0x7f760fbdbca0>)])),
                    ('histgradientboostingregressor',
                     HistGradientBoostingRegressor(random_state=0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3b7e77d5-b6ca-4a74-b220-94f9f5115c5c" type="checkbox" ><label class="sk-toggleable__label" for="3b7e77d5-b6ca-4a74-b220-94f9f5115c5c">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('simpleimputer',
                                     SimpleImputer(add_indicator=True),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f760fbdb850>),
                                    ('ordinalencoder',
                                     OrdinalEncoder(handle_unknown='use_encoded_value',
                                                    unknown_value=-1),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f760fbdbca0>)])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0b3f9892-2850-416d-b9ec-80b38042c4c7" type="checkbox" ><label class="sk-toggleable__label" for="0b3f9892-2850-416d-b9ec-80b38042c4c7">simpleimputer</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f760fbdb850></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6e70c28b-77a0-4dd0-9508-2f0888e22d17" type="checkbox" ><label class="sk-toggleable__label" for="6e70c28b-77a0-4dd0-9508-2f0888e22d17">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(add_indicator=True)</pre></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="30797136-4d5a-4f63-b319-fdf08b3d9115" type="checkbox" ><label class="sk-toggleable__label" for="30797136-4d5a-4f63-b319-fdf08b3d9115">ordinalencoder</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f760fbdbca0></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7d62e229-b00f-4a9d-9e5b-094148dd7955" type="checkbox" ><label class="sk-toggleable__label" for="7d62e229-b00f-4a9d-9e5b-094148dd7955">OrdinalEncoder</label><div class="sk-toggleable__content"><pre>OrdinalEncoder(handle_unknown='use_encoded_value', unknown_value=-1)</pre></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b2b8e45e-0971-49c5-8f3f-b1bbfa5d0086" type="checkbox" ><label class="sk-toggleable__label" for="b2b8e45e-0971-49c5-8f3f-b1bbfa5d0086">HistGradientBoostingRegressor</label><div class="sk-toggleable__content"><pre>HistGradientBoostingRegressor(random_state=0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 192-204

.. code-block:: default

    from sklearn.ensemble import StackingRegressor
    from sklearn.linear_model import RidgeCV

    estimators = [
        ("Random Forest", rf_pipeline),
        ("Lasso", lasso_pipeline),
        ("Gradient Boosting", gbdt_pipeline),
    ]

    stacking_regressor = StackingRegressor(estimators=estimators, final_estimator=RidgeCV())
    stacking_regressor






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-1f617de9-10ac-451d-a03f-33cf6570363e {color: black;background-color: white;}#sk-1f617de9-10ac-451d-a03f-33cf6570363e pre{padding: 0;}#sk-1f617de9-10ac-451d-a03f-33cf6570363e div.sk-toggleable {background-color: white;}#sk-1f617de9-10ac-451d-a03f-33cf6570363e label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-1f617de9-10ac-451d-a03f-33cf6570363e div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-1f617de9-10ac-451d-a03f-33cf6570363e div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-1f617de9-10ac-451d-a03f-33cf6570363e input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-1f617de9-10ac-451d-a03f-33cf6570363e div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-1f617de9-10ac-451d-a03f-33cf6570363e div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-1f617de9-10ac-451d-a03f-33cf6570363e input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-1f617de9-10ac-451d-a03f-33cf6570363e div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-1f617de9-10ac-451d-a03f-33cf6570363e div.sk-estimator:hover {background-color: #d4ebff;}#sk-1f617de9-10ac-451d-a03f-33cf6570363e div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-1f617de9-10ac-451d-a03f-33cf6570363e div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-1f617de9-10ac-451d-a03f-33cf6570363e div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-1f617de9-10ac-451d-a03f-33cf6570363e div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-1f617de9-10ac-451d-a03f-33cf6570363e div.sk-item {z-index: 1;}#sk-1f617de9-10ac-451d-a03f-33cf6570363e div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-1f617de9-10ac-451d-a03f-33cf6570363e div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-1f617de9-10ac-451d-a03f-33cf6570363e div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-1f617de9-10ac-451d-a03f-33cf6570363e div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-1f617de9-10ac-451d-a03f-33cf6570363e div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-1f617de9-10ac-451d-a03f-33cf6570363e div.sk-parallel-item:only-child::after {width: 0;}#sk-1f617de9-10ac-451d-a03f-33cf6570363e div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-1f617de9-10ac-451d-a03f-33cf6570363e div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-1f617de9-10ac-451d-a03f-33cf6570363e div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-1f617de9-10ac-451d-a03f-33cf6570363e div.sk-container {display: inline-block;position: relative;}</style><div id="sk-1f617de9-10ac-451d-a03f-33cf6570363e" class"sk-top-container"><div class="sk-container"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d365da8b-271d-4e2e-8bd3-73c9ea034cc1" type="checkbox" ><label class="sk-toggleable__label" for="d365da8b-271d-4e2e-8bd3-73c9ea034cc1">StackingRegressor</label><div class="sk-toggleable__content"><pre>StackingRegressor(estimators=[('Random Forest',
                                   Pipeline(steps=[('columntransformer',
                                                    ColumnTransformer(transformers=[('simpleimputer',
                                                                                     SimpleImputer(add_indicator=True),
                                                                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f760fbdb850>),
                                                                                    ('ordinalencoder',
                                                                                     OrdinalEncoder(handle_unknown='use_encoded_value',
                                                                                                    unknown_value=-1),
                                                                                     <sklearn.compose...
                                                                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f760fbdb850>),
                                                                                    ('ordinalencoder',
                                                                                     OrdinalEncoder(handle_unknown='use_encoded_value',
                                                                                                    unknown_value=-1),
                                                                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f760fbdbca0>)])),
                                                   ('histgradientboostingregressor',
                                                    HistGradientBoostingRegressor(random_state=0))]))],
                      final_estimator=RidgeCV(alphas=array([ 0.1,  1. , 10. ])))</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><label>Random Forest</label></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="029a159f-6f50-4b41-915c-d288486c8d69" type="checkbox" ><label class="sk-toggleable__label" for="029a159f-6f50-4b41-915c-d288486c8d69">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('simpleimputer',
                                     SimpleImputer(add_indicator=True),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f760fbdb850>),
                                    ('ordinalencoder',
                                     OrdinalEncoder(handle_unknown='use_encoded_value',
                                                    unknown_value=-1),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f760fbdbca0>)])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2b0edf51-64e6-4489-bdf7-30e7eb240bcf" type="checkbox" ><label class="sk-toggleable__label" for="2b0edf51-64e6-4489-bdf7-30e7eb240bcf">simpleimputer</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f760fbdb850></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="17125e87-9b9d-4e52-aafa-0a42f8766c67" type="checkbox" ><label class="sk-toggleable__label" for="17125e87-9b9d-4e52-aafa-0a42f8766c67">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(add_indicator=True)</pre></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d64bc233-3ac8-4cc3-be66-83ab3e9d415c" type="checkbox" ><label class="sk-toggleable__label" for="d64bc233-3ac8-4cc3-be66-83ab3e9d415c">ordinalencoder</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f760fbdbca0></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d3352df2-9e94-4f8c-a582-9fe7c966e3c8" type="checkbox" ><label class="sk-toggleable__label" for="d3352df2-9e94-4f8c-a582-9fe7c966e3c8">OrdinalEncoder</label><div class="sk-toggleable__content"><pre>OrdinalEncoder(handle_unknown='use_encoded_value', unknown_value=-1)</pre></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f6115202-fdca-4244-91aa-fd2115b25f83" type="checkbox" ><label class="sk-toggleable__label" for="f6115202-fdca-4244-91aa-fd2115b25f83">RandomForestRegressor</label><div class="sk-toggleable__content"><pre>RandomForestRegressor(random_state=42)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><label>Lasso</label></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8ce8e4b0-822f-4b18-9145-d3f908039599" type="checkbox" ><label class="sk-toggleable__label" for="8ce8e4b0-822f-4b18-9145-d3f908039599">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('pipeline',
                                     Pipeline(steps=[('standardscaler',
                                                      StandardScaler()),
                                                     ('simpleimputer',
                                                      SimpleImputer(add_indicator=True))]),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f760fbdb850>),
                                    ('onehotencoder',
                                     OneHotEncoder(handle_unknown='ignore'),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f760fbdbca0>)])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f6eaeecf-80c4-49f5-86be-c5a83c721c8f" type="checkbox" ><label class="sk-toggleable__label" for="f6eaeecf-80c4-49f5-86be-c5a83c721c8f">pipeline</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f760fbdb850></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="853c6280-c6a6-46bc-a85a-16fc96a788ad" type="checkbox" ><label class="sk-toggleable__label" for="853c6280-c6a6-46bc-a85a-16fc96a788ad">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e76cf292-a159-4e27-814c-c1d8c161f22a" type="checkbox" ><label class="sk-toggleable__label" for="e76cf292-a159-4e27-814c-c1d8c161f22a">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(add_indicator=True)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b1024f31-1fc5-4430-9031-d33c1bb31171" type="checkbox" ><label class="sk-toggleable__label" for="b1024f31-1fc5-4430-9031-d33c1bb31171">onehotencoder</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f760fbdbca0></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1ed1f1aa-d462-4269-b6ca-2ddd9b65e2c1" type="checkbox" ><label class="sk-toggleable__label" for="1ed1f1aa-d462-4269-b6ca-2ddd9b65e2c1">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown='ignore')</pre></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="34d9e562-0eee-443a-8fde-ce9931236c9f" type="checkbox" ><label class="sk-toggleable__label" for="34d9e562-0eee-443a-8fde-ce9931236c9f">LassoCV</label><div class="sk-toggleable__content"><pre>LassoCV()</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><label>Gradient Boosting</label></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ea3b07f1-1244-4fa9-ae79-bd9afc8fe347" type="checkbox" ><label class="sk-toggleable__label" for="ea3b07f1-1244-4fa9-ae79-bd9afc8fe347">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('simpleimputer',
                                     SimpleImputer(add_indicator=True),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f760fbdb850>),
                                    ('ordinalencoder',
                                     OrdinalEncoder(handle_unknown='use_encoded_value',
                                                    unknown_value=-1),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f760fbdbca0>)])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="63febde1-be27-43b9-968a-dbbe61ce7f03" type="checkbox" ><label class="sk-toggleable__label" for="63febde1-be27-43b9-968a-dbbe61ce7f03">simpleimputer</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f760fbdb850></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="28954427-4965-4341-b433-289fed619289" type="checkbox" ><label class="sk-toggleable__label" for="28954427-4965-4341-b433-289fed619289">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(add_indicator=True)</pre></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3e9d4b40-de71-4eb2-9459-cf3318d83ccb" type="checkbox" ><label class="sk-toggleable__label" for="3e9d4b40-de71-4eb2-9459-cf3318d83ccb">ordinalencoder</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f760fbdbca0></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="82c886c0-ad06-435f-b0b8-9b9bf6ca8760" type="checkbox" ><label class="sk-toggleable__label" for="82c886c0-ad06-435f-b0b8-9b9bf6ca8760">OrdinalEncoder</label><div class="sk-toggleable__content"><pre>OrdinalEncoder(handle_unknown='use_encoded_value', unknown_value=-1)</pre></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d2bfb000-1356-42c3-8644-4a931dda7fd8" type="checkbox" ><label class="sk-toggleable__label" for="d2bfb000-1356-42c3-8644-4a931dda7fd8">HistGradientBoostingRegressor</label><div class="sk-toggleable__content"><pre>HistGradientBoostingRegressor(random_state=0)</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><label>final_estimator</label></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d70c7086-f602-47b3-b406-7556bac18e1f" type="checkbox" ><label class="sk-toggleable__label" for="d70c7086-f602-47b3-b406-7556bac18e1f">RidgeCV</label><div class="sk-toggleable__content"><pre>RidgeCV(alphas=array([ 0.1,  1. , 10. ]))</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 205-214

Measure and plot the results
#############################################################################

 Now we can use Ames Housing dataset to make the predictions. We check the
 performance of each individual predictor as well as of the stack of the
 regressors.

 The function ``plot_regression_results`` is used to plot the predicted and
 true targets.

.. GENERATED FROM PYTHON SOURCE LINES 214-279

.. code-block:: default



    import time
    import matplotlib.pyplot as plt
    from sklearn.model_selection import cross_validate, cross_val_predict


    def plot_regression_results(ax, y_true, y_pred, title, scores, elapsed_time):
        """Scatter plot of the predicted vs true targets."""
        ax.plot(
            [y_true.min(), y_true.max()], [y_true.min(), y_true.max()], "--r", linewidth=2
        )
        ax.scatter(y_true, y_pred, alpha=0.2)

        ax.spines["top"].set_visible(False)
        ax.spines["right"].set_visible(False)
        ax.get_xaxis().tick_bottom()
        ax.get_yaxis().tick_left()
        ax.spines["left"].set_position(("outward", 10))
        ax.spines["bottom"].set_position(("outward", 10))
        ax.set_xlim([y_true.min(), y_true.max()])
        ax.set_ylim([y_true.min(), y_true.max()])
        ax.set_xlabel("Measured")
        ax.set_ylabel("Predicted")
        extra = plt.Rectangle(
            (0, 0), 0, 0, fc="w", fill=False, edgecolor="none", linewidth=0
        )
        ax.legend([extra], [scores], loc="upper left")
        title = title + "\n Evaluation in {:.2f} seconds".format(elapsed_time)
        ax.set_title(title)


    fig, axs = plt.subplots(2, 2, figsize=(9, 7))
    axs = np.ravel(axs)

    for ax, (name, est) in zip(
        axs, estimators + [("Stacking Regressor", stacking_regressor)]
    ):
        start_time = time.time()
        score = cross_validate(
            est, X, y, scoring=["r2", "neg_mean_absolute_error"], n_jobs=-1, verbose=0
        )
        elapsed_time = time.time() - start_time

        y_pred = cross_val_predict(est, X, y, n_jobs=-1, verbose=0)

        plot_regression_results(
            ax,
            y,
            y_pred,
            name,
            (r"$R^2={:.2f} \pm {:.2f}$" + "\n" + r"$MAE={:.2f} \pm {:.2f}$").format(
                np.mean(score["test_r2"]),
                np.std(score["test_r2"]),
                -np.mean(score["test_neg_mean_absolute_error"]),
                np.std(score["test_neg_mean_absolute_error"]),
            ),
            elapsed_time,
        )

    plt.suptitle("Single predictors versus stacked predictors")
    plt.tight_layout()
    plt.subplots_adjust(top=0.9)
    plt.show()




.. image-sg:: /auto_examples/ensemble/images/sphx_glr_plot_stack_predictors_001.png
   :alt: Single predictors versus stacked predictors, Random Forest  Evaluation in 2.91 seconds, Lasso  Evaluation in 0.40 seconds, Gradient Boosting  Evaluation in 0.70 seconds, Stacking Regressor  Evaluation in 11.50 seconds
   :srcset: /auto_examples/ensemble/images/sphx_glr_plot_stack_predictors_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 280-283

The stacked regressor will combine the strengths of the different regressors.
However, we also see that training the stacked regressor is much more
computationally expensive.


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  30.208 seconds)


.. _sphx_glr_download_auto_examples_ensemble_plot_stack_predictors.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/ensemble/plot_stack_predictors.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_stack_predictors.py <plot_stack_predictors.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_stack_predictors.ipynb <plot_stack_predictors.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
