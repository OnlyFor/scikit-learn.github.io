
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/ensemble/plot_stack_predictors.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_ensemble_plot_stack_predictors.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_ensemble_plot_stack_predictors.py:


=================================
Combine predictors using stacking
=================================

.. currentmodule:: sklearn

Stacking refers to a method to blend estimators. In this strategy, some
estimators are individually fitted on some training data while a final
estimator is trained using the stacked predictions of these base estimators.

In this example, we illustrate the use case in which different regressors are
stacked together and a final linear penalized regressor is used to output the
prediction. We compare the performance of each individual regressor with the
stacking strategy. Stacking slightly improves the overall performance.

.. GENERATED FROM PYTHON SOURCE LINES 18-29

.. code-block:: default


    # Authors: Guillaume Lemaitre <g.lemaitre58@gmail.com>
    #          Maria Telenczuk    <https://github.com/maikia>
    # License: BSD 3 clause

    print(__doc__)

    from sklearn import set_config

    set_config(display="diagram")








.. GENERATED FROM PYTHON SOURCE LINES 30-46

Download the dataset
#############################################################################

 We will use `Ames Housing`_ dataset which was first compiled by Dean De Cock
 and became better known after it was used in Kaggle challenge. It is a set
 of 1460 residential homes in Ames, Iowa, each described by 80 features. We
 will use it to predict the final logarithmic price of the houses. In this
 example we will use only 20 most interesting features chosen using
 GradientBoostingRegressor() and limit number of entries (here we won't go
 into the details on how to select the most interesting features).

 The Ames housing dataset is not shipped with scikit-learn and therefore we
 will fetch it from `OpenML`_.

 .. _`Ames Housing`: http://jse.amstat.org/v19n3/decock.pdf
 .. _`OpenML`: https://www.openml.org/d/42165

.. GENERATED FROM PYTHON SOURCE LINES 46-92

.. code-block:: default


    import numpy as np

    from sklearn.datasets import fetch_openml
    from sklearn.utils import shuffle


    def load_ames_housing():
        df = fetch_openml(name="house_prices", as_frame=True)
        X = df.data
        y = df.target

        features = [
            "YrSold",
            "HeatingQC",
            "Street",
            "YearRemodAdd",
            "Heating",
            "MasVnrType",
            "BsmtUnfSF",
            "Foundation",
            "MasVnrArea",
            "MSSubClass",
            "ExterQual",
            "Condition2",
            "GarageCars",
            "GarageType",
            "OverallQual",
            "TotalBsmtSF",
            "BsmtFinSF1",
            "HouseStyle",
            "MiscFeature",
            "MoSold",
        ]

        X = X[features]
        X, y = shuffle(X, y, random_state=0)

        X = X[:600]
        y = y[:600]
        return X, np.log(y)


    X, y = load_ames_housing()









.. GENERATED FROM PYTHON SOURCE LINES 93-99

Make pipeline to preprocess the data
#############################################################################

 Before we can use Ames dataset we still need to do some preprocessing.
 First, we will select the categorical and numerical columns of the dataset to
 construct the first step of the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 99-106

.. code-block:: default


    from sklearn.compose import make_column_selector

    cat_selector = make_column_selector(dtype_include=object)
    num_selector = make_column_selector(dtype_include=np.number)
    cat_selector(X)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    ['HeatingQC', 'Street', 'Heating', 'MasVnrType', 'Foundation', 'ExterQual', 'Condition2', 'GarageType', 'HouseStyle', 'MiscFeature']



.. GENERATED FROM PYTHON SOURCE LINES 107-109

.. code-block:: default

    num_selector(X)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    ['YrSold', 'YearRemodAdd', 'BsmtUnfSF', 'MasVnrArea', 'MSSubClass', 'GarageCars', 'OverallQual', 'TotalBsmtSF', 'BsmtFinSF1', 'MoSold']



.. GENERATED FROM PYTHON SOURCE LINES 110-119

Then, we will need to design preprocessing pipelines which depends on the
ending regressor. If the ending regressor is a linear model, one needs to
one-hot encode the categories. If the ending regressor is a tree-based model
an ordinal encoder will be sufficient. Besides, numerical values need to be
standardized for a linear model while the raw numerical data can be treated
as is by a tree-based model. However, both models need an imputer to
handle missing values.

We will first design the pipeline required for the tree-based models.

.. GENERATED FROM PYTHON SOURCE LINES 119-135

.. code-block:: default


    from sklearn.compose import make_column_transformer
    from sklearn.impute import SimpleImputer
    from sklearn.pipeline import make_pipeline
    from sklearn.preprocessing import OrdinalEncoder

    cat_tree_processor = OrdinalEncoder(
        handle_unknown="use_encoded_value", unknown_value=-1
    )
    num_tree_processor = SimpleImputer(strategy="mean", add_indicator=True)

    tree_preprocessor = make_column_transformer(
        (num_tree_processor, num_selector), (cat_tree_processor, cat_selector)
    )
    tree_preprocessor






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-5b553602-7192-49f7-bf06-39a9c4792bf8 {color: black;background-color: white;}#sk-5b553602-7192-49f7-bf06-39a9c4792bf8 pre{padding: 0;}#sk-5b553602-7192-49f7-bf06-39a9c4792bf8 div.sk-toggleable {background-color: white;}#sk-5b553602-7192-49f7-bf06-39a9c4792bf8 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-5b553602-7192-49f7-bf06-39a9c4792bf8 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-5b553602-7192-49f7-bf06-39a9c4792bf8 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-5b553602-7192-49f7-bf06-39a9c4792bf8 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-5b553602-7192-49f7-bf06-39a9c4792bf8 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-5b553602-7192-49f7-bf06-39a9c4792bf8 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-5b553602-7192-49f7-bf06-39a9c4792bf8 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-5b553602-7192-49f7-bf06-39a9c4792bf8 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-5b553602-7192-49f7-bf06-39a9c4792bf8 div.sk-estimator:hover {background-color: #d4ebff;}#sk-5b553602-7192-49f7-bf06-39a9c4792bf8 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-5b553602-7192-49f7-bf06-39a9c4792bf8 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-5b553602-7192-49f7-bf06-39a9c4792bf8 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-5b553602-7192-49f7-bf06-39a9c4792bf8 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-5b553602-7192-49f7-bf06-39a9c4792bf8 div.sk-item {z-index: 1;}#sk-5b553602-7192-49f7-bf06-39a9c4792bf8 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-5b553602-7192-49f7-bf06-39a9c4792bf8 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-5b553602-7192-49f7-bf06-39a9c4792bf8 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-5b553602-7192-49f7-bf06-39a9c4792bf8 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-5b553602-7192-49f7-bf06-39a9c4792bf8 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-5b553602-7192-49f7-bf06-39a9c4792bf8 div.sk-parallel-item:only-child::after {width: 0;}#sk-5b553602-7192-49f7-bf06-39a9c4792bf8 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-5b553602-7192-49f7-bf06-39a9c4792bf8 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-5b553602-7192-49f7-bf06-39a9c4792bf8 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-5b553602-7192-49f7-bf06-39a9c4792bf8 div.sk-container {display: inline-block;position: relative;}</style><div id="sk-5b553602-7192-49f7-bf06-39a9c4792bf8" class"sk-top-container"><div class="sk-container"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="373ef792-4470-4506-aa6b-cf1a399d170f" type="checkbox" ><label class="sk-toggleable__label" for="373ef792-4470-4506-aa6b-cf1a399d170f">ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('simpleimputer',
                                     SimpleImputer(add_indicator=True),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7ff60cd207c0>),
                                    ('ordinalencoder',
                                     OrdinalEncoder(handle_unknown='use_encoded_value',
                                                    unknown_value=-1),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7ff60cd201f0>)])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="dbc49022-9846-4928-841a-780921466c40" type="checkbox" ><label class="sk-toggleable__label" for="dbc49022-9846-4928-841a-780921466c40">simpleimputer</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7ff60cd207c0></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="af28a40f-7986-40f9-8b93-a3e2ce831fd0" type="checkbox" ><label class="sk-toggleable__label" for="af28a40f-7986-40f9-8b93-a3e2ce831fd0">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(add_indicator=True)</pre></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6d44f313-ba79-4a8e-8919-4bf2a24eb604" type="checkbox" ><label class="sk-toggleable__label" for="6d44f313-ba79-4a8e-8919-4bf2a24eb604">ordinalencoder</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7ff60cd201f0></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c4a7ea2a-1353-4d52-a3b1-f54261696923" type="checkbox" ><label class="sk-toggleable__label" for="c4a7ea2a-1353-4d52-a3b1-f54261696923">OrdinalEncoder</label><div class="sk-toggleable__content"><pre>OrdinalEncoder(handle_unknown='use_encoded_value', unknown_value=-1)</pre></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 136-138

Then, we will now define the preprocessor used when the ending regressor
is a linear model.

.. GENERATED FROM PYTHON SOURCE LINES 138-152

.. code-block:: default


    from sklearn.preprocessing import OneHotEncoder
    from sklearn.preprocessing import StandardScaler

    cat_linear_processor = OneHotEncoder(handle_unknown="ignore")
    num_linear_processor = make_pipeline(
        StandardScaler(), SimpleImputer(strategy="mean", add_indicator=True)
    )

    linear_preprocessor = make_column_transformer(
        (num_linear_processor, num_selector), (cat_linear_processor, cat_selector)
    )
    linear_preprocessor






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-f881f15f-b004-42c8-94b7-422ce9f8aeec {color: black;background-color: white;}#sk-f881f15f-b004-42c8-94b7-422ce9f8aeec pre{padding: 0;}#sk-f881f15f-b004-42c8-94b7-422ce9f8aeec div.sk-toggleable {background-color: white;}#sk-f881f15f-b004-42c8-94b7-422ce9f8aeec label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-f881f15f-b004-42c8-94b7-422ce9f8aeec div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-f881f15f-b004-42c8-94b7-422ce9f8aeec div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-f881f15f-b004-42c8-94b7-422ce9f8aeec input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-f881f15f-b004-42c8-94b7-422ce9f8aeec div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-f881f15f-b004-42c8-94b7-422ce9f8aeec div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-f881f15f-b004-42c8-94b7-422ce9f8aeec input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-f881f15f-b004-42c8-94b7-422ce9f8aeec div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-f881f15f-b004-42c8-94b7-422ce9f8aeec div.sk-estimator:hover {background-color: #d4ebff;}#sk-f881f15f-b004-42c8-94b7-422ce9f8aeec div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-f881f15f-b004-42c8-94b7-422ce9f8aeec div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-f881f15f-b004-42c8-94b7-422ce9f8aeec div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-f881f15f-b004-42c8-94b7-422ce9f8aeec div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-f881f15f-b004-42c8-94b7-422ce9f8aeec div.sk-item {z-index: 1;}#sk-f881f15f-b004-42c8-94b7-422ce9f8aeec div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-f881f15f-b004-42c8-94b7-422ce9f8aeec div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-f881f15f-b004-42c8-94b7-422ce9f8aeec div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-f881f15f-b004-42c8-94b7-422ce9f8aeec div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-f881f15f-b004-42c8-94b7-422ce9f8aeec div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-f881f15f-b004-42c8-94b7-422ce9f8aeec div.sk-parallel-item:only-child::after {width: 0;}#sk-f881f15f-b004-42c8-94b7-422ce9f8aeec div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-f881f15f-b004-42c8-94b7-422ce9f8aeec div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-f881f15f-b004-42c8-94b7-422ce9f8aeec div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-f881f15f-b004-42c8-94b7-422ce9f8aeec div.sk-container {display: inline-block;position: relative;}</style><div id="sk-f881f15f-b004-42c8-94b7-422ce9f8aeec" class"sk-top-container"><div class="sk-container"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="66e3968a-6a77-478c-8286-5b0882ce99ab" type="checkbox" ><label class="sk-toggleable__label" for="66e3968a-6a77-478c-8286-5b0882ce99ab">ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('pipeline',
                                     Pipeline(steps=[('standardscaler',
                                                      StandardScaler()),
                                                     ('simpleimputer',
                                                      SimpleImputer(add_indicator=True))]),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7ff60cd207c0>),
                                    ('onehotencoder',
                                     OneHotEncoder(handle_unknown='ignore'),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7ff60cd201f0>)])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b927b7b3-5566-4572-847f-e5b84f47a805" type="checkbox" ><label class="sk-toggleable__label" for="b927b7b3-5566-4572-847f-e5b84f47a805">pipeline</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7ff60cd207c0></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="663ce8b4-4e64-4246-8b18-766f197485d6" type="checkbox" ><label class="sk-toggleable__label" for="663ce8b4-4e64-4246-8b18-766f197485d6">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ac94bd19-9d07-4bb4-8c06-21be104b25e3" type="checkbox" ><label class="sk-toggleable__label" for="ac94bd19-9d07-4bb4-8c06-21be104b25e3">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(add_indicator=True)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4e2f9a95-e980-4353-a6e3-dbe3762bc92c" type="checkbox" ><label class="sk-toggleable__label" for="4e2f9a95-e980-4353-a6e3-dbe3762bc92c">onehotencoder</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7ff60cd201f0></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="168121fa-18d3-47fd-a829-40276792942e" type="checkbox" ><label class="sk-toggleable__label" for="168121fa-18d3-47fd-a829-40276792942e">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown='ignore')</pre></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 153-171

Stack of predictors on a single data set
#############################################################################

 It is sometimes tedious to find the model which will best perform on a given
 dataset. Stacking provide an alternative by combining the outputs of several
 learners, without the need to choose a model specifically. The performance of
 stacking is usually close to the best model and sometimes it can outperform
 the prediction performance of each individual model.

 Here, we combine 3 learners (linear and non-linear) and use a ridge regressor
 to combine their outputs together.

 .. note::
    Although we will make new pipelines with the processors which we wrote in
    the previous section for the 3 learners, the final estimator
    :class:`~sklearn.linear_model.RidgeCV()` does not need preprocessing of
    the data as it will be fed with the already preprocessed output from the 3
    learners.

.. GENERATED FROM PYTHON SOURCE LINES 171-177

.. code-block:: default


    from sklearn.linear_model import LassoCV

    lasso_pipeline = make_pipeline(linear_preprocessor, LassoCV())
    lasso_pipeline






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-09d4064b-2082-4ba2-9c01-267e5aa59d15 {color: black;background-color: white;}#sk-09d4064b-2082-4ba2-9c01-267e5aa59d15 pre{padding: 0;}#sk-09d4064b-2082-4ba2-9c01-267e5aa59d15 div.sk-toggleable {background-color: white;}#sk-09d4064b-2082-4ba2-9c01-267e5aa59d15 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-09d4064b-2082-4ba2-9c01-267e5aa59d15 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-09d4064b-2082-4ba2-9c01-267e5aa59d15 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-09d4064b-2082-4ba2-9c01-267e5aa59d15 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-09d4064b-2082-4ba2-9c01-267e5aa59d15 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-09d4064b-2082-4ba2-9c01-267e5aa59d15 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-09d4064b-2082-4ba2-9c01-267e5aa59d15 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-09d4064b-2082-4ba2-9c01-267e5aa59d15 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-09d4064b-2082-4ba2-9c01-267e5aa59d15 div.sk-estimator:hover {background-color: #d4ebff;}#sk-09d4064b-2082-4ba2-9c01-267e5aa59d15 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-09d4064b-2082-4ba2-9c01-267e5aa59d15 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-09d4064b-2082-4ba2-9c01-267e5aa59d15 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-09d4064b-2082-4ba2-9c01-267e5aa59d15 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-09d4064b-2082-4ba2-9c01-267e5aa59d15 div.sk-item {z-index: 1;}#sk-09d4064b-2082-4ba2-9c01-267e5aa59d15 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-09d4064b-2082-4ba2-9c01-267e5aa59d15 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-09d4064b-2082-4ba2-9c01-267e5aa59d15 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-09d4064b-2082-4ba2-9c01-267e5aa59d15 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-09d4064b-2082-4ba2-9c01-267e5aa59d15 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-09d4064b-2082-4ba2-9c01-267e5aa59d15 div.sk-parallel-item:only-child::after {width: 0;}#sk-09d4064b-2082-4ba2-9c01-267e5aa59d15 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-09d4064b-2082-4ba2-9c01-267e5aa59d15 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-09d4064b-2082-4ba2-9c01-267e5aa59d15 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-09d4064b-2082-4ba2-9c01-267e5aa59d15 div.sk-container {display: inline-block;position: relative;}</style><div id="sk-09d4064b-2082-4ba2-9c01-267e5aa59d15" class"sk-top-container"><div class="sk-container"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7254d046-c36b-4c89-8ae6-8deebaebd9ec" type="checkbox" ><label class="sk-toggleable__label" for="7254d046-c36b-4c89-8ae6-8deebaebd9ec">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('columntransformer',
                     ColumnTransformer(transformers=[('pipeline',
                                                      Pipeline(steps=[('standardscaler',
                                                                       StandardScaler()),
                                                                      ('simpleimputer',
                                                                       SimpleImputer(add_indicator=True))]),
                                                      <sklearn.compose._column_transformer.make_column_selector object at 0x7ff60cd207c0>),
                                                     ('onehotencoder',
                                                      OneHotEncoder(handle_unknown='ignore'),
                                                      <sklearn.compose._column_transformer.make_column_selector object at 0x7ff60cd201f0>)])),
                    ('lassocv', LassoCV())])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="47fc775f-38e6-4810-b202-a7366d738aaa" type="checkbox" ><label class="sk-toggleable__label" for="47fc775f-38e6-4810-b202-a7366d738aaa">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('pipeline',
                                     Pipeline(steps=[('standardscaler',
                                                      StandardScaler()),
                                                     ('simpleimputer',
                                                      SimpleImputer(add_indicator=True))]),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7ff60cd207c0>),
                                    ('onehotencoder',
                                     OneHotEncoder(handle_unknown='ignore'),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7ff60cd201f0>)])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="882ef1d1-32c1-4295-987a-8f97f89d9008" type="checkbox" ><label class="sk-toggleable__label" for="882ef1d1-32c1-4295-987a-8f97f89d9008">pipeline</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7ff60cd207c0></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5ac5fd39-cc58-4f40-af89-5ee0e5e0a867" type="checkbox" ><label class="sk-toggleable__label" for="5ac5fd39-cc58-4f40-af89-5ee0e5e0a867">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="169a1879-256c-4fda-8fb7-a9361fef6ada" type="checkbox" ><label class="sk-toggleable__label" for="169a1879-256c-4fda-8fb7-a9361fef6ada">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(add_indicator=True)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="500b786c-9209-480f-8308-2b3d9d34e453" type="checkbox" ><label class="sk-toggleable__label" for="500b786c-9209-480f-8308-2b3d9d34e453">onehotencoder</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7ff60cd201f0></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="823cc609-2fa0-4ada-b37a-c27410e7daeb" type="checkbox" ><label class="sk-toggleable__label" for="823cc609-2fa0-4ada-b37a-c27410e7daeb">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown='ignore')</pre></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7470b846-c415-45f4-9c7b-18d51059f71f" type="checkbox" ><label class="sk-toggleable__label" for="7470b846-c415-45f4-9c7b-18d51059f71f">LassoCV</label><div class="sk-toggleable__content"><pre>LassoCV()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 178-183

.. code-block:: default

    from sklearn.ensemble import RandomForestRegressor

    rf_pipeline = make_pipeline(tree_preprocessor, RandomForestRegressor(random_state=42))
    rf_pipeline






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-ae677988-9e8b-47da-a46b-2db663bf4d8d {color: black;background-color: white;}#sk-ae677988-9e8b-47da-a46b-2db663bf4d8d pre{padding: 0;}#sk-ae677988-9e8b-47da-a46b-2db663bf4d8d div.sk-toggleable {background-color: white;}#sk-ae677988-9e8b-47da-a46b-2db663bf4d8d label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-ae677988-9e8b-47da-a46b-2db663bf4d8d div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-ae677988-9e8b-47da-a46b-2db663bf4d8d div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-ae677988-9e8b-47da-a46b-2db663bf4d8d input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-ae677988-9e8b-47da-a46b-2db663bf4d8d div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ae677988-9e8b-47da-a46b-2db663bf4d8d div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ae677988-9e8b-47da-a46b-2db663bf4d8d input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-ae677988-9e8b-47da-a46b-2db663bf4d8d div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-ae677988-9e8b-47da-a46b-2db663bf4d8d div.sk-estimator:hover {background-color: #d4ebff;}#sk-ae677988-9e8b-47da-a46b-2db663bf4d8d div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-ae677988-9e8b-47da-a46b-2db663bf4d8d div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-ae677988-9e8b-47da-a46b-2db663bf4d8d div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ae677988-9e8b-47da-a46b-2db663bf4d8d div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-ae677988-9e8b-47da-a46b-2db663bf4d8d div.sk-item {z-index: 1;}#sk-ae677988-9e8b-47da-a46b-2db663bf4d8d div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-ae677988-9e8b-47da-a46b-2db663bf4d8d div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ae677988-9e8b-47da-a46b-2db663bf4d8d div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-ae677988-9e8b-47da-a46b-2db663bf4d8d div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-ae677988-9e8b-47da-a46b-2db663bf4d8d div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-ae677988-9e8b-47da-a46b-2db663bf4d8d div.sk-parallel-item:only-child::after {width: 0;}#sk-ae677988-9e8b-47da-a46b-2db663bf4d8d div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-ae677988-9e8b-47da-a46b-2db663bf4d8d div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-ae677988-9e8b-47da-a46b-2db663bf4d8d div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-ae677988-9e8b-47da-a46b-2db663bf4d8d div.sk-container {display: inline-block;position: relative;}</style><div id="sk-ae677988-9e8b-47da-a46b-2db663bf4d8d" class"sk-top-container"><div class="sk-container"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="18d93357-a7df-43c6-b0ee-668c672f9cd2" type="checkbox" ><label class="sk-toggleable__label" for="18d93357-a7df-43c6-b0ee-668c672f9cd2">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('columntransformer',
                     ColumnTransformer(transformers=[('simpleimputer',
                                                      SimpleImputer(add_indicator=True),
                                                      <sklearn.compose._column_transformer.make_column_selector object at 0x7ff60cd207c0>),
                                                     ('ordinalencoder',
                                                      OrdinalEncoder(handle_unknown='use_encoded_value',
                                                                     unknown_value=-1),
                                                      <sklearn.compose._column_transformer.make_column_selector object at 0x7ff60cd201f0>)])),
                    ('randomforestregressor',
                     RandomForestRegressor(random_state=42))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4ab2cb65-e38a-4e8a-a97e-c9adcaf759ae" type="checkbox" ><label class="sk-toggleable__label" for="4ab2cb65-e38a-4e8a-a97e-c9adcaf759ae">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('simpleimputer',
                                     SimpleImputer(add_indicator=True),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7ff60cd207c0>),
                                    ('ordinalencoder',
                                     OrdinalEncoder(handle_unknown='use_encoded_value',
                                                    unknown_value=-1),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7ff60cd201f0>)])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ea7440a4-3c46-44f4-9392-5d92d2a5e6c9" type="checkbox" ><label class="sk-toggleable__label" for="ea7440a4-3c46-44f4-9392-5d92d2a5e6c9">simpleimputer</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7ff60cd207c0></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="33b0cae5-441d-4e68-bfd7-184f4fb25d0f" type="checkbox" ><label class="sk-toggleable__label" for="33b0cae5-441d-4e68-bfd7-184f4fb25d0f">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(add_indicator=True)</pre></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="65777871-cfae-41bd-a34a-23038200526e" type="checkbox" ><label class="sk-toggleable__label" for="65777871-cfae-41bd-a34a-23038200526e">ordinalencoder</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7ff60cd201f0></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="27a81cf1-2c79-41c6-90ec-23d6881e6ce8" type="checkbox" ><label class="sk-toggleable__label" for="27a81cf1-2c79-41c6-90ec-23d6881e6ce8">OrdinalEncoder</label><div class="sk-toggleable__content"><pre>OrdinalEncoder(handle_unknown='use_encoded_value', unknown_value=-1)</pre></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7937900c-db54-4ed6-8b6e-92e482d284fb" type="checkbox" ><label class="sk-toggleable__label" for="7937900c-db54-4ed6-8b6e-92e482d284fb">RandomForestRegressor</label><div class="sk-toggleable__content"><pre>RandomForestRegressor(random_state=42)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 184-191

.. code-block:: default

    from sklearn.ensemble import HistGradientBoostingRegressor

    gbdt_pipeline = make_pipeline(
        tree_preprocessor, HistGradientBoostingRegressor(random_state=0)
    )
    gbdt_pipeline






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-3cb177d2-16fe-4d8a-8130-cd37b2224599 {color: black;background-color: white;}#sk-3cb177d2-16fe-4d8a-8130-cd37b2224599 pre{padding: 0;}#sk-3cb177d2-16fe-4d8a-8130-cd37b2224599 div.sk-toggleable {background-color: white;}#sk-3cb177d2-16fe-4d8a-8130-cd37b2224599 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-3cb177d2-16fe-4d8a-8130-cd37b2224599 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-3cb177d2-16fe-4d8a-8130-cd37b2224599 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-3cb177d2-16fe-4d8a-8130-cd37b2224599 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-3cb177d2-16fe-4d8a-8130-cd37b2224599 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-3cb177d2-16fe-4d8a-8130-cd37b2224599 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-3cb177d2-16fe-4d8a-8130-cd37b2224599 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-3cb177d2-16fe-4d8a-8130-cd37b2224599 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-3cb177d2-16fe-4d8a-8130-cd37b2224599 div.sk-estimator:hover {background-color: #d4ebff;}#sk-3cb177d2-16fe-4d8a-8130-cd37b2224599 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-3cb177d2-16fe-4d8a-8130-cd37b2224599 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-3cb177d2-16fe-4d8a-8130-cd37b2224599 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-3cb177d2-16fe-4d8a-8130-cd37b2224599 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-3cb177d2-16fe-4d8a-8130-cd37b2224599 div.sk-item {z-index: 1;}#sk-3cb177d2-16fe-4d8a-8130-cd37b2224599 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-3cb177d2-16fe-4d8a-8130-cd37b2224599 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-3cb177d2-16fe-4d8a-8130-cd37b2224599 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-3cb177d2-16fe-4d8a-8130-cd37b2224599 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-3cb177d2-16fe-4d8a-8130-cd37b2224599 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-3cb177d2-16fe-4d8a-8130-cd37b2224599 div.sk-parallel-item:only-child::after {width: 0;}#sk-3cb177d2-16fe-4d8a-8130-cd37b2224599 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-3cb177d2-16fe-4d8a-8130-cd37b2224599 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-3cb177d2-16fe-4d8a-8130-cd37b2224599 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-3cb177d2-16fe-4d8a-8130-cd37b2224599 div.sk-container {display: inline-block;position: relative;}</style><div id="sk-3cb177d2-16fe-4d8a-8130-cd37b2224599" class"sk-top-container"><div class="sk-container"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="70bd0529-7374-46eb-b438-bacedf5728ef" type="checkbox" ><label class="sk-toggleable__label" for="70bd0529-7374-46eb-b438-bacedf5728ef">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('columntransformer',
                     ColumnTransformer(transformers=[('simpleimputer',
                                                      SimpleImputer(add_indicator=True),
                                                      <sklearn.compose._column_transformer.make_column_selector object at 0x7ff60cd207c0>),
                                                     ('ordinalencoder',
                                                      OrdinalEncoder(handle_unknown='use_encoded_value',
                                                                     unknown_value=-1),
                                                      <sklearn.compose._column_transformer.make_column_selector object at 0x7ff60cd201f0>)])),
                    ('histgradientboostingregressor',
                     HistGradientBoostingRegressor(random_state=0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="dac68a05-4581-4efc-8044-1824c732c1d2" type="checkbox" ><label class="sk-toggleable__label" for="dac68a05-4581-4efc-8044-1824c732c1d2">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('simpleimputer',
                                     SimpleImputer(add_indicator=True),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7ff60cd207c0>),
                                    ('ordinalencoder',
                                     OrdinalEncoder(handle_unknown='use_encoded_value',
                                                    unknown_value=-1),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7ff60cd201f0>)])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="63143fa6-99c6-4154-bdd3-69ddfb81e355" type="checkbox" ><label class="sk-toggleable__label" for="63143fa6-99c6-4154-bdd3-69ddfb81e355">simpleimputer</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7ff60cd207c0></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d53ecf11-804b-49f1-9b10-49e47d98736c" type="checkbox" ><label class="sk-toggleable__label" for="d53ecf11-804b-49f1-9b10-49e47d98736c">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(add_indicator=True)</pre></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bac1abf6-6d8e-40b6-9918-0398e776e44e" type="checkbox" ><label class="sk-toggleable__label" for="bac1abf6-6d8e-40b6-9918-0398e776e44e">ordinalencoder</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7ff60cd201f0></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="47c1b4f7-7e6e-4bf4-9c5a-098adec930c4" type="checkbox" ><label class="sk-toggleable__label" for="47c1b4f7-7e6e-4bf4-9c5a-098adec930c4">OrdinalEncoder</label><div class="sk-toggleable__content"><pre>OrdinalEncoder(handle_unknown='use_encoded_value', unknown_value=-1)</pre></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="461c8325-c8d8-43eb-a963-856dccdedb66" type="checkbox" ><label class="sk-toggleable__label" for="461c8325-c8d8-43eb-a963-856dccdedb66">HistGradientBoostingRegressor</label><div class="sk-toggleable__content"><pre>HistGradientBoostingRegressor(random_state=0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 192-204

.. code-block:: default

    from sklearn.ensemble import StackingRegressor
    from sklearn.linear_model import RidgeCV

    estimators = [
        ("Random Forest", rf_pipeline),
        ("Lasso", lasso_pipeline),
        ("Gradient Boosting", gbdt_pipeline),
    ]

    stacking_regressor = StackingRegressor(estimators=estimators, final_estimator=RidgeCV())
    stacking_regressor






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-bac10618-cd2e-4ffc-9155-774d250c6532 {color: black;background-color: white;}#sk-bac10618-cd2e-4ffc-9155-774d250c6532 pre{padding: 0;}#sk-bac10618-cd2e-4ffc-9155-774d250c6532 div.sk-toggleable {background-color: white;}#sk-bac10618-cd2e-4ffc-9155-774d250c6532 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-bac10618-cd2e-4ffc-9155-774d250c6532 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-bac10618-cd2e-4ffc-9155-774d250c6532 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-bac10618-cd2e-4ffc-9155-774d250c6532 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-bac10618-cd2e-4ffc-9155-774d250c6532 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-bac10618-cd2e-4ffc-9155-774d250c6532 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-bac10618-cd2e-4ffc-9155-774d250c6532 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-bac10618-cd2e-4ffc-9155-774d250c6532 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-bac10618-cd2e-4ffc-9155-774d250c6532 div.sk-estimator:hover {background-color: #d4ebff;}#sk-bac10618-cd2e-4ffc-9155-774d250c6532 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-bac10618-cd2e-4ffc-9155-774d250c6532 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-bac10618-cd2e-4ffc-9155-774d250c6532 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-bac10618-cd2e-4ffc-9155-774d250c6532 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-bac10618-cd2e-4ffc-9155-774d250c6532 div.sk-item {z-index: 1;}#sk-bac10618-cd2e-4ffc-9155-774d250c6532 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-bac10618-cd2e-4ffc-9155-774d250c6532 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-bac10618-cd2e-4ffc-9155-774d250c6532 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-bac10618-cd2e-4ffc-9155-774d250c6532 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-bac10618-cd2e-4ffc-9155-774d250c6532 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-bac10618-cd2e-4ffc-9155-774d250c6532 div.sk-parallel-item:only-child::after {width: 0;}#sk-bac10618-cd2e-4ffc-9155-774d250c6532 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-bac10618-cd2e-4ffc-9155-774d250c6532 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-bac10618-cd2e-4ffc-9155-774d250c6532 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-bac10618-cd2e-4ffc-9155-774d250c6532 div.sk-container {display: inline-block;position: relative;}</style><div id="sk-bac10618-cd2e-4ffc-9155-774d250c6532" class"sk-top-container"><div class="sk-container"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cfca1286-4541-4492-bac7-4c68269c5160" type="checkbox" ><label class="sk-toggleable__label" for="cfca1286-4541-4492-bac7-4c68269c5160">StackingRegressor</label><div class="sk-toggleable__content"><pre>StackingRegressor(estimators=[('Random Forest',
                                   Pipeline(steps=[('columntransformer',
                                                    ColumnTransformer(transformers=[('simpleimputer',
                                                                                     SimpleImputer(add_indicator=True),
                                                                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7ff60cd207c0>),
                                                                                    ('ordinalencoder',
                                                                                     OrdinalEncoder(handle_unknown='use_encoded_value',
                                                                                                    unknown_value=-1),
                                                                                     <sklearn.compose...
                                                                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7ff60cd207c0>),
                                                                                    ('ordinalencoder',
                                                                                     OrdinalEncoder(handle_unknown='use_encoded_value',
                                                                                                    unknown_value=-1),
                                                                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7ff60cd201f0>)])),
                                                   ('histgradientboostingregressor',
                                                    HistGradientBoostingRegressor(random_state=0))]))],
                      final_estimator=RidgeCV(alphas=array([ 0.1,  1. , 10. ])))</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><label>Random Forest</label></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="05bb5c7d-b053-4e99-8d50-c21e05bf4e8e" type="checkbox" ><label class="sk-toggleable__label" for="05bb5c7d-b053-4e99-8d50-c21e05bf4e8e">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('simpleimputer',
                                     SimpleImputer(add_indicator=True),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7ff60cd207c0>),
                                    ('ordinalencoder',
                                     OrdinalEncoder(handle_unknown='use_encoded_value',
                                                    unknown_value=-1),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7ff60cd201f0>)])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3720b917-7534-4348-9dc4-93d67877fc26" type="checkbox" ><label class="sk-toggleable__label" for="3720b917-7534-4348-9dc4-93d67877fc26">simpleimputer</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7ff60cd207c0></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="95088519-d0ff-45ad-bba3-0dbcb10814f3" type="checkbox" ><label class="sk-toggleable__label" for="95088519-d0ff-45ad-bba3-0dbcb10814f3">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(add_indicator=True)</pre></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7bbad578-cc55-44b5-b65e-6d82eda28621" type="checkbox" ><label class="sk-toggleable__label" for="7bbad578-cc55-44b5-b65e-6d82eda28621">ordinalencoder</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7ff60cd201f0></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1457b770-834c-4da4-8ed0-7977d013c4f0" type="checkbox" ><label class="sk-toggleable__label" for="1457b770-834c-4da4-8ed0-7977d013c4f0">OrdinalEncoder</label><div class="sk-toggleable__content"><pre>OrdinalEncoder(handle_unknown='use_encoded_value', unknown_value=-1)</pre></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f187560c-7e7b-48da-a592-2afbf70cc5f6" type="checkbox" ><label class="sk-toggleable__label" for="f187560c-7e7b-48da-a592-2afbf70cc5f6">RandomForestRegressor</label><div class="sk-toggleable__content"><pre>RandomForestRegressor(random_state=42)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><label>Lasso</label></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5c7414f3-f373-4424-8de4-6e447136e9bb" type="checkbox" ><label class="sk-toggleable__label" for="5c7414f3-f373-4424-8de4-6e447136e9bb">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('pipeline',
                                     Pipeline(steps=[('standardscaler',
                                                      StandardScaler()),
                                                     ('simpleimputer',
                                                      SimpleImputer(add_indicator=True))]),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7ff60cd207c0>),
                                    ('onehotencoder',
                                     OneHotEncoder(handle_unknown='ignore'),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7ff60cd201f0>)])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cfee840a-0470-49c6-8a8a-73fd29810c52" type="checkbox" ><label class="sk-toggleable__label" for="cfee840a-0470-49c6-8a8a-73fd29810c52">pipeline</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7ff60cd207c0></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="072f20be-d723-4143-b22c-e1c47b2563ab" type="checkbox" ><label class="sk-toggleable__label" for="072f20be-d723-4143-b22c-e1c47b2563ab">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ec8d439a-b66a-495b-b0ef-cc528b07ee2d" type="checkbox" ><label class="sk-toggleable__label" for="ec8d439a-b66a-495b-b0ef-cc528b07ee2d">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(add_indicator=True)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1f34cf42-0e23-45cf-a3b4-039815b16e0b" type="checkbox" ><label class="sk-toggleable__label" for="1f34cf42-0e23-45cf-a3b4-039815b16e0b">onehotencoder</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7ff60cd201f0></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f68c6d08-b237-4165-ba15-c6394a5b86eb" type="checkbox" ><label class="sk-toggleable__label" for="f68c6d08-b237-4165-ba15-c6394a5b86eb">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown='ignore')</pre></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="44c02763-675b-4a55-8f35-0f61a1acd6b4" type="checkbox" ><label class="sk-toggleable__label" for="44c02763-675b-4a55-8f35-0f61a1acd6b4">LassoCV</label><div class="sk-toggleable__content"><pre>LassoCV()</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><label>Gradient Boosting</label></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="28f1a315-e24a-492c-a352-e769c67ef83f" type="checkbox" ><label class="sk-toggleable__label" for="28f1a315-e24a-492c-a352-e769c67ef83f">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('simpleimputer',
                                     SimpleImputer(add_indicator=True),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7ff60cd207c0>),
                                    ('ordinalencoder',
                                     OrdinalEncoder(handle_unknown='use_encoded_value',
                                                    unknown_value=-1),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7ff60cd201f0>)])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4ff14607-ee57-46d5-b7b8-8d91420f5281" type="checkbox" ><label class="sk-toggleable__label" for="4ff14607-ee57-46d5-b7b8-8d91420f5281">simpleimputer</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7ff60cd207c0></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f4e9e581-d6db-438b-b8ae-557c19c04607" type="checkbox" ><label class="sk-toggleable__label" for="f4e9e581-d6db-438b-b8ae-557c19c04607">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(add_indicator=True)</pre></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5f6d64bb-12bf-43c5-8f93-5faafe5f51a6" type="checkbox" ><label class="sk-toggleable__label" for="5f6d64bb-12bf-43c5-8f93-5faafe5f51a6">ordinalencoder</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7ff60cd201f0></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="87049cce-5c6b-4351-9e6d-41b29a83def0" type="checkbox" ><label class="sk-toggleable__label" for="87049cce-5c6b-4351-9e6d-41b29a83def0">OrdinalEncoder</label><div class="sk-toggleable__content"><pre>OrdinalEncoder(handle_unknown='use_encoded_value', unknown_value=-1)</pre></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e3a5917d-4ea7-4b93-b63d-fcf4f2da10c4" type="checkbox" ><label class="sk-toggleable__label" for="e3a5917d-4ea7-4b93-b63d-fcf4f2da10c4">HistGradientBoostingRegressor</label><div class="sk-toggleable__content"><pre>HistGradientBoostingRegressor(random_state=0)</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><label>final_estimator</label></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9828b88e-f7a0-449d-9526-9561eb91beab" type="checkbox" ><label class="sk-toggleable__label" for="9828b88e-f7a0-449d-9526-9561eb91beab">RidgeCV</label><div class="sk-toggleable__content"><pre>RidgeCV(alphas=array([ 0.1,  1. , 10. ]))</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 205-214

Measure and plot the results
#############################################################################

 Now we can use Ames Housing dataset to make the predictions. We check the
 performance of each individual predictor as well as of the stack of the
 regressors.

 The function ``plot_regression_results`` is used to plot the predicted and
 true targets.

.. GENERATED FROM PYTHON SOURCE LINES 214-279

.. code-block:: default



    import time
    import matplotlib.pyplot as plt
    from sklearn.model_selection import cross_validate, cross_val_predict


    def plot_regression_results(ax, y_true, y_pred, title, scores, elapsed_time):
        """Scatter plot of the predicted vs true targets."""
        ax.plot(
            [y_true.min(), y_true.max()], [y_true.min(), y_true.max()], "--r", linewidth=2
        )
        ax.scatter(y_true, y_pred, alpha=0.2)

        ax.spines["top"].set_visible(False)
        ax.spines["right"].set_visible(False)
        ax.get_xaxis().tick_bottom()
        ax.get_yaxis().tick_left()
        ax.spines["left"].set_position(("outward", 10))
        ax.spines["bottom"].set_position(("outward", 10))
        ax.set_xlim([y_true.min(), y_true.max()])
        ax.set_ylim([y_true.min(), y_true.max()])
        ax.set_xlabel("Measured")
        ax.set_ylabel("Predicted")
        extra = plt.Rectangle(
            (0, 0), 0, 0, fc="w", fill=False, edgecolor="none", linewidth=0
        )
        ax.legend([extra], [scores], loc="upper left")
        title = title + "\n Evaluation in {:.2f} seconds".format(elapsed_time)
        ax.set_title(title)


    fig, axs = plt.subplots(2, 2, figsize=(9, 7))
    axs = np.ravel(axs)

    for ax, (name, est) in zip(
        axs, estimators + [("Stacking Regressor", stacking_regressor)]
    ):
        start_time = time.time()
        score = cross_validate(
            est, X, y, scoring=["r2", "neg_mean_absolute_error"], n_jobs=-1, verbose=0
        )
        elapsed_time = time.time() - start_time

        y_pred = cross_val_predict(est, X, y, n_jobs=-1, verbose=0)

        plot_regression_results(
            ax,
            y,
            y_pred,
            name,
            (r"$R^2={:.2f} \pm {:.2f}$" + "\n" + r"$MAE={:.2f} \pm {:.2f}$").format(
                np.mean(score["test_r2"]),
                np.std(score["test_r2"]),
                -np.mean(score["test_neg_mean_absolute_error"]),
                np.std(score["test_neg_mean_absolute_error"]),
            ),
            elapsed_time,
        )

    plt.suptitle("Single predictors versus stacked predictors")
    plt.tight_layout()
    plt.subplots_adjust(top=0.9)
    plt.show()




.. image-sg:: /auto_examples/ensemble/images/sphx_glr_plot_stack_predictors_001.png
   :alt: Single predictors versus stacked predictors, Random Forest  Evaluation in 4.51 seconds, Lasso  Evaluation in 0.80 seconds, Gradient Boosting  Evaluation in 1.21 seconds, Stacking Regressor  Evaluation in 16.71 seconds
   :srcset: /auto_examples/ensemble/images/sphx_glr_plot_stack_predictors_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 280-283

The stacked regressor will combine the strengths of the different regressors.
However, we also see that training the stacked regressor is much more
computationally expensive.


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  46.598 seconds)


.. _sphx_glr_download_auto_examples_ensemble_plot_stack_predictors.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/ensemble/plot_stack_predictors.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_stack_predictors.py <plot_stack_predictors.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_stack_predictors.ipynb <plot_stack_predictors.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
