
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/ensemble/plot_stack_predictors.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_ensemble_plot_stack_predictors.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_ensemble_plot_stack_predictors.py:


=================================
Combine predictors using stacking
=================================

.. currentmodule:: sklearn

Stacking refers to a method to blend estimators. In this strategy, some
estimators are individually fitted on some training data while a final
estimator is trained using the stacked predictions of these base estimators.

In this example, we illustrate the use case in which different regressors are
stacked together and a final linear penalized regressor is used to output the
prediction. We compare the performance of each individual regressor with the
stacking strategy. Stacking slightly improves the overall performance.

.. GENERATED FROM PYTHON SOURCE LINES 18-29

.. code-block:: default


    # Authors: Guillaume Lemaitre <g.lemaitre58@gmail.com>
    #          Maria Telenczuk    <https://github.com/maikia>
    # License: BSD 3 clause

    print(__doc__)

    from sklearn import set_config

    set_config(display="diagram")








.. GENERATED FROM PYTHON SOURCE LINES 30-46

Download the dataset
#############################################################################

 We will use `Ames Housing`_ dataset which was first compiled by Dean De Cock
 and became better known after it was used in Kaggle challenge. It is a set
 of 1460 residential homes in Ames, Iowa, each described by 80 features. We
 will use it to predict the final logarithmic price of the houses. In this
 example we will use only 20 most interesting features chosen using
 GradientBoostingRegressor() and limit number of entries (here we won't go
 into the details on how to select the most interesting features).

 The Ames housing dataset is not shipped with scikit-learn and therefore we
 will fetch it from `OpenML`_.

 .. _`Ames Housing`: http://jse.amstat.org/v19n3/decock.pdf
 .. _`OpenML`: https://www.openml.org/d/42165

.. GENERATED FROM PYTHON SOURCE LINES 46-92

.. code-block:: default


    import numpy as np

    from sklearn.datasets import fetch_openml
    from sklearn.utils import shuffle


    def load_ames_housing():
        df = fetch_openml(name="house_prices", as_frame=True)
        X = df.data
        y = df.target

        features = [
            "YrSold",
            "HeatingQC",
            "Street",
            "YearRemodAdd",
            "Heating",
            "MasVnrType",
            "BsmtUnfSF",
            "Foundation",
            "MasVnrArea",
            "MSSubClass",
            "ExterQual",
            "Condition2",
            "GarageCars",
            "GarageType",
            "OverallQual",
            "TotalBsmtSF",
            "BsmtFinSF1",
            "HouseStyle",
            "MiscFeature",
            "MoSold",
        ]

        X = X[features]
        X, y = shuffle(X, y, random_state=0)

        X = X[:600]
        y = y[:600]
        return X, np.log(y)


    X, y = load_ames_housing()









.. GENERATED FROM PYTHON SOURCE LINES 93-99

Make pipeline to preprocess the data
#############################################################################

 Before we can use Ames dataset we still need to do some preprocessing.
 First, we will select the categorical and numerical columns of the dataset to
 construct the first step of the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 99-106

.. code-block:: default


    from sklearn.compose import make_column_selector

    cat_selector = make_column_selector(dtype_include=object)
    num_selector = make_column_selector(dtype_include=np.number)
    cat_selector(X)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    ['HeatingQC', 'Street', 'Heating', 'MasVnrType', 'Foundation', 'ExterQual', 'Condition2', 'GarageType', 'HouseStyle', 'MiscFeature']



.. GENERATED FROM PYTHON SOURCE LINES 107-109

.. code-block:: default

    num_selector(X)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    ['YrSold', 'YearRemodAdd', 'BsmtUnfSF', 'MasVnrArea', 'MSSubClass', 'GarageCars', 'OverallQual', 'TotalBsmtSF', 'BsmtFinSF1', 'MoSold']



.. GENERATED FROM PYTHON SOURCE LINES 110-119

Then, we will need to design preprocessing pipelines which depends on the
ending regressor. If the ending regressor is a linear model, one needs to
one-hot encode the categories. If the ending regressor is a tree-based model
an ordinal encoder will be sufficient. Besides, numerical values need to be
standardized for a linear model while the raw numerical data can be treated
as is by a tree-based model. However, both models need an imputer to
handle missing values.

We will first design the pipeline required for the tree-based models.

.. GENERATED FROM PYTHON SOURCE LINES 119-135

.. code-block:: default


    from sklearn.compose import make_column_transformer
    from sklearn.impute import SimpleImputer
    from sklearn.pipeline import make_pipeline
    from sklearn.preprocessing import OrdinalEncoder

    cat_tree_processor = OrdinalEncoder(
        handle_unknown="use_encoded_value", unknown_value=-1
    )
    num_tree_processor = SimpleImputer(strategy="mean", add_indicator=True)

    tree_preprocessor = make_column_transformer(
        (num_tree_processor, num_selector), (cat_tree_processor, cat_selector)
    )
    tree_preprocessor






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-f74ba689-8c14-4d6d-b817-30719435ea55 {color: black;background-color: white;}#sk-f74ba689-8c14-4d6d-b817-30719435ea55 pre{padding: 0;}#sk-f74ba689-8c14-4d6d-b817-30719435ea55 div.sk-toggleable {background-color: white;}#sk-f74ba689-8c14-4d6d-b817-30719435ea55 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-f74ba689-8c14-4d6d-b817-30719435ea55 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-f74ba689-8c14-4d6d-b817-30719435ea55 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-f74ba689-8c14-4d6d-b817-30719435ea55 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-f74ba689-8c14-4d6d-b817-30719435ea55 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-f74ba689-8c14-4d6d-b817-30719435ea55 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-f74ba689-8c14-4d6d-b817-30719435ea55 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-f74ba689-8c14-4d6d-b817-30719435ea55 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-f74ba689-8c14-4d6d-b817-30719435ea55 div.sk-estimator:hover {background-color: #d4ebff;}#sk-f74ba689-8c14-4d6d-b817-30719435ea55 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-f74ba689-8c14-4d6d-b817-30719435ea55 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-f74ba689-8c14-4d6d-b817-30719435ea55 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-f74ba689-8c14-4d6d-b817-30719435ea55 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-f74ba689-8c14-4d6d-b817-30719435ea55 div.sk-item {z-index: 1;}#sk-f74ba689-8c14-4d6d-b817-30719435ea55 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-f74ba689-8c14-4d6d-b817-30719435ea55 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-f74ba689-8c14-4d6d-b817-30719435ea55 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-f74ba689-8c14-4d6d-b817-30719435ea55 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-f74ba689-8c14-4d6d-b817-30719435ea55 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-f74ba689-8c14-4d6d-b817-30719435ea55 div.sk-parallel-item:only-child::after {width: 0;}#sk-f74ba689-8c14-4d6d-b817-30719435ea55 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-f74ba689-8c14-4d6d-b817-30719435ea55 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-f74ba689-8c14-4d6d-b817-30719435ea55 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-f74ba689-8c14-4d6d-b817-30719435ea55 div.sk-container {display: inline-block;position: relative;}</style><div id="sk-f74ba689-8c14-4d6d-b817-30719435ea55" class"sk-top-container"><div class="sk-container"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="11c51ba7-2b3c-49f1-9397-db2c9f4e95d8" type="checkbox" ><label class="sk-toggleable__label" for="11c51ba7-2b3c-49f1-9397-db2c9f4e95d8">ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('simpleimputer',
                                     SimpleImputer(add_indicator=True),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f2e5d83b2b0>),
                                    ('ordinalencoder',
                                     OrdinalEncoder(handle_unknown='use_encoded_value',
                                                    unknown_value=-1),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f2e5d83b8b0>)])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f5db7b11-68d2-455b-aafe-860fb47485f5" type="checkbox" ><label class="sk-toggleable__label" for="f5db7b11-68d2-455b-aafe-860fb47485f5">simpleimputer</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f2e5d83b2b0></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d1ee8897-fa76-4f0f-b980-be9771725d40" type="checkbox" ><label class="sk-toggleable__label" for="d1ee8897-fa76-4f0f-b980-be9771725d40">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(add_indicator=True)</pre></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="723e0b4b-96e2-49ba-a0c1-5f975d34b5e5" type="checkbox" ><label class="sk-toggleable__label" for="723e0b4b-96e2-49ba-a0c1-5f975d34b5e5">ordinalencoder</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f2e5d83b8b0></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2f5beb92-819a-471d-bd41-4ea4a47b4338" type="checkbox" ><label class="sk-toggleable__label" for="2f5beb92-819a-471d-bd41-4ea4a47b4338">OrdinalEncoder</label><div class="sk-toggleable__content"><pre>OrdinalEncoder(handle_unknown='use_encoded_value', unknown_value=-1)</pre></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 136-138

Then, we will now define the preprocessor used when the ending regressor
is a linear model.

.. GENERATED FROM PYTHON SOURCE LINES 138-152

.. code-block:: default


    from sklearn.preprocessing import OneHotEncoder
    from sklearn.preprocessing import StandardScaler

    cat_linear_processor = OneHotEncoder(handle_unknown="ignore")
    num_linear_processor = make_pipeline(
        StandardScaler(), SimpleImputer(strategy="mean", add_indicator=True)
    )

    linear_preprocessor = make_column_transformer(
        (num_linear_processor, num_selector), (cat_linear_processor, cat_selector)
    )
    linear_preprocessor






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-cba76755-aa32-482e-8981-38ac9d76039c {color: black;background-color: white;}#sk-cba76755-aa32-482e-8981-38ac9d76039c pre{padding: 0;}#sk-cba76755-aa32-482e-8981-38ac9d76039c div.sk-toggleable {background-color: white;}#sk-cba76755-aa32-482e-8981-38ac9d76039c label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-cba76755-aa32-482e-8981-38ac9d76039c div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-cba76755-aa32-482e-8981-38ac9d76039c div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-cba76755-aa32-482e-8981-38ac9d76039c input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-cba76755-aa32-482e-8981-38ac9d76039c div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-cba76755-aa32-482e-8981-38ac9d76039c div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-cba76755-aa32-482e-8981-38ac9d76039c input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-cba76755-aa32-482e-8981-38ac9d76039c div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-cba76755-aa32-482e-8981-38ac9d76039c div.sk-estimator:hover {background-color: #d4ebff;}#sk-cba76755-aa32-482e-8981-38ac9d76039c div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-cba76755-aa32-482e-8981-38ac9d76039c div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-cba76755-aa32-482e-8981-38ac9d76039c div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-cba76755-aa32-482e-8981-38ac9d76039c div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-cba76755-aa32-482e-8981-38ac9d76039c div.sk-item {z-index: 1;}#sk-cba76755-aa32-482e-8981-38ac9d76039c div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-cba76755-aa32-482e-8981-38ac9d76039c div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-cba76755-aa32-482e-8981-38ac9d76039c div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-cba76755-aa32-482e-8981-38ac9d76039c div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-cba76755-aa32-482e-8981-38ac9d76039c div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-cba76755-aa32-482e-8981-38ac9d76039c div.sk-parallel-item:only-child::after {width: 0;}#sk-cba76755-aa32-482e-8981-38ac9d76039c div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-cba76755-aa32-482e-8981-38ac9d76039c div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-cba76755-aa32-482e-8981-38ac9d76039c div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-cba76755-aa32-482e-8981-38ac9d76039c div.sk-container {display: inline-block;position: relative;}</style><div id="sk-cba76755-aa32-482e-8981-38ac9d76039c" class"sk-top-container"><div class="sk-container"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0e01b99c-3d38-4811-a498-2ec4a946a694" type="checkbox" ><label class="sk-toggleable__label" for="0e01b99c-3d38-4811-a498-2ec4a946a694">ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('pipeline',
                                     Pipeline(steps=[('standardscaler',
                                                      StandardScaler()),
                                                     ('simpleimputer',
                                                      SimpleImputer(add_indicator=True))]),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f2e5d83b2b0>),
                                    ('onehotencoder',
                                     OneHotEncoder(handle_unknown='ignore'),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f2e5d83b8b0>)])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="16360a2b-27a5-4289-b81a-400cf3c51163" type="checkbox" ><label class="sk-toggleable__label" for="16360a2b-27a5-4289-b81a-400cf3c51163">pipeline</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f2e5d83b2b0></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2138737e-24fe-4f22-911b-0ca422259d50" type="checkbox" ><label class="sk-toggleable__label" for="2138737e-24fe-4f22-911b-0ca422259d50">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d6ed7ebd-72f8-47ca-9fc4-ce1aaa06b1b5" type="checkbox" ><label class="sk-toggleable__label" for="d6ed7ebd-72f8-47ca-9fc4-ce1aaa06b1b5">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(add_indicator=True)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7fc73850-37d0-4ed1-a7c6-30a4eee850a6" type="checkbox" ><label class="sk-toggleable__label" for="7fc73850-37d0-4ed1-a7c6-30a4eee850a6">onehotencoder</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f2e5d83b8b0></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a76b1553-eb74-421a-a74c-6f22dbd5e907" type="checkbox" ><label class="sk-toggleable__label" for="a76b1553-eb74-421a-a74c-6f22dbd5e907">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown='ignore')</pre></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 153-171

Stack of predictors on a single data set
#############################################################################

 It is sometimes tedious to find the model which will best perform on a given
 dataset. Stacking provide an alternative by combining the outputs of several
 learners, without the need to choose a model specifically. The performance of
 stacking is usually close to the best model and sometimes it can outperform
 the prediction performance of each individual model.

 Here, we combine 3 learners (linear and non-linear) and use a ridge regressor
 to combine their outputs together.

 .. note::
    Although we will make new pipelines with the processors which we wrote in
    the previous section for the 3 learners, the final estimator
    :class:`~sklearn.linear_model.RidgeCV()` does not need preprocessing of
    the data as it will be fed with the already preprocessed output from the 3
    learners.

.. GENERATED FROM PYTHON SOURCE LINES 171-177

.. code-block:: default


    from sklearn.linear_model import LassoCV

    lasso_pipeline = make_pipeline(linear_preprocessor, LassoCV())
    lasso_pipeline






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-39cffb3f-4727-4fe8-b9e5-8315a686c7f0 {color: black;background-color: white;}#sk-39cffb3f-4727-4fe8-b9e5-8315a686c7f0 pre{padding: 0;}#sk-39cffb3f-4727-4fe8-b9e5-8315a686c7f0 div.sk-toggleable {background-color: white;}#sk-39cffb3f-4727-4fe8-b9e5-8315a686c7f0 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-39cffb3f-4727-4fe8-b9e5-8315a686c7f0 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-39cffb3f-4727-4fe8-b9e5-8315a686c7f0 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-39cffb3f-4727-4fe8-b9e5-8315a686c7f0 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-39cffb3f-4727-4fe8-b9e5-8315a686c7f0 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-39cffb3f-4727-4fe8-b9e5-8315a686c7f0 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-39cffb3f-4727-4fe8-b9e5-8315a686c7f0 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-39cffb3f-4727-4fe8-b9e5-8315a686c7f0 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-39cffb3f-4727-4fe8-b9e5-8315a686c7f0 div.sk-estimator:hover {background-color: #d4ebff;}#sk-39cffb3f-4727-4fe8-b9e5-8315a686c7f0 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-39cffb3f-4727-4fe8-b9e5-8315a686c7f0 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-39cffb3f-4727-4fe8-b9e5-8315a686c7f0 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-39cffb3f-4727-4fe8-b9e5-8315a686c7f0 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-39cffb3f-4727-4fe8-b9e5-8315a686c7f0 div.sk-item {z-index: 1;}#sk-39cffb3f-4727-4fe8-b9e5-8315a686c7f0 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-39cffb3f-4727-4fe8-b9e5-8315a686c7f0 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-39cffb3f-4727-4fe8-b9e5-8315a686c7f0 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-39cffb3f-4727-4fe8-b9e5-8315a686c7f0 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-39cffb3f-4727-4fe8-b9e5-8315a686c7f0 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-39cffb3f-4727-4fe8-b9e5-8315a686c7f0 div.sk-parallel-item:only-child::after {width: 0;}#sk-39cffb3f-4727-4fe8-b9e5-8315a686c7f0 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-39cffb3f-4727-4fe8-b9e5-8315a686c7f0 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-39cffb3f-4727-4fe8-b9e5-8315a686c7f0 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-39cffb3f-4727-4fe8-b9e5-8315a686c7f0 div.sk-container {display: inline-block;position: relative;}</style><div id="sk-39cffb3f-4727-4fe8-b9e5-8315a686c7f0" class"sk-top-container"><div class="sk-container"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="684848eb-4b11-43bb-9922-b2a8d6659acc" type="checkbox" ><label class="sk-toggleable__label" for="684848eb-4b11-43bb-9922-b2a8d6659acc">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('columntransformer',
                     ColumnTransformer(transformers=[('pipeline',
                                                      Pipeline(steps=[('standardscaler',
                                                                       StandardScaler()),
                                                                      ('simpleimputer',
                                                                       SimpleImputer(add_indicator=True))]),
                                                      <sklearn.compose._column_transformer.make_column_selector object at 0x7f2e5d83b2b0>),
                                                     ('onehotencoder',
                                                      OneHotEncoder(handle_unknown='ignore'),
                                                      <sklearn.compose._column_transformer.make_column_selector object at 0x7f2e5d83b8b0>)])),
                    ('lassocv', LassoCV())])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ed649e40-b795-484f-abef-01b502825155" type="checkbox" ><label class="sk-toggleable__label" for="ed649e40-b795-484f-abef-01b502825155">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('pipeline',
                                     Pipeline(steps=[('standardscaler',
                                                      StandardScaler()),
                                                     ('simpleimputer',
                                                      SimpleImputer(add_indicator=True))]),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f2e5d83b2b0>),
                                    ('onehotencoder',
                                     OneHotEncoder(handle_unknown='ignore'),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f2e5d83b8b0>)])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b21e5a3a-9e9a-404c-a391-94d251d4f394" type="checkbox" ><label class="sk-toggleable__label" for="b21e5a3a-9e9a-404c-a391-94d251d4f394">pipeline</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f2e5d83b2b0></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bb2f1e05-575e-4603-a2c6-0e876c2297e7" type="checkbox" ><label class="sk-toggleable__label" for="bb2f1e05-575e-4603-a2c6-0e876c2297e7">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="59a48200-e570-498c-b023-77777a458a86" type="checkbox" ><label class="sk-toggleable__label" for="59a48200-e570-498c-b023-77777a458a86">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(add_indicator=True)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9962ba18-f1d4-4c87-87f4-4eb8ad874b49" type="checkbox" ><label class="sk-toggleable__label" for="9962ba18-f1d4-4c87-87f4-4eb8ad874b49">onehotencoder</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f2e5d83b8b0></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="803859d4-e6c0-4f95-b9ff-a349af06d465" type="checkbox" ><label class="sk-toggleable__label" for="803859d4-e6c0-4f95-b9ff-a349af06d465">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown='ignore')</pre></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="82ec9423-85b7-4684-a62e-756aac60fe91" type="checkbox" ><label class="sk-toggleable__label" for="82ec9423-85b7-4684-a62e-756aac60fe91">LassoCV</label><div class="sk-toggleable__content"><pre>LassoCV()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 178-183

.. code-block:: default

    from sklearn.ensemble import RandomForestRegressor

    rf_pipeline = make_pipeline(tree_preprocessor, RandomForestRegressor(random_state=42))
    rf_pipeline






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-3a0f4ced-77cf-46cf-ace5-f54e4d86f1ec {color: black;background-color: white;}#sk-3a0f4ced-77cf-46cf-ace5-f54e4d86f1ec pre{padding: 0;}#sk-3a0f4ced-77cf-46cf-ace5-f54e4d86f1ec div.sk-toggleable {background-color: white;}#sk-3a0f4ced-77cf-46cf-ace5-f54e4d86f1ec label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-3a0f4ced-77cf-46cf-ace5-f54e4d86f1ec div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-3a0f4ced-77cf-46cf-ace5-f54e4d86f1ec div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-3a0f4ced-77cf-46cf-ace5-f54e4d86f1ec input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-3a0f4ced-77cf-46cf-ace5-f54e4d86f1ec div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-3a0f4ced-77cf-46cf-ace5-f54e4d86f1ec div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-3a0f4ced-77cf-46cf-ace5-f54e4d86f1ec input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-3a0f4ced-77cf-46cf-ace5-f54e4d86f1ec div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-3a0f4ced-77cf-46cf-ace5-f54e4d86f1ec div.sk-estimator:hover {background-color: #d4ebff;}#sk-3a0f4ced-77cf-46cf-ace5-f54e4d86f1ec div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-3a0f4ced-77cf-46cf-ace5-f54e4d86f1ec div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-3a0f4ced-77cf-46cf-ace5-f54e4d86f1ec div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-3a0f4ced-77cf-46cf-ace5-f54e4d86f1ec div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-3a0f4ced-77cf-46cf-ace5-f54e4d86f1ec div.sk-item {z-index: 1;}#sk-3a0f4ced-77cf-46cf-ace5-f54e4d86f1ec div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-3a0f4ced-77cf-46cf-ace5-f54e4d86f1ec div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-3a0f4ced-77cf-46cf-ace5-f54e4d86f1ec div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-3a0f4ced-77cf-46cf-ace5-f54e4d86f1ec div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-3a0f4ced-77cf-46cf-ace5-f54e4d86f1ec div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-3a0f4ced-77cf-46cf-ace5-f54e4d86f1ec div.sk-parallel-item:only-child::after {width: 0;}#sk-3a0f4ced-77cf-46cf-ace5-f54e4d86f1ec div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-3a0f4ced-77cf-46cf-ace5-f54e4d86f1ec div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-3a0f4ced-77cf-46cf-ace5-f54e4d86f1ec div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-3a0f4ced-77cf-46cf-ace5-f54e4d86f1ec div.sk-container {display: inline-block;position: relative;}</style><div id="sk-3a0f4ced-77cf-46cf-ace5-f54e4d86f1ec" class"sk-top-container"><div class="sk-container"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="75788a29-a5f3-4997-a4de-ca08e8bae3f5" type="checkbox" ><label class="sk-toggleable__label" for="75788a29-a5f3-4997-a4de-ca08e8bae3f5">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('columntransformer',
                     ColumnTransformer(transformers=[('simpleimputer',
                                                      SimpleImputer(add_indicator=True),
                                                      <sklearn.compose._column_transformer.make_column_selector object at 0x7f2e5d83b2b0>),
                                                     ('ordinalencoder',
                                                      OrdinalEncoder(handle_unknown='use_encoded_value',
                                                                     unknown_value=-1),
                                                      <sklearn.compose._column_transformer.make_column_selector object at 0x7f2e5d83b8b0>)])),
                    ('randomforestregressor',
                     RandomForestRegressor(random_state=42))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a7f5ea43-441e-474d-ab0a-06b7388bffdb" type="checkbox" ><label class="sk-toggleable__label" for="a7f5ea43-441e-474d-ab0a-06b7388bffdb">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('simpleimputer',
                                     SimpleImputer(add_indicator=True),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f2e5d83b2b0>),
                                    ('ordinalencoder',
                                     OrdinalEncoder(handle_unknown='use_encoded_value',
                                                    unknown_value=-1),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f2e5d83b8b0>)])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="04c02ec8-c725-48d5-952a-fa373c14429b" type="checkbox" ><label class="sk-toggleable__label" for="04c02ec8-c725-48d5-952a-fa373c14429b">simpleimputer</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f2e5d83b2b0></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d8c82bba-76ba-437f-ae90-e0375316f8ba" type="checkbox" ><label class="sk-toggleable__label" for="d8c82bba-76ba-437f-ae90-e0375316f8ba">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(add_indicator=True)</pre></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="da6d3b52-9ceb-42ae-bf0d-57ffd79ef570" type="checkbox" ><label class="sk-toggleable__label" for="da6d3b52-9ceb-42ae-bf0d-57ffd79ef570">ordinalencoder</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f2e5d83b8b0></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c577502b-0e97-4405-9c2a-d249914ab9f1" type="checkbox" ><label class="sk-toggleable__label" for="c577502b-0e97-4405-9c2a-d249914ab9f1">OrdinalEncoder</label><div class="sk-toggleable__content"><pre>OrdinalEncoder(handle_unknown='use_encoded_value', unknown_value=-1)</pre></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="798974f9-b89e-4af4-9bae-e989829242e9" type="checkbox" ><label class="sk-toggleable__label" for="798974f9-b89e-4af4-9bae-e989829242e9">RandomForestRegressor</label><div class="sk-toggleable__content"><pre>RandomForestRegressor(random_state=42)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 184-191

.. code-block:: default

    from sklearn.ensemble import HistGradientBoostingRegressor

    gbdt_pipeline = make_pipeline(
        tree_preprocessor, HistGradientBoostingRegressor(random_state=0)
    )
    gbdt_pipeline






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-45237674-d7c4-4260-acfd-5c55c00fd75d {color: black;background-color: white;}#sk-45237674-d7c4-4260-acfd-5c55c00fd75d pre{padding: 0;}#sk-45237674-d7c4-4260-acfd-5c55c00fd75d div.sk-toggleable {background-color: white;}#sk-45237674-d7c4-4260-acfd-5c55c00fd75d label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-45237674-d7c4-4260-acfd-5c55c00fd75d div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-45237674-d7c4-4260-acfd-5c55c00fd75d div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-45237674-d7c4-4260-acfd-5c55c00fd75d input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-45237674-d7c4-4260-acfd-5c55c00fd75d div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-45237674-d7c4-4260-acfd-5c55c00fd75d div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-45237674-d7c4-4260-acfd-5c55c00fd75d input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-45237674-d7c4-4260-acfd-5c55c00fd75d div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-45237674-d7c4-4260-acfd-5c55c00fd75d div.sk-estimator:hover {background-color: #d4ebff;}#sk-45237674-d7c4-4260-acfd-5c55c00fd75d div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-45237674-d7c4-4260-acfd-5c55c00fd75d div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-45237674-d7c4-4260-acfd-5c55c00fd75d div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-45237674-d7c4-4260-acfd-5c55c00fd75d div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-45237674-d7c4-4260-acfd-5c55c00fd75d div.sk-item {z-index: 1;}#sk-45237674-d7c4-4260-acfd-5c55c00fd75d div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-45237674-d7c4-4260-acfd-5c55c00fd75d div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-45237674-d7c4-4260-acfd-5c55c00fd75d div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-45237674-d7c4-4260-acfd-5c55c00fd75d div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-45237674-d7c4-4260-acfd-5c55c00fd75d div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-45237674-d7c4-4260-acfd-5c55c00fd75d div.sk-parallel-item:only-child::after {width: 0;}#sk-45237674-d7c4-4260-acfd-5c55c00fd75d div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-45237674-d7c4-4260-acfd-5c55c00fd75d div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-45237674-d7c4-4260-acfd-5c55c00fd75d div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-45237674-d7c4-4260-acfd-5c55c00fd75d div.sk-container {display: inline-block;position: relative;}</style><div id="sk-45237674-d7c4-4260-acfd-5c55c00fd75d" class"sk-top-container"><div class="sk-container"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="47134921-42df-466d-93ec-eae6e4dd8c15" type="checkbox" ><label class="sk-toggleable__label" for="47134921-42df-466d-93ec-eae6e4dd8c15">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('columntransformer',
                     ColumnTransformer(transformers=[('simpleimputer',
                                                      SimpleImputer(add_indicator=True),
                                                      <sklearn.compose._column_transformer.make_column_selector object at 0x7f2e5d83b2b0>),
                                                     ('ordinalencoder',
                                                      OrdinalEncoder(handle_unknown='use_encoded_value',
                                                                     unknown_value=-1),
                                                      <sklearn.compose._column_transformer.make_column_selector object at 0x7f2e5d83b8b0>)])),
                    ('histgradientboostingregressor',
                     HistGradientBoostingRegressor(random_state=0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f39f6993-3040-450f-bfb1-5f0448d55dae" type="checkbox" ><label class="sk-toggleable__label" for="f39f6993-3040-450f-bfb1-5f0448d55dae">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('simpleimputer',
                                     SimpleImputer(add_indicator=True),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f2e5d83b2b0>),
                                    ('ordinalencoder',
                                     OrdinalEncoder(handle_unknown='use_encoded_value',
                                                    unknown_value=-1),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f2e5d83b8b0>)])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d2aa0366-7c26-48fc-8512-239199e986f1" type="checkbox" ><label class="sk-toggleable__label" for="d2aa0366-7c26-48fc-8512-239199e986f1">simpleimputer</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f2e5d83b2b0></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="636d7d52-71ea-4f07-9655-1f46238c3608" type="checkbox" ><label class="sk-toggleable__label" for="636d7d52-71ea-4f07-9655-1f46238c3608">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(add_indicator=True)</pre></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="745a8c6f-9419-4827-ada8-38f4a95af6cd" type="checkbox" ><label class="sk-toggleable__label" for="745a8c6f-9419-4827-ada8-38f4a95af6cd">ordinalencoder</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f2e5d83b8b0></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="151294dc-5e18-44f5-90e6-ab083869a5e5" type="checkbox" ><label class="sk-toggleable__label" for="151294dc-5e18-44f5-90e6-ab083869a5e5">OrdinalEncoder</label><div class="sk-toggleable__content"><pre>OrdinalEncoder(handle_unknown='use_encoded_value', unknown_value=-1)</pre></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b22fb3c3-8d02-4ed0-8f73-12ffac864f5f" type="checkbox" ><label class="sk-toggleable__label" for="b22fb3c3-8d02-4ed0-8f73-12ffac864f5f">HistGradientBoostingRegressor</label><div class="sk-toggleable__content"><pre>HistGradientBoostingRegressor(random_state=0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 192-204

.. code-block:: default

    from sklearn.ensemble import StackingRegressor
    from sklearn.linear_model import RidgeCV

    estimators = [
        ("Random Forest", rf_pipeline),
        ("Lasso", lasso_pipeline),
        ("Gradient Boosting", gbdt_pipeline),
    ]

    stacking_regressor = StackingRegressor(estimators=estimators, final_estimator=RidgeCV())
    stacking_regressor






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-78cb57c9-2f96-4681-b930-78a4798b1d90 {color: black;background-color: white;}#sk-78cb57c9-2f96-4681-b930-78a4798b1d90 pre{padding: 0;}#sk-78cb57c9-2f96-4681-b930-78a4798b1d90 div.sk-toggleable {background-color: white;}#sk-78cb57c9-2f96-4681-b930-78a4798b1d90 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-78cb57c9-2f96-4681-b930-78a4798b1d90 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-78cb57c9-2f96-4681-b930-78a4798b1d90 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-78cb57c9-2f96-4681-b930-78a4798b1d90 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-78cb57c9-2f96-4681-b930-78a4798b1d90 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-78cb57c9-2f96-4681-b930-78a4798b1d90 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-78cb57c9-2f96-4681-b930-78a4798b1d90 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-78cb57c9-2f96-4681-b930-78a4798b1d90 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-78cb57c9-2f96-4681-b930-78a4798b1d90 div.sk-estimator:hover {background-color: #d4ebff;}#sk-78cb57c9-2f96-4681-b930-78a4798b1d90 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-78cb57c9-2f96-4681-b930-78a4798b1d90 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-78cb57c9-2f96-4681-b930-78a4798b1d90 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-78cb57c9-2f96-4681-b930-78a4798b1d90 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-78cb57c9-2f96-4681-b930-78a4798b1d90 div.sk-item {z-index: 1;}#sk-78cb57c9-2f96-4681-b930-78a4798b1d90 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-78cb57c9-2f96-4681-b930-78a4798b1d90 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-78cb57c9-2f96-4681-b930-78a4798b1d90 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-78cb57c9-2f96-4681-b930-78a4798b1d90 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-78cb57c9-2f96-4681-b930-78a4798b1d90 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-78cb57c9-2f96-4681-b930-78a4798b1d90 div.sk-parallel-item:only-child::after {width: 0;}#sk-78cb57c9-2f96-4681-b930-78a4798b1d90 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-78cb57c9-2f96-4681-b930-78a4798b1d90 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-78cb57c9-2f96-4681-b930-78a4798b1d90 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-78cb57c9-2f96-4681-b930-78a4798b1d90 div.sk-container {display: inline-block;position: relative;}</style><div id="sk-78cb57c9-2f96-4681-b930-78a4798b1d90" class"sk-top-container"><div class="sk-container"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8a0b36fd-db4e-4cca-8c05-675b690e1670" type="checkbox" ><label class="sk-toggleable__label" for="8a0b36fd-db4e-4cca-8c05-675b690e1670">StackingRegressor</label><div class="sk-toggleable__content"><pre>StackingRegressor(estimators=[('Random Forest',
                                   Pipeline(steps=[('columntransformer',
                                                    ColumnTransformer(transformers=[('simpleimputer',
                                                                                     SimpleImputer(add_indicator=True),
                                                                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f2e5d83b2b0>),
                                                                                    ('ordinalencoder',
                                                                                     OrdinalEncoder(handle_unknown='use_encoded_value',
                                                                                                    unknown_value=-1),
                                                                                     <sklearn.compose...
                                                                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f2e5d83b2b0>),
                                                                                    ('ordinalencoder',
                                                                                     OrdinalEncoder(handle_unknown='use_encoded_value',
                                                                                                    unknown_value=-1),
                                                                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f2e5d83b8b0>)])),
                                                   ('histgradientboostingregressor',
                                                    HistGradientBoostingRegressor(random_state=0))]))],
                      final_estimator=RidgeCV(alphas=array([ 0.1,  1. , 10. ])))</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><label>Random Forest</label></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c50f9c7d-e338-4f51-b226-66e29e7828d6" type="checkbox" ><label class="sk-toggleable__label" for="c50f9c7d-e338-4f51-b226-66e29e7828d6">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('simpleimputer',
                                     SimpleImputer(add_indicator=True),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f2e5d83b2b0>),
                                    ('ordinalencoder',
                                     OrdinalEncoder(handle_unknown='use_encoded_value',
                                                    unknown_value=-1),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f2e5d83b8b0>)])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6a7f997a-f981-41d6-a2a9-0d03d5e9b117" type="checkbox" ><label class="sk-toggleable__label" for="6a7f997a-f981-41d6-a2a9-0d03d5e9b117">simpleimputer</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f2e5d83b2b0></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="52ec8020-90f8-4d44-9700-b47c2031eadf" type="checkbox" ><label class="sk-toggleable__label" for="52ec8020-90f8-4d44-9700-b47c2031eadf">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(add_indicator=True)</pre></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="03edf300-0d95-4bb0-ac0b-3e475cc572b3" type="checkbox" ><label class="sk-toggleable__label" for="03edf300-0d95-4bb0-ac0b-3e475cc572b3">ordinalencoder</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f2e5d83b8b0></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9751514e-0afd-4b5c-b234-78658628cf3d" type="checkbox" ><label class="sk-toggleable__label" for="9751514e-0afd-4b5c-b234-78658628cf3d">OrdinalEncoder</label><div class="sk-toggleable__content"><pre>OrdinalEncoder(handle_unknown='use_encoded_value', unknown_value=-1)</pre></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4b1d4e17-ecc3-4b7e-af96-9a721b23b771" type="checkbox" ><label class="sk-toggleable__label" for="4b1d4e17-ecc3-4b7e-af96-9a721b23b771">RandomForestRegressor</label><div class="sk-toggleable__content"><pre>RandomForestRegressor(random_state=42)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><label>Lasso</label></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c2b5f8fa-e5db-49f4-be79-e44ef12f50f7" type="checkbox" ><label class="sk-toggleable__label" for="c2b5f8fa-e5db-49f4-be79-e44ef12f50f7">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('pipeline',
                                     Pipeline(steps=[('standardscaler',
                                                      StandardScaler()),
                                                     ('simpleimputer',
                                                      SimpleImputer(add_indicator=True))]),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f2e5d83b2b0>),
                                    ('onehotencoder',
                                     OneHotEncoder(handle_unknown='ignore'),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f2e5d83b8b0>)])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e1da9f9a-dff5-4986-b0aa-496e11cfe17c" type="checkbox" ><label class="sk-toggleable__label" for="e1da9f9a-dff5-4986-b0aa-496e11cfe17c">pipeline</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f2e5d83b2b0></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d164cfdb-8f66-4b1c-b53c-709054eb57ad" type="checkbox" ><label class="sk-toggleable__label" for="d164cfdb-8f66-4b1c-b53c-709054eb57ad">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7b3984a4-bb86-4fd8-be2a-96213a139ed0" type="checkbox" ><label class="sk-toggleable__label" for="7b3984a4-bb86-4fd8-be2a-96213a139ed0">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(add_indicator=True)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="dcaaa11e-f4f4-4e00-ad1c-a6a0c0e6d72a" type="checkbox" ><label class="sk-toggleable__label" for="dcaaa11e-f4f4-4e00-ad1c-a6a0c0e6d72a">onehotencoder</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f2e5d83b8b0></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="24bff551-5657-441b-b798-b8dee1b2a05f" type="checkbox" ><label class="sk-toggleable__label" for="24bff551-5657-441b-b798-b8dee1b2a05f">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown='ignore')</pre></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="41df2da5-6cab-4e81-9474-e252d9bf75e5" type="checkbox" ><label class="sk-toggleable__label" for="41df2da5-6cab-4e81-9474-e252d9bf75e5">LassoCV</label><div class="sk-toggleable__content"><pre>LassoCV()</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><label>Gradient Boosting</label></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a25e8eb5-39c1-4003-80af-2c732b4b57f3" type="checkbox" ><label class="sk-toggleable__label" for="a25e8eb5-39c1-4003-80af-2c732b4b57f3">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('simpleimputer',
                                     SimpleImputer(add_indicator=True),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f2e5d83b2b0>),
                                    ('ordinalencoder',
                                     OrdinalEncoder(handle_unknown='use_encoded_value',
                                                    unknown_value=-1),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f2e5d83b8b0>)])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="dff725b1-6d05-4785-8fa7-a3cde153e132" type="checkbox" ><label class="sk-toggleable__label" for="dff725b1-6d05-4785-8fa7-a3cde153e132">simpleimputer</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f2e5d83b2b0></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f96598ad-494d-49c8-81b2-d277006277b0" type="checkbox" ><label class="sk-toggleable__label" for="f96598ad-494d-49c8-81b2-d277006277b0">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(add_indicator=True)</pre></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ba47a99b-4bf2-407f-b9b1-22bfb70f214d" type="checkbox" ><label class="sk-toggleable__label" for="ba47a99b-4bf2-407f-b9b1-22bfb70f214d">ordinalencoder</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f2e5d83b8b0></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b756ed7a-b4cd-4483-9cd8-d284b2cf0c1a" type="checkbox" ><label class="sk-toggleable__label" for="b756ed7a-b4cd-4483-9cd8-d284b2cf0c1a">OrdinalEncoder</label><div class="sk-toggleable__content"><pre>OrdinalEncoder(handle_unknown='use_encoded_value', unknown_value=-1)</pre></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a7c4cd98-e681-473a-99b5-a5028f224148" type="checkbox" ><label class="sk-toggleable__label" for="a7c4cd98-e681-473a-99b5-a5028f224148">HistGradientBoostingRegressor</label><div class="sk-toggleable__content"><pre>HistGradientBoostingRegressor(random_state=0)</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><label>final_estimator</label></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d8af0d6d-4ccd-4d12-9064-f2c4779f3ded" type="checkbox" ><label class="sk-toggleable__label" for="d8af0d6d-4ccd-4d12-9064-f2c4779f3ded">RidgeCV</label><div class="sk-toggleable__content"><pre>RidgeCV(alphas=array([ 0.1,  1. , 10. ]))</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 205-214

Measure and plot the results
#############################################################################

 Now we can use Ames Housing dataset to make the predictions. We check the
 performance of each individual predictor as well as of the stack of the
 regressors.

 The function ``plot_regression_results`` is used to plot the predicted and
 true targets.

.. GENERATED FROM PYTHON SOURCE LINES 214-279

.. code-block:: default



    import time
    import matplotlib.pyplot as plt
    from sklearn.model_selection import cross_validate, cross_val_predict


    def plot_regression_results(ax, y_true, y_pred, title, scores, elapsed_time):
        """Scatter plot of the predicted vs true targets."""
        ax.plot(
            [y_true.min(), y_true.max()], [y_true.min(), y_true.max()], "--r", linewidth=2
        )
        ax.scatter(y_true, y_pred, alpha=0.2)

        ax.spines["top"].set_visible(False)
        ax.spines["right"].set_visible(False)
        ax.get_xaxis().tick_bottom()
        ax.get_yaxis().tick_left()
        ax.spines["left"].set_position(("outward", 10))
        ax.spines["bottom"].set_position(("outward", 10))
        ax.set_xlim([y_true.min(), y_true.max()])
        ax.set_ylim([y_true.min(), y_true.max()])
        ax.set_xlabel("Measured")
        ax.set_ylabel("Predicted")
        extra = plt.Rectangle(
            (0, 0), 0, 0, fc="w", fill=False, edgecolor="none", linewidth=0
        )
        ax.legend([extra], [scores], loc="upper left")
        title = title + "\n Evaluation in {:.2f} seconds".format(elapsed_time)
        ax.set_title(title)


    fig, axs = plt.subplots(2, 2, figsize=(9, 7))
    axs = np.ravel(axs)

    for ax, (name, est) in zip(
        axs, estimators + [("Stacking Regressor", stacking_regressor)]
    ):
        start_time = time.time()
        score = cross_validate(
            est, X, y, scoring=["r2", "neg_mean_absolute_error"], n_jobs=-1, verbose=0
        )
        elapsed_time = time.time() - start_time

        y_pred = cross_val_predict(est, X, y, n_jobs=-1, verbose=0)

        plot_regression_results(
            ax,
            y,
            y_pred,
            name,
            (r"$R^2={:.2f} \pm {:.2f}$" + "\n" + r"$MAE={:.2f} \pm {:.2f}$").format(
                np.mean(score["test_r2"]),
                np.std(score["test_r2"]),
                -np.mean(score["test_neg_mean_absolute_error"]),
                np.std(score["test_neg_mean_absolute_error"]),
            ),
            elapsed_time,
        )

    plt.suptitle("Single predictors versus stacked predictors")
    plt.tight_layout()
    plt.subplots_adjust(top=0.9)
    plt.show()




.. image-sg:: /auto_examples/ensemble/images/sphx_glr_plot_stack_predictors_001.png
   :alt: Single predictors versus stacked predictors, Random Forest  Evaluation in 1.71 seconds, Lasso  Evaluation in 0.20 seconds, Gradient Boosting  Evaluation in 0.29 seconds, Stacking Regressor  Evaluation in 4.64 seconds
   :srcset: /auto_examples/ensemble/images/sphx_glr_plot_stack_predictors_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 280-283

The stacked regressor will combine the strengths of the different regressors.
However, we also see that training the stacked regressor is much more
computationally expensive.


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  14.138 seconds)


.. _sphx_glr_download_auto_examples_ensemble_plot_stack_predictors.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/ensemble/plot_stack_predictors.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_stack_predictors.py <plot_stack_predictors.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_stack_predictors.ipynb <plot_stack_predictors.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
