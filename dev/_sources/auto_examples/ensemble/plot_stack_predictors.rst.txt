
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/ensemble/plot_stack_predictors.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_ensemble_plot_stack_predictors.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_ensemble_plot_stack_predictors.py:


=================================
Combine predictors using stacking
=================================

.. currentmodule:: sklearn

Stacking refers to a method to blend estimators. In this strategy, some
estimators are individually fitted on some training data while a final
estimator is trained using the stacked predictions of these base estimators.

In this example, we illustrate the use case in which different regressors are
stacked together and a final linear penalized regressor is used to output the
prediction. We compare the performance of each individual regressor with the
stacking strategy. Stacking slightly improves the overall performance.

.. GENERATED FROM PYTHON SOURCE LINES 18-29

.. code-block:: default


    # Authors: Guillaume Lemaitre <g.lemaitre58@gmail.com>
    #          Maria Telenczuk    <https://github.com/maikia>
    # License: BSD 3 clause

    print(__doc__)

    from sklearn import set_config

    set_config(display="diagram")








.. GENERATED FROM PYTHON SOURCE LINES 30-46

Download the dataset
#############################################################################

 We will use `Ames Housing`_ dataset which was first compiled by Dean De Cock
 and became better known after it was used in Kaggle challenge. It is a set
 of 1460 residential homes in Ames, Iowa, each described by 80 features. We
 will use it to predict the final logarithmic price of the houses. In this
 example we will use only 20 most interesting features chosen using
 GradientBoostingRegressor() and limit number of entries (here we won't go
 into the details on how to select the most interesting features).

 The Ames housing dataset is not shipped with scikit-learn and therefore we
 will fetch it from `OpenML`_.

 .. _`Ames Housing`: http://jse.amstat.org/v19n3/decock.pdf
 .. _`OpenML`: https://www.openml.org/d/42165

.. GENERATED FROM PYTHON SOURCE LINES 46-92

.. code-block:: default


    import numpy as np

    from sklearn.datasets import fetch_openml
    from sklearn.utils import shuffle


    def load_ames_housing():
        df = fetch_openml(name="house_prices", as_frame=True)
        X = df.data
        y = df.target

        features = [
            "YrSold",
            "HeatingQC",
            "Street",
            "YearRemodAdd",
            "Heating",
            "MasVnrType",
            "BsmtUnfSF",
            "Foundation",
            "MasVnrArea",
            "MSSubClass",
            "ExterQual",
            "Condition2",
            "GarageCars",
            "GarageType",
            "OverallQual",
            "TotalBsmtSF",
            "BsmtFinSF1",
            "HouseStyle",
            "MiscFeature",
            "MoSold",
        ]

        X = X[features]
        X, y = shuffle(X, y, random_state=0)

        X = X[:600]
        y = y[:600]
        return X, np.log(y)


    X, y = load_ames_housing()









.. GENERATED FROM PYTHON SOURCE LINES 93-99

Make pipeline to preprocess the data
#############################################################################

 Before we can use Ames dataset we still need to do some preprocessing.
 First, we will select the categorical and numerical columns of the dataset to
 construct the first step of the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 99-106

.. code-block:: default


    from sklearn.compose import make_column_selector

    cat_selector = make_column_selector(dtype_include=object)
    num_selector = make_column_selector(dtype_include=np.number)
    cat_selector(X)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    ['HeatingQC', 'Street', 'Heating', 'MasVnrType', 'Foundation', 'ExterQual', 'Condition2', 'GarageType', 'HouseStyle', 'MiscFeature']



.. GENERATED FROM PYTHON SOURCE LINES 107-109

.. code-block:: default

    num_selector(X)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    ['YrSold', 'YearRemodAdd', 'BsmtUnfSF', 'MasVnrArea', 'MSSubClass', 'GarageCars', 'OverallQual', 'TotalBsmtSF', 'BsmtFinSF1', 'MoSold']



.. GENERATED FROM PYTHON SOURCE LINES 110-119

Then, we will need to design preprocessing pipelines which depends on the
ending regressor. If the ending regressor is a linear model, one needs to
one-hot encode the categories. If the ending regressor is a tree-based model
an ordinal encoder will be sufficient. Besides, numerical values need to be
standardized for a linear model while the raw numerical data can be treated
as is by a tree-based model. However, both models need an imputer to
handle missing values.

We will first design the pipeline required for the tree-based models.

.. GENERATED FROM PYTHON SOURCE LINES 119-135

.. code-block:: default


    from sklearn.compose import make_column_transformer
    from sklearn.impute import SimpleImputer
    from sklearn.pipeline import make_pipeline
    from sklearn.preprocessing import OrdinalEncoder

    cat_tree_processor = OrdinalEncoder(
        handle_unknown="use_encoded_value", unknown_value=-1
    )
    num_tree_processor = SimpleImputer(strategy="mean", add_indicator=True)

    tree_preprocessor = make_column_transformer(
        (num_tree_processor, num_selector), (cat_tree_processor, cat_selector)
    )
    tree_preprocessor






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-28bf9755-3a9b-426d-8ecf-cf0492415963 {color: black;background-color: white;}#sk-28bf9755-3a9b-426d-8ecf-cf0492415963 pre{padding: 0;}#sk-28bf9755-3a9b-426d-8ecf-cf0492415963 div.sk-toggleable {background-color: white;}#sk-28bf9755-3a9b-426d-8ecf-cf0492415963 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-28bf9755-3a9b-426d-8ecf-cf0492415963 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-28bf9755-3a9b-426d-8ecf-cf0492415963 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-28bf9755-3a9b-426d-8ecf-cf0492415963 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-28bf9755-3a9b-426d-8ecf-cf0492415963 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-28bf9755-3a9b-426d-8ecf-cf0492415963 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-28bf9755-3a9b-426d-8ecf-cf0492415963 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-28bf9755-3a9b-426d-8ecf-cf0492415963 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-28bf9755-3a9b-426d-8ecf-cf0492415963 div.sk-estimator:hover {background-color: #d4ebff;}#sk-28bf9755-3a9b-426d-8ecf-cf0492415963 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-28bf9755-3a9b-426d-8ecf-cf0492415963 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-28bf9755-3a9b-426d-8ecf-cf0492415963 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-28bf9755-3a9b-426d-8ecf-cf0492415963 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-28bf9755-3a9b-426d-8ecf-cf0492415963 div.sk-item {z-index: 1;}#sk-28bf9755-3a9b-426d-8ecf-cf0492415963 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-28bf9755-3a9b-426d-8ecf-cf0492415963 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-28bf9755-3a9b-426d-8ecf-cf0492415963 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-28bf9755-3a9b-426d-8ecf-cf0492415963 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-28bf9755-3a9b-426d-8ecf-cf0492415963 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-28bf9755-3a9b-426d-8ecf-cf0492415963 div.sk-parallel-item:only-child::after {width: 0;}#sk-28bf9755-3a9b-426d-8ecf-cf0492415963 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-28bf9755-3a9b-426d-8ecf-cf0492415963 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-28bf9755-3a9b-426d-8ecf-cf0492415963 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-28bf9755-3a9b-426d-8ecf-cf0492415963 div.sk-container {display: inline-block;position: relative;}</style><div id="sk-28bf9755-3a9b-426d-8ecf-cf0492415963" class"sk-top-container"><div class="sk-container"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a2e9e115-0f94-47b6-b2ec-9de3599cf4fa" type="checkbox" ><label class="sk-toggleable__label" for="a2e9e115-0f94-47b6-b2ec-9de3599cf4fa">ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('simpleimputer',
                                     SimpleImputer(add_indicator=True),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7fc1aebb6400>),
                                    ('ordinalencoder',
                                     OrdinalEncoder(handle_unknown='use_encoded_value',
                                                    unknown_value=-1),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7fc1aebb6f10>)])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f6df088b-3675-4a5c-9a56-11fe10907d14" type="checkbox" ><label class="sk-toggleable__label" for="f6df088b-3675-4a5c-9a56-11fe10907d14">simpleimputer</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7fc1aebb6400></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7da14fb1-f2de-4a41-baf9-f7a3276bf14f" type="checkbox" ><label class="sk-toggleable__label" for="7da14fb1-f2de-4a41-baf9-f7a3276bf14f">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(add_indicator=True)</pre></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d4bbab96-d43b-4372-9db6-17d531a5929b" type="checkbox" ><label class="sk-toggleable__label" for="d4bbab96-d43b-4372-9db6-17d531a5929b">ordinalencoder</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7fc1aebb6f10></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="68f95370-2277-4de4-8728-62ae316f1b00" type="checkbox" ><label class="sk-toggleable__label" for="68f95370-2277-4de4-8728-62ae316f1b00">OrdinalEncoder</label><div class="sk-toggleable__content"><pre>OrdinalEncoder(handle_unknown='use_encoded_value', unknown_value=-1)</pre></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 136-138

Then, we will now define the preprocessor used when the ending regressor
is a linear model.

.. GENERATED FROM PYTHON SOURCE LINES 138-152

.. code-block:: default


    from sklearn.preprocessing import OneHotEncoder
    from sklearn.preprocessing import StandardScaler

    cat_linear_processor = OneHotEncoder(handle_unknown="ignore")
    num_linear_processor = make_pipeline(
        StandardScaler(), SimpleImputer(strategy="mean", add_indicator=True)
    )

    linear_preprocessor = make_column_transformer(
        (num_linear_processor, num_selector), (cat_linear_processor, cat_selector)
    )
    linear_preprocessor






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-e2078138-4593-4084-b2d3-28d4bb2bb3c2 {color: black;background-color: white;}#sk-e2078138-4593-4084-b2d3-28d4bb2bb3c2 pre{padding: 0;}#sk-e2078138-4593-4084-b2d3-28d4bb2bb3c2 div.sk-toggleable {background-color: white;}#sk-e2078138-4593-4084-b2d3-28d4bb2bb3c2 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-e2078138-4593-4084-b2d3-28d4bb2bb3c2 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-e2078138-4593-4084-b2d3-28d4bb2bb3c2 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-e2078138-4593-4084-b2d3-28d4bb2bb3c2 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-e2078138-4593-4084-b2d3-28d4bb2bb3c2 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-e2078138-4593-4084-b2d3-28d4bb2bb3c2 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-e2078138-4593-4084-b2d3-28d4bb2bb3c2 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-e2078138-4593-4084-b2d3-28d4bb2bb3c2 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-e2078138-4593-4084-b2d3-28d4bb2bb3c2 div.sk-estimator:hover {background-color: #d4ebff;}#sk-e2078138-4593-4084-b2d3-28d4bb2bb3c2 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-e2078138-4593-4084-b2d3-28d4bb2bb3c2 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-e2078138-4593-4084-b2d3-28d4bb2bb3c2 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-e2078138-4593-4084-b2d3-28d4bb2bb3c2 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-e2078138-4593-4084-b2d3-28d4bb2bb3c2 div.sk-item {z-index: 1;}#sk-e2078138-4593-4084-b2d3-28d4bb2bb3c2 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-e2078138-4593-4084-b2d3-28d4bb2bb3c2 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-e2078138-4593-4084-b2d3-28d4bb2bb3c2 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-e2078138-4593-4084-b2d3-28d4bb2bb3c2 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-e2078138-4593-4084-b2d3-28d4bb2bb3c2 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-e2078138-4593-4084-b2d3-28d4bb2bb3c2 div.sk-parallel-item:only-child::after {width: 0;}#sk-e2078138-4593-4084-b2d3-28d4bb2bb3c2 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-e2078138-4593-4084-b2d3-28d4bb2bb3c2 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-e2078138-4593-4084-b2d3-28d4bb2bb3c2 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-e2078138-4593-4084-b2d3-28d4bb2bb3c2 div.sk-container {display: inline-block;position: relative;}</style><div id="sk-e2078138-4593-4084-b2d3-28d4bb2bb3c2" class"sk-top-container"><div class="sk-container"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9885b0c4-5572-46cd-a854-beb315173b67" type="checkbox" ><label class="sk-toggleable__label" for="9885b0c4-5572-46cd-a854-beb315173b67">ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('pipeline',
                                     Pipeline(steps=[('standardscaler',
                                                      StandardScaler()),
                                                     ('simpleimputer',
                                                      SimpleImputer(add_indicator=True))]),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7fc1aebb6400>),
                                    ('onehotencoder',
                                     OneHotEncoder(handle_unknown='ignore'),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7fc1aebb6f10>)])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7d865e45-afcc-477c-becf-caa88281ca4e" type="checkbox" ><label class="sk-toggleable__label" for="7d865e45-afcc-477c-becf-caa88281ca4e">pipeline</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7fc1aebb6400></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ad479ad8-c0bf-4eb8-bbcf-84361b145eab" type="checkbox" ><label class="sk-toggleable__label" for="ad479ad8-c0bf-4eb8-bbcf-84361b145eab">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="86a776a5-421d-43dd-a568-8138691085df" type="checkbox" ><label class="sk-toggleable__label" for="86a776a5-421d-43dd-a568-8138691085df">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(add_indicator=True)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="af3d580c-e0d3-41a7-b30b-3bd92a615e4f" type="checkbox" ><label class="sk-toggleable__label" for="af3d580c-e0d3-41a7-b30b-3bd92a615e4f">onehotencoder</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7fc1aebb6f10></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c9442d7e-0625-4bf1-8897-0a53488b5d38" type="checkbox" ><label class="sk-toggleable__label" for="c9442d7e-0625-4bf1-8897-0a53488b5d38">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown='ignore')</pre></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 153-171

Stack of predictors on a single data set
#############################################################################

 It is sometimes tedious to find the model which will best perform on a given
 dataset. Stacking provide an alternative by combining the outputs of several
 learners, without the need to choose a model specifically. The performance of
 stacking is usually close to the best model and sometimes it can outperform
 the prediction performance of each individual model.

 Here, we combine 3 learners (linear and non-linear) and use a ridge regressor
 to combine their outputs together.

 .. note::
    Although we will make new pipelines with the processors which we wrote in
    the previous section for the 3 learners, the final estimator
    :class:`~sklearn.linear_model.RidgeCV()` does not need preprocessing of
    the data as it will be fed with the already preprocessed output from the 3
    learners.

.. GENERATED FROM PYTHON SOURCE LINES 171-177

.. code-block:: default


    from sklearn.linear_model import LassoCV

    lasso_pipeline = make_pipeline(linear_preprocessor, LassoCV())
    lasso_pipeline






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-baac6bba-c4ec-479d-a8da-d9526adf6383 {color: black;background-color: white;}#sk-baac6bba-c4ec-479d-a8da-d9526adf6383 pre{padding: 0;}#sk-baac6bba-c4ec-479d-a8da-d9526adf6383 div.sk-toggleable {background-color: white;}#sk-baac6bba-c4ec-479d-a8da-d9526adf6383 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-baac6bba-c4ec-479d-a8da-d9526adf6383 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-baac6bba-c4ec-479d-a8da-d9526adf6383 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-baac6bba-c4ec-479d-a8da-d9526adf6383 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-baac6bba-c4ec-479d-a8da-d9526adf6383 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-baac6bba-c4ec-479d-a8da-d9526adf6383 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-baac6bba-c4ec-479d-a8da-d9526adf6383 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-baac6bba-c4ec-479d-a8da-d9526adf6383 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-baac6bba-c4ec-479d-a8da-d9526adf6383 div.sk-estimator:hover {background-color: #d4ebff;}#sk-baac6bba-c4ec-479d-a8da-d9526adf6383 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-baac6bba-c4ec-479d-a8da-d9526adf6383 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-baac6bba-c4ec-479d-a8da-d9526adf6383 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-baac6bba-c4ec-479d-a8da-d9526adf6383 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-baac6bba-c4ec-479d-a8da-d9526adf6383 div.sk-item {z-index: 1;}#sk-baac6bba-c4ec-479d-a8da-d9526adf6383 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-baac6bba-c4ec-479d-a8da-d9526adf6383 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-baac6bba-c4ec-479d-a8da-d9526adf6383 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-baac6bba-c4ec-479d-a8da-d9526adf6383 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-baac6bba-c4ec-479d-a8da-d9526adf6383 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-baac6bba-c4ec-479d-a8da-d9526adf6383 div.sk-parallel-item:only-child::after {width: 0;}#sk-baac6bba-c4ec-479d-a8da-d9526adf6383 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-baac6bba-c4ec-479d-a8da-d9526adf6383 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-baac6bba-c4ec-479d-a8da-d9526adf6383 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-baac6bba-c4ec-479d-a8da-d9526adf6383 div.sk-container {display: inline-block;position: relative;}</style><div id="sk-baac6bba-c4ec-479d-a8da-d9526adf6383" class"sk-top-container"><div class="sk-container"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a0a4b217-95a5-49f6-b05e-bd9a928914a4" type="checkbox" ><label class="sk-toggleable__label" for="a0a4b217-95a5-49f6-b05e-bd9a928914a4">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('columntransformer',
                     ColumnTransformer(transformers=[('pipeline',
                                                      Pipeline(steps=[('standardscaler',
                                                                       StandardScaler()),
                                                                      ('simpleimputer',
                                                                       SimpleImputer(add_indicator=True))]),
                                                      <sklearn.compose._column_transformer.make_column_selector object at 0x7fc1aebb6400>),
                                                     ('onehotencoder',
                                                      OneHotEncoder(handle_unknown='ignore'),
                                                      <sklearn.compose._column_transformer.make_column_selector object at 0x7fc1aebb6f10>)])),
                    ('lassocv', LassoCV())])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="84f6a4dc-3e11-4716-b0f4-a50d26e75500" type="checkbox" ><label class="sk-toggleable__label" for="84f6a4dc-3e11-4716-b0f4-a50d26e75500">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('pipeline',
                                     Pipeline(steps=[('standardscaler',
                                                      StandardScaler()),
                                                     ('simpleimputer',
                                                      SimpleImputer(add_indicator=True))]),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7fc1aebb6400>),
                                    ('onehotencoder',
                                     OneHotEncoder(handle_unknown='ignore'),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7fc1aebb6f10>)])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="51530f92-4e3f-4539-9546-afc2e94e99b3" type="checkbox" ><label class="sk-toggleable__label" for="51530f92-4e3f-4539-9546-afc2e94e99b3">pipeline</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7fc1aebb6400></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="94bc34fd-579c-4941-966b-154832cc0b67" type="checkbox" ><label class="sk-toggleable__label" for="94bc34fd-579c-4941-966b-154832cc0b67">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b10a16de-d8e9-4c38-9116-2e1956e4a918" type="checkbox" ><label class="sk-toggleable__label" for="b10a16de-d8e9-4c38-9116-2e1956e4a918">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(add_indicator=True)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="de4e701e-d9b4-4b2b-8b00-c9b17f14c8b2" type="checkbox" ><label class="sk-toggleable__label" for="de4e701e-d9b4-4b2b-8b00-c9b17f14c8b2">onehotencoder</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7fc1aebb6f10></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="faef3984-d5a2-4807-969f-b9406e55e810" type="checkbox" ><label class="sk-toggleable__label" for="faef3984-d5a2-4807-969f-b9406e55e810">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown='ignore')</pre></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a721ae97-b675-4780-9eea-5ac72bec5d11" type="checkbox" ><label class="sk-toggleable__label" for="a721ae97-b675-4780-9eea-5ac72bec5d11">LassoCV</label><div class="sk-toggleable__content"><pre>LassoCV()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 178-183

.. code-block:: default

    from sklearn.ensemble import RandomForestRegressor

    rf_pipeline = make_pipeline(tree_preprocessor, RandomForestRegressor(random_state=42))
    rf_pipeline






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-14ce567d-abf5-4a53-99bd-db66c5c03d53 {color: black;background-color: white;}#sk-14ce567d-abf5-4a53-99bd-db66c5c03d53 pre{padding: 0;}#sk-14ce567d-abf5-4a53-99bd-db66c5c03d53 div.sk-toggleable {background-color: white;}#sk-14ce567d-abf5-4a53-99bd-db66c5c03d53 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-14ce567d-abf5-4a53-99bd-db66c5c03d53 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-14ce567d-abf5-4a53-99bd-db66c5c03d53 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-14ce567d-abf5-4a53-99bd-db66c5c03d53 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-14ce567d-abf5-4a53-99bd-db66c5c03d53 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-14ce567d-abf5-4a53-99bd-db66c5c03d53 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-14ce567d-abf5-4a53-99bd-db66c5c03d53 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-14ce567d-abf5-4a53-99bd-db66c5c03d53 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-14ce567d-abf5-4a53-99bd-db66c5c03d53 div.sk-estimator:hover {background-color: #d4ebff;}#sk-14ce567d-abf5-4a53-99bd-db66c5c03d53 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-14ce567d-abf5-4a53-99bd-db66c5c03d53 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-14ce567d-abf5-4a53-99bd-db66c5c03d53 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-14ce567d-abf5-4a53-99bd-db66c5c03d53 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-14ce567d-abf5-4a53-99bd-db66c5c03d53 div.sk-item {z-index: 1;}#sk-14ce567d-abf5-4a53-99bd-db66c5c03d53 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-14ce567d-abf5-4a53-99bd-db66c5c03d53 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-14ce567d-abf5-4a53-99bd-db66c5c03d53 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-14ce567d-abf5-4a53-99bd-db66c5c03d53 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-14ce567d-abf5-4a53-99bd-db66c5c03d53 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-14ce567d-abf5-4a53-99bd-db66c5c03d53 div.sk-parallel-item:only-child::after {width: 0;}#sk-14ce567d-abf5-4a53-99bd-db66c5c03d53 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-14ce567d-abf5-4a53-99bd-db66c5c03d53 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-14ce567d-abf5-4a53-99bd-db66c5c03d53 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-14ce567d-abf5-4a53-99bd-db66c5c03d53 div.sk-container {display: inline-block;position: relative;}</style><div id="sk-14ce567d-abf5-4a53-99bd-db66c5c03d53" class"sk-top-container"><div class="sk-container"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="55e91635-a033-404e-b185-5ccdce9b2fbc" type="checkbox" ><label class="sk-toggleable__label" for="55e91635-a033-404e-b185-5ccdce9b2fbc">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('columntransformer',
                     ColumnTransformer(transformers=[('simpleimputer',
                                                      SimpleImputer(add_indicator=True),
                                                      <sklearn.compose._column_transformer.make_column_selector object at 0x7fc1aebb6400>),
                                                     ('ordinalencoder',
                                                      OrdinalEncoder(handle_unknown='use_encoded_value',
                                                                     unknown_value=-1),
                                                      <sklearn.compose._column_transformer.make_column_selector object at 0x7fc1aebb6f10>)])),
                    ('randomforestregressor',
                     RandomForestRegressor(random_state=42))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7e5074ca-899d-4c50-8798-f115e71c4ae0" type="checkbox" ><label class="sk-toggleable__label" for="7e5074ca-899d-4c50-8798-f115e71c4ae0">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('simpleimputer',
                                     SimpleImputer(add_indicator=True),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7fc1aebb6400>),
                                    ('ordinalencoder',
                                     OrdinalEncoder(handle_unknown='use_encoded_value',
                                                    unknown_value=-1),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7fc1aebb6f10>)])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c91f8e0a-38d8-4933-8389-ba3d7f758882" type="checkbox" ><label class="sk-toggleable__label" for="c91f8e0a-38d8-4933-8389-ba3d7f758882">simpleimputer</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7fc1aebb6400></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6ac6dc9f-28eb-40d7-b25a-7fe124f56d43" type="checkbox" ><label class="sk-toggleable__label" for="6ac6dc9f-28eb-40d7-b25a-7fe124f56d43">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(add_indicator=True)</pre></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="64d9b605-cf0c-4727-af35-75c8bd76e280" type="checkbox" ><label class="sk-toggleable__label" for="64d9b605-cf0c-4727-af35-75c8bd76e280">ordinalencoder</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7fc1aebb6f10></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cea0e6d7-e928-4786-9a03-935c45d1fd94" type="checkbox" ><label class="sk-toggleable__label" for="cea0e6d7-e928-4786-9a03-935c45d1fd94">OrdinalEncoder</label><div class="sk-toggleable__content"><pre>OrdinalEncoder(handle_unknown='use_encoded_value', unknown_value=-1)</pre></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5f7bfa9a-048d-45de-a395-4d27057bbbc7" type="checkbox" ><label class="sk-toggleable__label" for="5f7bfa9a-048d-45de-a395-4d27057bbbc7">RandomForestRegressor</label><div class="sk-toggleable__content"><pre>RandomForestRegressor(random_state=42)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 184-191

.. code-block:: default

    from sklearn.ensemble import HistGradientBoostingRegressor

    gbdt_pipeline = make_pipeline(
        tree_preprocessor, HistGradientBoostingRegressor(random_state=0)
    )
    gbdt_pipeline






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-b9c79213-aa6e-4373-b6e3-5abee11c1f8a {color: black;background-color: white;}#sk-b9c79213-aa6e-4373-b6e3-5abee11c1f8a pre{padding: 0;}#sk-b9c79213-aa6e-4373-b6e3-5abee11c1f8a div.sk-toggleable {background-color: white;}#sk-b9c79213-aa6e-4373-b6e3-5abee11c1f8a label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-b9c79213-aa6e-4373-b6e3-5abee11c1f8a div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-b9c79213-aa6e-4373-b6e3-5abee11c1f8a div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-b9c79213-aa6e-4373-b6e3-5abee11c1f8a input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-b9c79213-aa6e-4373-b6e3-5abee11c1f8a div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b9c79213-aa6e-4373-b6e3-5abee11c1f8a div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b9c79213-aa6e-4373-b6e3-5abee11c1f8a input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-b9c79213-aa6e-4373-b6e3-5abee11c1f8a div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-b9c79213-aa6e-4373-b6e3-5abee11c1f8a div.sk-estimator:hover {background-color: #d4ebff;}#sk-b9c79213-aa6e-4373-b6e3-5abee11c1f8a div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-b9c79213-aa6e-4373-b6e3-5abee11c1f8a div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-b9c79213-aa6e-4373-b6e3-5abee11c1f8a div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b9c79213-aa6e-4373-b6e3-5abee11c1f8a div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-b9c79213-aa6e-4373-b6e3-5abee11c1f8a div.sk-item {z-index: 1;}#sk-b9c79213-aa6e-4373-b6e3-5abee11c1f8a div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-b9c79213-aa6e-4373-b6e3-5abee11c1f8a div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b9c79213-aa6e-4373-b6e3-5abee11c1f8a div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-b9c79213-aa6e-4373-b6e3-5abee11c1f8a div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-b9c79213-aa6e-4373-b6e3-5abee11c1f8a div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-b9c79213-aa6e-4373-b6e3-5abee11c1f8a div.sk-parallel-item:only-child::after {width: 0;}#sk-b9c79213-aa6e-4373-b6e3-5abee11c1f8a div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-b9c79213-aa6e-4373-b6e3-5abee11c1f8a div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-b9c79213-aa6e-4373-b6e3-5abee11c1f8a div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-b9c79213-aa6e-4373-b6e3-5abee11c1f8a div.sk-container {display: inline-block;position: relative;}</style><div id="sk-b9c79213-aa6e-4373-b6e3-5abee11c1f8a" class"sk-top-container"><div class="sk-container"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="60e2a220-bb91-4666-b24c-cb2dd0c61c3b" type="checkbox" ><label class="sk-toggleable__label" for="60e2a220-bb91-4666-b24c-cb2dd0c61c3b">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('columntransformer',
                     ColumnTransformer(transformers=[('simpleimputer',
                                                      SimpleImputer(add_indicator=True),
                                                      <sklearn.compose._column_transformer.make_column_selector object at 0x7fc1aebb6400>),
                                                     ('ordinalencoder',
                                                      OrdinalEncoder(handle_unknown='use_encoded_value',
                                                                     unknown_value=-1),
                                                      <sklearn.compose._column_transformer.make_column_selector object at 0x7fc1aebb6f10>)])),
                    ('histgradientboostingregressor',
                     HistGradientBoostingRegressor(random_state=0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="58621261-b6ad-4568-bd20-cee4c5e117a2" type="checkbox" ><label class="sk-toggleable__label" for="58621261-b6ad-4568-bd20-cee4c5e117a2">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('simpleimputer',
                                     SimpleImputer(add_indicator=True),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7fc1aebb6400>),
                                    ('ordinalencoder',
                                     OrdinalEncoder(handle_unknown='use_encoded_value',
                                                    unknown_value=-1),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7fc1aebb6f10>)])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a439b627-ec61-4463-b607-c1cd88897937" type="checkbox" ><label class="sk-toggleable__label" for="a439b627-ec61-4463-b607-c1cd88897937">simpleimputer</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7fc1aebb6400></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5cd9fd3d-9d0c-4311-9412-b6f4f30a7565" type="checkbox" ><label class="sk-toggleable__label" for="5cd9fd3d-9d0c-4311-9412-b6f4f30a7565">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(add_indicator=True)</pre></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9dca3409-3134-422c-81dd-6713dec71f3a" type="checkbox" ><label class="sk-toggleable__label" for="9dca3409-3134-422c-81dd-6713dec71f3a">ordinalencoder</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7fc1aebb6f10></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cac902ba-7bc5-4567-b9fb-c8cdbfb0063a" type="checkbox" ><label class="sk-toggleable__label" for="cac902ba-7bc5-4567-b9fb-c8cdbfb0063a">OrdinalEncoder</label><div class="sk-toggleable__content"><pre>OrdinalEncoder(handle_unknown='use_encoded_value', unknown_value=-1)</pre></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d69e9c4a-4094-4233-8362-d2757a65991b" type="checkbox" ><label class="sk-toggleable__label" for="d69e9c4a-4094-4233-8362-d2757a65991b">HistGradientBoostingRegressor</label><div class="sk-toggleable__content"><pre>HistGradientBoostingRegressor(random_state=0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 192-204

.. code-block:: default

    from sklearn.ensemble import StackingRegressor
    from sklearn.linear_model import RidgeCV

    estimators = [
        ("Random Forest", rf_pipeline),
        ("Lasso", lasso_pipeline),
        ("Gradient Boosting", gbdt_pipeline),
    ]

    stacking_regressor = StackingRegressor(estimators=estimators, final_estimator=RidgeCV())
    stacking_regressor






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-a09ae88b-d7cd-48c4-9fc9-12813b6d2cbb {color: black;background-color: white;}#sk-a09ae88b-d7cd-48c4-9fc9-12813b6d2cbb pre{padding: 0;}#sk-a09ae88b-d7cd-48c4-9fc9-12813b6d2cbb div.sk-toggleable {background-color: white;}#sk-a09ae88b-d7cd-48c4-9fc9-12813b6d2cbb label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-a09ae88b-d7cd-48c4-9fc9-12813b6d2cbb div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-a09ae88b-d7cd-48c4-9fc9-12813b6d2cbb div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-a09ae88b-d7cd-48c4-9fc9-12813b6d2cbb input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-a09ae88b-d7cd-48c4-9fc9-12813b6d2cbb div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-a09ae88b-d7cd-48c4-9fc9-12813b6d2cbb div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-a09ae88b-d7cd-48c4-9fc9-12813b6d2cbb input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-a09ae88b-d7cd-48c4-9fc9-12813b6d2cbb div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-a09ae88b-d7cd-48c4-9fc9-12813b6d2cbb div.sk-estimator:hover {background-color: #d4ebff;}#sk-a09ae88b-d7cd-48c4-9fc9-12813b6d2cbb div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-a09ae88b-d7cd-48c4-9fc9-12813b6d2cbb div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-a09ae88b-d7cd-48c4-9fc9-12813b6d2cbb div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-a09ae88b-d7cd-48c4-9fc9-12813b6d2cbb div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-a09ae88b-d7cd-48c4-9fc9-12813b6d2cbb div.sk-item {z-index: 1;}#sk-a09ae88b-d7cd-48c4-9fc9-12813b6d2cbb div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-a09ae88b-d7cd-48c4-9fc9-12813b6d2cbb div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-a09ae88b-d7cd-48c4-9fc9-12813b6d2cbb div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-a09ae88b-d7cd-48c4-9fc9-12813b6d2cbb div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-a09ae88b-d7cd-48c4-9fc9-12813b6d2cbb div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-a09ae88b-d7cd-48c4-9fc9-12813b6d2cbb div.sk-parallel-item:only-child::after {width: 0;}#sk-a09ae88b-d7cd-48c4-9fc9-12813b6d2cbb div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-a09ae88b-d7cd-48c4-9fc9-12813b6d2cbb div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-a09ae88b-d7cd-48c4-9fc9-12813b6d2cbb div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-a09ae88b-d7cd-48c4-9fc9-12813b6d2cbb div.sk-container {display: inline-block;position: relative;}</style><div id="sk-a09ae88b-d7cd-48c4-9fc9-12813b6d2cbb" class"sk-top-container"><div class="sk-container"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="99dc5272-479b-4d1d-ac14-e75cd7cbea24" type="checkbox" ><label class="sk-toggleable__label" for="99dc5272-479b-4d1d-ac14-e75cd7cbea24">StackingRegressor</label><div class="sk-toggleable__content"><pre>StackingRegressor(estimators=[('Random Forest',
                                   Pipeline(steps=[('columntransformer',
                                                    ColumnTransformer(transformers=[('simpleimputer',
                                                                                     SimpleImputer(add_indicator=True),
                                                                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7fc1aebb6400>),
                                                                                    ('ordinalencoder',
                                                                                     OrdinalEncoder(handle_unknown='use_encoded_value',
                                                                                                    unknown_value=-1),
                                                                                     <sklearn.compose...
                                                                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7fc1aebb6400>),
                                                                                    ('ordinalencoder',
                                                                                     OrdinalEncoder(handle_unknown='use_encoded_value',
                                                                                                    unknown_value=-1),
                                                                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7fc1aebb6f10>)])),
                                                   ('histgradientboostingregressor',
                                                    HistGradientBoostingRegressor(random_state=0))]))],
                      final_estimator=RidgeCV(alphas=array([ 0.1,  1. , 10. ])))</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><label>Random Forest</label></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="93c5aa16-b9fc-44f9-8179-9633d23038b2" type="checkbox" ><label class="sk-toggleable__label" for="93c5aa16-b9fc-44f9-8179-9633d23038b2">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('simpleimputer',
                                     SimpleImputer(add_indicator=True),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7fc1aebb6400>),
                                    ('ordinalencoder',
                                     OrdinalEncoder(handle_unknown='use_encoded_value',
                                                    unknown_value=-1),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7fc1aebb6f10>)])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7ee3a4e3-b537-4964-8e20-0a25e7fd7a49" type="checkbox" ><label class="sk-toggleable__label" for="7ee3a4e3-b537-4964-8e20-0a25e7fd7a49">simpleimputer</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7fc1aebb6400></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9f5239f1-b223-462c-aa80-37cf088a1005" type="checkbox" ><label class="sk-toggleable__label" for="9f5239f1-b223-462c-aa80-37cf088a1005">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(add_indicator=True)</pre></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4ba1fa43-9f6b-4bda-8cc1-165889f6cd73" type="checkbox" ><label class="sk-toggleable__label" for="4ba1fa43-9f6b-4bda-8cc1-165889f6cd73">ordinalencoder</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7fc1aebb6f10></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0183eee3-b164-4b84-9847-faf224fe2f30" type="checkbox" ><label class="sk-toggleable__label" for="0183eee3-b164-4b84-9847-faf224fe2f30">OrdinalEncoder</label><div class="sk-toggleable__content"><pre>OrdinalEncoder(handle_unknown='use_encoded_value', unknown_value=-1)</pre></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="75ae1661-3f58-4095-93c8-eb328a8fa546" type="checkbox" ><label class="sk-toggleable__label" for="75ae1661-3f58-4095-93c8-eb328a8fa546">RandomForestRegressor</label><div class="sk-toggleable__content"><pre>RandomForestRegressor(random_state=42)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><label>Lasso</label></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="89e7c25e-6d4c-4886-9c3e-43af3b4f1728" type="checkbox" ><label class="sk-toggleable__label" for="89e7c25e-6d4c-4886-9c3e-43af3b4f1728">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('pipeline',
                                     Pipeline(steps=[('standardscaler',
                                                      StandardScaler()),
                                                     ('simpleimputer',
                                                      SimpleImputer(add_indicator=True))]),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7fc1aebb6400>),
                                    ('onehotencoder',
                                     OneHotEncoder(handle_unknown='ignore'),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7fc1aebb6f10>)])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="467a5715-5e7f-46cb-bced-03ff51b6092f" type="checkbox" ><label class="sk-toggleable__label" for="467a5715-5e7f-46cb-bced-03ff51b6092f">pipeline</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7fc1aebb6400></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="43cb2aca-5789-4046-97ed-bde8c6f215df" type="checkbox" ><label class="sk-toggleable__label" for="43cb2aca-5789-4046-97ed-bde8c6f215df">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="becffbe0-6f93-4f7b-b88a-be28d375347f" type="checkbox" ><label class="sk-toggleable__label" for="becffbe0-6f93-4f7b-b88a-be28d375347f">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(add_indicator=True)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9c530ab2-199e-413e-a4a9-1891de6b9e50" type="checkbox" ><label class="sk-toggleable__label" for="9c530ab2-199e-413e-a4a9-1891de6b9e50">onehotencoder</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7fc1aebb6f10></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="935cfa2c-8b9a-454b-84ea-9f09f960eb97" type="checkbox" ><label class="sk-toggleable__label" for="935cfa2c-8b9a-454b-84ea-9f09f960eb97">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown='ignore')</pre></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="940c471d-d1fe-47a6-9031-4c58088a52e2" type="checkbox" ><label class="sk-toggleable__label" for="940c471d-d1fe-47a6-9031-4c58088a52e2">LassoCV</label><div class="sk-toggleable__content"><pre>LassoCV()</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><label>Gradient Boosting</label></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9b31c788-5d9c-4dad-ba1b-9bb8545f2c4b" type="checkbox" ><label class="sk-toggleable__label" for="9b31c788-5d9c-4dad-ba1b-9bb8545f2c4b">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('simpleimputer',
                                     SimpleImputer(add_indicator=True),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7fc1aebb6400>),
                                    ('ordinalencoder',
                                     OrdinalEncoder(handle_unknown='use_encoded_value',
                                                    unknown_value=-1),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7fc1aebb6f10>)])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e3da66df-d4df-42d7-9a32-4e75b3397586" type="checkbox" ><label class="sk-toggleable__label" for="e3da66df-d4df-42d7-9a32-4e75b3397586">simpleimputer</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7fc1aebb6400></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9f9d6d17-30f2-4e2a-9e9d-5039180039db" type="checkbox" ><label class="sk-toggleable__label" for="9f9d6d17-30f2-4e2a-9e9d-5039180039db">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(add_indicator=True)</pre></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c9d2fc62-451a-4638-acfc-7824f9ac24f0" type="checkbox" ><label class="sk-toggleable__label" for="c9d2fc62-451a-4638-acfc-7824f9ac24f0">ordinalencoder</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7fc1aebb6f10></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3cef33f8-6164-45ca-a9af-1bd2244706da" type="checkbox" ><label class="sk-toggleable__label" for="3cef33f8-6164-45ca-a9af-1bd2244706da">OrdinalEncoder</label><div class="sk-toggleable__content"><pre>OrdinalEncoder(handle_unknown='use_encoded_value', unknown_value=-1)</pre></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3c3ac0c6-4a88-4abd-8978-65bc70dfdc7f" type="checkbox" ><label class="sk-toggleable__label" for="3c3ac0c6-4a88-4abd-8978-65bc70dfdc7f">HistGradientBoostingRegressor</label><div class="sk-toggleable__content"><pre>HistGradientBoostingRegressor(random_state=0)</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><label>final_estimator</label></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="95efc060-fdcd-41d5-a53f-3da53cefe40a" type="checkbox" ><label class="sk-toggleable__label" for="95efc060-fdcd-41d5-a53f-3da53cefe40a">RidgeCV</label><div class="sk-toggleable__content"><pre>RidgeCV(alphas=array([ 0.1,  1. , 10. ]))</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 205-214

Measure and plot the results
#############################################################################

 Now we can use Ames Housing dataset to make the predictions. We check the
 performance of each individual predictor as well as of the stack of the
 regressors.

 The function ``plot_regression_results`` is used to plot the predicted and
 true targets.

.. GENERATED FROM PYTHON SOURCE LINES 214-279

.. code-block:: default



    import time
    import matplotlib.pyplot as plt
    from sklearn.model_selection import cross_validate, cross_val_predict


    def plot_regression_results(ax, y_true, y_pred, title, scores, elapsed_time):
        """Scatter plot of the predicted vs true targets."""
        ax.plot(
            [y_true.min(), y_true.max()], [y_true.min(), y_true.max()], "--r", linewidth=2
        )
        ax.scatter(y_true, y_pred, alpha=0.2)

        ax.spines["top"].set_visible(False)
        ax.spines["right"].set_visible(False)
        ax.get_xaxis().tick_bottom()
        ax.get_yaxis().tick_left()
        ax.spines["left"].set_position(("outward", 10))
        ax.spines["bottom"].set_position(("outward", 10))
        ax.set_xlim([y_true.min(), y_true.max()])
        ax.set_ylim([y_true.min(), y_true.max()])
        ax.set_xlabel("Measured")
        ax.set_ylabel("Predicted")
        extra = plt.Rectangle(
            (0, 0), 0, 0, fc="w", fill=False, edgecolor="none", linewidth=0
        )
        ax.legend([extra], [scores], loc="upper left")
        title = title + "\n Evaluation in {:.2f} seconds".format(elapsed_time)
        ax.set_title(title)


    fig, axs = plt.subplots(2, 2, figsize=(9, 7))
    axs = np.ravel(axs)

    for ax, (name, est) in zip(
        axs, estimators + [("Stacking Regressor", stacking_regressor)]
    ):
        start_time = time.time()
        score = cross_validate(
            est, X, y, scoring=["r2", "neg_mean_absolute_error"], n_jobs=-1, verbose=0
        )
        elapsed_time = time.time() - start_time

        y_pred = cross_val_predict(est, X, y, n_jobs=-1, verbose=0)

        plot_regression_results(
            ax,
            y,
            y_pred,
            name,
            (r"$R^2={:.2f} \pm {:.2f}$" + "\n" + r"$MAE={:.2f} \pm {:.2f}$").format(
                np.mean(score["test_r2"]),
                np.std(score["test_r2"]),
                -np.mean(score["test_neg_mean_absolute_error"]),
                np.std(score["test_neg_mean_absolute_error"]),
            ),
            elapsed_time,
        )

    plt.suptitle("Single predictors versus stacked predictors")
    plt.tight_layout()
    plt.subplots_adjust(top=0.9)
    plt.show()




.. image-sg:: /auto_examples/ensemble/images/sphx_glr_plot_stack_predictors_001.png
   :alt: Single predictors versus stacked predictors, Random Forest  Evaluation in 2.99 seconds, Lasso  Evaluation in 0.66 seconds, Gradient Boosting  Evaluation in 0.81 seconds, Stacking Regressor  Evaluation in 10.69 seconds
   :srcset: /auto_examples/ensemble/images/sphx_glr_plot_stack_predictors_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 280-283

The stacked regressor will combine the strengths of the different regressors.
However, we also see that training the stacked regressor is much more
computationally expensive.


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  29.822 seconds)


.. _sphx_glr_download_auto_examples_ensemble_plot_stack_predictors.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/ensemble/plot_stack_predictors.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_stack_predictors.py <plot_stack_predictors.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_stack_predictors.ipynb <plot_stack_predictors.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
