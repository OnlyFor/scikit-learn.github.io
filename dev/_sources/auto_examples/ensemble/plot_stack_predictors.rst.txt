
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/ensemble/plot_stack_predictors.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_ensemble_plot_stack_predictors.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_ensemble_plot_stack_predictors.py:


=================================
Combine predictors using stacking
=================================

.. currentmodule:: sklearn

Stacking refers to a method to blend estimators. In this strategy, some
estimators are individually fitted on some training data while a final
estimator is trained using the stacked predictions of these base estimators.

In this example, we illustrate the use case in which different regressors are
stacked together and a final linear penalized regressor is used to output the
prediction. We compare the performance of each individual regressor with the
stacking strategy. Stacking slightly improves the overall performance.

.. GENERATED FROM PYTHON SOURCE LINES 18-29

.. code-block:: default


    # Authors: Guillaume Lemaitre <g.lemaitre58@gmail.com>
    #          Maria Telenczuk    <https://github.com/maikia>
    # License: BSD 3 clause

    print(__doc__)

    from sklearn import set_config

    set_config(display="diagram")








.. GENERATED FROM PYTHON SOURCE LINES 30-46

Download the dataset
#############################################################################

 We will use `Ames Housing`_ dataset which was first compiled by Dean De Cock
 and became better known after it was used in Kaggle challenge. It is a set
 of 1460 residential homes in Ames, Iowa, each described by 80 features. We
 will use it to predict the final logarithmic price of the houses. In this
 example we will use only 20 most interesting features chosen using
 GradientBoostingRegressor() and limit number of entries (here we won't go
 into the details on how to select the most interesting features).

 The Ames housing dataset is not shipped with scikit-learn and therefore we
 will fetch it from `OpenML`_.

 .. _`Ames Housing`: http://jse.amstat.org/v19n3/decock.pdf
 .. _`OpenML`: https://www.openml.org/d/42165

.. GENERATED FROM PYTHON SOURCE LINES 46-92

.. code-block:: default


    import numpy as np

    from sklearn.datasets import fetch_openml
    from sklearn.utils import shuffle


    def load_ames_housing():
        df = fetch_openml(name="house_prices", as_frame=True)
        X = df.data
        y = df.target

        features = [
            "YrSold",
            "HeatingQC",
            "Street",
            "YearRemodAdd",
            "Heating",
            "MasVnrType",
            "BsmtUnfSF",
            "Foundation",
            "MasVnrArea",
            "MSSubClass",
            "ExterQual",
            "Condition2",
            "GarageCars",
            "GarageType",
            "OverallQual",
            "TotalBsmtSF",
            "BsmtFinSF1",
            "HouseStyle",
            "MiscFeature",
            "MoSold",
        ]

        X = X[features]
        X, y = shuffle(X, y, random_state=0)

        X = X[:600]
        y = y[:600]
        return X, np.log(y)


    X, y = load_ames_housing()









.. GENERATED FROM PYTHON SOURCE LINES 93-99

Make pipeline to preprocess the data
#############################################################################

 Before we can use Ames dataset we still need to do some preprocessing.
 First, we will select the categorical and numerical columns of the dataset to
 construct the first step of the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 99-106

.. code-block:: default


    from sklearn.compose import make_column_selector

    cat_selector = make_column_selector(dtype_include=object)
    num_selector = make_column_selector(dtype_include=np.number)
    cat_selector(X)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    ['HeatingQC', 'Street', 'Heating', 'MasVnrType', 'Foundation', 'ExterQual', 'Condition2', 'GarageType', 'HouseStyle', 'MiscFeature']



.. GENERATED FROM PYTHON SOURCE LINES 107-109

.. code-block:: default

    num_selector(X)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    ['YrSold', 'YearRemodAdd', 'BsmtUnfSF', 'MasVnrArea', 'MSSubClass', 'GarageCars', 'OverallQual', 'TotalBsmtSF', 'BsmtFinSF1', 'MoSold']



.. GENERATED FROM PYTHON SOURCE LINES 110-119

Then, we will need to design preprocessing pipelines which depends on the
ending regressor. If the ending regressor is a linear model, one needs to
one-hot encode the categories. If the ending regressor is a tree-based model
an ordinal encoder will be sufficient. Besides, numerical values need to be
standardized for a linear model while the raw numerical data can be treated
as is by a tree-based model. However, both models need an imputer to
handle missing values.

We will first design the pipeline required for the tree-based models.

.. GENERATED FROM PYTHON SOURCE LINES 119-135

.. code-block:: default


    from sklearn.compose import make_column_transformer
    from sklearn.impute import SimpleImputer
    from sklearn.pipeline import make_pipeline
    from sklearn.preprocessing import OrdinalEncoder

    cat_tree_processor = OrdinalEncoder(
        handle_unknown="use_encoded_value", unknown_value=-1
    )
    num_tree_processor = SimpleImputer(strategy="mean", add_indicator=True)

    tree_preprocessor = make_column_transformer(
        (num_tree_processor, num_selector), (cat_tree_processor, cat_selector)
    )
    tree_preprocessor






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-19f6ec33-2b1e-4f9f-b098-d3dba47ad4bf {color: black;background-color: white;}#sk-19f6ec33-2b1e-4f9f-b098-d3dba47ad4bf pre{padding: 0;}#sk-19f6ec33-2b1e-4f9f-b098-d3dba47ad4bf div.sk-toggleable {background-color: white;}#sk-19f6ec33-2b1e-4f9f-b098-d3dba47ad4bf label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-19f6ec33-2b1e-4f9f-b098-d3dba47ad4bf div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-19f6ec33-2b1e-4f9f-b098-d3dba47ad4bf div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-19f6ec33-2b1e-4f9f-b098-d3dba47ad4bf input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-19f6ec33-2b1e-4f9f-b098-d3dba47ad4bf div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-19f6ec33-2b1e-4f9f-b098-d3dba47ad4bf div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-19f6ec33-2b1e-4f9f-b098-d3dba47ad4bf input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-19f6ec33-2b1e-4f9f-b098-d3dba47ad4bf div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-19f6ec33-2b1e-4f9f-b098-d3dba47ad4bf div.sk-estimator:hover {background-color: #d4ebff;}#sk-19f6ec33-2b1e-4f9f-b098-d3dba47ad4bf div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-19f6ec33-2b1e-4f9f-b098-d3dba47ad4bf div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-19f6ec33-2b1e-4f9f-b098-d3dba47ad4bf div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-19f6ec33-2b1e-4f9f-b098-d3dba47ad4bf div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-19f6ec33-2b1e-4f9f-b098-d3dba47ad4bf div.sk-item {z-index: 1;}#sk-19f6ec33-2b1e-4f9f-b098-d3dba47ad4bf div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-19f6ec33-2b1e-4f9f-b098-d3dba47ad4bf div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-19f6ec33-2b1e-4f9f-b098-d3dba47ad4bf div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-19f6ec33-2b1e-4f9f-b098-d3dba47ad4bf div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-19f6ec33-2b1e-4f9f-b098-d3dba47ad4bf div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-19f6ec33-2b1e-4f9f-b098-d3dba47ad4bf div.sk-parallel-item:only-child::after {width: 0;}#sk-19f6ec33-2b1e-4f9f-b098-d3dba47ad4bf div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-19f6ec33-2b1e-4f9f-b098-d3dba47ad4bf div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-19f6ec33-2b1e-4f9f-b098-d3dba47ad4bf div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-19f6ec33-2b1e-4f9f-b098-d3dba47ad4bf div.sk-container {display: inline-block;position: relative;}</style><div id="sk-19f6ec33-2b1e-4f9f-b098-d3dba47ad4bf" class"sk-top-container"><div class="sk-container"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="86b75cdc-84c1-4602-8efa-bd0a83ae2335" type="checkbox" ><label class="sk-toggleable__label" for="86b75cdc-84c1-4602-8efa-bd0a83ae2335">ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('simpleimputer',
                                     SimpleImputer(add_indicator=True),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f3922dc1550>),
                                    ('ordinalencoder',
                                     OrdinalEncoder(handle_unknown='use_encoded_value',
                                                    unknown_value=-1),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f3922dc1e80>)])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ad5a1d32-8d65-490e-a319-a975b91857bb" type="checkbox" ><label class="sk-toggleable__label" for="ad5a1d32-8d65-490e-a319-a975b91857bb">simpleimputer</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f3922dc1550></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f6827590-d3a0-4347-a76e-3c641f83c101" type="checkbox" ><label class="sk-toggleable__label" for="f6827590-d3a0-4347-a76e-3c641f83c101">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(add_indicator=True)</pre></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0fbdc3d0-4a2b-4e29-96b6-1a8c563fc41c" type="checkbox" ><label class="sk-toggleable__label" for="0fbdc3d0-4a2b-4e29-96b6-1a8c563fc41c">ordinalencoder</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f3922dc1e80></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6016b1e6-23ed-453e-829e-4946970155d4" type="checkbox" ><label class="sk-toggleable__label" for="6016b1e6-23ed-453e-829e-4946970155d4">OrdinalEncoder</label><div class="sk-toggleable__content"><pre>OrdinalEncoder(handle_unknown='use_encoded_value', unknown_value=-1)</pre></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 136-138

Then, we will now define the preprocessor used when the ending regressor
is a linear model.

.. GENERATED FROM PYTHON SOURCE LINES 138-152

.. code-block:: default


    from sklearn.preprocessing import OneHotEncoder
    from sklearn.preprocessing import StandardScaler

    cat_linear_processor = OneHotEncoder(handle_unknown="ignore")
    num_linear_processor = make_pipeline(
        StandardScaler(), SimpleImputer(strategy="mean", add_indicator=True)
    )

    linear_preprocessor = make_column_transformer(
        (num_linear_processor, num_selector), (cat_linear_processor, cat_selector)
    )
    linear_preprocessor






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-d9ba070e-8b71-4d73-a196-6fc3bb198283 {color: black;background-color: white;}#sk-d9ba070e-8b71-4d73-a196-6fc3bb198283 pre{padding: 0;}#sk-d9ba070e-8b71-4d73-a196-6fc3bb198283 div.sk-toggleable {background-color: white;}#sk-d9ba070e-8b71-4d73-a196-6fc3bb198283 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-d9ba070e-8b71-4d73-a196-6fc3bb198283 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-d9ba070e-8b71-4d73-a196-6fc3bb198283 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-d9ba070e-8b71-4d73-a196-6fc3bb198283 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-d9ba070e-8b71-4d73-a196-6fc3bb198283 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-d9ba070e-8b71-4d73-a196-6fc3bb198283 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-d9ba070e-8b71-4d73-a196-6fc3bb198283 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-d9ba070e-8b71-4d73-a196-6fc3bb198283 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-d9ba070e-8b71-4d73-a196-6fc3bb198283 div.sk-estimator:hover {background-color: #d4ebff;}#sk-d9ba070e-8b71-4d73-a196-6fc3bb198283 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-d9ba070e-8b71-4d73-a196-6fc3bb198283 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-d9ba070e-8b71-4d73-a196-6fc3bb198283 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-d9ba070e-8b71-4d73-a196-6fc3bb198283 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-d9ba070e-8b71-4d73-a196-6fc3bb198283 div.sk-item {z-index: 1;}#sk-d9ba070e-8b71-4d73-a196-6fc3bb198283 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-d9ba070e-8b71-4d73-a196-6fc3bb198283 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-d9ba070e-8b71-4d73-a196-6fc3bb198283 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-d9ba070e-8b71-4d73-a196-6fc3bb198283 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-d9ba070e-8b71-4d73-a196-6fc3bb198283 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-d9ba070e-8b71-4d73-a196-6fc3bb198283 div.sk-parallel-item:only-child::after {width: 0;}#sk-d9ba070e-8b71-4d73-a196-6fc3bb198283 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-d9ba070e-8b71-4d73-a196-6fc3bb198283 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-d9ba070e-8b71-4d73-a196-6fc3bb198283 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-d9ba070e-8b71-4d73-a196-6fc3bb198283 div.sk-container {display: inline-block;position: relative;}</style><div id="sk-d9ba070e-8b71-4d73-a196-6fc3bb198283" class"sk-top-container"><div class="sk-container"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a44bbd15-51a0-4268-a72b-4e6c0fbf361f" type="checkbox" ><label class="sk-toggleable__label" for="a44bbd15-51a0-4268-a72b-4e6c0fbf361f">ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('pipeline',
                                     Pipeline(steps=[('standardscaler',
                                                      StandardScaler()),
                                                     ('simpleimputer',
                                                      SimpleImputer(add_indicator=True))]),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f3922dc1550>),
                                    ('onehotencoder',
                                     OneHotEncoder(handle_unknown='ignore'),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f3922dc1e80>)])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0930cbc0-afdd-4dad-8936-85cee796c2ad" type="checkbox" ><label class="sk-toggleable__label" for="0930cbc0-afdd-4dad-8936-85cee796c2ad">pipeline</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f3922dc1550></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="aa293a33-2712-45f1-8528-6e780bc32d3c" type="checkbox" ><label class="sk-toggleable__label" for="aa293a33-2712-45f1-8528-6e780bc32d3c">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bb68382a-1d75-41dd-becb-d14dd0bd31b8" type="checkbox" ><label class="sk-toggleable__label" for="bb68382a-1d75-41dd-becb-d14dd0bd31b8">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(add_indicator=True)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5bb612e6-4150-47f9-a53a-0def697a36cb" type="checkbox" ><label class="sk-toggleable__label" for="5bb612e6-4150-47f9-a53a-0def697a36cb">onehotencoder</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f3922dc1e80></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="74d89a5e-c9e3-4f4e-864b-4d700249951f" type="checkbox" ><label class="sk-toggleable__label" for="74d89a5e-c9e3-4f4e-864b-4d700249951f">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown='ignore')</pre></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 153-171

Stack of predictors on a single data set
#############################################################################

 It is sometimes tedious to find the model which will best perform on a given
 dataset. Stacking provide an alternative by combining the outputs of several
 learners, without the need to choose a model specifically. The performance of
 stacking is usually close to the best model and sometimes it can outperform
 the prediction performance of each individual model.

 Here, we combine 3 learners (linear and non-linear) and use a ridge regressor
 to combine their outputs together.

 .. note::
    Although we will make new pipelines with the processors which we wrote in
    the previous section for the 3 learners, the final estimator
    :class:`~sklearn.linear_model.RidgeCV()` does not need preprocessing of
    the data as it will be fed with the already preprocessed output from the 3
    learners.

.. GENERATED FROM PYTHON SOURCE LINES 171-177

.. code-block:: default


    from sklearn.linear_model import LassoCV

    lasso_pipeline = make_pipeline(linear_preprocessor, LassoCV())
    lasso_pipeline






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-086bf644-0929-47de-971e-8770af63b2e5 {color: black;background-color: white;}#sk-086bf644-0929-47de-971e-8770af63b2e5 pre{padding: 0;}#sk-086bf644-0929-47de-971e-8770af63b2e5 div.sk-toggleable {background-color: white;}#sk-086bf644-0929-47de-971e-8770af63b2e5 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-086bf644-0929-47de-971e-8770af63b2e5 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-086bf644-0929-47de-971e-8770af63b2e5 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-086bf644-0929-47de-971e-8770af63b2e5 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-086bf644-0929-47de-971e-8770af63b2e5 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-086bf644-0929-47de-971e-8770af63b2e5 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-086bf644-0929-47de-971e-8770af63b2e5 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-086bf644-0929-47de-971e-8770af63b2e5 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-086bf644-0929-47de-971e-8770af63b2e5 div.sk-estimator:hover {background-color: #d4ebff;}#sk-086bf644-0929-47de-971e-8770af63b2e5 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-086bf644-0929-47de-971e-8770af63b2e5 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-086bf644-0929-47de-971e-8770af63b2e5 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-086bf644-0929-47de-971e-8770af63b2e5 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-086bf644-0929-47de-971e-8770af63b2e5 div.sk-item {z-index: 1;}#sk-086bf644-0929-47de-971e-8770af63b2e5 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-086bf644-0929-47de-971e-8770af63b2e5 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-086bf644-0929-47de-971e-8770af63b2e5 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-086bf644-0929-47de-971e-8770af63b2e5 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-086bf644-0929-47de-971e-8770af63b2e5 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-086bf644-0929-47de-971e-8770af63b2e5 div.sk-parallel-item:only-child::after {width: 0;}#sk-086bf644-0929-47de-971e-8770af63b2e5 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-086bf644-0929-47de-971e-8770af63b2e5 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-086bf644-0929-47de-971e-8770af63b2e5 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-086bf644-0929-47de-971e-8770af63b2e5 div.sk-container {display: inline-block;position: relative;}</style><div id="sk-086bf644-0929-47de-971e-8770af63b2e5" class"sk-top-container"><div class="sk-container"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="79cbbdcb-4a99-4522-ad3b-a0116fc3e600" type="checkbox" ><label class="sk-toggleable__label" for="79cbbdcb-4a99-4522-ad3b-a0116fc3e600">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('columntransformer',
                     ColumnTransformer(transformers=[('pipeline',
                                                      Pipeline(steps=[('standardscaler',
                                                                       StandardScaler()),
                                                                      ('simpleimputer',
                                                                       SimpleImputer(add_indicator=True))]),
                                                      <sklearn.compose._column_transformer.make_column_selector object at 0x7f3922dc1550>),
                                                     ('onehotencoder',
                                                      OneHotEncoder(handle_unknown='ignore'),
                                                      <sklearn.compose._column_transformer.make_column_selector object at 0x7f3922dc1e80>)])),
                    ('lassocv', LassoCV())])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f0db602c-7fd8-4130-8ec2-3653873499b7" type="checkbox" ><label class="sk-toggleable__label" for="f0db602c-7fd8-4130-8ec2-3653873499b7">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('pipeline',
                                     Pipeline(steps=[('standardscaler',
                                                      StandardScaler()),
                                                     ('simpleimputer',
                                                      SimpleImputer(add_indicator=True))]),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f3922dc1550>),
                                    ('onehotencoder',
                                     OneHotEncoder(handle_unknown='ignore'),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f3922dc1e80>)])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fccea27b-8fa3-4e0f-ae1e-1b9947585ff1" type="checkbox" ><label class="sk-toggleable__label" for="fccea27b-8fa3-4e0f-ae1e-1b9947585ff1">pipeline</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f3922dc1550></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7083922a-3542-4282-a5ae-708b659329e8" type="checkbox" ><label class="sk-toggleable__label" for="7083922a-3542-4282-a5ae-708b659329e8">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b644eab4-1e96-48ac-a59f-074d5bb3ba92" type="checkbox" ><label class="sk-toggleable__label" for="b644eab4-1e96-48ac-a59f-074d5bb3ba92">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(add_indicator=True)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="da6a2cbc-0aa8-457f-acec-c48aeb9d5260" type="checkbox" ><label class="sk-toggleable__label" for="da6a2cbc-0aa8-457f-acec-c48aeb9d5260">onehotencoder</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f3922dc1e80></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b9f97e7d-f98e-4dc0-80e9-ced03ae6feef" type="checkbox" ><label class="sk-toggleable__label" for="b9f97e7d-f98e-4dc0-80e9-ced03ae6feef">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown='ignore')</pre></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4efddf96-3323-4ebb-976c-5720973513ae" type="checkbox" ><label class="sk-toggleable__label" for="4efddf96-3323-4ebb-976c-5720973513ae">LassoCV</label><div class="sk-toggleable__content"><pre>LassoCV()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 178-183

.. code-block:: default

    from sklearn.ensemble import RandomForestRegressor

    rf_pipeline = make_pipeline(tree_preprocessor, RandomForestRegressor(random_state=42))
    rf_pipeline






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-f4f1b923-c308-4832-9afc-fe1974f727af {color: black;background-color: white;}#sk-f4f1b923-c308-4832-9afc-fe1974f727af pre{padding: 0;}#sk-f4f1b923-c308-4832-9afc-fe1974f727af div.sk-toggleable {background-color: white;}#sk-f4f1b923-c308-4832-9afc-fe1974f727af label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-f4f1b923-c308-4832-9afc-fe1974f727af div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-f4f1b923-c308-4832-9afc-fe1974f727af div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-f4f1b923-c308-4832-9afc-fe1974f727af input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-f4f1b923-c308-4832-9afc-fe1974f727af div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-f4f1b923-c308-4832-9afc-fe1974f727af div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-f4f1b923-c308-4832-9afc-fe1974f727af input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-f4f1b923-c308-4832-9afc-fe1974f727af div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-f4f1b923-c308-4832-9afc-fe1974f727af div.sk-estimator:hover {background-color: #d4ebff;}#sk-f4f1b923-c308-4832-9afc-fe1974f727af div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-f4f1b923-c308-4832-9afc-fe1974f727af div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-f4f1b923-c308-4832-9afc-fe1974f727af div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-f4f1b923-c308-4832-9afc-fe1974f727af div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-f4f1b923-c308-4832-9afc-fe1974f727af div.sk-item {z-index: 1;}#sk-f4f1b923-c308-4832-9afc-fe1974f727af div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-f4f1b923-c308-4832-9afc-fe1974f727af div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-f4f1b923-c308-4832-9afc-fe1974f727af div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-f4f1b923-c308-4832-9afc-fe1974f727af div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-f4f1b923-c308-4832-9afc-fe1974f727af div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-f4f1b923-c308-4832-9afc-fe1974f727af div.sk-parallel-item:only-child::after {width: 0;}#sk-f4f1b923-c308-4832-9afc-fe1974f727af div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-f4f1b923-c308-4832-9afc-fe1974f727af div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-f4f1b923-c308-4832-9afc-fe1974f727af div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-f4f1b923-c308-4832-9afc-fe1974f727af div.sk-container {display: inline-block;position: relative;}</style><div id="sk-f4f1b923-c308-4832-9afc-fe1974f727af" class"sk-top-container"><div class="sk-container"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="219e9c48-4617-4c73-b1a3-baad502006a5" type="checkbox" ><label class="sk-toggleable__label" for="219e9c48-4617-4c73-b1a3-baad502006a5">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('columntransformer',
                     ColumnTransformer(transformers=[('simpleimputer',
                                                      SimpleImputer(add_indicator=True),
                                                      <sklearn.compose._column_transformer.make_column_selector object at 0x7f3922dc1550>),
                                                     ('ordinalencoder',
                                                      OrdinalEncoder(handle_unknown='use_encoded_value',
                                                                     unknown_value=-1),
                                                      <sklearn.compose._column_transformer.make_column_selector object at 0x7f3922dc1e80>)])),
                    ('randomforestregressor',
                     RandomForestRegressor(random_state=42))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3531cdab-867e-4545-b99f-cfcc09490263" type="checkbox" ><label class="sk-toggleable__label" for="3531cdab-867e-4545-b99f-cfcc09490263">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('simpleimputer',
                                     SimpleImputer(add_indicator=True),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f3922dc1550>),
                                    ('ordinalencoder',
                                     OrdinalEncoder(handle_unknown='use_encoded_value',
                                                    unknown_value=-1),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f3922dc1e80>)])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="20de04ed-fa8f-4fb8-bc31-d78474c2c460" type="checkbox" ><label class="sk-toggleable__label" for="20de04ed-fa8f-4fb8-bc31-d78474c2c460">simpleimputer</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f3922dc1550></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="414932b5-d820-4710-950d-a6bf39a36023" type="checkbox" ><label class="sk-toggleable__label" for="414932b5-d820-4710-950d-a6bf39a36023">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(add_indicator=True)</pre></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="018c1902-8990-47eb-8550-0cb0c3cee3aa" type="checkbox" ><label class="sk-toggleable__label" for="018c1902-8990-47eb-8550-0cb0c3cee3aa">ordinalencoder</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f3922dc1e80></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7f8f2075-3e40-4ac5-89b2-075ee535e359" type="checkbox" ><label class="sk-toggleable__label" for="7f8f2075-3e40-4ac5-89b2-075ee535e359">OrdinalEncoder</label><div class="sk-toggleable__content"><pre>OrdinalEncoder(handle_unknown='use_encoded_value', unknown_value=-1)</pre></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3e1e994c-add3-4897-bbfb-66acdd984fe3" type="checkbox" ><label class="sk-toggleable__label" for="3e1e994c-add3-4897-bbfb-66acdd984fe3">RandomForestRegressor</label><div class="sk-toggleable__content"><pre>RandomForestRegressor(random_state=42)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 184-191

.. code-block:: default

    from sklearn.ensemble import HistGradientBoostingRegressor

    gbdt_pipeline = make_pipeline(
        tree_preprocessor, HistGradientBoostingRegressor(random_state=0)
    )
    gbdt_pipeline






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-5f1027b5-dfde-4d1a-a33c-64654185e0a6 {color: black;background-color: white;}#sk-5f1027b5-dfde-4d1a-a33c-64654185e0a6 pre{padding: 0;}#sk-5f1027b5-dfde-4d1a-a33c-64654185e0a6 div.sk-toggleable {background-color: white;}#sk-5f1027b5-dfde-4d1a-a33c-64654185e0a6 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-5f1027b5-dfde-4d1a-a33c-64654185e0a6 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-5f1027b5-dfde-4d1a-a33c-64654185e0a6 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-5f1027b5-dfde-4d1a-a33c-64654185e0a6 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-5f1027b5-dfde-4d1a-a33c-64654185e0a6 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-5f1027b5-dfde-4d1a-a33c-64654185e0a6 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-5f1027b5-dfde-4d1a-a33c-64654185e0a6 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-5f1027b5-dfde-4d1a-a33c-64654185e0a6 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-5f1027b5-dfde-4d1a-a33c-64654185e0a6 div.sk-estimator:hover {background-color: #d4ebff;}#sk-5f1027b5-dfde-4d1a-a33c-64654185e0a6 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-5f1027b5-dfde-4d1a-a33c-64654185e0a6 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-5f1027b5-dfde-4d1a-a33c-64654185e0a6 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-5f1027b5-dfde-4d1a-a33c-64654185e0a6 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-5f1027b5-dfde-4d1a-a33c-64654185e0a6 div.sk-item {z-index: 1;}#sk-5f1027b5-dfde-4d1a-a33c-64654185e0a6 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-5f1027b5-dfde-4d1a-a33c-64654185e0a6 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-5f1027b5-dfde-4d1a-a33c-64654185e0a6 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-5f1027b5-dfde-4d1a-a33c-64654185e0a6 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-5f1027b5-dfde-4d1a-a33c-64654185e0a6 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-5f1027b5-dfde-4d1a-a33c-64654185e0a6 div.sk-parallel-item:only-child::after {width: 0;}#sk-5f1027b5-dfde-4d1a-a33c-64654185e0a6 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-5f1027b5-dfde-4d1a-a33c-64654185e0a6 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-5f1027b5-dfde-4d1a-a33c-64654185e0a6 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-5f1027b5-dfde-4d1a-a33c-64654185e0a6 div.sk-container {display: inline-block;position: relative;}</style><div id="sk-5f1027b5-dfde-4d1a-a33c-64654185e0a6" class"sk-top-container"><div class="sk-container"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b1d56c6c-01f6-4649-94e4-1c25e99e0345" type="checkbox" ><label class="sk-toggleable__label" for="b1d56c6c-01f6-4649-94e4-1c25e99e0345">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('columntransformer',
                     ColumnTransformer(transformers=[('simpleimputer',
                                                      SimpleImputer(add_indicator=True),
                                                      <sklearn.compose._column_transformer.make_column_selector object at 0x7f3922dc1550>),
                                                     ('ordinalencoder',
                                                      OrdinalEncoder(handle_unknown='use_encoded_value',
                                                                     unknown_value=-1),
                                                      <sklearn.compose._column_transformer.make_column_selector object at 0x7f3922dc1e80>)])),
                    ('histgradientboostingregressor',
                     HistGradientBoostingRegressor(random_state=0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9fd64e3e-171d-4f3d-b942-148e166024e9" type="checkbox" ><label class="sk-toggleable__label" for="9fd64e3e-171d-4f3d-b942-148e166024e9">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('simpleimputer',
                                     SimpleImputer(add_indicator=True),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f3922dc1550>),
                                    ('ordinalencoder',
                                     OrdinalEncoder(handle_unknown='use_encoded_value',
                                                    unknown_value=-1),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f3922dc1e80>)])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ed915895-cdb2-4ec4-a257-9b1ccbcd9297" type="checkbox" ><label class="sk-toggleable__label" for="ed915895-cdb2-4ec4-a257-9b1ccbcd9297">simpleimputer</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f3922dc1550></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="caa6a86a-4abe-45bd-bd61-df355b823e70" type="checkbox" ><label class="sk-toggleable__label" for="caa6a86a-4abe-45bd-bd61-df355b823e70">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(add_indicator=True)</pre></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="39114ad5-e3cd-4a51-9445-740eb958906d" type="checkbox" ><label class="sk-toggleable__label" for="39114ad5-e3cd-4a51-9445-740eb958906d">ordinalencoder</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f3922dc1e80></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ecac0018-3002-4474-a867-b8a9f6e05522" type="checkbox" ><label class="sk-toggleable__label" for="ecac0018-3002-4474-a867-b8a9f6e05522">OrdinalEncoder</label><div class="sk-toggleable__content"><pre>OrdinalEncoder(handle_unknown='use_encoded_value', unknown_value=-1)</pre></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ded74113-92f3-4fd1-88f4-579258059da0" type="checkbox" ><label class="sk-toggleable__label" for="ded74113-92f3-4fd1-88f4-579258059da0">HistGradientBoostingRegressor</label><div class="sk-toggleable__content"><pre>HistGradientBoostingRegressor(random_state=0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 192-204

.. code-block:: default

    from sklearn.ensemble import StackingRegressor
    from sklearn.linear_model import RidgeCV

    estimators = [
        ("Random Forest", rf_pipeline),
        ("Lasso", lasso_pipeline),
        ("Gradient Boosting", gbdt_pipeline),
    ]

    stacking_regressor = StackingRegressor(estimators=estimators, final_estimator=RidgeCV())
    stacking_regressor






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-f8bdb049-555f-42cd-af91-bb965a570095 {color: black;background-color: white;}#sk-f8bdb049-555f-42cd-af91-bb965a570095 pre{padding: 0;}#sk-f8bdb049-555f-42cd-af91-bb965a570095 div.sk-toggleable {background-color: white;}#sk-f8bdb049-555f-42cd-af91-bb965a570095 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-f8bdb049-555f-42cd-af91-bb965a570095 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-f8bdb049-555f-42cd-af91-bb965a570095 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-f8bdb049-555f-42cd-af91-bb965a570095 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-f8bdb049-555f-42cd-af91-bb965a570095 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-f8bdb049-555f-42cd-af91-bb965a570095 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-f8bdb049-555f-42cd-af91-bb965a570095 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-f8bdb049-555f-42cd-af91-bb965a570095 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-f8bdb049-555f-42cd-af91-bb965a570095 div.sk-estimator:hover {background-color: #d4ebff;}#sk-f8bdb049-555f-42cd-af91-bb965a570095 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-f8bdb049-555f-42cd-af91-bb965a570095 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-f8bdb049-555f-42cd-af91-bb965a570095 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-f8bdb049-555f-42cd-af91-bb965a570095 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-f8bdb049-555f-42cd-af91-bb965a570095 div.sk-item {z-index: 1;}#sk-f8bdb049-555f-42cd-af91-bb965a570095 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-f8bdb049-555f-42cd-af91-bb965a570095 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-f8bdb049-555f-42cd-af91-bb965a570095 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-f8bdb049-555f-42cd-af91-bb965a570095 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-f8bdb049-555f-42cd-af91-bb965a570095 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-f8bdb049-555f-42cd-af91-bb965a570095 div.sk-parallel-item:only-child::after {width: 0;}#sk-f8bdb049-555f-42cd-af91-bb965a570095 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-f8bdb049-555f-42cd-af91-bb965a570095 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-f8bdb049-555f-42cd-af91-bb965a570095 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-f8bdb049-555f-42cd-af91-bb965a570095 div.sk-container {display: inline-block;position: relative;}</style><div id="sk-f8bdb049-555f-42cd-af91-bb965a570095" class"sk-top-container"><div class="sk-container"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6b915fe8-6d9b-424a-97a6-59032a000366" type="checkbox" ><label class="sk-toggleable__label" for="6b915fe8-6d9b-424a-97a6-59032a000366">StackingRegressor</label><div class="sk-toggleable__content"><pre>StackingRegressor(estimators=[('Random Forest',
                                   Pipeline(steps=[('columntransformer',
                                                    ColumnTransformer(transformers=[('simpleimputer',
                                                                                     SimpleImputer(add_indicator=True),
                                                                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f3922dc1550>),
                                                                                    ('ordinalencoder',
                                                                                     OrdinalEncoder(handle_unknown='use_encoded_value',
                                                                                                    unknown_value=-1),
                                                                                     <sklearn.compose...
                                                                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f3922dc1550>),
                                                                                    ('ordinalencoder',
                                                                                     OrdinalEncoder(handle_unknown='use_encoded_value',
                                                                                                    unknown_value=-1),
                                                                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f3922dc1e80>)])),
                                                   ('histgradientboostingregressor',
                                                    HistGradientBoostingRegressor(random_state=0))]))],
                      final_estimator=RidgeCV(alphas=array([ 0.1,  1. , 10. ])))</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><label>Random Forest</label></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b7215baa-c99e-4fab-a05f-42ac88c594ae" type="checkbox" ><label class="sk-toggleable__label" for="b7215baa-c99e-4fab-a05f-42ac88c594ae">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('simpleimputer',
                                     SimpleImputer(add_indicator=True),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f3922dc1550>),
                                    ('ordinalencoder',
                                     OrdinalEncoder(handle_unknown='use_encoded_value',
                                                    unknown_value=-1),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f3922dc1e80>)])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ad73d6da-37c0-43cd-b9fd-212bbeafebb9" type="checkbox" ><label class="sk-toggleable__label" for="ad73d6da-37c0-43cd-b9fd-212bbeafebb9">simpleimputer</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f3922dc1550></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ebe94d56-5f53-4dcb-b61f-ef1b041411ab" type="checkbox" ><label class="sk-toggleable__label" for="ebe94d56-5f53-4dcb-b61f-ef1b041411ab">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(add_indicator=True)</pre></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ac5e0013-15ce-46c9-ac59-72c369560f3c" type="checkbox" ><label class="sk-toggleable__label" for="ac5e0013-15ce-46c9-ac59-72c369560f3c">ordinalencoder</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f3922dc1e80></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="83d0a56d-dbe1-4dbf-a415-be829727cc59" type="checkbox" ><label class="sk-toggleable__label" for="83d0a56d-dbe1-4dbf-a415-be829727cc59">OrdinalEncoder</label><div class="sk-toggleable__content"><pre>OrdinalEncoder(handle_unknown='use_encoded_value', unknown_value=-1)</pre></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fb94f021-942d-4d5f-8c20-a77976c3d24b" type="checkbox" ><label class="sk-toggleable__label" for="fb94f021-942d-4d5f-8c20-a77976c3d24b">RandomForestRegressor</label><div class="sk-toggleable__content"><pre>RandomForestRegressor(random_state=42)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><label>Lasso</label></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8fc93a72-1494-4b75-95d9-50d43124c445" type="checkbox" ><label class="sk-toggleable__label" for="8fc93a72-1494-4b75-95d9-50d43124c445">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('pipeline',
                                     Pipeline(steps=[('standardscaler',
                                                      StandardScaler()),
                                                     ('simpleimputer',
                                                      SimpleImputer(add_indicator=True))]),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f3922dc1550>),
                                    ('onehotencoder',
                                     OneHotEncoder(handle_unknown='ignore'),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f3922dc1e80>)])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a4fd45fb-f67a-4d81-ba4d-3d63f7f0836d" type="checkbox" ><label class="sk-toggleable__label" for="a4fd45fb-f67a-4d81-ba4d-3d63f7f0836d">pipeline</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f3922dc1550></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4d5962ea-0331-4382-8e05-004e3220336b" type="checkbox" ><label class="sk-toggleable__label" for="4d5962ea-0331-4382-8e05-004e3220336b">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b50631b5-9329-473a-b328-697be26f86bb" type="checkbox" ><label class="sk-toggleable__label" for="b50631b5-9329-473a-b328-697be26f86bb">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(add_indicator=True)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0cb6ce5f-a84e-4c27-be3e-78f837e37713" type="checkbox" ><label class="sk-toggleable__label" for="0cb6ce5f-a84e-4c27-be3e-78f837e37713">onehotencoder</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f3922dc1e80></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e3ab9ff2-0793-4353-aacb-85763e5031a0" type="checkbox" ><label class="sk-toggleable__label" for="e3ab9ff2-0793-4353-aacb-85763e5031a0">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown='ignore')</pre></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c4e81779-c654-4e67-8477-a32f1c8d1d7d" type="checkbox" ><label class="sk-toggleable__label" for="c4e81779-c654-4e67-8477-a32f1c8d1d7d">LassoCV</label><div class="sk-toggleable__content"><pre>LassoCV()</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><label>Gradient Boosting</label></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6b5bd235-a14f-45cb-9211-88b0828901f8" type="checkbox" ><label class="sk-toggleable__label" for="6b5bd235-a14f-45cb-9211-88b0828901f8">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('simpleimputer',
                                     SimpleImputer(add_indicator=True),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f3922dc1550>),
                                    ('ordinalencoder',
                                     OrdinalEncoder(handle_unknown='use_encoded_value',
                                                    unknown_value=-1),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f3922dc1e80>)])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="61f2fbcc-c758-4bc6-9d2e-045d7654bd7e" type="checkbox" ><label class="sk-toggleable__label" for="61f2fbcc-c758-4bc6-9d2e-045d7654bd7e">simpleimputer</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f3922dc1550></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0c8dfaaa-121b-4ac1-bb06-48aa706af85e" type="checkbox" ><label class="sk-toggleable__label" for="0c8dfaaa-121b-4ac1-bb06-48aa706af85e">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(add_indicator=True)</pre></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="665f7b4e-bfa3-402d-91b0-be94fbd3dbf5" type="checkbox" ><label class="sk-toggleable__label" for="665f7b4e-bfa3-402d-91b0-be94fbd3dbf5">ordinalencoder</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f3922dc1e80></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="67ce90ee-bcac-4c72-8fa7-307a66f18f94" type="checkbox" ><label class="sk-toggleable__label" for="67ce90ee-bcac-4c72-8fa7-307a66f18f94">OrdinalEncoder</label><div class="sk-toggleable__content"><pre>OrdinalEncoder(handle_unknown='use_encoded_value', unknown_value=-1)</pre></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4e48fa4d-a5a6-4bf9-9f65-595b276dbd75" type="checkbox" ><label class="sk-toggleable__label" for="4e48fa4d-a5a6-4bf9-9f65-595b276dbd75">HistGradientBoostingRegressor</label><div class="sk-toggleable__content"><pre>HistGradientBoostingRegressor(random_state=0)</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><label>final_estimator</label></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8985f27e-276f-4ae5-924e-8b26fd59881c" type="checkbox" ><label class="sk-toggleable__label" for="8985f27e-276f-4ae5-924e-8b26fd59881c">RidgeCV</label><div class="sk-toggleable__content"><pre>RidgeCV(alphas=array([ 0.1,  1. , 10. ]))</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 205-214

Measure and plot the results
#############################################################################

 Now we can use Ames Housing dataset to make the predictions. We check the
 performance of each individual predictor as well as of the stack of the
 regressors.

 The function ``plot_regression_results`` is used to plot the predicted and
 true targets.

.. GENERATED FROM PYTHON SOURCE LINES 214-279

.. code-block:: default



    import time
    import matplotlib.pyplot as plt
    from sklearn.model_selection import cross_validate, cross_val_predict


    def plot_regression_results(ax, y_true, y_pred, title, scores, elapsed_time):
        """Scatter plot of the predicted vs true targets."""
        ax.plot(
            [y_true.min(), y_true.max()], [y_true.min(), y_true.max()], "--r", linewidth=2
        )
        ax.scatter(y_true, y_pred, alpha=0.2)

        ax.spines["top"].set_visible(False)
        ax.spines["right"].set_visible(False)
        ax.get_xaxis().tick_bottom()
        ax.get_yaxis().tick_left()
        ax.spines["left"].set_position(("outward", 10))
        ax.spines["bottom"].set_position(("outward", 10))
        ax.set_xlim([y_true.min(), y_true.max()])
        ax.set_ylim([y_true.min(), y_true.max()])
        ax.set_xlabel("Measured")
        ax.set_ylabel("Predicted")
        extra = plt.Rectangle(
            (0, 0), 0, 0, fc="w", fill=False, edgecolor="none", linewidth=0
        )
        ax.legend([extra], [scores], loc="upper left")
        title = title + "\n Evaluation in {:.2f} seconds".format(elapsed_time)
        ax.set_title(title)


    fig, axs = plt.subplots(2, 2, figsize=(9, 7))
    axs = np.ravel(axs)

    for ax, (name, est) in zip(
        axs, estimators + [("Stacking Regressor", stacking_regressor)]
    ):
        start_time = time.time()
        score = cross_validate(
            est, X, y, scoring=["r2", "neg_mean_absolute_error"], n_jobs=-1, verbose=0
        )
        elapsed_time = time.time() - start_time

        y_pred = cross_val_predict(est, X, y, n_jobs=-1, verbose=0)

        plot_regression_results(
            ax,
            y,
            y_pred,
            name,
            (r"$R^2={:.2f} \pm {:.2f}$" + "\n" + r"$MAE={:.2f} \pm {:.2f}$").format(
                np.mean(score["test_r2"]),
                np.std(score["test_r2"]),
                -np.mean(score["test_neg_mean_absolute_error"]),
                np.std(score["test_neg_mean_absolute_error"]),
            ),
            elapsed_time,
        )

    plt.suptitle("Single predictors versus stacked predictors")
    plt.tight_layout()
    plt.subplots_adjust(top=0.9)
    plt.show()




.. image-sg:: /auto_examples/ensemble/images/sphx_glr_plot_stack_predictors_001.png
   :alt: Single predictors versus stacked predictors, Random Forest  Evaluation in 1.82 seconds, Lasso  Evaluation in 0.27 seconds, Gradient Boosting  Evaluation in 0.46 seconds, Stacking Regressor  Evaluation in 7.87 seconds
   :srcset: /auto_examples/ensemble/images/sphx_glr_plot_stack_predictors_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 280-283

The stacked regressor will combine the strengths of the different regressors.
However, we also see that training the stacked regressor is much more
computationally expensive.


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  20.730 seconds)


.. _sphx_glr_download_auto_examples_ensemble_plot_stack_predictors.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/ensemble/plot_stack_predictors.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_stack_predictors.py <plot_stack_predictors.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_stack_predictors.ipynb <plot_stack_predictors.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
